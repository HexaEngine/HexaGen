// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.OpenAL
{
	public unsafe partial class OpenAL
	{
		internal const string LibName = "OpenAL32";

		/// <summary>
		/// Renderer State management. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alEnable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alEnable")]
		internal static extern void AlEnableNative([NativeName(NativeNameType.Param, "capability")] [NativeName(NativeNameType.Type, "ALenum")] int capability);

		/// <summary>		/// Renderer State management. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alEnable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlEnable([NativeName(NativeNameType.Param, "capability")] [NativeName(NativeNameType.Type, "ALenum")] int capability)
		{
			AlEnableNative(capability);
		}

		[NativeName(NativeNameType.Func, "alDisable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alDisable")]
		internal static extern void AlDisableNative([NativeName(NativeNameType.Param, "capability")] [NativeName(NativeNameType.Type, "ALenum")] int capability);

		[NativeName(NativeNameType.Func, "alDisable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDisable([NativeName(NativeNameType.Param, "capability")] [NativeName(NativeNameType.Type, "ALenum")] int capability)
		{
			AlDisableNative(capability);
		}

		[NativeName(NativeNameType.Func, "alIsEnabled")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alIsEnabled")]
		internal static extern byte AlIsEnabledNative([NativeName(NativeNameType.Param, "capability")] [NativeName(NativeNameType.Type, "ALenum")] int capability);

		[NativeName(NativeNameType.Func, "alIsEnabled")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		public static byte AlIsEnabled([NativeName(NativeNameType.Param, "capability")] [NativeName(NativeNameType.Type, "ALenum")] int capability)
		{
			byte ret = AlIsEnabledNative(capability);
			return ret;
		}

		/// <summary>
		/// Context state setting. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alDopplerFactor")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alDopplerFactor")]
		internal static extern void AlDopplerFactorNative([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value);

		/// <summary>		/// Context state setting. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alDopplerFactor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDopplerFactor([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value)
		{
			AlDopplerFactorNative(value);
		}

		[NativeName(NativeNameType.Func, "alDopplerVelocity")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alDopplerVelocity")]
		internal static extern void AlDopplerVelocityNative([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value);

		[NativeName(NativeNameType.Func, "alDopplerVelocity")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDopplerVelocity([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value)
		{
			AlDopplerVelocityNative(value);
		}

		[NativeName(NativeNameType.Func, "alSpeedOfSound")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSpeedOfSound")]
		internal static extern void AlSpeedOfSoundNative([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value);

		[NativeName(NativeNameType.Func, "alSpeedOfSound")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSpeedOfSound([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value)
		{
			AlSpeedOfSoundNative(value);
		}

		[NativeName(NativeNameType.Func, "alDistanceModel")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alDistanceModel")]
		internal static extern void AlDistanceModelNative([NativeName(NativeNameType.Param, "distanceModel")] [NativeName(NativeNameType.Type, "ALenum")] int distanceModel);

		[NativeName(NativeNameType.Func, "alDistanceModel")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDistanceModel([NativeName(NativeNameType.Param, "distanceModel")] [NativeName(NativeNameType.Type, "ALenum")] int distanceModel)
		{
			AlDistanceModelNative(distanceModel);
		}

		/// <summary>
		/// Context state retrieval. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGetString")]
		[return: NativeName(NativeNameType.Type, "const ALchar*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetString")]
		internal static extern byte* AlGetStringNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param);

		/// <summary>		/// Context state retrieval. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetString")]
		[return: NativeName(NativeNameType.Type, "const ALchar*")]
		public static byte* AlGetString([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param)
		{
			byte* ret = AlGetStringNative(param);
			return ret;
		}

		[NativeName(NativeNameType.Func, "alGetBooleanv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBooleanv")]
		internal static extern void AlGetBooleanvNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALboolean*")] byte* values);

		[NativeName(NativeNameType.Func, "alGetBooleanv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBooleanv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALboolean*")] byte* values)
		{
			AlGetBooleanvNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alGetBooleanv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBooleanv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALboolean*")] ref byte values)
		{
			fixed (byte* pvalues = &values)
			{
				AlGetBooleanvNative(param, (byte*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetIntegerv")]
		internal static extern void AlGetIntegervNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values);

		[NativeName(NativeNameType.Func, "alGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetIntegerv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values)
		{
			AlGetIntegervNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetIntegerv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlGetIntegervNative(param, (int*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alGetFloatv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetFloatv")]
		internal static extern void AlGetFloatvNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values);

		[NativeName(NativeNameType.Func, "alGetFloatv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetFloatv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values)
		{
			AlGetFloatvNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alGetFloatv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetFloatv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				AlGetFloatvNative(param, (float*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alGetDoublev")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetDoublev")]
		internal static extern void AlGetDoublevNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALdouble*")] double* values);

		[NativeName(NativeNameType.Func, "alGetDoublev")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetDoublev([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALdouble*")] double* values)
		{
			AlGetDoublevNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alGetDoublev")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetDoublev([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALdouble*")] ref double values)
		{
			fixed (double* pvalues = &values)
			{
				AlGetDoublevNative(param, (double*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBoolean")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBoolean")]
		internal static extern byte AlGetBooleanNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param);

		[NativeName(NativeNameType.Func, "alGetBoolean")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		public static byte AlGetBoolean([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param)
		{
			byte ret = AlGetBooleanNative(param);
			return ret;
		}

		[NativeName(NativeNameType.Func, "alGetInteger")]
		[return: NativeName(NativeNameType.Type, "ALint")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetInteger")]
		internal static extern int AlGetIntegerNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param);

		[NativeName(NativeNameType.Func, "alGetInteger")]
		[return: NativeName(NativeNameType.Type, "ALint")]
		public static int AlGetInteger([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param)
		{
			int ret = AlGetIntegerNative(param);
			return ret;
		}

		[NativeName(NativeNameType.Func, "alGetFloat")]
		[return: NativeName(NativeNameType.Type, "ALfloat")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetFloat")]
		internal static extern float AlGetFloatNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param);

		[NativeName(NativeNameType.Func, "alGetFloat")]
		[return: NativeName(NativeNameType.Type, "ALfloat")]
		public static float AlGetFloat([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param)
		{
			float ret = AlGetFloatNative(param);
			return ret;
		}

		[NativeName(NativeNameType.Func, "alGetDouble")]
		[return: NativeName(NativeNameType.Type, "ALdouble")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetDouble")]
		internal static extern double AlGetDoubleNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param);

		[NativeName(NativeNameType.Func, "alGetDouble")]
		[return: NativeName(NativeNameType.Type, "ALdouble")]
		public static double AlGetDouble([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param)
		{
			double ret = AlGetDoubleNative(param);
			return ret;
		}

		/// <summary>
		/// Obtain the first error generated in the AL context since the last call to<br/>
		/// this function.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGetError")]
		[return: NativeName(NativeNameType.Type, "ALenum")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetError")]
		internal static extern int AlGetErrorNative();

		/// <summary>		/// Obtain the first error generated in the AL context since the last call to<br/>		/// this function.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetError")]
		[return: NativeName(NativeNameType.Type, "ALenum")]
		public static int AlGetError()
		{
			int ret = AlGetErrorNative();
			return ret;
		}

		/// <summary>
		/// Query for the presence of an extension on the AL context. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alIsExtensionPresent")]
		internal static extern byte AlIsExtensionPresentNative([NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALchar*")] byte* extname);

		/// <summary>		/// Query for the presence of an extension on the AL context. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		public static byte AlIsExtensionPresent([NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALchar*")] byte* extname)
		{
			byte ret = AlIsExtensionPresentNative(extname);
			return ret;
		}

		/// <summary>		/// Query for the presence of an extension on the AL context. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		public static byte AlIsExtensionPresent([NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALchar*")] ref byte extname)
		{
			fixed (byte* pextname = &extname)
			{
				byte ret = AlIsExtensionPresentNative((byte*)pextname);
				return ret;
			}
		}

		/// <summary>
		/// Retrieve the address of a function. The returned function may be context-<br/>
		/// specific.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "void*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetProcAddress")]
		internal static extern void* AlGetProcAddressNative([NativeName(NativeNameType.Param, "fname")] [NativeName(NativeNameType.Type, "const ALchar*")] byte* fname);

		/// <summary>		/// Retrieve the address of a function. The returned function may be context-<br/>		/// specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "void*")]
		public static void* AlGetProcAddress([NativeName(NativeNameType.Param, "fname")] [NativeName(NativeNameType.Type, "const ALchar*")] byte* fname)
		{
			void* ret = AlGetProcAddressNative(fname);
			return ret;
		}

		/// <summary>		/// Retrieve the address of a function. The returned function may be context-<br/>		/// specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "void*")]
		public static void* AlGetProcAddress([NativeName(NativeNameType.Param, "fname")] [NativeName(NativeNameType.Type, "const ALchar*")] ref byte fname)
		{
			fixed (byte* pfname = &fname)
			{
				void* ret = AlGetProcAddressNative((byte*)pfname);
				return ret;
			}
		}

		/// <summary>
		/// Retrieve the value of an enum. The returned value may be context-specific.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALenum")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetEnumValue")]
		internal static extern int AlGetEnumValueNative([NativeName(NativeNameType.Param, "ename")] [NativeName(NativeNameType.Type, "const ALchar*")] byte* ename);

		/// <summary>		/// Retrieve the value of an enum. The returned value may be context-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALenum")]
		public static int AlGetEnumValue([NativeName(NativeNameType.Param, "ename")] [NativeName(NativeNameType.Type, "const ALchar*")] byte* ename)
		{
			int ret = AlGetEnumValueNative(ename);
			return ret;
		}

		/// <summary>		/// Retrieve the value of an enum. The returned value may be context-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALenum")]
		public static int AlGetEnumValue([NativeName(NativeNameType.Param, "ename")] [NativeName(NativeNameType.Type, "const ALchar*")] ref byte ename)
		{
			fixed (byte* pename = &ename)
			{
				int ret = AlGetEnumValueNative((byte*)pename);
				return ret;
			}
		}

		/// <summary>
		/// Set listener parameters. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alListenerf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alListenerf")]
		internal static extern void AlListenerfNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value);

		/// <summary>		/// Set listener parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alListenerf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListenerf([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value)
		{
			AlListenerfNative(param, value);
		}

		[NativeName(NativeNameType.Func, "alListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alListener3f")]
		internal static extern void AlListener3FNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat")] float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat")] float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat")] float value3);

		[NativeName(NativeNameType.Func, "alListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat")] float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat")] float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat")] float value3)
		{
			AlListener3FNative(param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alListenerfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alListenerfv")]
		internal static extern void AlListenerfvNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] float* values);

		[NativeName(NativeNameType.Func, "alListenerfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListenerfv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] float* values)
		{
			AlListenerfvNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alListenerfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListenerfv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				AlListenerfvNative(param, (float*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alListeneri")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alListeneri")]
		internal static extern void AlListeneriNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint")] int value);

		[NativeName(NativeNameType.Func, "alListeneri")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListeneri([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint")] int value)
		{
			AlListeneriNative(param, value);
		}

		[NativeName(NativeNameType.Func, "alListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alListener3i")]
		internal static extern void AlListener3INative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint")] int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint")] int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint")] int value3);

		[NativeName(NativeNameType.Func, "alListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint")] int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint")] int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint")] int value3)
		{
			AlListener3INative(param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alListeneriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alListeneriv")]
		internal static extern void AlListenerivNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] int* values);

		[NativeName(NativeNameType.Func, "alListeneriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListeneriv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] int* values)
		{
			AlListenerivNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alListeneriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlListeneriv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlListenerivNative(param, (int*)pvalues);
			}
		}

		/// <summary>
		/// Get listener parameters. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGetListenerf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetListenerf")]
		internal static extern void AlGetListenerfNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value);

		/// <summary>		/// Get listener parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetListenerf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListenerf([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value)
		{
			AlGetListenerfNative(param, value);
		}

		/// <summary>		/// Get listener parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetListenerf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListenerf([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value)
		{
			fixed (float* pvalue = &value)
			{
				AlGetListenerfNative(param, (float*)pvalue);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetListener3f")]
		internal static extern void AlGetListener3FNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3);

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			AlGetListener3FNative(param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				AlGetListener3FNative(param, (float*)pvalue1, value2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue2 = &value2)
			{
				AlGetListener3FNative(param, value1, (float*)pvalue2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue2 = &value2)
				{
					AlGetListener3FNative(param, (float*)pvalue1, (float*)pvalue2, value3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue3 = &value3)
			{
				AlGetListener3FNative(param, value1, value2, (float*)pvalue3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue3 = &value3)
				{
					AlGetListener3FNative(param, (float*)pvalue1, value2, (float*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue2 = &value2)
			{
				fixed (float* pvalue3 = &value3)
				{
					AlGetListener3FNative(param, value1, (float*)pvalue2, (float*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3F([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue2 = &value2)
				{
					fixed (float* pvalue3 = &value3)
					{
						AlGetListener3FNative(param, (float*)pvalue1, (float*)pvalue2, (float*)pvalue3);
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListenerfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetListenerfv")]
		internal static extern void AlGetListenerfvNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values);

		[NativeName(NativeNameType.Func, "alGetListenerfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListenerfv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values)
		{
			AlGetListenerfvNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alGetListenerfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListenerfv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				AlGetListenerfvNative(param, (float*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListeneri")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetListeneri")]
		internal static extern void AlGetListeneriNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] int* value);

		[NativeName(NativeNameType.Func, "alGetListeneri")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListeneri([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] int* value)
		{
			AlGetListeneriNative(param, value);
		}

		[NativeName(NativeNameType.Func, "alGetListeneri")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListeneri([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] ref int value)
		{
			fixed (int* pvalue = &value)
			{
				AlGetListeneriNative(param, (int*)pvalue);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetListener3i")]
		internal static extern void AlGetListener3INative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3);

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			AlGetListener3INative(param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				AlGetListener3INative(param, (int*)pvalue1, value2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue2 = &value2)
			{
				AlGetListener3INative(param, value1, (int*)pvalue2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue2 = &value2)
				{
					AlGetListener3INative(param, (int*)pvalue1, (int*)pvalue2, value3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue3 = &value3)
			{
				AlGetListener3INative(param, value1, value2, (int*)pvalue3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue3 = &value3)
				{
					AlGetListener3INative(param, (int*)pvalue1, value2, (int*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue2 = &value2)
			{
				fixed (int* pvalue3 = &value3)
				{
					AlGetListener3INative(param, value1, (int*)pvalue2, (int*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListener3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListener3I([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue2 = &value2)
				{
					fixed (int* pvalue3 = &value3)
					{
						AlGetListener3INative(param, (int*)pvalue1, (int*)pvalue2, (int*)pvalue3);
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetListeneriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetListeneriv")]
		internal static extern void AlGetListenerivNative([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values);

		[NativeName(NativeNameType.Func, "alGetListeneriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListeneriv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values)
		{
			AlGetListenerivNative(param, values);
		}

		[NativeName(NativeNameType.Func, "alGetListeneriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetListeneriv([NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlGetListenerivNative(param, (int*)pvalues);
			}
		}

		/// <summary>
		/// Create source objects. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGenSources")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGenSources")]
		internal static extern void AlGenSourcesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "ALuint*")] uint* sources);

		/// <summary>		/// Create source objects. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGenSources")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGenSources([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "ALuint*")] uint* sources)
		{
			AlGenSourcesNative(n, sources);
		}

		/// <summary>		/// Create source objects. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGenSources")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGenSources([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "ALuint*")] ref uint sources)
		{
			fixed (uint* psources = &sources)
			{
				AlGenSourcesNative(n, (uint*)psources);
			}
		}

		/// <summary>
		/// Delete source objects. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alDeleteSources")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alDeleteSources")]
		internal static extern void AlDeleteSourcesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources);

		/// <summary>		/// Delete source objects. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alDeleteSources")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDeleteSources([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources)
		{
			AlDeleteSourcesNative(n, sources);
		}

		/// <summary>		/// Delete source objects. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alDeleteSources")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDeleteSources([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] ref uint sources)
		{
			fixed (uint* psources = &sources)
			{
				AlDeleteSourcesNative(n, (uint*)psources);
			}
		}

		/// <summary>
		/// Verify an ID is for a valid source. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alIsSource")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alIsSource")]
		internal static extern byte AlIsSourceNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source);

		/// <summary>		/// Verify an ID is for a valid source. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alIsSource")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		public static byte AlIsSource([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source)
		{
			byte ret = AlIsSourceNative(source);
			return ret;
		}

		/// <summary>
		/// Set source parameters. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourcef")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourcef")]
		internal static extern void AlSourcefNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value);

		/// <summary>		/// Set source parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourcef")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcef([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value)
		{
			AlSourcefNative(source, param, value);
		}

		[NativeName(NativeNameType.Func, "alSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSource3f")]
		internal static extern void AlSource3FNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat")] float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat")] float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat")] float value3);

		[NativeName(NativeNameType.Func, "alSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat")] float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat")] float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat")] float value3)
		{
			AlSource3FNative(source, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alSourcefv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourcefv")]
		internal static extern void AlSourcefvNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] float* values);

		[NativeName(NativeNameType.Func, "alSourcefv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcefv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] float* values)
		{
			AlSourcefvNative(source, param, values);
		}

		[NativeName(NativeNameType.Func, "alSourcefv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcefv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				AlSourcefvNative(source, param, (float*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alSourcei")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourcei")]
		internal static extern void AlSourceiNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint")] int value);

		[NativeName(NativeNameType.Func, "alSourcei")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcei([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint")] int value)
		{
			AlSourceiNative(source, param, value);
		}

		[NativeName(NativeNameType.Func, "alSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSource3i")]
		internal static extern void AlSource3INative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint")] int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint")] int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint")] int value3);

		[NativeName(NativeNameType.Func, "alSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint")] int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint")] int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint")] int value3)
		{
			AlSource3INative(source, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alSourceiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourceiv")]
		internal static extern void AlSourceivNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] int* values);

		[NativeName(NativeNameType.Func, "alSourceiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceiv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] int* values)
		{
			AlSourceivNative(source, param, values);
		}

		[NativeName(NativeNameType.Func, "alSourceiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceiv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlSourceivNative(source, param, (int*)pvalues);
			}
		}

		/// <summary>
		/// Get source parameters. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGetSourcef")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetSourcef")]
		internal static extern void AlGetSourcefNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value);

		/// <summary>		/// Get source parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetSourcef")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourcef([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value)
		{
			AlGetSourcefNative(source, param, value);
		}

		/// <summary>		/// Get source parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetSourcef")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourcef([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value)
		{
			fixed (float* pvalue = &value)
			{
				AlGetSourcefNative(source, param, (float*)pvalue);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetSource3f")]
		internal static extern void AlGetSource3FNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3);

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			AlGetSource3FNative(source, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				AlGetSource3FNative(source, param, (float*)pvalue1, value2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue2 = &value2)
			{
				AlGetSource3FNative(source, param, value1, (float*)pvalue2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue2 = &value2)
				{
					AlGetSource3FNative(source, param, (float*)pvalue1, (float*)pvalue2, value3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue3 = &value3)
			{
				AlGetSource3FNative(source, param, value1, value2, (float*)pvalue3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue3 = &value3)
				{
					AlGetSource3FNative(source, param, (float*)pvalue1, value2, (float*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue2 = &value2)
			{
				fixed (float* pvalue3 = &value3)
				{
					AlGetSource3FNative(source, param, value1, (float*)pvalue2, (float*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3F([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue2 = &value2)
				{
					fixed (float* pvalue3 = &value3)
					{
						AlGetSource3FNative(source, param, (float*)pvalue1, (float*)pvalue2, (float*)pvalue3);
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSourcefv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetSourcefv")]
		internal static extern void AlGetSourcefvNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values);

		[NativeName(NativeNameType.Func, "alGetSourcefv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourcefv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values)
		{
			AlGetSourcefvNative(source, param, values);
		}

		[NativeName(NativeNameType.Func, "alGetSourcefv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourcefv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				AlGetSourcefvNative(source, param, (float*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSourcei")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetSourcei")]
		internal static extern void AlGetSourceiNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] int* value);

		[NativeName(NativeNameType.Func, "alGetSourcei")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourcei([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] int* value)
		{
			AlGetSourceiNative(source, param, value);
		}

		[NativeName(NativeNameType.Func, "alGetSourcei")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourcei([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] ref int value)
		{
			fixed (int* pvalue = &value)
			{
				AlGetSourceiNative(source, param, (int*)pvalue);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetSource3i")]
		internal static extern void AlGetSource3INative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3);

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			AlGetSource3INative(source, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				AlGetSource3INative(source, param, (int*)pvalue1, value2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue2 = &value2)
			{
				AlGetSource3INative(source, param, value1, (int*)pvalue2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue2 = &value2)
				{
					AlGetSource3INative(source, param, (int*)pvalue1, (int*)pvalue2, value3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue3 = &value3)
			{
				AlGetSource3INative(source, param, value1, value2, (int*)pvalue3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue3 = &value3)
				{
					AlGetSource3INative(source, param, (int*)pvalue1, value2, (int*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue2 = &value2)
			{
				fixed (int* pvalue3 = &value3)
				{
					AlGetSource3INative(source, param, value1, (int*)pvalue2, (int*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSource3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSource3I([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue2 = &value2)
				{
					fixed (int* pvalue3 = &value3)
					{
						AlGetSource3INative(source, param, (int*)pvalue1, (int*)pvalue2, (int*)pvalue3);
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetSourceiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetSourceiv")]
		internal static extern void AlGetSourceivNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values);

		[NativeName(NativeNameType.Func, "alGetSourceiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourceiv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values)
		{
			AlGetSourceivNative(source, param, values);
		}

		[NativeName(NativeNameType.Func, "alGetSourceiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetSourceiv([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlGetSourceivNative(source, param, (int*)pvalues);
			}
		}

		/// <summary>
		/// Play, restart, or resume a source, setting its state to AL_PLAYING. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourcePlay")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourcePlay")]
		internal static extern void AlSourcePlayNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source);

		/// <summary>		/// Play, restart, or resume a source, setting its state to AL_PLAYING. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourcePlay")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcePlay([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source)
		{
			AlSourcePlayNative(source);
		}

		/// <summary>
		/// Stop a source, setting its state to AL_STOPPED if playing or paused. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourceStop")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourceStop")]
		internal static extern void AlSourceStopNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source);

		/// <summary>		/// Stop a source, setting its state to AL_STOPPED if playing or paused. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceStop")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceStop([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source)
		{
			AlSourceStopNative(source);
		}

		/// <summary>
		/// Rewind a source, setting its state to AL_INITIAL. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourceRewind")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourceRewind")]
		internal static extern void AlSourceRewindNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source);

		/// <summary>		/// Rewind a source, setting its state to AL_INITIAL. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceRewind")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceRewind([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source)
		{
			AlSourceRewindNative(source);
		}

		/// <summary>
		/// Pause a source, setting its state to AL_PAUSED if playing. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourcePause")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourcePause")]
		internal static extern void AlSourcePauseNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source);

		/// <summary>		/// Pause a source, setting its state to AL_PAUSED if playing. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourcePause")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcePause([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source)
		{
			AlSourcePauseNative(source);
		}

		/// <summary>
		/// Play, restart, or resume a list of sources atomically. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourcePlayv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourcePlayv")]
		internal static extern void AlSourcePlayvNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources);

		/// <summary>		/// Play, restart, or resume a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourcePlayv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcePlayv([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources)
		{
			AlSourcePlayvNative(n, sources);
		}

		/// <summary>		/// Play, restart, or resume a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourcePlayv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcePlayv([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] ref uint sources)
		{
			fixed (uint* psources = &sources)
			{
				AlSourcePlayvNative(n, (uint*)psources);
			}
		}

		/// <summary>
		/// Stop a list of sources atomically. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourceStopv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourceStopv")]
		internal static extern void AlSourceStopvNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources);

		/// <summary>		/// Stop a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceStopv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceStopv([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources)
		{
			AlSourceStopvNative(n, sources);
		}

		/// <summary>		/// Stop a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceStopv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceStopv([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] ref uint sources)
		{
			fixed (uint* psources = &sources)
			{
				AlSourceStopvNative(n, (uint*)psources);
			}
		}

		/// <summary>
		/// Rewind a list of sources atomically. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourceRewindv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourceRewindv")]
		internal static extern void AlSourceRewindvNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources);

		/// <summary>		/// Rewind a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceRewindv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceRewindv([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources)
		{
			AlSourceRewindvNative(n, sources);
		}

		/// <summary>		/// Rewind a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceRewindv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceRewindv([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] ref uint sources)
		{
			fixed (uint* psources = &sources)
			{
				AlSourceRewindvNative(n, (uint*)psources);
			}
		}

		/// <summary>
		/// Pause a list of sources atomically. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourcePausev")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourcePausev")]
		internal static extern void AlSourcePausevNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources);

		/// <summary>		/// Pause a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourcePausev")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcePausev([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* sources)
		{
			AlSourcePausevNative(n, sources);
		}

		/// <summary>		/// Pause a list of sources atomically. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourcePausev")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourcePausev([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "sources")] [NativeName(NativeNameType.Type, "const ALuint*")] ref uint sources)
		{
			fixed (uint* psources = &sources)
			{
				AlSourcePausevNative(n, (uint*)psources);
			}
		}

		/// <summary>
		/// Queue buffers onto a source <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourceQueueBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourceQueueBuffers")]
		internal static extern void AlSourceQueueBuffersNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "nb")] [NativeName(NativeNameType.Type, "ALsizei")] int nb, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* buffers);

		/// <summary>		/// Queue buffers onto a source <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceQueueBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceQueueBuffers([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "nb")] [NativeName(NativeNameType.Type, "ALsizei")] int nb, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* buffers)
		{
			AlSourceQueueBuffersNative(source, nb, buffers);
		}

		/// <summary>		/// Queue buffers onto a source <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceQueueBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceQueueBuffers([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "nb")] [NativeName(NativeNameType.Type, "ALsizei")] int nb, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "const ALuint*")] ref uint buffers)
		{
			fixed (uint* pbuffers = &buffers)
			{
				AlSourceQueueBuffersNative(source, nb, (uint*)pbuffers);
			}
		}

		/// <summary>
		/// Unqueue processed buffers from a source <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alSourceUnqueueBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alSourceUnqueueBuffers")]
		internal static extern void AlSourceUnqueueBuffersNative([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "nb")] [NativeName(NativeNameType.Type, "ALsizei")] int nb, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "ALuint*")] uint* buffers);

		/// <summary>		/// Unqueue processed buffers from a source <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceUnqueueBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceUnqueueBuffers([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "nb")] [NativeName(NativeNameType.Type, "ALsizei")] int nb, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "ALuint*")] uint* buffers)
		{
			AlSourceUnqueueBuffersNative(source, nb, buffers);
		}

		/// <summary>		/// Unqueue processed buffers from a source <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alSourceUnqueueBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlSourceUnqueueBuffers([NativeName(NativeNameType.Param, "source")] [NativeName(NativeNameType.Type, "ALuint")] uint source, [NativeName(NativeNameType.Param, "nb")] [NativeName(NativeNameType.Type, "ALsizei")] int nb, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "ALuint*")] ref uint buffers)
		{
			fixed (uint* pbuffers = &buffers)
			{
				AlSourceUnqueueBuffersNative(source, nb, (uint*)pbuffers);
			}
		}

		/// <summary>
		/// Create buffer objects <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGenBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGenBuffers")]
		internal static extern void AlGenBuffersNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "ALuint*")] uint* buffers);

		/// <summary>		/// Create buffer objects <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGenBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGenBuffers([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "ALuint*")] uint* buffers)
		{
			AlGenBuffersNative(n, buffers);
		}

		/// <summary>		/// Create buffer objects <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGenBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGenBuffers([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "ALuint*")] ref uint buffers)
		{
			fixed (uint* pbuffers = &buffers)
			{
				AlGenBuffersNative(n, (uint*)pbuffers);
			}
		}

		/// <summary>
		/// Delete buffer objects <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alDeleteBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alDeleteBuffers")]
		internal static extern void AlDeleteBuffersNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* buffers);

		/// <summary>		/// Delete buffer objects <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alDeleteBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDeleteBuffers([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "const ALuint*")] uint* buffers)
		{
			AlDeleteBuffersNative(n, buffers);
		}

		/// <summary>		/// Delete buffer objects <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alDeleteBuffers")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlDeleteBuffers([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "ALsizei")] int n, [NativeName(NativeNameType.Param, "buffers")] [NativeName(NativeNameType.Type, "const ALuint*")] ref uint buffers)
		{
			fixed (uint* pbuffers = &buffers)
			{
				AlDeleteBuffersNative(n, (uint*)pbuffers);
			}
		}

		/// <summary>
		/// Verify an ID is a valid buffer (including the NULL buffer) <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alIsBuffer")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alIsBuffer")]
		internal static extern byte AlIsBufferNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer);

		/// <summary>		/// Verify an ID is a valid buffer (including the NULL buffer) <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alIsBuffer")]
		[return: NativeName(NativeNameType.Type, "ALboolean")]
		public static byte AlIsBuffer([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer)
		{
			byte ret = AlIsBufferNative(buffer);
			return ret;
		}

		/// <summary>
		/// Copies data into the buffer, interpreting it using the specified format and<br/>
		/// samplerate.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alBufferData")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alBufferData")]
		internal static extern void AlBufferDataNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "ALenum")] int format, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const ALvoid*")] void* data, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "ALsizei")] int size, [NativeName(NativeNameType.Param, "samplerate")] [NativeName(NativeNameType.Type, "ALsizei")] int samplerate);

		/// <summary>		/// Copies data into the buffer, interpreting it using the specified format and<br/>		/// samplerate.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alBufferData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBufferData([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "ALenum")] int format, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const ALvoid*")] void* data, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "ALsizei")] int size, [NativeName(NativeNameType.Param, "samplerate")] [NativeName(NativeNameType.Type, "ALsizei")] int samplerate)
		{
			AlBufferDataNative(buffer, format, data, size, samplerate);
		}

		/// <summary>
		/// Set buffer parameters. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alBufferf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alBufferf")]
		internal static extern void AlBufferfNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value);

		/// <summary>		/// Set buffer parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alBufferf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBufferf([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat")] float value)
		{
			AlBufferfNative(buffer, param, value);
		}

		[NativeName(NativeNameType.Func, "alBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alBuffer3f")]
		internal static extern void AlBuffer3FNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat")] float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat")] float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat")] float value3);

		[NativeName(NativeNameType.Func, "alBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat")] float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat")] float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat")] float value3)
		{
			AlBuffer3FNative(buffer, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alBufferfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alBufferfv")]
		internal static extern void AlBufferfvNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] float* values);

		[NativeName(NativeNameType.Func, "alBufferfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBufferfv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] float* values)
		{
			AlBufferfvNative(buffer, param, values);
		}

		[NativeName(NativeNameType.Func, "alBufferfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBufferfv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				AlBufferfvNative(buffer, param, (float*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alBufferi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alBufferi")]
		internal static extern void AlBufferiNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint")] int value);

		[NativeName(NativeNameType.Func, "alBufferi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBufferi([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint")] int value)
		{
			AlBufferiNative(buffer, param, value);
		}

		[NativeName(NativeNameType.Func, "alBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alBuffer3i")]
		internal static extern void AlBuffer3INative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint")] int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint")] int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint")] int value3);

		[NativeName(NativeNameType.Func, "alBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint")] int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint")] int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint")] int value3)
		{
			AlBuffer3INative(buffer, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alBufferiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alBufferiv")]
		internal static extern void AlBufferivNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] int* values);

		[NativeName(NativeNameType.Func, "alBufferiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBufferiv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] int* values)
		{
			AlBufferivNative(buffer, param, values);
		}

		[NativeName(NativeNameType.Func, "alBufferiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlBufferiv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const ALint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlBufferivNative(buffer, param, (int*)pvalues);
			}
		}

		/// <summary>
		/// Get buffer parameters. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alGetBufferf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBufferf")]
		internal static extern void AlGetBufferfNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value);

		/// <summary>		/// Get buffer parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetBufferf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferf([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value)
		{
			AlGetBufferfNative(buffer, param, value);
		}

		/// <summary>		/// Get buffer parameters. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alGetBufferf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferf([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value)
		{
			fixed (float* pvalue = &value)
			{
				AlGetBufferfNative(buffer, param, (float*)pvalue);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBuffer3f")]
		internal static extern void AlGetBuffer3FNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3);

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			AlGetBuffer3FNative(buffer, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				AlGetBuffer3FNative(buffer, param, (float*)pvalue1, value2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue2 = &value2)
			{
				AlGetBuffer3FNative(buffer, param, value1, (float*)pvalue2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue2 = &value2)
				{
					AlGetBuffer3FNative(buffer, param, (float*)pvalue1, (float*)pvalue2, value3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue3 = &value3)
			{
				AlGetBuffer3FNative(buffer, param, value1, value2, (float*)pvalue3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue3 = &value3)
				{
					AlGetBuffer3FNative(buffer, param, (float*)pvalue1, value2, (float*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] float* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue2 = &value2)
			{
				fixed (float* pvalue3 = &value3)
				{
					AlGetBuffer3FNative(buffer, param, value1, (float*)pvalue2, (float*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3F([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float value3)
		{
			fixed (float* pvalue1 = &value1)
			{
				fixed (float* pvalue2 = &value2)
				{
					fixed (float* pvalue3 = &value3)
					{
						AlGetBuffer3FNative(buffer, param, (float*)pvalue1, (float*)pvalue2, (float*)pvalue3);
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBufferfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBufferfv")]
		internal static extern void AlGetBufferfvNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values);

		[NativeName(NativeNameType.Func, "alGetBufferfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferfv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] float* values)
		{
			AlGetBufferfvNative(buffer, param, values);
		}

		[NativeName(NativeNameType.Func, "alGetBufferfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferfv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				AlGetBufferfvNative(buffer, param, (float*)pvalues);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBufferi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBufferi")]
		internal static extern void AlGetBufferiNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] int* value);

		[NativeName(NativeNameType.Func, "alGetBufferi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferi([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] int* value)
		{
			AlGetBufferiNative(buffer, param, value);
		}

		[NativeName(NativeNameType.Func, "alGetBufferi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferi([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "ALint*")] ref int value)
		{
			fixed (int* pvalue = &value)
			{
				AlGetBufferiNative(buffer, param, (int*)pvalue);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBuffer3i")]
		internal static extern void AlGetBuffer3INative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3);

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			AlGetBuffer3INative(buffer, param, value1, value2, value3);
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				AlGetBuffer3INative(buffer, param, (int*)pvalue1, value2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue2 = &value2)
			{
				AlGetBuffer3INative(buffer, param, value1, (int*)pvalue2, value3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] int* value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue2 = &value2)
				{
					AlGetBuffer3INative(buffer, param, (int*)pvalue1, (int*)pvalue2, value3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue3 = &value3)
			{
				AlGetBuffer3INative(buffer, param, value1, value2, (int*)pvalue3);
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] int* value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue3 = &value3)
				{
					AlGetBuffer3INative(buffer, param, (int*)pvalue1, value2, (int*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] int* value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue2 = &value2)
			{
				fixed (int* pvalue3 = &value3)
				{
					AlGetBuffer3INative(buffer, param, value1, (int*)pvalue2, (int*)pvalue3);
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBuffer3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBuffer3I([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "value1")] [NativeName(NativeNameType.Type, "ALint*")] ref int value1, [NativeName(NativeNameType.Param, "value2")] [NativeName(NativeNameType.Type, "ALint*")] ref int value2, [NativeName(NativeNameType.Param, "value3")] [NativeName(NativeNameType.Type, "ALint*")] ref int value3)
		{
			fixed (int* pvalue1 = &value1)
			{
				fixed (int* pvalue2 = &value2)
				{
					fixed (int* pvalue3 = &value3)
					{
						AlGetBuffer3INative(buffer, param, (int*)pvalue1, (int*)pvalue2, (int*)pvalue3);
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "alGetBufferiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alGetBufferiv")]
		internal static extern void AlGetBufferivNative([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values);

		[NativeName(NativeNameType.Func, "alGetBufferiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferiv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] int* values)
		{
			AlGetBufferivNative(buffer, param, values);
		}

		[NativeName(NativeNameType.Func, "alGetBufferiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlGetBufferiv([NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALuint")] uint buffer, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALenum")] int param, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlGetBufferivNative(buffer, param, (int*)pvalues);
			}
		}

		/// <summary>
		/// Create and attach a context to the given device. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcCreateContext")]
		[return: NativeName(NativeNameType.Type, "ALCcontext*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcCreateContext")]
		internal static extern ALCcontext* AlcCreateContextNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "attrlist")] [NativeName(NativeNameType.Type, "const ALCint*")] int* attrlist);

		/// <summary>		/// Create and attach a context to the given device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCreateContext")]
		[return: NativeName(NativeNameType.Type, "ALCcontext*")]
		public static ALCcontext* AlcCreateContext([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "attrlist")] [NativeName(NativeNameType.Type, "const ALCint*")] int* attrlist)
		{
			ALCcontext* ret = AlcCreateContextNative(device, attrlist);
			return ret;
		}

		/// <summary>		/// Create and attach a context to the given device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCreateContext")]
		[return: NativeName(NativeNameType.Type, "ALCcontext*")]
		public static ALCcontext* AlcCreateContext([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "attrlist")] [NativeName(NativeNameType.Type, "const ALCint*")] int* attrlist)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				ALCcontext* ret = AlcCreateContextNative((ALCdevice*)pdevice, attrlist);
				return ret;
			}
		}

		/// <summary>		/// Create and attach a context to the given device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCreateContext")]
		[return: NativeName(NativeNameType.Type, "ALCcontext*")]
		public static ALCcontext* AlcCreateContext([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "attrlist")] [NativeName(NativeNameType.Type, "const ALCint*")] ref int attrlist)
		{
			fixed (int* pattrlist = &attrlist)
			{
				ALCcontext* ret = AlcCreateContextNative(device, (int*)pattrlist);
				return ret;
			}
		}

		/// <summary>		/// Create and attach a context to the given device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCreateContext")]
		[return: NativeName(NativeNameType.Type, "ALCcontext*")]
		public static ALCcontext* AlcCreateContext([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "attrlist")] [NativeName(NativeNameType.Type, "const ALCint*")] ref int attrlist)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				fixed (int* pattrlist = &attrlist)
				{
					ALCcontext* ret = AlcCreateContextNative((ALCdevice*)pdevice, (int*)pattrlist);
					return ret;
				}
			}
		}

		/// <summary>
		/// Makes the given context the active process-wide context. Passing NULL clears<br/>
		/// the active context.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcMakeContextCurrent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcMakeContextCurrent")]
		internal static extern byte AlcMakeContextCurrentNative([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context);

		/// <summary>		/// Makes the given context the active process-wide context. Passing NULL clears<br/>		/// the active context.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcMakeContextCurrent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcMakeContextCurrent([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context)
		{
			byte ret = AlcMakeContextCurrentNative(context);
			return ret;
		}

		/// <summary>		/// Makes the given context the active process-wide context. Passing NULL clears<br/>		/// the active context.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcMakeContextCurrent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcMakeContextCurrent([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ref ALCcontext context)
		{
			fixed (ALCcontext* pcontext = &context)
			{
				byte ret = AlcMakeContextCurrentNative((ALCcontext*)pcontext);
				return ret;
			}
		}

		/// <summary>
		/// Resumes processing updates for the given context. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcProcessContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcProcessContext")]
		internal static extern void AlcProcessContextNative([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context);

		/// <summary>		/// Resumes processing updates for the given context. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcProcessContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcProcessContext([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context)
		{
			AlcProcessContextNative(context);
		}

		/// <summary>		/// Resumes processing updates for the given context. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcProcessContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcProcessContext([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ref ALCcontext context)
		{
			fixed (ALCcontext* pcontext = &context)
			{
				AlcProcessContextNative((ALCcontext*)pcontext);
			}
		}

		/// <summary>
		/// Suspends updates for the given context. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcSuspendContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcSuspendContext")]
		internal static extern void AlcSuspendContextNative([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context);

		/// <summary>		/// Suspends updates for the given context. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcSuspendContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcSuspendContext([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context)
		{
			AlcSuspendContextNative(context);
		}

		/// <summary>		/// Suspends updates for the given context. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcSuspendContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcSuspendContext([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ref ALCcontext context)
		{
			fixed (ALCcontext* pcontext = &context)
			{
				AlcSuspendContextNative((ALCcontext*)pcontext);
			}
		}

		/// <summary>
		/// Remove a context from its device and destroys it. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcDestroyContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcDestroyContext")]
		internal static extern void AlcDestroyContextNative([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context);

		/// <summary>		/// Remove a context from its device and destroys it. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcDestroyContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcDestroyContext([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context)
		{
			AlcDestroyContextNative(context);
		}

		/// <summary>		/// Remove a context from its device and destroys it. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcDestroyContext")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcDestroyContext([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ref ALCcontext context)
		{
			fixed (ALCcontext* pcontext = &context)
			{
				AlcDestroyContextNative((ALCcontext*)pcontext);
			}
		}

		/// <summary>
		/// Returns the currently active context. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcGetCurrentContext")]
		[return: NativeName(NativeNameType.Type, "ALCcontext*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcGetCurrentContext")]
		internal static extern ALCcontext* AlcGetCurrentContextNative();

		/// <summary>		/// Returns the currently active context. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetCurrentContext")]
		[return: NativeName(NativeNameType.Type, "ALCcontext*")]
		public static ALCcontext* AlcGetCurrentContext()
		{
			ALCcontext* ret = AlcGetCurrentContextNative();
			return ret;
		}

		/// <summary>
		/// Returns the device that a particular context is attached to. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcGetContextsDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcGetContextsDevice")]
		internal static extern ALCdevice* AlcGetContextsDeviceNative([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context);

		/// <summary>		/// Returns the device that a particular context is attached to. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetContextsDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		public static ALCdevice* AlcGetContextsDevice([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ALCcontext* context)
		{
			ALCdevice* ret = AlcGetContextsDeviceNative(context);
			return ret;
		}

		/// <summary>		/// Returns the device that a particular context is attached to. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetContextsDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		public static ALCdevice* AlcGetContextsDevice([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ALCcontext*")] ref ALCcontext context)
		{
			fixed (ALCcontext* pcontext = &context)
			{
				ALCdevice* ret = AlcGetContextsDeviceNative((ALCcontext*)pcontext);
				return ret;
			}
		}

		/// <summary>
		/// Opens the named playback device. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcOpenDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcOpenDevice")]
		internal static extern ALCdevice* AlcOpenDeviceNative([NativeName(NativeNameType.Param, "devicename")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* devicename);

		/// <summary>		/// Opens the named playback device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcOpenDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		public static ALCdevice* AlcOpenDevice([NativeName(NativeNameType.Param, "devicename")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* devicename)
		{
			ALCdevice* ret = AlcOpenDeviceNative(devicename);
			return ret;
		}

		/// <summary>		/// Opens the named playback device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcOpenDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		public static ALCdevice* AlcOpenDevice([NativeName(NativeNameType.Param, "devicename")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte devicename)
		{
			fixed (byte* pdevicename = &devicename)
			{
				ALCdevice* ret = AlcOpenDeviceNative((byte*)pdevicename);
				return ret;
			}
		}

		/// <summary>
		/// Closes the given playback device. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcCloseDevice")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcCloseDevice")]
		internal static extern byte AlcCloseDeviceNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device);

		/// <summary>		/// Closes the given playback device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCloseDevice")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcCloseDevice([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device)
		{
			byte ret = AlcCloseDeviceNative(device);
			return ret;
		}

		/// <summary>		/// Closes the given playback device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCloseDevice")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcCloseDevice([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				byte ret = AlcCloseDeviceNative((ALCdevice*)pdevice);
				return ret;
			}
		}

		/// <summary>
		/// Obtain the most recent Device error. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcGetError")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcGetError")]
		internal static extern int AlcGetErrorNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device);

		/// <summary>		/// Obtain the most recent Device error. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetError")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		public static int AlcGetError([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device)
		{
			int ret = AlcGetErrorNative(device);
			return ret;
		}

		/// <summary>		/// Obtain the most recent Device error. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetError")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		public static int AlcGetError([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				int ret = AlcGetErrorNative((ALCdevice*)pdevice);
				return ret;
			}
		}

		/// <summary>
		/// Query for the presence of an extension on the device. Pass a NULL device to<br/>
		/// query a device-inspecific extension.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcIsExtensionPresent")]
		internal static extern byte AlcIsExtensionPresentNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* extname);

		/// <summary>		/// Query for the presence of an extension on the device. Pass a NULL device to<br/>		/// query a device-inspecific extension.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcIsExtensionPresent([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* extname)
		{
			byte ret = AlcIsExtensionPresentNative(device, extname);
			return ret;
		}

		/// <summary>		/// Query for the presence of an extension on the device. Pass a NULL device to<br/>		/// query a device-inspecific extension.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcIsExtensionPresent([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* extname)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				byte ret = AlcIsExtensionPresentNative((ALCdevice*)pdevice, extname);
				return ret;
			}
		}

		/// <summary>		/// Query for the presence of an extension on the device. Pass a NULL device to<br/>		/// query a device-inspecific extension.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcIsExtensionPresent([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte extname)
		{
			fixed (byte* pextname = &extname)
			{
				byte ret = AlcIsExtensionPresentNative(device, (byte*)pextname);
				return ret;
			}
		}

		/// <summary>		/// Query for the presence of an extension on the device. Pass a NULL device to<br/>		/// query a device-inspecific extension.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcIsExtensionPresent")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcIsExtensionPresent([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "extname")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte extname)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				fixed (byte* pextname = &extname)
				{
					byte ret = AlcIsExtensionPresentNative((ALCdevice*)pdevice, (byte*)pextname);
					return ret;
				}
			}
		}

		/// <summary>
		/// Retrieve the address of a function. Given a non-NULL device, the returned<br/>
		/// function may be device-specific.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "ALCvoid*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcGetProcAddress")]
		internal static extern void* AlcGetProcAddressNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "funcname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* funcname);

		/// <summary>		/// Retrieve the address of a function. Given a non-NULL device, the returned<br/>		/// function may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "ALCvoid*")]
		public static void* AlcGetProcAddress([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "funcname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* funcname)
		{
			void* ret = AlcGetProcAddressNative(device, funcname);
			return ret;
		}

		/// <summary>		/// Retrieve the address of a function. Given a non-NULL device, the returned<br/>		/// function may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "ALCvoid*")]
		public static void* AlcGetProcAddress([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "funcname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* funcname)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				void* ret = AlcGetProcAddressNative((ALCdevice*)pdevice, funcname);
				return ret;
			}
		}

		/// <summary>		/// Retrieve the address of a function. Given a non-NULL device, the returned<br/>		/// function may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "ALCvoid*")]
		public static void* AlcGetProcAddress([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "funcname")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte funcname)
		{
			fixed (byte* pfuncname = &funcname)
			{
				void* ret = AlcGetProcAddressNative(device, (byte*)pfuncname);
				return ret;
			}
		}

		/// <summary>		/// Retrieve the address of a function. Given a non-NULL device, the returned<br/>		/// function may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetProcAddress")]
		[return: NativeName(NativeNameType.Type, "ALCvoid*")]
		public static void* AlcGetProcAddress([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "funcname")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte funcname)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				fixed (byte* pfuncname = &funcname)
				{
					void* ret = AlcGetProcAddressNative((ALCdevice*)pdevice, (byte*)pfuncname);
					return ret;
				}
			}
		}

		/// <summary>
		/// Retrieve the value of an enum. Given a non-NULL device, the returned value<br/>
		/// may be device-specific.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcGetEnumValue")]
		internal static extern int AlcGetEnumValueNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "enumname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* enumname);

		/// <summary>		/// Retrieve the value of an enum. Given a non-NULL device, the returned value<br/>		/// may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		public static int AlcGetEnumValue([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "enumname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* enumname)
		{
			int ret = AlcGetEnumValueNative(device, enumname);
			return ret;
		}

		/// <summary>		/// Retrieve the value of an enum. Given a non-NULL device, the returned value<br/>		/// may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		public static int AlcGetEnumValue([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "enumname")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* enumname)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				int ret = AlcGetEnumValueNative((ALCdevice*)pdevice, enumname);
				return ret;
			}
		}

		/// <summary>		/// Retrieve the value of an enum. Given a non-NULL device, the returned value<br/>		/// may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		public static int AlcGetEnumValue([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "enumname")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte enumname)
		{
			fixed (byte* penumname = &enumname)
			{
				int ret = AlcGetEnumValueNative(device, (byte*)penumname);
				return ret;
			}
		}

		/// <summary>		/// Retrieve the value of an enum. Given a non-NULL device, the returned value<br/>		/// may be device-specific.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetEnumValue")]
		[return: NativeName(NativeNameType.Type, "ALCenum")]
		public static int AlcGetEnumValue([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "enumname")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte enumname)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				fixed (byte* penumname = &enumname)
				{
					int ret = AlcGetEnumValueNative((ALCdevice*)pdevice, (byte*)penumname);
					return ret;
				}
			}
		}

		/// <summary>
		/// Returns information about the device, and error strings. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcGetString")]
		[return: NativeName(NativeNameType.Type, "const ALCchar*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcGetString")]
		internal static extern byte* AlcGetStringNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param);

		/// <summary>		/// Returns information about the device, and error strings. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetString")]
		[return: NativeName(NativeNameType.Type, "const ALCchar*")]
		public static byte* AlcGetString([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param)
		{
			byte* ret = AlcGetStringNative(device, param);
			return ret;
		}

		/// <summary>		/// Returns information about the device, and error strings. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetString")]
		[return: NativeName(NativeNameType.Type, "const ALCchar*")]
		public static byte* AlcGetString([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				byte* ret = AlcGetStringNative((ALCdevice*)pdevice, param);
				return ret;
			}
		}

		/// <summary>
		/// Returns information about the device and the version of OpenAL. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcGetIntegerv")]
		internal static extern void AlcGetIntegervNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "ALCsizei")] int size, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALCint*")] int* values);

		/// <summary>		/// Returns information about the device and the version of OpenAL. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcGetIntegerv([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "ALCsizei")] int size, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALCint*")] int* values)
		{
			AlcGetIntegervNative(device, param, size, values);
		}

		/// <summary>		/// Returns information about the device and the version of OpenAL. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcGetIntegerv([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "ALCsizei")] int size, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALCint*")] int* values)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				AlcGetIntegervNative((ALCdevice*)pdevice, param, size, values);
			}
		}

		/// <summary>		/// Returns information about the device and the version of OpenAL. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcGetIntegerv([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "ALCsizei")] int size, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALCint*")] ref int values)
		{
			fixed (int* pvalues = &values)
			{
				AlcGetIntegervNative(device, param, size, (int*)pvalues);
			}
		}

		/// <summary>		/// Returns information about the device and the version of OpenAL. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcGetIntegerv([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "ALCenum")] int param, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "ALCsizei")] int size, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "ALCint*")] ref int values)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				fixed (int* pvalues = &values)
				{
					AlcGetIntegervNative((ALCdevice*)pdevice, param, size, (int*)pvalues);
				}
			}
		}

		/// <summary>
		/// Opens the named capture device with the given frequency, format, and buffer<br/>
		/// size.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcCaptureOpenDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcCaptureOpenDevice")]
		internal static extern ALCdevice* AlcCaptureOpenDeviceNative([NativeName(NativeNameType.Param, "devicename")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* devicename, [NativeName(NativeNameType.Param, "frequency")] [NativeName(NativeNameType.Type, "ALCuint")] uint frequency, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "ALCenum")] int format, [NativeName(NativeNameType.Param, "buffersize")] [NativeName(NativeNameType.Type, "ALCsizei")] int buffersize);

		/// <summary>		/// Opens the named capture device with the given frequency, format, and buffer<br/>		/// size.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureOpenDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		public static ALCdevice* AlcCaptureOpenDevice([NativeName(NativeNameType.Param, "devicename")] [NativeName(NativeNameType.Type, "const ALCchar*")] byte* devicename, [NativeName(NativeNameType.Param, "frequency")] [NativeName(NativeNameType.Type, "ALCuint")] uint frequency, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "ALCenum")] int format, [NativeName(NativeNameType.Param, "buffersize")] [NativeName(NativeNameType.Type, "ALCsizei")] int buffersize)
		{
			ALCdevice* ret = AlcCaptureOpenDeviceNative(devicename, frequency, format, buffersize);
			return ret;
		}

		/// <summary>		/// Opens the named capture device with the given frequency, format, and buffer<br/>		/// size.<br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureOpenDevice")]
		[return: NativeName(NativeNameType.Type, "ALCdevice*")]
		public static ALCdevice* AlcCaptureOpenDevice([NativeName(NativeNameType.Param, "devicename")] [NativeName(NativeNameType.Type, "const ALCchar*")] ref byte devicename, [NativeName(NativeNameType.Param, "frequency")] [NativeName(NativeNameType.Type, "ALCuint")] uint frequency, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "ALCenum")] int format, [NativeName(NativeNameType.Param, "buffersize")] [NativeName(NativeNameType.Type, "ALCsizei")] int buffersize)
		{
			fixed (byte* pdevicename = &devicename)
			{
				ALCdevice* ret = AlcCaptureOpenDeviceNative((byte*)pdevicename, frequency, format, buffersize);
				return ret;
			}
		}

		/// <summary>
		/// Closes the given capture device. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcCaptureCloseDevice")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcCaptureCloseDevice")]
		internal static extern byte AlcCaptureCloseDeviceNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device);

		/// <summary>		/// Closes the given capture device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureCloseDevice")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcCaptureCloseDevice([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device)
		{
			byte ret = AlcCaptureCloseDeviceNative(device);
			return ret;
		}

		/// <summary>		/// Closes the given capture device. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureCloseDevice")]
		[return: NativeName(NativeNameType.Type, "ALCboolean")]
		public static byte AlcCaptureCloseDevice([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				byte ret = AlcCaptureCloseDeviceNative((ALCdevice*)pdevice);
				return ret;
			}
		}

		/// <summary>
		/// Starts capturing samples into the device buffer. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcCaptureStart")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcCaptureStart")]
		internal static extern void AlcCaptureStartNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device);

		/// <summary>		/// Starts capturing samples into the device buffer. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureStart")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcCaptureStart([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device)
		{
			AlcCaptureStartNative(device);
		}

		/// <summary>		/// Starts capturing samples into the device buffer. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureStart")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcCaptureStart([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				AlcCaptureStartNative((ALCdevice*)pdevice);
			}
		}

		/// <summary>
		/// Stops capturing samples. Samples in the device buffer remain available. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcCaptureStop")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcCaptureStop")]
		internal static extern void AlcCaptureStopNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device);

		/// <summary>		/// Stops capturing samples. Samples in the device buffer remain available. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureStop")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcCaptureStop([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device)
		{
			AlcCaptureStopNative(device);
		}

		/// <summary>		/// Stops capturing samples. Samples in the device buffer remain available. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureStop")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcCaptureStop([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				AlcCaptureStopNative((ALCdevice*)pdevice);
			}
		}

		/// <summary>
		/// Reads samples from the device buffer. <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "alcCaptureSamples")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "alcCaptureSamples")]
		internal static extern void AlcCaptureSamplesNative([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALCvoid*")] void* buffer, [NativeName(NativeNameType.Param, "samples")] [NativeName(NativeNameType.Type, "ALCsizei")] int samples);

		/// <summary>		/// Reads samples from the device buffer. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureSamples")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcCaptureSamples([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ALCdevice* device, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALCvoid*")] void* buffer, [NativeName(NativeNameType.Param, "samples")] [NativeName(NativeNameType.Type, "ALCsizei")] int samples)
		{
			AlcCaptureSamplesNative(device, buffer, samples);
		}

		/// <summary>		/// Reads samples from the device buffer. <br/>		/// </summary>		[NativeName(NativeNameType.Func, "alcCaptureSamples")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AlcCaptureSamples([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "ALCdevice*")] ref ALCdevice device, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "ALCvoid*")] void* buffer, [NativeName(NativeNameType.Param, "samples")] [NativeName(NativeNameType.Type, "ALCsizei")] int samples)
		{
			fixed (ALCdevice* pdevice = &device)
			{
				AlcCaptureSamplesNative((ALCdevice*)pdevice, buffer, samples);
			}
		}

	}
}
