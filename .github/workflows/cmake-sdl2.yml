name: Build SDL2 Libraries

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: x86_64
          - os: windows-latest
            arch: x86
          - os: windows-latest
            arch: arm64
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64
    steps:
    - uses: actions/checkout@v4.1.7
      with:
        repository: 'libsdl-org/SDL'
        ref: 'release-2.30.5'
        path: 'SDL'

    - name: Checkout specific commit
      run: |
        cd SDL
        git checkout 2eef7ca

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            libasound2-dev \
            libpulse-dev \
            libaudio-dev \
            libjack-dev \
            libpipewire-0.3-dev \
            esound-common \
            libesd0-dev \
            libsndio-dev \
            libdrm-dev \
            libegl1-mesa-dev \
            libgles2-mesa-dev \
            libbcm-host-dev \
            libbrcmEGL-dev \
            libwayland-dev \
            libxkbcommon-dev \
            libdecor-0-dev \
            libunwind-dev \
            libsamplerate0-dev

    - name: Install dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install cmake

    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Configure SDL2 with CMake for macOS ARM64
      if: matrix.arch == 'arm64' && matrix.os == 'macos-latest'
      run: cmake -S SDL -B SDL/build -DCMAKE_OSX_ARCHITECTURES=arm64 -DSDL_STATIC=OFF -DSDL_SHARED=ON

    - name: Configure SDL2 with CMake
      if: matrix.arch != 'arm64' || matrix.os != 'macos-latest'
      run: cmake -S SDL -B SDL/build -DSDL_STATIC=OFF -DSDL_SHARED=ON

    - name: Build SDL2
      run: cmake --build SDL/build --config Release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-artifacts 
        path: |
          SDL/build/Release/*.dll
          SDL/build/*.so
          SDL/build/*.dylib
        if-no-files-found: ignore # 'warn' or 'ignore' or 'error'
