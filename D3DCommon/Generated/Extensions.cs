// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace HexaEngine.D3DCommon
{
	public static unsafe class Extensions
	{
		[NativeName(NativeNameType.Func, "GetBufferPointer")]
		[return: NativeName(NativeNameType.Type, "LPVOID")]
		public static void* GetBufferPointer(this ComPtr<ID3D10Blob> comObj) 
		{
			ID3D10Blob* handle = comObj.Handle;
			void* ret = ((delegate* unmanaged[Stdcall]<ID3D10Blob*, void*>)(handle->LpVtbl[3]))(handle);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetBufferSize")]
		[return: NativeName(NativeNameType.Type, "SIZE_T")]
		public static nuint GetBufferSize(this ComPtr<ID3D10Blob> comObj) 
		{
			ID3D10Blob* handle = comObj.Handle;
			nuint ret = ((delegate* unmanaged[Stdcall]<ID3D10Blob*, nuint>)(handle->LpVtbl[4]))(handle);
			return ret;
		}

		[NativeName(NativeNameType.Func, "RegisterDestructionCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult RegisterDestructionCallback(this ComPtr<ID3DDestructionNotifier> comObj, [NativeName(NativeNameType.Param, "callbackFn")] [NativeName(NativeNameType.Type, "PFN_DESTRUCTION_CALLBACK")] PfnDestructionCallback callbackFn, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "pCallbackID")] [NativeName(NativeNameType.Type, "UINT*")] uint* pCallbackID) 
		{
			ID3DDestructionNotifier* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3DDestructionNotifier*, PfnDestructionCallback, void*, uint*, HResult>)(handle->LpVtbl[3]))(handle, callbackFn, pData, pCallbackID);
			return ret;
		}

		[NativeName(NativeNameType.Func, "RegisterDestructionCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult RegisterDestructionCallback(this ComPtr<ID3DDestructionNotifier> comObj, [NativeName(NativeNameType.Param, "callbackFn")] [NativeName(NativeNameType.Type, "PFN_DESTRUCTION_CALLBACK")] PfnDestructionCallback callbackFn, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "pCallbackID")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pCallbackID) 
		{
			ID3DDestructionNotifier* handle = comObj.Handle;
			fixed (uint* ppCallbackID = &pCallbackID)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3DDestructionNotifier*, PfnDestructionCallback, void*, uint*, HResult>)(handle->LpVtbl[3]))(handle, callbackFn, pData, (uint*)ppCallbackID);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "UnregisterDestructionCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult UnregisterDestructionCallback(this ComPtr<ID3DDestructionNotifier> comObj, [NativeName(NativeNameType.Param, "callbackID")] [NativeName(NativeNameType.Type, "UINT")] uint callbackID) 
		{
			ID3DDestructionNotifier* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3DDestructionNotifier*, uint, HResult>)(handle->LpVtbl[4]))(handle, callbackID);
			return ret;
		}

		[NativeName(NativeNameType.Func, "Open")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Open(this ComPtr<ID3DInclude> comObj, [NativeName(NativeNameType.Param, "IncludeType")] [NativeName(NativeNameType.Type, "D3D_INCLUDE_TYPE")] D3DIncludeType includeType, [NativeName(NativeNameType.Param, "pFileName")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pFileName, [NativeName(NativeNameType.Param, "pParentData")] [NativeName(NativeNameType.Type, "LPCVOID")] void* pParentData, [NativeName(NativeNameType.Param, "ppData")] [NativeName(NativeNameType.Type, "LPCVOID*")] void** ppData, [NativeName(NativeNameType.Param, "pBytes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pBytes) 
		{
			ID3DInclude* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3DInclude*, D3DIncludeType, byte*, void*, void**, uint*, HResult>)(*handle->LpVtbl))(handle, includeType, pFileName, pParentData, ppData, pBytes);
			return ret;
		}

		[NativeName(NativeNameType.Func, "Open")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Open(this ComPtr<ID3DInclude> comObj, [NativeName(NativeNameType.Param, "IncludeType")] [NativeName(NativeNameType.Type, "D3D_INCLUDE_TYPE")] D3DIncludeType includeType, [NativeName(NativeNameType.Param, "pFileName")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pFileName, [NativeName(NativeNameType.Param, "pParentData")] [NativeName(NativeNameType.Type, "LPCVOID")] void* pParentData, [NativeName(NativeNameType.Param, "ppData")] [NativeName(NativeNameType.Type, "LPCVOID*")] ref void* ppData, [NativeName(NativeNameType.Param, "pBytes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pBytes) 
		{
			ID3DInclude* handle = comObj.Handle;
			fixed (void** pppData = &ppData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3DInclude*, D3DIncludeType, byte*, void*, void**, uint*, HResult>)(*handle->LpVtbl))(handle, includeType, pFileName, pParentData, (void**)pppData, pBytes);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "Open")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Open(this ComPtr<ID3DInclude> comObj, [NativeName(NativeNameType.Param, "IncludeType")] [NativeName(NativeNameType.Type, "D3D_INCLUDE_TYPE")] D3DIncludeType includeType, [NativeName(NativeNameType.Param, "pFileName")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pFileName, [NativeName(NativeNameType.Param, "pParentData")] [NativeName(NativeNameType.Type, "LPCVOID")] void* pParentData, [NativeName(NativeNameType.Param, "ppData")] [NativeName(NativeNameType.Type, "LPCVOID*")] void** ppData, [NativeName(NativeNameType.Param, "pBytes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pBytes) 
		{
			ID3DInclude* handle = comObj.Handle;
			fixed (uint* ppBytes = &pBytes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3DInclude*, D3DIncludeType, byte*, void*, void**, uint*, HResult>)(*handle->LpVtbl))(handle, includeType, pFileName, pParentData, ppData, (uint*)ppBytes);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "Open")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Open(this ComPtr<ID3DInclude> comObj, [NativeName(NativeNameType.Param, "IncludeType")] [NativeName(NativeNameType.Type, "D3D_INCLUDE_TYPE")] D3DIncludeType includeType, [NativeName(NativeNameType.Param, "pFileName")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pFileName, [NativeName(NativeNameType.Param, "pParentData")] [NativeName(NativeNameType.Type, "LPCVOID")] void* pParentData, [NativeName(NativeNameType.Param, "ppData")] [NativeName(NativeNameType.Type, "LPCVOID*")] ref void* ppData, [NativeName(NativeNameType.Param, "pBytes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pBytes) 
		{
			ID3DInclude* handle = comObj.Handle;
			fixed (void** pppData = &ppData)
			{
				fixed (uint* ppBytes = &pBytes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3DInclude*, D3DIncludeType, byte*, void*, void**, uint*, HResult>)(*handle->LpVtbl))(handle, includeType, pFileName, pParentData, (void**)pppData, (uint*)ppBytes);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "Close")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Close(this ComPtr<ID3DInclude> comObj, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "LPCVOID")] void* pData) 
		{
			ID3DInclude* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3DInclude*, void*, HResult>)(handle->LpVtbl[1]))(handle, pData);
			return ret;
		}

	}
}
