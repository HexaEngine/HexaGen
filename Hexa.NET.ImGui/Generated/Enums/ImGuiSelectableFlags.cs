// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Enum, "ImGuiSelectableFlags_")]
	[Flags]
	public enum ImGuiSelectableFlags : int
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiSelectableFlags_None")]
		[NativeName(NativeNameType.Value, "0")]
		None = unchecked(0),

		/// <summary>
		/// Clicking this doesn't close parent popup window (overrides ImGuiItemFlags_AutoClosePopups)<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiSelectableFlags_NoAutoClosePopups")]
		[NativeName(NativeNameType.Value, "1")]
		NoAutoClosePopups = unchecked(1),

		/// <summary>
		/// Frame will span all columns of its container table (text will still fit in current column)<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiSelectableFlags_SpanAllColumns")]
		[NativeName(NativeNameType.Value, "2")]
		SpanAllColumns = unchecked(2),

		/// <summary>
		/// Generate press events on double clicks too<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiSelectableFlags_AllowDoubleClick")]
		[NativeName(NativeNameType.Value, "4")]
		AllowDoubleClick = unchecked(4),

		/// <summary>
		/// Cannot be selected, display grayed out text<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiSelectableFlags_Disabled")]
		[NativeName(NativeNameType.Value, "8")]
		Disabled = unchecked(8),

		/// <summary>
		/// (WIP) Hit testing to allow subsequent widgets to overlap this one<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiSelectableFlags_AllowOverlap")]
		[NativeName(NativeNameType.Value, "16")]
		AllowOverlap = unchecked(16),

		/// <summary>
		/// Make the item be displayed as if it is hovered<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiSelectableFlags_Highlight")]
		[NativeName(NativeNameType.Value, "32")]
		Highlight = unchecked(32),
	}
}
