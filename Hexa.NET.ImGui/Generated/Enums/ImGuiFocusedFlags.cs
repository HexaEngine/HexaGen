// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Enum, "ImGuiFocusedFlags_")]
	public enum ImGuiFocusedFlags : int
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiFocusedFlags_None")]
		[NativeName(NativeNameType.Value, "0")]
		None = unchecked(0),

		/// <summary>
		/// Return true if any children of the window is focused<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiFocusedFlags_ChildWindows")]
		[NativeName(NativeNameType.Value, "1")]
		ChildWindows = unchecked(1),

		/// <summary>
		/// Test from root window (top most parent of the current hierarchy)<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiFocusedFlags_RootWindow")]
		[NativeName(NativeNameType.Value, "2")]
		RootWindow = unchecked(2),

		/// <summary>
		/// Return true if any window is focused. Important: If you are trying to tell how to dispatch your low-level inputs, do NOT use this. Use 'io.WantCaptureMouse' instead! Please read the FAQ!<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiFocusedFlags_AnyWindow")]
		[NativeName(NativeNameType.Value, "4")]
		AnyWindow = unchecked(4),

		/// <summary>
		/// Do not consider popup hierarchy (do not treat popup emitter as parent of popup) (when used with _ChildWindows or _RootWindow)<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiFocusedFlags_NoPopupHierarchy")]
		[NativeName(NativeNameType.Value, "8")]
		NoPopupHierarchy = unchecked(8),

		/// <summary>
		/// Consider docking hierarchy (treat dockspace host as parent of docked window) (when used with _ChildWindows or _RootWindow)<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiFocusedFlags_DockHierarchy")]
		[NativeName(NativeNameType.Value, "16")]
		DockHierarchy = unchecked(16),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ImGuiFocusedFlags_RootAndChildWindows")]
		[NativeName(NativeNameType.Value, "3")]
		RootAndChildWindows = unchecked(3),
	}
}
