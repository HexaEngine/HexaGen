// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	public unsafe partial class ImGui
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_PushTextureID")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void PushTextureIDNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "texture_id")] [NativeName(NativeNameType.Type, "ImTextureID")] ImTextureID textureId)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, ImTextureID, void>)vt[535])(self, textureId);
			#else
			((delegate* unmanaged[Cdecl]<nint, ImTextureID, void>)vt[535])((nint)self, textureId);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_PushTextureID")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PushTextureID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "texture_id")] [NativeName(NativeNameType.Type, "ImTextureID")] ImTextureID textureId)
		{
			PushTextureIDNative(self, textureId);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_PushTextureID")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PushTextureID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "texture_id")] [NativeName(NativeNameType.Type, "ImTextureID")] ImTextureID textureId)
		{
			fixed (ImDrawList* pself = &self)
			{
				PushTextureIDNative((ImDrawList*)pself, textureId);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_PopTextureID")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void PopTextureIDNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, void>)vt[536])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[536])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_PopTextureID")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PopTextureID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			PopTextureIDNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_PopTextureID")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PopTextureID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self)
		{
			fixed (ImDrawList* pself = &self)
			{
				PopTextureIDNative((ImDrawList*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMin")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void GetClipRectMinNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<Vector2*, ImDrawList*, void>)vt[537])(pOut, self);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[537])((nint)pOut, (nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMin")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static Vector2 GetClipRectMin([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			Vector2 ret;
			GetClipRectMinNative(&ret, self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMin")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMin([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			GetClipRectMinNative(pOut, self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMin")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMin([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				GetClipRectMinNative((Vector2*)ppOut, self);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMin")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static Vector2 GetClipRectMin([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self)
		{
			fixed (ImDrawList* pself = &self)
			{
				Vector2 ret;
				GetClipRectMinNative(&ret, (ImDrawList*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMin")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMin([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self)
		{
			fixed (ImDrawList* pself = &self)
			{
				GetClipRectMinNative(pOut, (ImDrawList*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMin")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMin([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				fixed (ImDrawList* pself = &self)
				{
					GetClipRectMinNative((Vector2*)ppOut, (ImDrawList*)pself);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMax")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void GetClipRectMaxNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<Vector2*, ImDrawList*, void>)vt[538])(pOut, self);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[538])((nint)pOut, (nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static Vector2 GetClipRectMax([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			Vector2 ret;
			GetClipRectMaxNative(&ret, self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMax([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			GetClipRectMaxNative(pOut, self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMax([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				GetClipRectMaxNative((Vector2*)ppOut, self);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static Vector2 GetClipRectMax([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self)
		{
			fixed (ImDrawList* pself = &self)
			{
				Vector2 ret;
				GetClipRectMaxNative(&ret, (ImDrawList*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMax([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self)
		{
			fixed (ImDrawList* pself = &self)
			{
				GetClipRectMaxNative(pOut, (ImDrawList*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_GetClipRectMax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GetClipRectMax([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				fixed (ImDrawList* pself = &self)
				{
					GetClipRectMaxNative((Vector2*)ppOut, (ImDrawList*)pself);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddLine")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddLineNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, uint, float, void>)vt[539])(self, p1, p2, col, thickness);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, uint, float, void>)vt[539])((nint)self, p1, p2, col, thickness);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddLine")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddLine([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddLineNative(self, p1, p2, col, thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddLine")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddLine([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddLineNative(self, p1, p2, col, (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddLine")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddLine([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddLineNative((ImDrawList*)pself, p1, p2, col, thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddLine")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddLine([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddLineNative((ImDrawList*)pself, p1, p2, col, (float)(1.0f));
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddRectNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, uint, float, ImDrawFlags, float, void>)vt[540])(self, pMin, pMax, col, rounding, flags, thickness);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, uint, float, ImDrawFlags, float, void>)vt[540])((nint)self, pMin, pMax, col, rounding, flags, thickness);
			#endif
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddRectNative(self, pMin, pMax, col, rounding, flags, thickness);
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			AddRectNative(self, pMin, pMax, col, rounding, flags, (float)(1.0f));
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding)
		{
			AddRectNative(self, pMin, pMax, col, rounding, (ImDrawFlags)(0), (float)(1.0f));
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddRectNative(self, pMin, pMax, col, (float)(0.0f), (ImDrawFlags)(0), (float)(1.0f));
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			AddRectNative(self, pMin, pMax, col, (float)(0.0f), flags, (float)(1.0f));
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddRectNative(self, pMin, pMax, col, rounding, (ImDrawFlags)(0), thickness);
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddRectNative(self, pMin, pMax, col, (float)(0.0f), flags, thickness);
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectNative((ImDrawList*)pself, pMin, pMax, col, rounding, flags, thickness);
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectNative((ImDrawList*)pself, pMin, pMax, col, rounding, flags, (float)(1.0f));
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectNative((ImDrawList*)pself, pMin, pMax, col, rounding, (ImDrawFlags)(0), (float)(1.0f));
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectNative((ImDrawList*)pself, pMin, pMax, col, (float)(0.0f), (ImDrawFlags)(0), (float)(1.0f));
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectNative((ImDrawList*)pself, pMin, pMax, col, (float)(0.0f), flags, (float)(1.0f));
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectNative((ImDrawList*)pself, pMin, pMax, col, rounding, (ImDrawFlags)(0), thickness);
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectNative((ImDrawList*)pself, pMin, pMax, col, (float)(0.0f), flags, thickness);
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddRectFilledNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, uint, float, ImDrawFlags, void>)vt[541])(self, pMin, pMax, col, rounding, flags);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, uint, float, ImDrawFlags, void>)vt[541])((nint)self, pMin, pMax, col, rounding, flags);
			#endif
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			AddRectFilledNative(self, pMin, pMax, col, rounding, flags);
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding)
		{
			AddRectFilledNative(self, pMin, pMax, col, rounding, (ImDrawFlags)(0));
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddRectFilledNative(self, pMin, pMax, col, (float)(0.0f), (ImDrawFlags)(0));
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			AddRectFilledNative(self, pMin, pMax, col, (float)(0.0f), flags);
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectFilledNative((ImDrawList*)pself, pMin, pMax, col, rounding, flags);
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rounding")] [NativeName(NativeNameType.Type, "float")] float rounding)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectFilledNative((ImDrawList*)pself, pMin, pMax, col, rounding, (ImDrawFlags)(0));
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectFilledNative((ImDrawList*)pself, pMin, pMax, col, (float)(0.0f), (ImDrawFlags)(0));
			}
		}

		/// <summary>
		/// a: upper-left, b: lower-right (== upper-left + size)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImDrawFlags")] ImDrawFlags flags)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectFilledNative((ImDrawList*)pself, pMin, pMax, col, (float)(0.0f), flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilledMultiColor")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddRectFilledMultiColorNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col_upr_left")] [NativeName(NativeNameType.Type, "ImU32")] uint colUprLeft, [NativeName(NativeNameType.Param, "col_upr_right")] [NativeName(NativeNameType.Type, "ImU32")] uint colUprRight, [NativeName(NativeNameType.Param, "col_bot_right")] [NativeName(NativeNameType.Type, "ImU32")] uint colBotRight, [NativeName(NativeNameType.Param, "col_bot_left")] [NativeName(NativeNameType.Type, "ImU32")] uint colBotLeft)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, uint, uint, uint, uint, void>)vt[542])(self, pMin, pMax, colUprLeft, colUprRight, colBotRight, colBotLeft);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, uint, uint, uint, uint, void>)vt[542])((nint)self, pMin, pMax, colUprLeft, colUprRight, colBotRight, colBotLeft);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilledMultiColor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilledMultiColor([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col_upr_left")] [NativeName(NativeNameType.Type, "ImU32")] uint colUprLeft, [NativeName(NativeNameType.Param, "col_upr_right")] [NativeName(NativeNameType.Type, "ImU32")] uint colUprRight, [NativeName(NativeNameType.Param, "col_bot_right")] [NativeName(NativeNameType.Type, "ImU32")] uint colBotRight, [NativeName(NativeNameType.Param, "col_bot_left")] [NativeName(NativeNameType.Type, "ImU32")] uint colBotLeft)
		{
			AddRectFilledMultiColorNative(self, pMin, pMax, colUprLeft, colUprRight, colBotRight, colBotLeft);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddRectFilledMultiColor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddRectFilledMultiColor([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMin, [NativeName(NativeNameType.Param, "p_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pMax, [NativeName(NativeNameType.Param, "col_upr_left")] [NativeName(NativeNameType.Type, "ImU32")] uint colUprLeft, [NativeName(NativeNameType.Param, "col_upr_right")] [NativeName(NativeNameType.Type, "ImU32")] uint colUprRight, [NativeName(NativeNameType.Param, "col_bot_right")] [NativeName(NativeNameType.Type, "ImU32")] uint colBotRight, [NativeName(NativeNameType.Param, "col_bot_left")] [NativeName(NativeNameType.Type, "ImU32")] uint colBotLeft)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddRectFilledMultiColorNative((ImDrawList*)pself, pMin, pMax, colUprLeft, colUprRight, colBotRight, colBotLeft);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuad")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddQuadNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, Vector2, Vector2, uint, float, void>)vt[543])(self, p1, p2, p3, p4, col, thickness);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, Vector2, Vector2, uint, float, void>)vt[543])((nint)self, p1, p2, p3, p4, col, thickness);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuad")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddQuad([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddQuadNative(self, p1, p2, p3, p4, col, thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuad")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddQuad([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddQuadNative(self, p1, p2, p3, p4, col, (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuad")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddQuad([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddQuadNative((ImDrawList*)pself, p1, p2, p3, p4, col, thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuad")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddQuad([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddQuadNative((ImDrawList*)pself, p1, p2, p3, p4, col, (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuadFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddQuadFilledNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, Vector2, Vector2, uint, void>)vt[544])(self, p1, p2, p3, p4, col);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, Vector2, Vector2, uint, void>)vt[544])((nint)self, p1, p2, p3, p4, col);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuadFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddQuadFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddQuadFilledNative(self, p1, p2, p3, p4, col);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddQuadFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddQuadFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "p4")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p4, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddQuadFilledNative((ImDrawList*)pself, p1, p2, p3, p4, col);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangle")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddTriangleNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, Vector2, uint, float, void>)vt[545])(self, p1, p2, p3, col, thickness);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, Vector2, uint, float, void>)vt[545])((nint)self, p1, p2, p3, col, thickness);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddTriangle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddTriangleNative(self, p1, p2, p3, col, thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddTriangle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddTriangleNative(self, p1, p2, p3, col, (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddTriangle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTriangleNative((ImDrawList*)pself, p1, p2, p3, col, thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddTriangle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTriangleNative((ImDrawList*)pself, p1, p2, p3, col, (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddTriangleFilledNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, Vector2, uint, void>)vt[546])(self, p1, p2, p3, col);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, Vector2, uint, void>)vt[546])((nint)self, p1, p2, p3, col);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddTriangleFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddTriangleFilledNative(self, p1, p2, p3, col);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddTriangleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddTriangleFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p2, [NativeName(NativeNameType.Param, "p3")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 p3, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTriangleFilledNative((ImDrawList*)pself, p1, p2, p3, col);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddCircleNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, float, uint, int, float, void>)vt[547])(self, center, radius, col, numSegments, thickness);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, float, uint, int, float, void>)vt[547])((nint)self, center, radius, col, numSegments, thickness);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddCircleNative(self, center, radius, col, numSegments, thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddCircleNative(self, center, radius, col, numSegments, (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddCircleNative(self, center, radius, col, (int)(0), (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddCircleNative(self, center, radius, col, (int)(0), thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddCircleNative((ImDrawList*)pself, center, radius, col, numSegments, thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddCircleNative((ImDrawList*)pself, center, radius, col, numSegments, (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddCircleNative((ImDrawList*)pself, center, radius, col, (int)(0), (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircle([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddCircleNative((ImDrawList*)pself, center, radius, col, (int)(0), thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddCircleFilledNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, float, uint, int, void>)vt[548])(self, center, radius, col, numSegments);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, float, uint, int, void>)vt[548])((nint)self, center, radius, col, numSegments);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircleFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddCircleFilledNative(self, center, radius, col, numSegments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircleFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddCircleFilledNative(self, center, radius, col, (int)(0));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircleFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddCircleFilledNative((ImDrawList*)pself, center, radius, col, numSegments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddCircleFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddCircleFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddCircleFilledNative((ImDrawList*)pself, center, radius, col, (int)(0));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgon")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddNgonNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, float, uint, int, float, void>)vt[549])(self, center, radius, col, numSegments, thickness);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, float, uint, int, float, void>)vt[549])((nint)self, center, radius, col, numSegments, thickness);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddNgon([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddNgonNative(self, center, radius, col, numSegments, thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddNgon([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddNgonNative(self, center, radius, col, numSegments, (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddNgon([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddNgonNative((ImDrawList*)pself, center, radius, col, numSegments, thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddNgon([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddNgonNative((ImDrawList*)pself, center, radius, col, numSegments, (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgonFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddNgonFilledNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, float, uint, int, void>)vt[550])(self, center, radius, col, numSegments);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, float, uint, int, void>)vt[550])((nint)self, center, radius, col, numSegments);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgonFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddNgonFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddNgonFilledNative(self, center, radius, col, numSegments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddNgonFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddNgonFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddNgonFilledNative((ImDrawList*)pself, center, radius, col, numSegments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddEllipseNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, uint, float, int, float, void>)vt[551])(self, center, radius, col, rot, numSegments, thickness);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, uint, float, int, float, void>)vt[551])((nint)self, center, radius, col, rot, numSegments, thickness);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddEllipseNative(self, center, radius, col, rot, numSegments, thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddEllipseNative(self, center, radius, col, rot, numSegments, (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot)
		{
			AddEllipseNative(self, center, radius, col, rot, (int)(0), (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddEllipseNative(self, center, radius, col, (float)(0.0f), (int)(0), (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddEllipseNative(self, center, radius, col, (float)(0.0f), numSegments, (float)(1.0f));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddEllipseNative(self, center, radius, col, rot, (int)(0), thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			AddEllipseNative(self, center, radius, col, (float)(0.0f), numSegments, thickness);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseNative((ImDrawList*)pself, center, radius, col, rot, numSegments, thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseNative((ImDrawList*)pself, center, radius, col, rot, numSegments, (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseNative((ImDrawList*)pself, center, radius, col, rot, (int)(0), (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseNative((ImDrawList*)pself, center, radius, col, (float)(0.0f), (int)(0), (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseNative((ImDrawList*)pself, center, radius, col, (float)(0.0f), numSegments, (float)(1.0f));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseNative((ImDrawList*)pself, center, radius, col, rot, (int)(0), thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipse")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipse([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments, [NativeName(NativeNameType.Param, "thickness")] [NativeName(NativeNameType.Type, "float")] float thickness)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseNative((ImDrawList*)pself, center, radius, col, (float)(0.0f), numSegments, thickness);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddEllipseFilledNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, Vector2, uint, float, int, void>)vt[552])(self, center, radius, col, rot, numSegments);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, Vector2, uint, float, int, void>)vt[552])((nint)self, center, radius, col, rot, numSegments);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddEllipseFilledNative(self, center, radius, col, rot, numSegments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot)
		{
			AddEllipseFilledNative(self, center, radius, col, rot, (int)(0));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			AddEllipseFilledNative(self, center, radius, col, (float)(0.0f), (int)(0));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			AddEllipseFilledNative(self, center, radius, col, (float)(0.0f), numSegments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseFilledNative((ImDrawList*)pself, center, radius, col, rot, numSegments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "rot")] [NativeName(NativeNameType.Type, "float")] float rot)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseFilledNative((ImDrawList*)pself, center, radius, col, rot, (int)(0));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseFilledNative((ImDrawList*)pself, center, radius, col, (float)(0.0f), (int)(0));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddEllipseFilled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddEllipseFilled([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 radius, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "num_segments")] [NativeName(NativeNameType.Type, "int")] int numSegments)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddEllipseFilledNative((ImDrawList*)pself, center, radius, col, (float)(0.0f), numSegments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddTextNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, Vector2, uint, byte*, byte*, void>)vt[553])(self, pos, col, textBegin, textEnd);
			#else
			((delegate* unmanaged[Cdecl]<nint, Vector2, uint, nint, nint, void>)vt[553])((nint)self, pos, col, (nint)textBegin, (nint)textEnd);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			AddTextNative(self, pos, col, textBegin, textEnd);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin)
		{
			AddTextNative(self, pos, col, textBegin, (byte*)(default));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, pos, col, textBegin, textEnd);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, pos, col, textBegin, (byte*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, pos, col, (byte*)ptextBegin, textEnd);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, pos, col, (byte*)ptextBegin, (byte*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, pos, col, (byte*)ptextBegin, textEnd);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, pos, col, (byte*)ptextBegin, (byte*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, pos, col, pStr0, textEnd);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, pos, col, pStr0, (byte*)(default));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, pos, col, (byte*)ptextBegin, textEnd);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, pos, col, (byte*)ptextBegin, (byte*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, pos, col, (byte*)ptextBegin, textEnd);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, pos, col, (byte*)ptextBegin, (byte*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, pos, col, pStr0, textEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, pos, col, pStr0, (byte*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd)
		{
			fixed (byte* ptextEnd = &textEnd)
			{
				AddTextNative(self, pos, col, textBegin, (byte*)ptextEnd);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd)
		{
			fixed (byte* ptextEnd = textEnd)
			{
				AddTextNative(self, pos, col, textBegin, (byte*)ptextEnd);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textEnd != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, pos, col, textBegin, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = &textEnd)
				{
					AddTextNative((ImDrawList*)pself, pos, col, textBegin, (byte*)ptextEnd);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = textEnd)
				{
					AddTextNative((ImDrawList*)pself, pos, col, textBegin, (byte*)ptextEnd);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textEnd != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textEnd);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, pos, col, textBegin, pStr0);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				fixed (byte* ptextEnd = &textEnd)
				{
					AddTextNative(self, pos, col, (byte*)ptextBegin, (byte*)ptextEnd);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				fixed (byte* ptextEnd = textEnd)
				{
					AddTextNative(self, pos, col, (byte*)ptextBegin, (byte*)ptextEnd);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (textEnd != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(textEnd);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(textEnd, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			AddTextNative(self, pos, col, pStr0, pStr1);
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					fixed (byte* ptextEnd = &textEnd)
					{
						AddTextNative((ImDrawList*)pself, pos, col, (byte*)ptextBegin, (byte*)ptextEnd);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					fixed (byte* ptextEnd = textEnd)
					{
						AddTextNative((ImDrawList*)pself, pos, col, (byte*)ptextBegin, (byte*)ptextEnd);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_Vec2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				byte* pStr1 = null;
				int pStrSize1 = 0;
				if (textEnd != null)
				{
					pStrSize1 = Utils.GetByteCountUTF8(textEnd);
					if (pStrSize1 >= Utils.MaxStackallocSize)
					{
						pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
					}
					else
					{
						byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
						pStr1 = pStrStack1;
					}
					int pStrOffset1 = Utils.EncodeStringUTF8(textEnd, pStr1, pStrSize1);
					pStr1[pStrOffset1] = 0;
				}
				AddTextNative((ImDrawList*)pself, pos, col, pStr0, pStr1);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr1);
				}
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void AddTextNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawList*, ImFont*, float, Vector2, uint, byte*, byte*, float, Vector4*, void>)vt[554])(self, font, fontSize, pos, col, textBegin, textEnd, wrapWidth, cpuFineClipRect);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, float, Vector2, uint, nint, nint, float, nint, void>)vt[554])((nint)self, (nint)font, fontSize, pos, col, (nint)textBegin, (nint)textEnd, wrapWidth, (nint)cpuFineClipRect);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, textEnd, wrapWidth, cpuFineClipRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, textEnd, wrapWidth, (Vector4*)(default));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), (Vector4*)(default));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), cpuFineClipRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, textEnd, wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, textEnd, wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, textEnd, (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, textBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = &textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextBegin = textBegin)
			{
				AddTextNative(self, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, textEnd, wrapWidth, cpuFineClipRect);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, textEnd, wrapWidth, (Vector4*)(default));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), (Vector4*)(default));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), (Vector4*)(default));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, (Vector4*)(default));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), cpuFineClipRect);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), cpuFineClipRect);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textBegin != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textBegin);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, cpuFineClipRect);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, textEnd, wrapWidth, cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, textEnd, wrapWidth, (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = &textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				fixed (byte* ptextBegin = textBegin)
				{
					AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, wrapWidth, cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, wrapWidth, (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImFont* pfont = &font)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textBegin != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textBegin);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative(self, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ref byte textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = &textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, wrapWidth, (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, (Vector4*)(default));
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, textEnd, (float)(0.0f), cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), (float)(0.0f), cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					fixed (byte* ptextBegin = textBegin)
					{
						AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, (byte*)ptextBegin, (byte*)(default), wrapWidth, cpuFineClipRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, wrapWidth, cpuFineClipRect);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, wrapWidth, (Vector4*)(default));
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), (Vector4*)(default));
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), (Vector4*)(default));
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, (Vector4*)(default));
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] byte* textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, textEnd, (float)(0.0f), cpuFineClipRect);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), (float)(0.0f), cpuFineClipRect);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ref ImFont font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] string textBegin, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (ImFont* pfont = &font)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (textBegin != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(textBegin);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(textBegin, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					AddTextNative((ImDrawList*)pself, (ImFont*)pfont, fontSize, pos, col, pStr0, (byte*)(default), wrapWidth, cpuFineClipRect);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextEnd = &textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (byte* ptextEnd = &textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd)
		{
			fixed (byte* ptextEnd = &textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextEnd = &textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextEnd = textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (byte* ptextEnd = textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd)
		{
			fixed (byte* ptextEnd = textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), (Vector4*)(default));
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (byte* ptextEnd = textEnd)
			{
				AddTextNative(self, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), cpuFineClipRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textEnd != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, textBegin, pStr0, wrapWidth, cpuFineClipRect);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textEnd != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, textBegin, pStr0, wrapWidth, (Vector4*)(default));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textEnd != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, textBegin, pStr0, (float)(0.0f), (Vector4*)(default));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ImDrawList* self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (textEnd != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(textEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			AddTextNative(self, font, fontSize, pos, col, textBegin, pStr0, (float)(0.0f), cpuFineClipRect);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = &textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = &textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = &textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = &textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, wrapWidth, (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), (Vector4*)(default));
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				fixed (byte* ptextEnd = textEnd)
				{
					AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, (byte*)ptextEnd, (float)(0.0f), cpuFineClipRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textEnd != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textEnd);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, pStr0, wrapWidth, cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd, [NativeName(NativeNameType.Param, "wrap_width")] [NativeName(NativeNameType.Type, "float")] float wrapWidth)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textEnd != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textEnd);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, pStr0, wrapWidth, (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textEnd != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textEnd);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, pStr0, (float)(0.0f), (Vector4*)(default));
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawList_AddText_FontPtr")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void AddText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawList*")] ref ImDrawList self, [NativeName(NativeNameType.Param, "font")] [NativeName(NativeNameType.Type, "const ImFont*")] ImFont* font, [NativeName(NativeNameType.Param, "font_size")] [NativeName(NativeNameType.Type, "float")] float fontSize, [NativeName(NativeNameType.Param, "pos")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 pos, [NativeName(NativeNameType.Param, "col")] [NativeName(NativeNameType.Type, "ImU32")] uint col, [NativeName(NativeNameType.Param, "text_begin")] [NativeName(NativeNameType.Type, "const char*")] byte* textBegin, [NativeName(NativeNameType.Param, "text_end")] [NativeName(NativeNameType.Type, "const char*")] string textEnd, [NativeName(NativeNameType.Param, "cpu_fine_clip_rect")] [NativeName(NativeNameType.Type, "const ImVec4*")] Vector4* cpuFineClipRect)
		{
			fixed (ImDrawList* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (textEnd != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(textEnd);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(textEnd, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				AddTextNative((ImDrawList*)pself, font, fontSize, pos, col, textBegin, pStr0, (float)(0.0f), cpuFineClipRect);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}
	}
}
