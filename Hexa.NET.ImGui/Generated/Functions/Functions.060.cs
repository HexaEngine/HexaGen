// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	public unsafe partial class ImGui
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_ImDrawListSharedData")]
		[return: NativeName(NativeNameType.Type, "ImDrawListSharedData*")]
		internal static ImDrawListSharedData* ImDrawListSharedDataImDrawListSharedDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImDrawListSharedData*>)vt[818])();
			#else
			return (ImDrawListSharedData*)((delegate* unmanaged[Cdecl]<nint>)vt[818])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_ImDrawListSharedData")]
		[return: NativeName(NativeNameType.Type, "ImDrawListSharedData*")]
		public static ImDrawListSharedData* ImDrawListSharedDataImDrawListSharedData()
		{
			ImDrawListSharedData* ret = ImDrawListSharedDataImDrawListSharedDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImDrawListSharedDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawListSharedData*")] ImDrawListSharedData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawListSharedData*, void>)vt[819])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[819])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImDrawListSharedDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawListSharedData*")] ImDrawListSharedData* self)
		{
			ImDrawListSharedDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImDrawListSharedDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawListSharedData*")] ref ImDrawListSharedData self)
		{
			fixed (ImDrawListSharedData* pself = &self)
			{
				ImDrawListSharedDataDestroyNative((ImDrawListSharedData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_SetCircleTessellationMaxError")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImDrawListSharedDataSetCircleTessellationMaxErrorNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawListSharedData*")] ImDrawListSharedData* self, [NativeName(NativeNameType.Param, "max_error")] [NativeName(NativeNameType.Type, "float")] float maxError)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawListSharedData*, float, void>)vt[820])(self, maxError);
			#else
			((delegate* unmanaged[Cdecl]<nint, float, void>)vt[820])((nint)self, maxError);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_SetCircleTessellationMaxError")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImDrawListSharedDataSetCircleTessellationMaxError([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawListSharedData*")] ImDrawListSharedData* self, [NativeName(NativeNameType.Param, "max_error")] [NativeName(NativeNameType.Type, "float")] float maxError)
		{
			ImDrawListSharedDataSetCircleTessellationMaxErrorNative(self, maxError);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawListSharedData_SetCircleTessellationMaxError")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImDrawListSharedDataSetCircleTessellationMaxError([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawListSharedData*")] ref ImDrawListSharedData self, [NativeName(NativeNameType.Param, "max_error")] [NativeName(NativeNameType.Type, "float")] float maxError)
		{
			fixed (ImDrawListSharedData* pself = &self)
			{
				ImDrawListSharedDataSetCircleTessellationMaxErrorNative((ImDrawListSharedData*)pself, maxError);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawDataBuilder_ImDrawDataBuilder")]
		[return: NativeName(NativeNameType.Type, "ImDrawDataBuilder*")]
		internal static ImDrawDataBuilder* ImDrawDataBuilderImDrawDataBuilderNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImDrawDataBuilder*>)vt[821])();
			#else
			return (ImDrawDataBuilder*)((delegate* unmanaged[Cdecl]<nint>)vt[821])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawDataBuilder_ImDrawDataBuilder")]
		[return: NativeName(NativeNameType.Type, "ImDrawDataBuilder*")]
		public static ImDrawDataBuilder* ImDrawDataBuilderImDrawDataBuilder()
		{
			ImDrawDataBuilder* ret = ImDrawDataBuilderImDrawDataBuilderNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawDataBuilder_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImDrawDataBuilderDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawDataBuilder*")] ImDrawDataBuilder* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImDrawDataBuilder*, void>)vt[822])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[822])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawDataBuilder_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImDrawDataBuilderDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawDataBuilder*")] ImDrawDataBuilder* self)
		{
			ImDrawDataBuilderDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImDrawDataBuilder_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImDrawDataBuilderDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImDrawDataBuilder*")] ref ImDrawDataBuilder self)
		{
			fixed (ImDrawDataBuilder* pself = &self)
			{
				ImDrawDataBuilderDestroyNative((ImDrawDataBuilder*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDataVarInfo_GetVarPtr")]
		[return: NativeName(NativeNameType.Type, "void*")]
		internal static void* ImGuiDataVarInfoGetVarPtrNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDataVarInfo*")] ImGuiDataVarInfo* self, [NativeName(NativeNameType.Param, "parent")] [NativeName(NativeNameType.Type, "void*")] void* parent)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDataVarInfo*, void*, void*>)vt[823])(self, parent);
			#else
			return (void*)((delegate* unmanaged[Cdecl]<nint, nint, nint>)vt[823])((nint)self, (nint)parent);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDataVarInfo_GetVarPtr")]
		[return: NativeName(NativeNameType.Type, "void*")]
		public static void* ImGuiDataVarInfoGetVarPtr([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDataVarInfo*")] ImGuiDataVarInfo* self, [NativeName(NativeNameType.Param, "parent")] [NativeName(NativeNameType.Type, "void*")] void* parent)
		{
			void* ret = ImGuiDataVarInfoGetVarPtrNative(self, parent);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDataVarInfo_GetVarPtr")]
		[return: NativeName(NativeNameType.Type, "void*")]
		public static void* ImGuiDataVarInfoGetVarPtr([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDataVarInfo*")] ref ImGuiDataVarInfo self, [NativeName(NativeNameType.Param, "parent")] [NativeName(NativeNameType.Type, "void*")] void* parent)
		{
			fixed (ImGuiDataVarInfo* pself = &self)
			{
				void* ret = ImGuiDataVarInfoGetVarPtrNative((ImGuiDataVarInfo*)pself, parent);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_ImGuiStyleMod_Int")]
		[return: NativeName(NativeNameType.Type, "ImGuiStyleMod*")]
		internal static ImGuiStyleMod* ImGuiStyleModImGuiStyleModIntNative([NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "ImGuiStyleVar")] ImGuiStyleVar idx, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "int")] int v)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiStyleVar, int, ImGuiStyleMod*>)vt[824])(idx, v);
			#else
			return (ImGuiStyleMod*)((delegate* unmanaged[Cdecl]<ImGuiStyleVar, int, nint>)vt[824])(idx, v);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_ImGuiStyleMod_Int")]
		[return: NativeName(NativeNameType.Type, "ImGuiStyleMod*")]
		public static ImGuiStyleMod* ImGuiStyleModImGuiStyleModInt([NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "ImGuiStyleVar")] ImGuiStyleVar idx, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "int")] int v)
		{
			ImGuiStyleMod* ret = ImGuiStyleModImGuiStyleModIntNative(idx, v);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiStyleModDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStyleMod*")] ImGuiStyleMod* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiStyleMod*, void>)vt[825])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[825])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStyleModDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStyleMod*")] ImGuiStyleMod* self)
		{
			ImGuiStyleModDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStyleModDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStyleMod*")] ref ImGuiStyleMod self)
		{
			fixed (ImGuiStyleMod* pself = &self)
			{
				ImGuiStyleModDestroyNative((ImGuiStyleMod*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_ImGuiStyleMod_Float")]
		[return: NativeName(NativeNameType.Type, "ImGuiStyleMod*")]
		internal static ImGuiStyleMod* ImGuiStyleModImGuiStyleModFloatNative([NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "ImGuiStyleVar")] ImGuiStyleVar idx, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "float")] float v)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiStyleVar, float, ImGuiStyleMod*>)vt[826])(idx, v);
			#else
			return (ImGuiStyleMod*)((delegate* unmanaged[Cdecl]<ImGuiStyleVar, float, nint>)vt[826])(idx, v);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_ImGuiStyleMod_Float")]
		[return: NativeName(NativeNameType.Type, "ImGuiStyleMod*")]
		public static ImGuiStyleMod* ImGuiStyleModImGuiStyleModFloat([NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "ImGuiStyleVar")] ImGuiStyleVar idx, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "float")] float v)
		{
			ImGuiStyleMod* ret = ImGuiStyleModImGuiStyleModFloatNative(idx, v);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_ImGuiStyleMod_Vec2")]
		[return: NativeName(NativeNameType.Type, "ImGuiStyleMod*")]
		internal static ImGuiStyleMod* ImGuiStyleModImGuiStyleModVec2Native([NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "ImGuiStyleVar")] ImGuiStyleVar idx, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "ImVec2")] Vector2 v)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiStyleVar, Vector2, ImGuiStyleMod*>)vt[827])(idx, v);
			#else
			return (ImGuiStyleMod*)((delegate* unmanaged[Cdecl]<ImGuiStyleVar, Vector2, nint>)vt[827])(idx, v);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyleMod_ImGuiStyleMod_Vec2")]
		[return: NativeName(NativeNameType.Type, "ImGuiStyleMod*")]
		public static ImGuiStyleMod* ImGuiStyleModImGuiStyleModVec2([NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "ImGuiStyleVar")] ImGuiStyleVar idx, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "ImVec2")] Vector2 v)
		{
			ImGuiStyleMod* ret = ImGuiStyleModImGuiStyleModVec2Native(idx, v);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiComboPreviewData_ImGuiComboPreviewData")]
		[return: NativeName(NativeNameType.Type, "ImGuiComboPreviewData*")]
		internal static ImGuiComboPreviewData* ImGuiComboPreviewDataImGuiComboPreviewDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiComboPreviewData*>)vt[828])();
			#else
			return (ImGuiComboPreviewData*)((delegate* unmanaged[Cdecl]<nint>)vt[828])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiComboPreviewData_ImGuiComboPreviewData")]
		[return: NativeName(NativeNameType.Type, "ImGuiComboPreviewData*")]
		public static ImGuiComboPreviewData* ImGuiComboPreviewDataImGuiComboPreviewData()
		{
			ImGuiComboPreviewData* ret = ImGuiComboPreviewDataImGuiComboPreviewDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiComboPreviewData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiComboPreviewDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiComboPreviewData*")] ImGuiComboPreviewData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiComboPreviewData*, void>)vt[829])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[829])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiComboPreviewData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiComboPreviewDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiComboPreviewData*")] ImGuiComboPreviewData* self)
		{
			ImGuiComboPreviewDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiComboPreviewData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiComboPreviewDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiComboPreviewData*")] ref ImGuiComboPreviewData self)
		{
			fixed (ImGuiComboPreviewData* pself = &self)
			{
				ImGuiComboPreviewDataDestroyNative((ImGuiComboPreviewData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_ImGuiMenuColumns")]
		[return: NativeName(NativeNameType.Type, "ImGuiMenuColumns*")]
		internal static ImGuiMenuColumns* ImGuiMenuColumnsImGuiMenuColumnsNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiMenuColumns*>)vt[830])();
			#else
			return (ImGuiMenuColumns*)((delegate* unmanaged[Cdecl]<nint>)vt[830])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_ImGuiMenuColumns")]
		[return: NativeName(NativeNameType.Type, "ImGuiMenuColumns*")]
		public static ImGuiMenuColumns* ImGuiMenuColumnsImGuiMenuColumns()
		{
			ImGuiMenuColumns* ret = ImGuiMenuColumnsImGuiMenuColumnsNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiMenuColumnsDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiMenuColumns*, void>)vt[831])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[831])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMenuColumnsDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self)
		{
			ImGuiMenuColumnsDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMenuColumnsDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ref ImGuiMenuColumns self)
		{
			fixed (ImGuiMenuColumns* pself = &self)
			{
				ImGuiMenuColumnsDestroyNative((ImGuiMenuColumns*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_Update")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiMenuColumnsUpdateNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self, [NativeName(NativeNameType.Param, "spacing")] [NativeName(NativeNameType.Type, "float")] float spacing, [NativeName(NativeNameType.Param, "window_reappearing")] [NativeName(NativeNameType.Type, "bool")] byte windowReappearing)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiMenuColumns*, float, byte, void>)vt[832])(self, spacing, windowReappearing);
			#else
			((delegate* unmanaged[Cdecl]<nint, float, byte, void>)vt[832])((nint)self, spacing, windowReappearing);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_Update")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMenuColumnsUpdate([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self, [NativeName(NativeNameType.Param, "spacing")] [NativeName(NativeNameType.Type, "float")] float spacing, [NativeName(NativeNameType.Param, "window_reappearing")] [NativeName(NativeNameType.Type, "bool")] bool windowReappearing)
		{
			ImGuiMenuColumnsUpdateNative(self, spacing, windowReappearing ? (byte)1 : (byte)0);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_Update")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMenuColumnsUpdate([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ref ImGuiMenuColumns self, [NativeName(NativeNameType.Param, "spacing")] [NativeName(NativeNameType.Type, "float")] float spacing, [NativeName(NativeNameType.Param, "window_reappearing")] [NativeName(NativeNameType.Type, "bool")] bool windowReappearing)
		{
			fixed (ImGuiMenuColumns* pself = &self)
			{
				ImGuiMenuColumnsUpdateNative((ImGuiMenuColumns*)pself, spacing, windowReappearing ? (byte)1 : (byte)0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_DeclColumns")]
		[return: NativeName(NativeNameType.Type, "float")]
		internal static float ImGuiMenuColumnsDeclColumnsNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self, [NativeName(NativeNameType.Param, "w_icon")] [NativeName(NativeNameType.Type, "float")] float wIcon, [NativeName(NativeNameType.Param, "w_label")] [NativeName(NativeNameType.Type, "float")] float wLabel, [NativeName(NativeNameType.Param, "w_shortcut")] [NativeName(NativeNameType.Type, "float")] float wShortcut, [NativeName(NativeNameType.Param, "w_mark")] [NativeName(NativeNameType.Type, "float")] float wMark)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiMenuColumns*, float, float, float, float, float>)vt[833])(self, wIcon, wLabel, wShortcut, wMark);
			#else
			return (float)((delegate* unmanaged[Cdecl]<nint, float, float, float, float, float>)vt[833])((nint)self, wIcon, wLabel, wShortcut, wMark);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_DeclColumns")]
		[return: NativeName(NativeNameType.Type, "float")]
		public static float ImGuiMenuColumnsDeclColumns([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self, [NativeName(NativeNameType.Param, "w_icon")] [NativeName(NativeNameType.Type, "float")] float wIcon, [NativeName(NativeNameType.Param, "w_label")] [NativeName(NativeNameType.Type, "float")] float wLabel, [NativeName(NativeNameType.Param, "w_shortcut")] [NativeName(NativeNameType.Type, "float")] float wShortcut, [NativeName(NativeNameType.Param, "w_mark")] [NativeName(NativeNameType.Type, "float")] float wMark)
		{
			float ret = ImGuiMenuColumnsDeclColumnsNative(self, wIcon, wLabel, wShortcut, wMark);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_DeclColumns")]
		[return: NativeName(NativeNameType.Type, "float")]
		public static float ImGuiMenuColumnsDeclColumns([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ref ImGuiMenuColumns self, [NativeName(NativeNameType.Param, "w_icon")] [NativeName(NativeNameType.Type, "float")] float wIcon, [NativeName(NativeNameType.Param, "w_label")] [NativeName(NativeNameType.Type, "float")] float wLabel, [NativeName(NativeNameType.Param, "w_shortcut")] [NativeName(NativeNameType.Type, "float")] float wShortcut, [NativeName(NativeNameType.Param, "w_mark")] [NativeName(NativeNameType.Type, "float")] float wMark)
		{
			fixed (ImGuiMenuColumns* pself = &self)
			{
				float ret = ImGuiMenuColumnsDeclColumnsNative((ImGuiMenuColumns*)pself, wIcon, wLabel, wShortcut, wMark);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_CalcNextTotalWidth")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiMenuColumnsCalcNextTotalWidthNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self, [NativeName(NativeNameType.Param, "update_offsets")] [NativeName(NativeNameType.Type, "bool")] byte updateOffsets)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiMenuColumns*, byte, void>)vt[834])(self, updateOffsets);
			#else
			((delegate* unmanaged[Cdecl]<nint, byte, void>)vt[834])((nint)self, updateOffsets);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_CalcNextTotalWidth")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMenuColumnsCalcNextTotalWidth([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ImGuiMenuColumns* self, [NativeName(NativeNameType.Param, "update_offsets")] [NativeName(NativeNameType.Type, "bool")] bool updateOffsets)
		{
			ImGuiMenuColumnsCalcNextTotalWidthNative(self, updateOffsets ? (byte)1 : (byte)0);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMenuColumns_CalcNextTotalWidth")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMenuColumnsCalcNextTotalWidth([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMenuColumns*")] ref ImGuiMenuColumns self, [NativeName(NativeNameType.Param, "update_offsets")] [NativeName(NativeNameType.Type, "bool")] bool updateOffsets)
		{
			fixed (ImGuiMenuColumns* pself = &self)
			{
				ImGuiMenuColumnsCalcNextTotalWidthNative((ImGuiMenuColumns*)pself, updateOffsets ? (byte)1 : (byte)0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_ImGuiInputTextDeactivatedState")]
		[return: NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")]
		internal static ImGuiInputTextDeactivatedState* ImGuiInputTextDeactivatedStateImGuiInputTextDeactivatedStateNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextDeactivatedState*>)vt[835])();
			#else
			return (ImGuiInputTextDeactivatedState*)((delegate* unmanaged[Cdecl]<nint>)vt[835])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_ImGuiInputTextDeactivatedState")]
		[return: NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")]
		public static ImGuiInputTextDeactivatedState* ImGuiInputTextDeactivatedStateImGuiInputTextDeactivatedState()
		{
			ImGuiInputTextDeactivatedState* ret = ImGuiInputTextDeactivatedStateImGuiInputTextDeactivatedStateNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextDeactivatedStateDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")] ImGuiInputTextDeactivatedState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextDeactivatedState*, void>)vt[836])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[836])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextDeactivatedStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")] ImGuiInputTextDeactivatedState* self)
		{
			ImGuiInputTextDeactivatedStateDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextDeactivatedStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")] ref ImGuiInputTextDeactivatedState self)
		{
			fixed (ImGuiInputTextDeactivatedState* pself = &self)
			{
				ImGuiInputTextDeactivatedStateDestroyNative((ImGuiInputTextDeactivatedState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_ClearFreeMemory")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextDeactivatedStateClearFreeMemoryNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")] ImGuiInputTextDeactivatedState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextDeactivatedState*, void>)vt[837])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[837])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_ClearFreeMemory")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextDeactivatedStateClearFreeMemory([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")] ImGuiInputTextDeactivatedState* self)
		{
			ImGuiInputTextDeactivatedStateClearFreeMemoryNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextDeactivatedState_ClearFreeMemory")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextDeactivatedStateClearFreeMemory([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextDeactivatedState*")] ref ImGuiInputTextDeactivatedState self)
		{
			fixed (ImGuiInputTextDeactivatedState* pself = &self)
			{
				ImGuiInputTextDeactivatedStateClearFreeMemoryNative((ImGuiInputTextDeactivatedState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ImGuiInputTextState")]
		[return: NativeName(NativeNameType.Type, "ImGuiInputTextState*")]
		internal static ImGuiInputTextState* ImGuiInputTextStateImGuiInputTextStateNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextState*>)vt[838])();
			#else
			return (ImGuiInputTextState*)((delegate* unmanaged[Cdecl]<nint>)vt[838])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ImGuiInputTextState")]
		[return: NativeName(NativeNameType.Type, "ImGuiInputTextState*")]
		public static ImGuiInputTextState* ImGuiInputTextStateImGuiInputTextState()
		{
			ImGuiInputTextState* ret = ImGuiInputTextStateImGuiInputTextStateNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[839])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[839])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateDestroyNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearText")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateClearTextNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[840])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[840])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearText")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateClearText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateClearTextNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearText")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateClearText([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateClearTextNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearFreeMemory")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateClearFreeMemoryNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[841])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[841])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearFreeMemory")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateClearFreeMemory([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateClearFreeMemoryNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearFreeMemory")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateClearFreeMemory([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateClearFreeMemoryNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetUndoAvailCount")]
		[return: NativeName(NativeNameType.Type, "int")]
		internal static int ImGuiInputTextStateGetUndoAvailCountNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, int>)vt[842])(self);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, int>)vt[842])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetUndoAvailCount")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetUndoAvailCount([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			int ret = ImGuiInputTextStateGetUndoAvailCountNative(self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetUndoAvailCount")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetUndoAvailCount([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				int ret = ImGuiInputTextStateGetUndoAvailCountNative((ImGuiInputTextState*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetRedoAvailCount")]
		[return: NativeName(NativeNameType.Type, "int")]
		internal static int ImGuiInputTextStateGetRedoAvailCountNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, int>)vt[843])(self);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, int>)vt[843])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetRedoAvailCount")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetRedoAvailCount([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			int ret = ImGuiInputTextStateGetRedoAvailCountNative(self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetRedoAvailCount")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetRedoAvailCount([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				int ret = ImGuiInputTextStateGetRedoAvailCountNative((ImGuiInputTextState*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_OnKeyPressed")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateOnKeyPressedNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self, [NativeName(NativeNameType.Param, "key")] [NativeName(NativeNameType.Type, "int")] int key)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, int, void>)vt[844])(self, key);
			#else
			((delegate* unmanaged[Cdecl]<nint, int, void>)vt[844])((nint)self, key);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_OnKeyPressed")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateOnKeyPressed([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self, [NativeName(NativeNameType.Param, "key")] [NativeName(NativeNameType.Type, "int")] int key)
		{
			ImGuiInputTextStateOnKeyPressedNative(self, key);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_OnKeyPressed")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateOnKeyPressed([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self, [NativeName(NativeNameType.Param, "key")] [NativeName(NativeNameType.Type, "int")] int key)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateOnKeyPressedNative((ImGuiInputTextState*)pself, key);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_CursorAnimReset")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateCursorAnimResetNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[845])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[845])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_CursorAnimReset")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateCursorAnimReset([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateCursorAnimResetNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_CursorAnimReset")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateCursorAnimReset([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateCursorAnimResetNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_CursorClamp")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateCursorClampNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[846])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[846])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_CursorClamp")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateCursorClamp([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateCursorClampNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_CursorClamp")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateCursorClamp([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateCursorClampNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_HasSelection")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiInputTextStateHasSelectionNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, byte>)vt[847])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[847])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_HasSelection")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiInputTextStateHasSelection([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			byte ret = ImGuiInputTextStateHasSelectionNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_HasSelection")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiInputTextStateHasSelection([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				byte ret = ImGuiInputTextStateHasSelectionNative((ImGuiInputTextState*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearSelection")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateClearSelectionNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[848])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[848])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearSelection")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateClearSelection([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateClearSelectionNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ClearSelection")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateClearSelection([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateClearSelectionNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetCursorPos")]
		[return: NativeName(NativeNameType.Type, "int")]
		internal static int ImGuiInputTextStateGetCursorPosNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, int>)vt[849])(self);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, int>)vt[849])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetCursorPos")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetCursorPos([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			int ret = ImGuiInputTextStateGetCursorPosNative(self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetCursorPos")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetCursorPos([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				int ret = ImGuiInputTextStateGetCursorPosNative((ImGuiInputTextState*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetSelectionStart")]
		[return: NativeName(NativeNameType.Type, "int")]
		internal static int ImGuiInputTextStateGetSelectionStartNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, int>)vt[850])(self);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, int>)vt[850])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetSelectionStart")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetSelectionStart([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			int ret = ImGuiInputTextStateGetSelectionStartNative(self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetSelectionStart")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetSelectionStart([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				int ret = ImGuiInputTextStateGetSelectionStartNative((ImGuiInputTextState*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetSelectionEnd")]
		[return: NativeName(NativeNameType.Type, "int")]
		internal static int ImGuiInputTextStateGetSelectionEndNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, int>)vt[851])(self);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, int>)vt[851])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetSelectionEnd")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetSelectionEnd([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			int ret = ImGuiInputTextStateGetSelectionEndNative(self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_GetSelectionEnd")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int ImGuiInputTextStateGetSelectionEnd([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				int ret = ImGuiInputTextStateGetSelectionEndNative((ImGuiInputTextState*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_SelectAll")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateSelectAllNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[852])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[852])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_SelectAll")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateSelectAll([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateSelectAllNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_SelectAll")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateSelectAll([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateSelectAllNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndSelectAll")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateReloadUserBufAndSelectAllNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[853])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[853])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndSelectAll")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateReloadUserBufAndSelectAll([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateReloadUserBufAndSelectAllNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndSelectAll")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateReloadUserBufAndSelectAll([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateReloadUserBufAndSelectAllNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndKeepSelection")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateReloadUserBufAndKeepSelectionNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[854])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[854])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndKeepSelection")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateReloadUserBufAndKeepSelection([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateReloadUserBufAndKeepSelectionNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndKeepSelection")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateReloadUserBufAndKeepSelection([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateReloadUserBufAndKeepSelectionNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndMoveToEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputTextStateReloadUserBufAndMoveToEndNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputTextState*, void>)vt[855])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[855])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndMoveToEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateReloadUserBufAndMoveToEnd([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ImGuiInputTextState* self)
		{
			ImGuiInputTextStateReloadUserBufAndMoveToEndNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputTextState_ReloadUserBufAndMoveToEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputTextStateReloadUserBufAndMoveToEnd([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputTextState*")] ref ImGuiInputTextState self)
		{
			fixed (ImGuiInputTextState* pself = &self)
			{
				ImGuiInputTextStateReloadUserBufAndMoveToEndNative((ImGuiInputTextState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_ImGuiNextWindowData")]
		[return: NativeName(NativeNameType.Type, "ImGuiNextWindowData*")]
		internal static ImGuiNextWindowData* ImGuiNextWindowDataImGuiNextWindowDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiNextWindowData*>)vt[856])();
			#else
			return (ImGuiNextWindowData*)((delegate* unmanaged[Cdecl]<nint>)vt[856])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_ImGuiNextWindowData")]
		[return: NativeName(NativeNameType.Type, "ImGuiNextWindowData*")]
		public static ImGuiNextWindowData* ImGuiNextWindowDataImGuiNextWindowData()
		{
			ImGuiNextWindowData* ret = ImGuiNextWindowDataImGuiNextWindowDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiNextWindowDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextWindowData*")] ImGuiNextWindowData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiNextWindowData*, void>)vt[857])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[857])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextWindowDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextWindowData*")] ImGuiNextWindowData* self)
		{
			ImGuiNextWindowDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextWindowDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextWindowData*")] ref ImGuiNextWindowData self)
		{
			fixed (ImGuiNextWindowData* pself = &self)
			{
				ImGuiNextWindowDataDestroyNative((ImGuiNextWindowData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_ClearFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiNextWindowDataClearFlagsNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextWindowData*")] ImGuiNextWindowData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiNextWindowData*, void>)vt[858])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[858])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_ClearFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextWindowDataClearFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextWindowData*")] ImGuiNextWindowData* self)
		{
			ImGuiNextWindowDataClearFlagsNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextWindowData_ClearFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextWindowDataClearFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextWindowData*")] ref ImGuiNextWindowData self)
		{
			fixed (ImGuiNextWindowData* pself = &self)
			{
				ImGuiNextWindowDataClearFlagsNative((ImGuiNextWindowData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_ImGuiNextItemData")]
		[return: NativeName(NativeNameType.Type, "ImGuiNextItemData*")]
		internal static ImGuiNextItemData* ImGuiNextItemDataImGuiNextItemDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiNextItemData*>)vt[859])();
			#else
			return (ImGuiNextItemData*)((delegate* unmanaged[Cdecl]<nint>)vt[859])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_ImGuiNextItemData")]
		[return: NativeName(NativeNameType.Type, "ImGuiNextItemData*")]
		public static ImGuiNextItemData* ImGuiNextItemDataImGuiNextItemData()
		{
			ImGuiNextItemData* ret = ImGuiNextItemDataImGuiNextItemDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiNextItemDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextItemData*")] ImGuiNextItemData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiNextItemData*, void>)vt[860])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[860])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextItemDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextItemData*")] ImGuiNextItemData* self)
		{
			ImGuiNextItemDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextItemDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextItemData*")] ref ImGuiNextItemData self)
		{
			fixed (ImGuiNextItemData* pself = &self)
			{
				ImGuiNextItemDataDestroyNative((ImGuiNextItemData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_ClearFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiNextItemDataClearFlagsNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextItemData*")] ImGuiNextItemData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiNextItemData*, void>)vt[861])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[861])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_ClearFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextItemDataClearFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextItemData*")] ImGuiNextItemData* self)
		{
			ImGuiNextItemDataClearFlagsNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNextItemData_ClearFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNextItemDataClearFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNextItemData*")] ref ImGuiNextItemData self)
		{
			fixed (ImGuiNextItemData* pself = &self)
			{
				ImGuiNextItemDataClearFlagsNative((ImGuiNextItemData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiLastItemData_ImGuiLastItemData")]
		[return: NativeName(NativeNameType.Type, "ImGuiLastItemData*")]
		internal static ImGuiLastItemData* ImGuiLastItemDataImGuiLastItemDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiLastItemData*>)vt[862])();
			#else
			return (ImGuiLastItemData*)((delegate* unmanaged[Cdecl]<nint>)vt[862])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiLastItemData_ImGuiLastItemData")]
		[return: NativeName(NativeNameType.Type, "ImGuiLastItemData*")]
		public static ImGuiLastItemData* ImGuiLastItemDataImGuiLastItemData()
		{
			ImGuiLastItemData* ret = ImGuiLastItemDataImGuiLastItemDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiLastItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiLastItemDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiLastItemData*")] ImGuiLastItemData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiLastItemData*, void>)vt[863])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[863])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiLastItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiLastItemDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiLastItemData*")] ImGuiLastItemData* self)
		{
			ImGuiLastItemDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiLastItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiLastItemDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiLastItemData*")] ref ImGuiLastItemData self)
		{
			fixed (ImGuiLastItemData* pself = &self)
			{
				ImGuiLastItemDataDestroyNative((ImGuiLastItemData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_ImGuiStackSizes")]
		[return: NativeName(NativeNameType.Type, "ImGuiStackSizes*")]
		internal static ImGuiStackSizes* ImGuiStackSizesImGuiStackSizesNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiStackSizes*>)vt[864])();
			#else
			return (ImGuiStackSizes*)((delegate* unmanaged[Cdecl]<nint>)vt[864])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_ImGuiStackSizes")]
		[return: NativeName(NativeNameType.Type, "ImGuiStackSizes*")]
		public static ImGuiStackSizes* ImGuiStackSizesImGuiStackSizes()
		{
			ImGuiStackSizes* ret = ImGuiStackSizesImGuiStackSizesNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiStackSizesDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiStackSizes*, void>)vt[865])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[865])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self)
		{
			ImGuiStackSizesDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ref ImGuiStackSizes self)
		{
			fixed (ImGuiStackSizes* pself = &self)
			{
				ImGuiStackSizesDestroyNative((ImGuiStackSizes*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_SetToContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiStackSizesSetToContextStateNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* ctx)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiStackSizes*, ImGuiContext*, void>)vt[866])(self, ctx);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[866])((nint)self, (nint)ctx);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_SetToContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesSetToContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* ctx)
		{
			ImGuiStackSizesSetToContextStateNative(self, ctx);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_SetToContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesSetToContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ref ImGuiStackSizes self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* ctx)
		{
			fixed (ImGuiStackSizes* pself = &self)
			{
				ImGuiStackSizesSetToContextStateNative((ImGuiStackSizes*)pself, ctx);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_SetToContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesSetToContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext ctx)
		{
			fixed (ImGuiContext* pctx = &ctx)
			{
				ImGuiStackSizesSetToContextStateNative(self, (ImGuiContext*)pctx);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_SetToContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesSetToContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ref ImGuiStackSizes self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext ctx)
		{
			fixed (ImGuiStackSizes* pself = &self)
			{
				fixed (ImGuiContext* pctx = &ctx)
				{
					ImGuiStackSizesSetToContextStateNative((ImGuiStackSizes*)pself, (ImGuiContext*)pctx);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_CompareWithContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiStackSizesCompareWithContextStateNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* ctx)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiStackSizes*, ImGuiContext*, void>)vt[867])(self, ctx);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[867])((nint)self, (nint)ctx);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_CompareWithContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesCompareWithContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* ctx)
		{
			ImGuiStackSizesCompareWithContextStateNative(self, ctx);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_CompareWithContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesCompareWithContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ref ImGuiStackSizes self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* ctx)
		{
			fixed (ImGuiStackSizes* pself = &self)
			{
				ImGuiStackSizesCompareWithContextStateNative((ImGuiStackSizes*)pself, ctx);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_CompareWithContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesCompareWithContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ImGuiStackSizes* self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext ctx)
		{
			fixed (ImGuiContext* pctx = &ctx)
			{
				ImGuiStackSizesCompareWithContextStateNative(self, (ImGuiContext*)pctx);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackSizes_CompareWithContextState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackSizesCompareWithContextState([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackSizes*")] ref ImGuiStackSizes self, [NativeName(NativeNameType.Param, "ctx")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext ctx)
		{
			fixed (ImGuiStackSizes* pself = &self)
			{
				fixed (ImGuiContext* pctx = &ctx)
				{
					ImGuiStackSizesCompareWithContextStateNative((ImGuiStackSizes*)pself, (ImGuiContext*)pctx);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr")]
		[return: NativeName(NativeNameType.Type, "ImGuiPtrOrIndex*")]
		internal static ImGuiPtrOrIndex* ImGuiPtrOrIndexImGuiPtrOrIndexPtrNative([NativeName(NativeNameType.Param, "ptr")] [NativeName(NativeNameType.Type, "void*")] void* ptr)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<void*, ImGuiPtrOrIndex*>)vt[868])(ptr);
			#else
			return (ImGuiPtrOrIndex*)((delegate* unmanaged[Cdecl]<nint, nint>)vt[868])((nint)ptr);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr")]
		[return: NativeName(NativeNameType.Type, "ImGuiPtrOrIndex*")]
		public static ImGuiPtrOrIndex* ImGuiPtrOrIndexImGuiPtrOrIndexPtr([NativeName(NativeNameType.Param, "ptr")] [NativeName(NativeNameType.Type, "void*")] void* ptr)
		{
			ImGuiPtrOrIndex* ret = ImGuiPtrOrIndexImGuiPtrOrIndexPtrNative(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPtrOrIndex_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiPtrOrIndexDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiPtrOrIndex*")] ImGuiPtrOrIndex* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiPtrOrIndex*, void>)vt[869])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[869])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPtrOrIndex_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiPtrOrIndexDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiPtrOrIndex*")] ImGuiPtrOrIndex* self)
		{
			ImGuiPtrOrIndexDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPtrOrIndex_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiPtrOrIndexDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiPtrOrIndex*")] ref ImGuiPtrOrIndex self)
		{
			fixed (ImGuiPtrOrIndex* pself = &self)
			{
				ImGuiPtrOrIndexDestroyNative((ImGuiPtrOrIndex*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int")]
		[return: NativeName(NativeNameType.Type, "ImGuiPtrOrIndex*")]
		internal static ImGuiPtrOrIndex* ImGuiPtrOrIndexImGuiPtrOrIndexIntNative([NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "int")] int index)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<int, ImGuiPtrOrIndex*>)vt[870])(index);
			#else
			return (ImGuiPtrOrIndex*)((delegate* unmanaged[Cdecl]<int, nint>)vt[870])(index);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int")]
		[return: NativeName(NativeNameType.Type, "ImGuiPtrOrIndex*")]
		public static ImGuiPtrOrIndex* ImGuiPtrOrIndexImGuiPtrOrIndexInt([NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "int")] int index)
		{
			ImGuiPtrOrIndex* ret = ImGuiPtrOrIndexImGuiPtrOrIndexIntNative(index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPopupData_ImGuiPopupData")]
		[return: NativeName(NativeNameType.Type, "ImGuiPopupData*")]
		internal static ImGuiPopupData* ImGuiPopupDataImGuiPopupDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiPopupData*>)vt[871])();
			#else
			return (ImGuiPopupData*)((delegate* unmanaged[Cdecl]<nint>)vt[871])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPopupData_ImGuiPopupData")]
		[return: NativeName(NativeNameType.Type, "ImGuiPopupData*")]
		public static ImGuiPopupData* ImGuiPopupDataImGuiPopupData()
		{
			ImGuiPopupData* ret = ImGuiPopupDataImGuiPopupDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPopupData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiPopupDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiPopupData*")] ImGuiPopupData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiPopupData*, void>)vt[872])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[872])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPopupData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiPopupDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiPopupData*")] ImGuiPopupData* self)
		{
			ImGuiPopupDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPopupData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiPopupDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiPopupData*")] ref ImGuiPopupData self)
		{
			fixed (ImGuiPopupData* pself = &self)
			{
				ImGuiPopupDataDestroyNative((ImGuiPopupData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputEvent_ImGuiInputEvent")]
		[return: NativeName(NativeNameType.Type, "ImGuiInputEvent*")]
		internal static ImGuiInputEvent* ImGuiInputEventImGuiInputEventNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiInputEvent*>)vt[873])();
			#else
			return (ImGuiInputEvent*)((delegate* unmanaged[Cdecl]<nint>)vt[873])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputEvent_ImGuiInputEvent")]
		[return: NativeName(NativeNameType.Type, "ImGuiInputEvent*")]
		public static ImGuiInputEvent* ImGuiInputEventImGuiInputEvent()
		{
			ImGuiInputEvent* ret = ImGuiInputEventImGuiInputEventNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputEvent_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiInputEventDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputEvent*")] ImGuiInputEvent* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiInputEvent*, void>)vt[874])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[874])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputEvent_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputEventDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputEvent*")] ImGuiInputEvent* self)
		{
			ImGuiInputEventDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiInputEvent_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiInputEventDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiInputEvent*")] ref ImGuiInputEvent self)
		{
			fixed (ImGuiInputEvent* pself = &self)
			{
				ImGuiInputEventDestroyNative((ImGuiInputEvent*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingData_ImGuiKeyRoutingData")]
		[return: NativeName(NativeNameType.Type, "ImGuiKeyRoutingData*")]
		internal static ImGuiKeyRoutingData* ImGuiKeyRoutingDataImGuiKeyRoutingDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiKeyRoutingData*>)vt[875])();
			#else
			return (ImGuiKeyRoutingData*)((delegate* unmanaged[Cdecl]<nint>)vt[875])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingData_ImGuiKeyRoutingData")]
		[return: NativeName(NativeNameType.Type, "ImGuiKeyRoutingData*")]
		public static ImGuiKeyRoutingData* ImGuiKeyRoutingDataImGuiKeyRoutingData()
		{
			ImGuiKeyRoutingData* ret = ImGuiKeyRoutingDataImGuiKeyRoutingDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiKeyRoutingDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingData*")] ImGuiKeyRoutingData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiKeyRoutingData*, void>)vt[876])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[876])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyRoutingDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingData*")] ImGuiKeyRoutingData* self)
		{
			ImGuiKeyRoutingDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyRoutingDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingData*")] ref ImGuiKeyRoutingData self)
		{
			fixed (ImGuiKeyRoutingData* pself = &self)
			{
				ImGuiKeyRoutingDataDestroyNative((ImGuiKeyRoutingData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_ImGuiKeyRoutingTable")]
		[return: NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")]
		internal static ImGuiKeyRoutingTable* ImGuiKeyRoutingTableImGuiKeyRoutingTableNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiKeyRoutingTable*>)vt[877])();
			#else
			return (ImGuiKeyRoutingTable*)((delegate* unmanaged[Cdecl]<nint>)vt[877])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_ImGuiKeyRoutingTable")]
		[return: NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")]
		public static ImGuiKeyRoutingTable* ImGuiKeyRoutingTableImGuiKeyRoutingTable()
		{
			ImGuiKeyRoutingTable* ret = ImGuiKeyRoutingTableImGuiKeyRoutingTableNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiKeyRoutingTableDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")] ImGuiKeyRoutingTable* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiKeyRoutingTable*, void>)vt[878])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[878])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyRoutingTableDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")] ImGuiKeyRoutingTable* self)
		{
			ImGuiKeyRoutingTableDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyRoutingTableDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")] ref ImGuiKeyRoutingTable self)
		{
			fixed (ImGuiKeyRoutingTable* pself = &self)
			{
				ImGuiKeyRoutingTableDestroyNative((ImGuiKeyRoutingTable*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiKeyRoutingTableClearNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")] ImGuiKeyRoutingTable* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiKeyRoutingTable*, void>)vt[879])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[879])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyRoutingTableClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")] ImGuiKeyRoutingTable* self)
		{
			ImGuiKeyRoutingTableClearNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyRoutingTable_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyRoutingTableClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyRoutingTable*")] ref ImGuiKeyRoutingTable self)
		{
			fixed (ImGuiKeyRoutingTable* pself = &self)
			{
				ImGuiKeyRoutingTableClearNative((ImGuiKeyRoutingTable*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyOwnerData_ImGuiKeyOwnerData")]
		[return: NativeName(NativeNameType.Type, "ImGuiKeyOwnerData*")]
		internal static ImGuiKeyOwnerData* ImGuiKeyOwnerDataImGuiKeyOwnerDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiKeyOwnerData*>)vt[880])();
			#else
			return (ImGuiKeyOwnerData*)((delegate* unmanaged[Cdecl]<nint>)vt[880])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyOwnerData_ImGuiKeyOwnerData")]
		[return: NativeName(NativeNameType.Type, "ImGuiKeyOwnerData*")]
		public static ImGuiKeyOwnerData* ImGuiKeyOwnerDataImGuiKeyOwnerData()
		{
			ImGuiKeyOwnerData* ret = ImGuiKeyOwnerDataImGuiKeyOwnerDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyOwnerData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiKeyOwnerDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyOwnerData*")] ImGuiKeyOwnerData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiKeyOwnerData*, void>)vt[881])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[881])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyOwnerData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyOwnerDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyOwnerData*")] ImGuiKeyOwnerData* self)
		{
			ImGuiKeyOwnerDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiKeyOwnerData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiKeyOwnerDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiKeyOwnerData*")] ref ImGuiKeyOwnerData self)
		{
			fixed (ImGuiKeyOwnerData* pself = &self)
			{
				ImGuiKeyOwnerDataDestroyNative((ImGuiKeyOwnerData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperRange_FromIndices")]
		[return: NativeName(NativeNameType.Type, "ImGuiListClipperRange")]
		internal static ImGuiListClipperRange ImGuiListClipperRangeFromIndicesNative([NativeName(NativeNameType.Param, "min")] [NativeName(NativeNameType.Type, "int")] int min, [NativeName(NativeNameType.Param, "max")] [NativeName(NativeNameType.Type, "int")] int max)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<int, int, ImGuiListClipperRange>)vt[882])(min, max);
			#else
			return (ImGuiListClipperRange)((delegate* unmanaged[Cdecl]<int, int, ImGuiListClipperRange>)vt[882])(min, max);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperRange_FromIndices")]
		[return: NativeName(NativeNameType.Type, "ImGuiListClipperRange")]
		public static ImGuiListClipperRange ImGuiListClipperRangeFromIndices([NativeName(NativeNameType.Param, "min")] [NativeName(NativeNameType.Type, "int")] int min, [NativeName(NativeNameType.Param, "max")] [NativeName(NativeNameType.Type, "int")] int max)
		{
			ImGuiListClipperRange ret = ImGuiListClipperRangeFromIndicesNative(min, max);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperRange_FromPositions")]
		[return: NativeName(NativeNameType.Type, "ImGuiListClipperRange")]
		internal static ImGuiListClipperRange ImGuiListClipperRangeFromPositionsNative([NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "float")] float y1, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "float")] float y2, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "int")] int offMin, [NativeName(NativeNameType.Param, "off_max")] [NativeName(NativeNameType.Type, "int")] int offMax)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<float, float, int, int, ImGuiListClipperRange>)vt[883])(y1, y2, offMin, offMax);
			#else
			return (ImGuiListClipperRange)((delegate* unmanaged[Cdecl]<float, float, int, int, ImGuiListClipperRange>)vt[883])(y1, y2, offMin, offMax);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperRange_FromPositions")]
		[return: NativeName(NativeNameType.Type, "ImGuiListClipperRange")]
		public static ImGuiListClipperRange ImGuiListClipperRangeFromPositions([NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "float")] float y1, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "float")] float y2, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "int")] int offMin, [NativeName(NativeNameType.Param, "off_max")] [NativeName(NativeNameType.Type, "int")] int offMax)
		{
			ImGuiListClipperRange ret = ImGuiListClipperRangeFromPositionsNative(y1, y2, offMin, offMax);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_ImGuiListClipperData")]
		[return: NativeName(NativeNameType.Type, "ImGuiListClipperData*")]
		internal static ImGuiListClipperData* ImGuiListClipperDataImGuiListClipperDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiListClipperData*>)vt[884])();
			#else
			return (ImGuiListClipperData*)((delegate* unmanaged[Cdecl]<nint>)vt[884])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_ImGuiListClipperData")]
		[return: NativeName(NativeNameType.Type, "ImGuiListClipperData*")]
		public static ImGuiListClipperData* ImGuiListClipperDataImGuiListClipperData()
		{
			ImGuiListClipperData* ret = ImGuiListClipperDataImGuiListClipperDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiListClipperDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ImGuiListClipperData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiListClipperData*, void>)vt[885])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[885])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiListClipperDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ImGuiListClipperData* self)
		{
			ImGuiListClipperDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiListClipperDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ref ImGuiListClipperData self)
		{
			fixed (ImGuiListClipperData* pself = &self)
			{
				ImGuiListClipperDataDestroyNative((ImGuiListClipperData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_Reset")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiListClipperDataResetNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ImGuiListClipperData* self, [NativeName(NativeNameType.Param, "clipper")] [NativeName(NativeNameType.Type, "ImGuiListClipper*")] ImGuiListClipper* clipper)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiListClipperData*, ImGuiListClipper*, void>)vt[886])(self, clipper);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[886])((nint)self, (nint)clipper);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_Reset")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiListClipperDataReset([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ImGuiListClipperData* self, [NativeName(NativeNameType.Param, "clipper")] [NativeName(NativeNameType.Type, "ImGuiListClipper*")] ImGuiListClipper* clipper)
		{
			ImGuiListClipperDataResetNative(self, clipper);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_Reset")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiListClipperDataReset([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ref ImGuiListClipperData self, [NativeName(NativeNameType.Param, "clipper")] [NativeName(NativeNameType.Type, "ImGuiListClipper*")] ImGuiListClipper* clipper)
		{
			fixed (ImGuiListClipperData* pself = &self)
			{
				ImGuiListClipperDataResetNative((ImGuiListClipperData*)pself, clipper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_Reset")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiListClipperDataReset([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ImGuiListClipperData* self, [NativeName(NativeNameType.Param, "clipper")] [NativeName(NativeNameType.Type, "ImGuiListClipper*")] ref ImGuiListClipper clipper)
		{
			fixed (ImGuiListClipper* pclipper = &clipper)
			{
				ImGuiListClipperDataResetNative(self, (ImGuiListClipper*)pclipper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiListClipperData_Reset")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiListClipperDataReset([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiListClipperData*")] ref ImGuiListClipperData self, [NativeName(NativeNameType.Param, "clipper")] [NativeName(NativeNameType.Type, "ImGuiListClipper*")] ref ImGuiListClipper clipper)
		{
			fixed (ImGuiListClipperData* pself = &self)
			{
				fixed (ImGuiListClipper* pclipper = &clipper)
				{
					ImGuiListClipperDataResetNative((ImGuiListClipperData*)pself, (ImGuiListClipper*)pclipper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_ImGuiNavItemData")]
		[return: NativeName(NativeNameType.Type, "ImGuiNavItemData*")]
		internal static ImGuiNavItemData* ImGuiNavItemDataImGuiNavItemDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiNavItemData*>)vt[887])();
			#else
			return (ImGuiNavItemData*)((delegate* unmanaged[Cdecl]<nint>)vt[887])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_ImGuiNavItemData")]
		[return: NativeName(NativeNameType.Type, "ImGuiNavItemData*")]
		public static ImGuiNavItemData* ImGuiNavItemDataImGuiNavItemData()
		{
			ImGuiNavItemData* ret = ImGuiNavItemDataImGuiNavItemDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiNavItemDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNavItemData*")] ImGuiNavItemData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiNavItemData*, void>)vt[888])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[888])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNavItemDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNavItemData*")] ImGuiNavItemData* self)
		{
			ImGuiNavItemDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNavItemDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNavItemData*")] ref ImGuiNavItemData self)
		{
			fixed (ImGuiNavItemData* pself = &self)
			{
				ImGuiNavItemDataDestroyNative((ImGuiNavItemData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiNavItemDataClearNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNavItemData*")] ImGuiNavItemData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiNavItemData*, void>)vt[889])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[889])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNavItemDataClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNavItemData*")] ImGuiNavItemData* self)
		{
			ImGuiNavItemDataClearNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiNavItemData_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiNavItemDataClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiNavItemData*")] ref ImGuiNavItemData self)
		{
			fixed (ImGuiNavItemData* pself = &self)
			{
				ImGuiNavItemDataClearNative((ImGuiNavItemData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_ImGuiTypingSelectState")]
		[return: NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")]
		internal static ImGuiTypingSelectState* ImGuiTypingSelectStateImGuiTypingSelectStateNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiTypingSelectState*>)vt[890])();
			#else
			return (ImGuiTypingSelectState*)((delegate* unmanaged[Cdecl]<nint>)vt[890])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_ImGuiTypingSelectState")]
		[return: NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")]
		public static ImGuiTypingSelectState* ImGuiTypingSelectStateImGuiTypingSelectState()
		{
			ImGuiTypingSelectState* ret = ImGuiTypingSelectStateImGuiTypingSelectStateNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiTypingSelectStateDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")] ImGuiTypingSelectState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiTypingSelectState*, void>)vt[891])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[891])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiTypingSelectStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")] ImGuiTypingSelectState* self)
		{
			ImGuiTypingSelectStateDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiTypingSelectStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")] ref ImGuiTypingSelectState self)
		{
			fixed (ImGuiTypingSelectState* pself = &self)
			{
				ImGuiTypingSelectStateDestroyNative((ImGuiTypingSelectState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiTypingSelectStateClearNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")] ImGuiTypingSelectState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiTypingSelectState*, void>)vt[892])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[892])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiTypingSelectStateClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")] ImGuiTypingSelectState* self)
		{
			ImGuiTypingSelectStateClearNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTypingSelectState_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiTypingSelectStateClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiTypingSelectState*")] ref ImGuiTypingSelectState self)
		{
			fixed (ImGuiTypingSelectState* pself = &self)
			{
				ImGuiTypingSelectStateClearNative((ImGuiTypingSelectState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumnData_ImGuiOldColumnData")]
		[return: NativeName(NativeNameType.Type, "ImGuiOldColumnData*")]
		internal static ImGuiOldColumnData* ImGuiOldColumnDataImGuiOldColumnDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiOldColumnData*>)vt[893])();
			#else
			return (ImGuiOldColumnData*)((delegate* unmanaged[Cdecl]<nint>)vt[893])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumnData_ImGuiOldColumnData")]
		[return: NativeName(NativeNameType.Type, "ImGuiOldColumnData*")]
		public static ImGuiOldColumnData* ImGuiOldColumnDataImGuiOldColumnData()
		{
			ImGuiOldColumnData* ret = ImGuiOldColumnDataImGuiOldColumnDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumnData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiOldColumnDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiOldColumnData*")] ImGuiOldColumnData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiOldColumnData*, void>)vt[894])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[894])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumnData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiOldColumnDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiOldColumnData*")] ImGuiOldColumnData* self)
		{
			ImGuiOldColumnDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumnData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiOldColumnDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiOldColumnData*")] ref ImGuiOldColumnData self)
		{
			fixed (ImGuiOldColumnData* pself = &self)
			{
				ImGuiOldColumnDataDestroyNative((ImGuiOldColumnData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumns_ImGuiOldColumns")]
		[return: NativeName(NativeNameType.Type, "ImGuiOldColumns*")]
		internal static ImGuiOldColumns* ImGuiOldColumnsImGuiOldColumnsNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiOldColumns*>)vt[895])();
			#else
			return (ImGuiOldColumns*)((delegate* unmanaged[Cdecl]<nint>)vt[895])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumns_ImGuiOldColumns")]
		[return: NativeName(NativeNameType.Type, "ImGuiOldColumns*")]
		public static ImGuiOldColumns* ImGuiOldColumnsImGuiOldColumns()
		{
			ImGuiOldColumns* ret = ImGuiOldColumnsImGuiOldColumnsNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumns_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiOldColumnsDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiOldColumns*")] ImGuiOldColumns* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiOldColumns*, void>)vt[896])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[896])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumns_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiOldColumnsDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiOldColumns*")] ImGuiOldColumns* self)
		{
			ImGuiOldColumnsDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiOldColumns_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiOldColumnsDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiOldColumns*")] ref ImGuiOldColumns self)
		{
			fixed (ImGuiOldColumns* pself = &self)
			{
				ImGuiOldColumnsDestroyNative((ImGuiOldColumns*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiBoxSelectState_ImGuiBoxSelectState")]
		[return: NativeName(NativeNameType.Type, "ImGuiBoxSelectState*")]
		internal static ImGuiBoxSelectState* ImGuiBoxSelectStateImGuiBoxSelectStateNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiBoxSelectState*>)vt[897])();
			#else
			return (ImGuiBoxSelectState*)((delegate* unmanaged[Cdecl]<nint>)vt[897])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiBoxSelectState_ImGuiBoxSelectState")]
		[return: NativeName(NativeNameType.Type, "ImGuiBoxSelectState*")]
		public static ImGuiBoxSelectState* ImGuiBoxSelectStateImGuiBoxSelectState()
		{
			ImGuiBoxSelectState* ret = ImGuiBoxSelectStateImGuiBoxSelectStateNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiBoxSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiBoxSelectStateDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiBoxSelectState*")] ImGuiBoxSelectState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiBoxSelectState*, void>)vt[898])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[898])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiBoxSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiBoxSelectStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiBoxSelectState*")] ImGuiBoxSelectState* self)
		{
			ImGuiBoxSelectStateDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiBoxSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiBoxSelectStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiBoxSelectState*")] ref ImGuiBoxSelectState self)
		{
			fixed (ImGuiBoxSelectState* pself = &self)
			{
				ImGuiBoxSelectStateDestroyNative((ImGuiBoxSelectState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_ImGuiMultiSelectTempData")]
		[return: NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")]
		internal static ImGuiMultiSelectTempData* ImGuiMultiSelectTempDataImGuiMultiSelectTempDataNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiMultiSelectTempData*>)vt[899])();
			#else
			return (ImGuiMultiSelectTempData*)((delegate* unmanaged[Cdecl]<nint>)vt[899])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_ImGuiMultiSelectTempData")]
		[return: NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")]
		public static ImGuiMultiSelectTempData* ImGuiMultiSelectTempDataImGuiMultiSelectTempData()
		{
			ImGuiMultiSelectTempData* ret = ImGuiMultiSelectTempDataImGuiMultiSelectTempDataNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiMultiSelectTempDataDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ImGuiMultiSelectTempData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiMultiSelectTempData*, void>)vt[900])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[900])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectTempDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ImGuiMultiSelectTempData* self)
		{
			ImGuiMultiSelectTempDataDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectTempDataDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ref ImGuiMultiSelectTempData self)
		{
			fixed (ImGuiMultiSelectTempData* pself = &self)
			{
				ImGuiMultiSelectTempDataDestroyNative((ImGuiMultiSelectTempData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiMultiSelectTempDataClearNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ImGuiMultiSelectTempData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiMultiSelectTempData*, void>)vt[901])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[901])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectTempDataClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ImGuiMultiSelectTempData* self)
		{
			ImGuiMultiSelectTempDataClearNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_Clear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectTempDataClear([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ref ImGuiMultiSelectTempData self)
		{
			fixed (ImGuiMultiSelectTempData* pself = &self)
			{
				ImGuiMultiSelectTempDataClearNative((ImGuiMultiSelectTempData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_ClearIO")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiMultiSelectTempDataClearIONative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ImGuiMultiSelectTempData* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiMultiSelectTempData*, void>)vt[902])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[902])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_ClearIO")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectTempDataClearIO([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ImGuiMultiSelectTempData* self)
		{
			ImGuiMultiSelectTempDataClearIONative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectTempData_ClearIO")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectTempDataClearIO([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectTempData*")] ref ImGuiMultiSelectTempData self)
		{
			fixed (ImGuiMultiSelectTempData* pself = &self)
			{
				ImGuiMultiSelectTempDataClearIONative((ImGuiMultiSelectTempData*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectState_ImGuiMultiSelectState")]
		[return: NativeName(NativeNameType.Type, "ImGuiMultiSelectState*")]
		internal static ImGuiMultiSelectState* ImGuiMultiSelectStateImGuiMultiSelectStateNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiMultiSelectState*>)vt[903])();
			#else
			return (ImGuiMultiSelectState*)((delegate* unmanaged[Cdecl]<nint>)vt[903])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectState_ImGuiMultiSelectState")]
		[return: NativeName(NativeNameType.Type, "ImGuiMultiSelectState*")]
		public static ImGuiMultiSelectState* ImGuiMultiSelectStateImGuiMultiSelectState()
		{
			ImGuiMultiSelectState* ret = ImGuiMultiSelectStateImGuiMultiSelectStateNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiMultiSelectStateDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectState*")] ImGuiMultiSelectState* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiMultiSelectState*, void>)vt[904])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[904])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectState*")] ImGuiMultiSelectState* self)
		{
			ImGuiMultiSelectStateDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiMultiSelectState_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiMultiSelectStateDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiMultiSelectState*")] ref ImGuiMultiSelectState self)
		{
			fixed (ImGuiMultiSelectState* pself = &self)
			{
				ImGuiMultiSelectStateDestroyNative((ImGuiMultiSelectState*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_ImGuiDockNode")]
		[return: NativeName(NativeNameType.Type, "ImGuiDockNode*")]
		internal static ImGuiDockNode* ImGuiDockNodeImGuiDockNodeNative([NativeName(NativeNameType.Param, "id")] [NativeName(NativeNameType.Type, "ImGuiID")] uint id)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<uint, ImGuiDockNode*>)vt[905])(id);
			#else
			return (ImGuiDockNode*)((delegate* unmanaged[Cdecl]<uint, nint>)vt[905])(id);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_ImGuiDockNode")]
		[return: NativeName(NativeNameType.Type, "ImGuiDockNode*")]
		public static ImGuiDockNode* ImGuiDockNodeImGuiDockNode([NativeName(NativeNameType.Param, "id")] [NativeName(NativeNameType.Type, "ImGuiID")] uint id)
		{
			ImGuiDockNode* ret = ImGuiDockNodeImGuiDockNodeNative(id);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiDockNodeDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiDockNode*, void>)vt[906])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[906])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			ImGuiDockNodeDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				ImGuiDockNodeDestroyNative((ImGuiDockNode*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsRootNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsRootNodeNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[907])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[907])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsRootNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsRootNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsRootNodeNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsRootNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsRootNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsRootNodeNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsDockSpace")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsDockSpaceNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[908])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[908])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsDockSpace")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsDockSpace([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsDockSpaceNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsDockSpace")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsDockSpace([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsDockSpaceNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsFloatingNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsFloatingNodeNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[909])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[909])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsFloatingNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsFloatingNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsFloatingNodeNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsFloatingNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsFloatingNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsFloatingNodeNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsCentralNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsCentralNodeNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[910])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[910])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsCentralNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsCentralNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsCentralNodeNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsCentralNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsCentralNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsCentralNodeNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsHiddenTabBar")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsHiddenTabBarNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[911])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[911])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsHiddenTabBar")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsHiddenTabBar([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsHiddenTabBarNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsHiddenTabBar")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsHiddenTabBar([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsHiddenTabBarNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsNoTabBar")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsNoTabBarNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[912])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[912])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsNoTabBar")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsNoTabBar([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsNoTabBarNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsNoTabBar")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsNoTabBar([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsNoTabBarNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsSplitNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsSplitNodeNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[913])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[913])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsSplitNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsSplitNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsSplitNodeNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsSplitNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsSplitNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsSplitNodeNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsLeafNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsLeafNodeNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[914])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[914])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsLeafNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsLeafNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsLeafNodeNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsLeafNode")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsLeafNode([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsLeafNodeNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsEmpty")]
		[return: NativeName(NativeNameType.Type, "bool")]
		internal static byte ImGuiDockNodeIsEmptyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockNode*, byte>)vt[915])(self);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)vt[915])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsEmpty")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsEmpty([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			byte ret = ImGuiDockNodeIsEmptyNative(self);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_IsEmpty")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public static bool ImGuiDockNodeIsEmpty([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				byte ret = ImGuiDockNodeIsEmptyNative((ImGuiDockNode*)pself);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_Rect")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiDockNodeRectNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImRect*, ImGuiDockNode*, void>)vt[916])(pOut, self);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[916])((nint)pOut, (nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_Rect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			ImGuiDockNodeRectNative(pOut, self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_Rect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				ImGuiDockNodeRectNative((ImRect*)ppOut, self);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_Rect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				ImGuiDockNodeRectNative(pOut, (ImGuiDockNode*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_Rect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				fixed (ImGuiDockNode* pself = &self)
				{
					ImGuiDockNodeRectNative((ImRect*)ppOut, (ImGuiDockNode*)pself);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_SetLocalFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiDockNodeSetLocalFlagsNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImGuiDockNodeFlags")] ImGuiDockNodeFlags flags)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiDockNode*, ImGuiDockNodeFlags, void>)vt[917])(self, flags);
			#else
			((delegate* unmanaged[Cdecl]<nint, ImGuiDockNodeFlags, void>)vt[917])((nint)self, flags);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_SetLocalFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeSetLocalFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImGuiDockNodeFlags")] ImGuiDockNodeFlags flags)
		{
			ImGuiDockNodeSetLocalFlagsNative(self, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_SetLocalFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeSetLocalFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "ImGuiDockNodeFlags")] ImGuiDockNodeFlags flags)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				ImGuiDockNodeSetLocalFlagsNative((ImGuiDockNode*)pself, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_UpdateMergedFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiDockNodeUpdateMergedFlagsNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiDockNode*, void>)vt[918])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[918])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_UpdateMergedFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeUpdateMergedFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ImGuiDockNode* self)
		{
			ImGuiDockNodeUpdateMergedFlagsNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockNode_UpdateMergedFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockNodeUpdateMergedFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockNode*")] ref ImGuiDockNode self)
		{
			fixed (ImGuiDockNode* pself = &self)
			{
				ImGuiDockNodeUpdateMergedFlagsNative((ImGuiDockNode*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockContext_ImGuiDockContext")]
		[return: NativeName(NativeNameType.Type, "ImGuiDockContext*")]
		internal static ImGuiDockContext* ImGuiDockContextImGuiDockContextNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDockContext*>)vt[919])();
			#else
			return (ImGuiDockContext*)((delegate* unmanaged[Cdecl]<nint>)vt[919])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockContext_ImGuiDockContext")]
		[return: NativeName(NativeNameType.Type, "ImGuiDockContext*")]
		public static ImGuiDockContext* ImGuiDockContextImGuiDockContext()
		{
			ImGuiDockContext* ret = ImGuiDockContextImGuiDockContextNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockContext_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiDockContextDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockContext*")] ImGuiDockContext* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiDockContext*, void>)vt[920])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[920])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockContext_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockContextDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockContext*")] ImGuiDockContext* self)
		{
			ImGuiDockContextDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDockContext_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDockContextDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDockContext*")] ref ImGuiDockContext self)
		{
			fixed (ImGuiDockContext* pself = &self)
			{
				ImGuiDockContextDestroyNative((ImGuiDockContext*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_ImGuiViewportP")]
		[return: NativeName(NativeNameType.Type, "ImGuiViewportP*")]
		internal static ImGuiViewportP* ImGuiViewportPImGuiViewportPNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiViewportP*>)vt[921])();
			#else
			return (ImGuiViewportP*)((delegate* unmanaged[Cdecl]<nint>)vt[921])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_ImGuiViewportP")]
		[return: NativeName(NativeNameType.Type, "ImGuiViewportP*")]
		public static ImGuiViewportP* ImGuiViewportPImGuiViewportP()
		{
			ImGuiViewportP* ret = ImGuiViewportPImGuiViewportPNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiViewportP*, void>)vt[922])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[922])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			ImGuiViewportPDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPDestroyNative((ImGuiViewportP*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_ClearRequestFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPClearRequestFlagsNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiViewportP*, void>)vt[923])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[923])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_ClearRequestFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPClearRequestFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			ImGuiViewportPClearRequestFlagsNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_ClearRequestFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPClearRequestFlags([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPClearRequestFlagsNative((ImGuiViewportP*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectPos")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPCalcWorkRectPosNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<Vector2*, ImGuiViewportP*, Vector2, void>)vt[924])(pOut, self, offMin);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, Vector2, void>)vt[924])((nint)pOut, (nint)self, offMin);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectPos")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectPos([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin)
		{
			ImGuiViewportPCalcWorkRectPosNative(pOut, self, offMin);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectPos")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectPos([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				ImGuiViewportPCalcWorkRectPosNative((Vector2*)ppOut, self, offMin);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectPos")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectPos([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPCalcWorkRectPosNative(pOut, (ImGuiViewportP*)pself, offMin);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectPos")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectPos([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				fixed (ImGuiViewportP* pself = &self)
				{
					ImGuiViewportPCalcWorkRectPosNative((Vector2*)ppOut, (ImGuiViewportP*)pself, offMin);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectSize")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPCalcWorkRectSizeNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin, [NativeName(NativeNameType.Param, "off_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMax)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<Vector2*, ImGuiViewportP*, Vector2, Vector2, void>)vt[925])(pOut, self, offMin, offMax);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, Vector2, Vector2, void>)vt[925])((nint)pOut, (nint)self, offMin, offMax);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectSize")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectSize([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin, [NativeName(NativeNameType.Param, "off_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMax)
		{
			ImGuiViewportPCalcWorkRectSizeNative(pOut, self, offMin, offMax);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectSize")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectSize([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin, [NativeName(NativeNameType.Param, "off_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMax)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				ImGuiViewportPCalcWorkRectSizeNative((Vector2*)ppOut, self, offMin, offMax);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectSize")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectSize([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] Vector2* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin, [NativeName(NativeNameType.Param, "off_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMax)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPCalcWorkRectSizeNative(pOut, (ImGuiViewportP*)pself, offMin, offMax);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_CalcWorkRectSize")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPCalcWorkRectSize([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImVec2*")] ref Vector2 pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self, [NativeName(NativeNameType.Param, "off_min")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMin, [NativeName(NativeNameType.Param, "off_max")] [NativeName(NativeNameType.Type, "const ImVec2")] Vector2 offMax)
		{
			fixed (Vector2* ppOut = &pOut)
			{
				fixed (ImGuiViewportP* pself = &self)
				{
					ImGuiViewportPCalcWorkRectSizeNative((Vector2*)ppOut, (ImGuiViewportP*)pself, offMin, offMax);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_UpdateWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPUpdateWorkRectNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiViewportP*, void>)vt[926])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[926])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_UpdateWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPUpdateWorkRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			ImGuiViewportPUpdateWorkRectNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_UpdateWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPUpdateWorkRect([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPUpdateWorkRectNative((ImGuiViewportP*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetMainRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPGetMainRectNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImRect*, ImGuiViewportP*, void>)vt[927])(pOut, self);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[927])((nint)pOut, (nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetMainRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetMainRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			ImGuiViewportPGetMainRectNative(pOut, self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetMainRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetMainRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				ImGuiViewportPGetMainRectNative((ImRect*)ppOut, self);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetMainRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetMainRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPGetMainRectNative(pOut, (ImGuiViewportP*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetMainRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetMainRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				fixed (ImGuiViewportP* pself = &self)
				{
					ImGuiViewportPGetMainRectNative((ImRect*)ppOut, (ImGuiViewportP*)pself);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPGetWorkRectNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImRect*, ImGuiViewportP*, void>)vt[928])(pOut, self);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[928])((nint)pOut, (nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			ImGuiViewportPGetWorkRectNative(pOut, self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				ImGuiViewportPGetWorkRectNative((ImRect*)ppOut, self);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPGetWorkRectNative(pOut, (ImGuiViewportP*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				fixed (ImGuiViewportP* pself = &self)
				{
					ImGuiViewportPGetWorkRectNative((ImRect*)ppOut, (ImGuiViewportP*)pself);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetBuildWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiViewportPGetBuildWorkRectNative([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImRect*, ImGuiViewportP*, void>)vt[929])(pOut, self);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)vt[929])((nint)pOut, (nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetBuildWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetBuildWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			ImGuiViewportPGetBuildWorkRectNative(pOut, self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetBuildWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetBuildWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ImGuiViewportP* self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				ImGuiViewportPGetBuildWorkRectNative((ImRect*)ppOut, self);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetBuildWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetBuildWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ImRect* pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImGuiViewportP* pself = &self)
			{
				ImGuiViewportPGetBuildWorkRectNative(pOut, (ImGuiViewportP*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiViewportP_GetBuildWorkRect")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiViewportPGetBuildWorkRect([NativeName(NativeNameType.Param, "pOut")] [NativeName(NativeNameType.Type, "ImRect*")] ref ImRect pOut, [NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiViewportP*")] ref ImGuiViewportP self)
		{
			fixed (ImRect* ppOut = &pOut)
			{
				fixed (ImGuiViewportP* pself = &self)
				{
					ImGuiViewportPGetBuildWorkRectNative((ImRect*)ppOut, (ImGuiViewportP*)pself);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_ImGuiWindowSettings")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindowSettings*")]
		internal static ImGuiWindowSettings* ImGuiWindowSettingsImGuiWindowSettingsNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiWindowSettings*>)vt[930])();
			#else
			return (ImGuiWindowSettings*)((delegate* unmanaged[Cdecl]<nint>)vt[930])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_ImGuiWindowSettings")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindowSettings*")]
		public static ImGuiWindowSettings* ImGuiWindowSettingsImGuiWindowSettings()
		{
			ImGuiWindowSettings* ret = ImGuiWindowSettingsImGuiWindowSettingsNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiWindowSettingsDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ImGuiWindowSettings* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiWindowSettings*, void>)vt[931])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[931])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiWindowSettingsDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ImGuiWindowSettings* self)
		{
			ImGuiWindowSettingsDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiWindowSettingsDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ref ImGuiWindowSettings self)
		{
			fixed (ImGuiWindowSettings* pself = &self)
			{
				ImGuiWindowSettingsDestroyNative((ImGuiWindowSettings*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_GetName")]
		[return: NativeName(NativeNameType.Type, "char*")]
		internal static byte* ImGuiWindowSettingsGetNameNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ImGuiWindowSettings* self)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiWindowSettings*, byte*>)vt[932])(self);
			#else
			return (byte*)((delegate* unmanaged[Cdecl]<nint, nint>)vt[932])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_GetName")]
		[return: NativeName(NativeNameType.Type, "char*")]
		public static byte* ImGuiWindowSettingsGetName([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ImGuiWindowSettings* self)
		{
			byte* ret = ImGuiWindowSettingsGetNameNative(self);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_GetName")]
		[return: NativeName(NativeNameType.Type, "char*")]
		public static string ImGuiWindowSettingsGetNameS([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ImGuiWindowSettings* self)
		{
			string ret = Utils.DecodeStringUTF8(ImGuiWindowSettingsGetNameNative(self));
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_GetName")]
		[return: NativeName(NativeNameType.Type, "char*")]
		public static byte* ImGuiWindowSettingsGetName([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ref ImGuiWindowSettings self)
		{
			fixed (ImGuiWindowSettings* pself = &self)
			{
				byte* ret = ImGuiWindowSettingsGetNameNative((ImGuiWindowSettings*)pself);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindowSettings_GetName")]
		[return: NativeName(NativeNameType.Type, "char*")]
		public static string ImGuiWindowSettingsGetNameS([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindowSettings*")] ref ImGuiWindowSettings self)
		{
			fixed (ImGuiWindowSettings* pself = &self)
			{
				string ret = Utils.DecodeStringUTF8(ImGuiWindowSettingsGetNameNative((ImGuiWindowSettings*)pself));
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiSettingsHandler_ImGuiSettingsHandler")]
		[return: NativeName(NativeNameType.Type, "ImGuiSettingsHandler*")]
		internal static ImGuiSettingsHandler* ImGuiSettingsHandlerImGuiSettingsHandlerNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiSettingsHandler*>)vt[933])();
			#else
			return (ImGuiSettingsHandler*)((delegate* unmanaged[Cdecl]<nint>)vt[933])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiSettingsHandler_ImGuiSettingsHandler")]
		[return: NativeName(NativeNameType.Type, "ImGuiSettingsHandler*")]
		public static ImGuiSettingsHandler* ImGuiSettingsHandlerImGuiSettingsHandler()
		{
			ImGuiSettingsHandler* ret = ImGuiSettingsHandlerImGuiSettingsHandlerNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiSettingsHandler_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiSettingsHandlerDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiSettingsHandler*")] ImGuiSettingsHandler* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiSettingsHandler*, void>)vt[934])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[934])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiSettingsHandler_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiSettingsHandlerDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiSettingsHandler*")] ImGuiSettingsHandler* self)
		{
			ImGuiSettingsHandlerDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiSettingsHandler_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiSettingsHandlerDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiSettingsHandler*")] ref ImGuiSettingsHandler self)
		{
			fixed (ImGuiSettingsHandler* pself = &self)
			{
				ImGuiSettingsHandlerDestroyNative((ImGuiSettingsHandler*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDebugAllocInfo_ImGuiDebugAllocInfo")]
		[return: NativeName(NativeNameType.Type, "ImGuiDebugAllocInfo*")]
		internal static ImGuiDebugAllocInfo* ImGuiDebugAllocInfoImGuiDebugAllocInfoNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiDebugAllocInfo*>)vt[935])();
			#else
			return (ImGuiDebugAllocInfo*)((delegate* unmanaged[Cdecl]<nint>)vt[935])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDebugAllocInfo_ImGuiDebugAllocInfo")]
		[return: NativeName(NativeNameType.Type, "ImGuiDebugAllocInfo*")]
		public static ImGuiDebugAllocInfo* ImGuiDebugAllocInfoImGuiDebugAllocInfo()
		{
			ImGuiDebugAllocInfo* ret = ImGuiDebugAllocInfoImGuiDebugAllocInfoNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDebugAllocInfo_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiDebugAllocInfoDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDebugAllocInfo*")] ImGuiDebugAllocInfo* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiDebugAllocInfo*, void>)vt[936])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[936])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDebugAllocInfo_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDebugAllocInfoDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDebugAllocInfo*")] ImGuiDebugAllocInfo* self)
		{
			ImGuiDebugAllocInfoDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiDebugAllocInfo_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiDebugAllocInfoDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiDebugAllocInfo*")] ref ImGuiDebugAllocInfo self)
		{
			fixed (ImGuiDebugAllocInfo* pself = &self)
			{
				ImGuiDebugAllocInfoDestroyNative((ImGuiDebugAllocInfo*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackLevelInfo_ImGuiStackLevelInfo")]
		[return: NativeName(NativeNameType.Type, "ImGuiStackLevelInfo*")]
		internal static ImGuiStackLevelInfo* ImGuiStackLevelInfoImGuiStackLevelInfoNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiStackLevelInfo*>)vt[937])();
			#else
			return (ImGuiStackLevelInfo*)((delegate* unmanaged[Cdecl]<nint>)vt[937])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackLevelInfo_ImGuiStackLevelInfo")]
		[return: NativeName(NativeNameType.Type, "ImGuiStackLevelInfo*")]
		public static ImGuiStackLevelInfo* ImGuiStackLevelInfoImGuiStackLevelInfo()
		{
			ImGuiStackLevelInfo* ret = ImGuiStackLevelInfoImGuiStackLevelInfoNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackLevelInfo_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiStackLevelInfoDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackLevelInfo*")] ImGuiStackLevelInfo* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiStackLevelInfo*, void>)vt[938])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[938])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackLevelInfo_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackLevelInfoDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackLevelInfo*")] ImGuiStackLevelInfo* self)
		{
			ImGuiStackLevelInfoDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStackLevelInfo_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiStackLevelInfoDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiStackLevelInfo*")] ref ImGuiStackLevelInfo self)
		{
			fixed (ImGuiStackLevelInfo* pself = &self)
			{
				ImGuiStackLevelInfoDestroyNative((ImGuiStackLevelInfo*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiIDStackTool_ImGuiIDStackTool")]
		[return: NativeName(NativeNameType.Type, "ImGuiIDStackTool*")]
		internal static ImGuiIDStackTool* ImGuiIDStackToolImGuiIDStackToolNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiIDStackTool*>)vt[939])();
			#else
			return (ImGuiIDStackTool*)((delegate* unmanaged[Cdecl]<nint>)vt[939])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiIDStackTool_ImGuiIDStackTool")]
		[return: NativeName(NativeNameType.Type, "ImGuiIDStackTool*")]
		public static ImGuiIDStackTool* ImGuiIDStackToolImGuiIDStackTool()
		{
			ImGuiIDStackTool* ret = ImGuiIDStackToolImGuiIDStackToolNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiIDStackTool_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiIDStackToolDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiIDStackTool*")] ImGuiIDStackTool* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiIDStackTool*, void>)vt[940])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[940])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiIDStackTool_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiIDStackToolDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiIDStackTool*")] ImGuiIDStackTool* self)
		{
			ImGuiIDStackToolDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiIDStackTool_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiIDStackToolDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiIDStackTool*")] ref ImGuiIDStackTool self)
		{
			fixed (ImGuiIDStackTool* pself = &self)
			{
				ImGuiIDStackToolDestroyNative((ImGuiIDStackTool*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContextHook_ImGuiContextHook")]
		[return: NativeName(NativeNameType.Type, "ImGuiContextHook*")]
		internal static ImGuiContextHook* ImGuiContextHookImGuiContextHookNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiContextHook*>)vt[941])();
			#else
			return (ImGuiContextHook*)((delegate* unmanaged[Cdecl]<nint>)vt[941])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContextHook_ImGuiContextHook")]
		[return: NativeName(NativeNameType.Type, "ImGuiContextHook*")]
		public static ImGuiContextHook* ImGuiContextHookImGuiContextHook()
		{
			ImGuiContextHook* ret = ImGuiContextHookImGuiContextHookNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContextHook_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiContextHookDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiContextHook*")] ImGuiContextHook* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiContextHook*, void>)vt[942])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[942])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContextHook_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiContextHookDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiContextHook*")] ImGuiContextHook* self)
		{
			ImGuiContextHookDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContextHook_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiContextHookDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiContextHook*")] ref ImGuiContextHook self)
		{
			fixed (ImGuiContextHook* pself = &self)
			{
				ImGuiContextHookDestroyNative((ImGuiContextHook*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContext_ImGuiContext")]
		[return: NativeName(NativeNameType.Type, "ImGuiContext*")]
		internal static ImGuiContext* ImGuiContextImGuiContextNative([NativeName(NativeNameType.Param, "shared_font_atlas")] [NativeName(NativeNameType.Type, "ImFontAtlas*")] ImFontAtlas* sharedFontAtlas)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImFontAtlas*, ImGuiContext*>)vt[943])(sharedFontAtlas);
			#else
			return (ImGuiContext*)((delegate* unmanaged[Cdecl]<nint, nint>)vt[943])((nint)sharedFontAtlas);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContext_ImGuiContext")]
		[return: NativeName(NativeNameType.Type, "ImGuiContext*")]
		public static ImGuiContext* ImGuiContextImGuiContext([NativeName(NativeNameType.Param, "shared_font_atlas")] [NativeName(NativeNameType.Type, "ImFontAtlas*")] ImFontAtlas* sharedFontAtlas)
		{
			ImGuiContext* ret = ImGuiContextImGuiContextNative(sharedFontAtlas);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContext_ImGuiContext")]
		[return: NativeName(NativeNameType.Type, "ImGuiContext*")]
		public static ImGuiContext* ImGuiContextImGuiContext([NativeName(NativeNameType.Param, "shared_font_atlas")] [NativeName(NativeNameType.Type, "ImFontAtlas*")] ref ImFontAtlas sharedFontAtlas)
		{
			fixed (ImFontAtlas* psharedFontAtlas = &sharedFontAtlas)
			{
				ImGuiContext* ret = ImGuiContextImGuiContextNative((ImFontAtlas*)psharedFontAtlas);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContext_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiContextDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiContext*, void>)vt[944])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[944])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContext_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiContextDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* self)
		{
			ImGuiContextDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiContext_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiContextDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext self)
		{
			fixed (ImGuiContext* pself = &self)
			{
				ImGuiContextDestroyNative((ImGuiContext*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		internal static ImGuiWindow* ImGuiWindowImGuiWindowNative([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] byte* name)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiContext*, byte*, ImGuiWindow*>)vt[945])(context, name);
			#else
			return (ImGuiWindow*)((delegate* unmanaged[Cdecl]<nint, nint, nint>)vt[945])((nint)context, (nint)name);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] byte* name)
		{
			ImGuiWindow* ret = ImGuiWindowImGuiWindowNative(context, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] byte* name)
		{
			fixed (ImGuiContext* pcontext = &context)
			{
				ImGuiWindow* ret = ImGuiWindowImGuiWindowNative((ImGuiContext*)pcontext, name);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] ref byte name)
		{
			fixed (byte* pname = &name)
			{
				ImGuiWindow* ret = ImGuiWindowImGuiWindowNative(context, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> name)
		{
			fixed (byte* pname = name)
			{
				ImGuiWindow* ret = ImGuiWindowImGuiWindowNative(context, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ImGuiContext* context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] string name)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ImGuiWindow* ret = ImGuiWindowImGuiWindowNative(context, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] ref byte name)
		{
			fixed (ImGuiContext* pcontext = &context)
			{
				fixed (byte* pname = &name)
				{
					ImGuiWindow* ret = ImGuiWindowImGuiWindowNative((ImGuiContext*)pcontext, (byte*)pname);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> name)
		{
			fixed (ImGuiContext* pcontext = &context)
			{
				fixed (byte* pname = name)
				{
					ImGuiWindow* ret = ImGuiWindowImGuiWindowNative((ImGuiContext*)pcontext, (byte*)pname);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_ImGuiWindow")]
		[return: NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public static ImGuiWindow* ImGuiWindowImGuiWindow([NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "ImGuiContext*")] ref ImGuiContext context, [NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "const char*")] string name)
		{
			fixed (ImGuiContext* pcontext = &context)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (name != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(name);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				ImGuiWindow* ret = ImGuiWindowImGuiWindowNative((ImGuiContext*)pcontext, pStr0);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		internal static void ImGuiWindowDestroyNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<ImGuiWindow*, void>)vt[946])(self);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)vt[946])((nint)self);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiWindowDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self)
		{
			ImGuiWindowDestroyNative(self);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ImGuiWindowDestroy([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ref ImGuiWindow self)
		{
			fixed (ImGuiWindow* pself = &self)
			{
				ImGuiWindowDestroyNative((ImGuiWindow*)pself);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		internal static uint ImGuiWindowGetIDNative([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] byte* str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<ImGuiWindow*, byte*, byte*, uint>)vt[947])(self, str, strEnd);
			#else
			return (uint)((delegate* unmanaged[Cdecl]<nint, nint, nint, uint>)vt[947])((nint)self, (nint)str, (nint)strEnd);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] byte* str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			uint ret = ImGuiWindowGetIDNative(self, str, strEnd);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ref ImGuiWindow self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] byte* str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			fixed (ImGuiWindow* pself = &self)
			{
				uint ret = ImGuiWindowGetIDNative((ImGuiWindow*)pself, str, strEnd);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] ref byte str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			fixed (byte* pstr = &str)
			{
				uint ret = ImGuiWindowGetIDNative(self, (byte*)pstr, strEnd);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			fixed (byte* pstr = str)
			{
				uint ret = ImGuiWindowGetIDNative(self, (byte*)pstr, strEnd);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] string str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (str != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(str);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(str, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			uint ret = ImGuiWindowGetIDNative(self, pStr0, strEnd);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ref ImGuiWindow self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] ref byte str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			fixed (ImGuiWindow* pself = &self)
			{
				fixed (byte* pstr = &str)
				{
					uint ret = ImGuiWindowGetIDNative((ImGuiWindow*)pself, (byte*)pstr, strEnd);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ref ImGuiWindow self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			fixed (ImGuiWindow* pself = &self)
			{
				fixed (byte* pstr = str)
				{
					uint ret = ImGuiWindowGetIDNative((ImGuiWindow*)pself, (byte*)pstr, strEnd);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ref ImGuiWindow self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] string str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] byte* strEnd)
		{
			fixed (ImGuiWindow* pself = &self)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (str != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(str);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(str, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				uint ret = ImGuiWindowGetIDNative((ImGuiWindow*)pself, pStr0, strEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] byte* str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte strEnd)
		{
			fixed (byte* pstrEnd = &strEnd)
			{
				uint ret = ImGuiWindowGetIDNative(self, str, (byte*)pstrEnd);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] byte* str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] ReadOnlySpan<byte> strEnd)
		{
			fixed (byte* pstrEnd = strEnd)
			{
				uint ret = ImGuiWindowGetIDNative(self, str, (byte*)pstrEnd);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ImGuiWindow* self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] byte* str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] string strEnd)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (strEnd != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(strEnd);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(strEnd, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			uint ret = ImGuiWindowGetIDNative(self, str, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiWindow_GetID_Str")]
		[return: NativeName(NativeNameType.Type, "ImGuiID")]
		public static uint ImGuiWindowGetID([NativeName(NativeNameType.Param, "self")] [NativeName(NativeNameType.Type, "ImGuiWindow*")] ref ImGuiWindow self, [NativeName(NativeNameType.Param, "str")] [NativeName(NativeNameType.Type, "const char*")] byte* str, [NativeName(NativeNameType.Param, "str_end")] [NativeName(NativeNameType.Type, "const char*")] ref byte strEnd)
		{
			fixed (ImGuiWindow* pself = &self)
			{
				fixed (byte* pstrEnd = &strEnd)
				{
					uint ret = ImGuiWindowGetIDNative((ImGuiWindow*)pself, str, (byte*)pstrEnd);
					return ret;
				}
			}
		}
	}
}
