// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiWindowTempData")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiWindowTempData
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CursorPos")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 CursorPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CursorPosPrevLine")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 CursorPosPrevLine;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CursorStartPos")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 CursorStartPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CursorMaxPos")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 CursorMaxPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IdealMaxPos")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 IdealMaxPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrLineSize")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 CurrLineSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PrevLineSize")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 PrevLineSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrLineTextBaseOffset")]
		[NativeName(NativeNameType.Type, "float")]
		public float CurrLineTextBaseOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PrevLineTextBaseOffset")]
		[NativeName(NativeNameType.Type, "float")]
		public float PrevLineTextBaseOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsSameLine")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsSameLine;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsSetPos")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsSetPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Indent")]
		[NativeName(NativeNameType.Type, "ImVec1")]
		public ImVec1 Indent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsOffset")]
		[NativeName(NativeNameType.Type, "ImVec1")]
		public ImVec1 ColumnsOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GroupOffset")]
		[NativeName(NativeNameType.Type, "ImVec1")]
		public ImVec1 GroupOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CursorStartPosLossyness")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 CursorStartPosLossyness;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavLayerCurrent")]
		[NativeName(NativeNameType.Type, "ImGuiNavLayer")]
		public ImGuiNavLayer NavLayerCurrent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavLayersActiveMask")]
		[NativeName(NativeNameType.Type, "short")]
		public short NavLayersActiveMask;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavLayersActiveMaskNext")]
		[NativeName(NativeNameType.Type, "short")]
		public short NavLayersActiveMaskNext;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavIsScrollPushableX")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte NavIsScrollPushableX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavHideHighlightOneFrame")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte NavHideHighlightOneFrame;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavWindowHasScrollY")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte NavWindowHasScrollY;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MenuBarAppending")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte MenuBarAppending;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MenuBarOffset")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 MenuBarOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MenuColumns")]
		[NativeName(NativeNameType.Type, "ImGuiMenuColumns")]
		public ImGuiMenuColumns MenuColumns;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TreeDepth")]
		[NativeName(NativeNameType.Type, "int")]
		public int TreeDepth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TreeHasStackDataDepthMask")]
		[NativeName(NativeNameType.Type, "ImU32")]
		public uint TreeHasStackDataDepthMask;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ChildWindows")]
		[NativeName(NativeNameType.Type, "ImVector_ImGuiWindowPtr")]
		public ImVectorImGuiWindowPtr ChildWindows;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "StateStorage")]
		[NativeName(NativeNameType.Type, "ImGuiStorage*")]
		public unsafe ImGuiStorage* StateStorage;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrentColumns")]
		[NativeName(NativeNameType.Type, "ImGuiOldColumns*")]
		public unsafe ImGuiOldColumns* CurrentColumns;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrentTableIdx")]
		[NativeName(NativeNameType.Type, "int")]
		public int CurrentTableIdx;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LayoutType")]
		[NativeName(NativeNameType.Type, "ImGuiLayoutType")]
		public ImGuiLayoutType LayoutType;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ParentLayoutType")]
		[NativeName(NativeNameType.Type, "ImGuiLayoutType")]
		public ImGuiLayoutType ParentLayoutType;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ModalDimBgColor")]
		[NativeName(NativeNameType.Type, "ImU32")]
		public uint ModalDimBgColor;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ItemWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float ItemWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TextWrapPos")]
		[NativeName(NativeNameType.Type, "float")]
		public float TextWrapPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ItemWidthStack")]
		[NativeName(NativeNameType.Type, "ImVector_float")]
		public ImVectorFloat ItemWidthStack;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TextWrapPosStack")]
		[NativeName(NativeNameType.Type, "ImVector_float")]
		public ImVectorFloat TextWrapPosStack;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiWindowTempData(Vector2 cursorPos = default, Vector2 cursorPosPrevLine = default, Vector2 cursorStartPos = default, Vector2 cursorMaxPos = default, Vector2 idealMaxPos = default, Vector2 currLineSize = default, Vector2 prevLineSize = default, float currLineTextBaseOffset = default, float prevLineTextBaseOffset = default, bool isSameLine = default, bool isSetPos = default, ImVec1 indent = default, ImVec1 columnsOffset = default, ImVec1 groupOffset = default, Vector2 cursorStartPosLossyness = default, ImGuiNavLayer navLayerCurrent = default, short navLayersActiveMask = default, short navLayersActiveMaskNext = default, bool navIsScrollPushableX = default, bool navHideHighlightOneFrame = default, bool navWindowHasScrollY = default, bool menuBarAppending = default, Vector2 menuBarOffset = default, ImGuiMenuColumns menuColumns = default, int treeDepth = default, uint treeHasStackDataDepthMask = default, ImVectorImGuiWindowPtr childWindows = default, ImGuiStorage* stateStorage = default, ImGuiOldColumns* currentColumns = default, int currentTableIdx = default, ImGuiLayoutType layoutType = default, ImGuiLayoutType parentLayoutType = default, uint modalDimBgColor = default, float itemWidth = default, float textWrapPos = default, ImVectorFloat itemWidthStack = default, ImVectorFloat textWrapPosStack = default)
		{
			CursorPos = cursorPos;
			CursorPosPrevLine = cursorPosPrevLine;
			CursorStartPos = cursorStartPos;
			CursorMaxPos = cursorMaxPos;
			IdealMaxPos = idealMaxPos;
			CurrLineSize = currLineSize;
			PrevLineSize = prevLineSize;
			CurrLineTextBaseOffset = currLineTextBaseOffset;
			PrevLineTextBaseOffset = prevLineTextBaseOffset;
			IsSameLine = isSameLine ? (byte)1 : (byte)0;
			IsSetPos = isSetPos ? (byte)1 : (byte)0;
			Indent = indent;
			ColumnsOffset = columnsOffset;
			GroupOffset = groupOffset;
			CursorStartPosLossyness = cursorStartPosLossyness;
			NavLayerCurrent = navLayerCurrent;
			NavLayersActiveMask = navLayersActiveMask;
			NavLayersActiveMaskNext = navLayersActiveMaskNext;
			NavIsScrollPushableX = navIsScrollPushableX ? (byte)1 : (byte)0;
			NavHideHighlightOneFrame = navHideHighlightOneFrame ? (byte)1 : (byte)0;
			NavWindowHasScrollY = navWindowHasScrollY ? (byte)1 : (byte)0;
			MenuBarAppending = menuBarAppending ? (byte)1 : (byte)0;
			MenuBarOffset = menuBarOffset;
			MenuColumns = menuColumns;
			TreeDepth = treeDepth;
			TreeHasStackDataDepthMask = treeHasStackDataDepthMask;
			ChildWindows = childWindows;
			StateStorage = stateStorage;
			CurrentColumns = currentColumns;
			CurrentTableIdx = currentTableIdx;
			LayoutType = layoutType;
			ParentLayoutType = parentLayoutType;
			ModalDimBgColor = modalDimBgColor;
			ItemWidth = itemWidth;
			TextWrapPos = textWrapPos;
			ItemWidthStack = itemWidthStack;
			TextWrapPosStack = textWrapPosStack;
		}


	}

}
