// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiTable")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTable
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ID")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint ID;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "ImGuiTableFlags")]
		public ImGuiTableFlags Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RawData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* RawData;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TempData")]
		[NativeName(NativeNameType.Type, "ImGuiTableTempData*")]
		public unsafe ImGuiTableTempData* TempData;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Columns")]
		[NativeName(NativeNameType.Type, "ImSpan_ImGuiTableColumn")]
		public ImSpanImGuiTableColumn Columns;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DisplayOrderToIndex")]
		[NativeName(NativeNameType.Type, "ImSpan_ImGuiTableColumnIdx")]
		public ImSpanImGuiTableColumnIdx DisplayOrderToIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowCellData")]
		[NativeName(NativeNameType.Type, "ImSpan_ImGuiTableCellData")]
		public ImSpanImGuiTableCellData RowCellData;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "EnabledMaskByDisplayOrder")]
		[NativeName(NativeNameType.Type, "ImBitArrayPtr")]
		public ImBitArrayPtr EnabledMaskByDisplayOrder;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "EnabledMaskByIndex")]
		[NativeName(NativeNameType.Type, "ImBitArrayPtr")]
		public ImBitArrayPtr EnabledMaskByIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "VisibleMaskByIndex")]
		[NativeName(NativeNameType.Type, "ImBitArrayPtr")]
		public ImBitArrayPtr VisibleMaskByIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SettingsLoadedFlags")]
		[NativeName(NativeNameType.Type, "ImGuiTableFlags")]
		public ImGuiTableFlags SettingsLoadedFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SettingsOffset")]
		[NativeName(NativeNameType.Type, "int")]
		public int SettingsOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastFrameActive")]
		[NativeName(NativeNameType.Type, "int")]
		public int LastFrameActive;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsCount")]
		[NativeName(NativeNameType.Type, "int")]
		public int ColumnsCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrentRow")]
		[NativeName(NativeNameType.Type, "int")]
		public int CurrentRow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrentColumn")]
		[NativeName(NativeNameType.Type, "int")]
		public int CurrentColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InstanceCurrent")]
		[NativeName(NativeNameType.Type, "ImS16")]
		public short InstanceCurrent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InstanceInteracted")]
		[NativeName(NativeNameType.Type, "ImS16")]
		public short InstanceInteracted;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowPosY1")]
		[NativeName(NativeNameType.Type, "float")]
		public float RowPosY1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowPosY2")]
		[NativeName(NativeNameType.Type, "float")]
		public float RowPosY2;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowMinHeight")]
		[NativeName(NativeNameType.Type, "float")]
		public float RowMinHeight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowCellPaddingY")]
		[NativeName(NativeNameType.Type, "float")]
		public float RowCellPaddingY;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowTextBaseline")]
		[NativeName(NativeNameType.Type, "float")]
		public float RowTextBaseline;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowIndentOffsetX")]
		[NativeName(NativeNameType.Type, "float")]
		public float RowIndentOffsetX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowFlags")]
		[NativeName(NativeNameType.Type, "ImGuiTableRowFlags")]
		public ImGuiTableRowFlags RowFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastRowFlags")]
		[NativeName(NativeNameType.Type, "ImGuiTableRowFlags")]
		public ImGuiTableRowFlags LastRowFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowBgColorCounter")]
		[NativeName(NativeNameType.Type, "int")]
		public int RowBgColorCounter;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowBgColor")]
		[NativeName(NativeNameType.Type, "ImU32[2]")]
		public uint RowBgColor_0;
		public uint RowBgColor_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BorderColorStrong")]
		[NativeName(NativeNameType.Type, "ImU32")]
		public uint BorderColorStrong;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BorderColorLight")]
		[NativeName(NativeNameType.Type, "ImU32")]
		public uint BorderColorLight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BorderX1")]
		[NativeName(NativeNameType.Type, "float")]
		public float BorderX1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BorderX2")]
		[NativeName(NativeNameType.Type, "float")]
		public float BorderX2;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HostIndentX")]
		[NativeName(NativeNameType.Type, "float")]
		public float HostIndentX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MinColumnWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinColumnWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "OuterPaddingX")]
		[NativeName(NativeNameType.Type, "float")]
		public float OuterPaddingX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CellPaddingX")]
		[NativeName(NativeNameType.Type, "float")]
		public float CellPaddingX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CellSpacingX1")]
		[NativeName(NativeNameType.Type, "float")]
		public float CellSpacingX1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CellSpacingX2")]
		[NativeName(NativeNameType.Type, "float")]
		public float CellSpacingX2;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InnerWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float InnerWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsGivenWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float ColumnsGivenWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsAutoFitWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float ColumnsAutoFitWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsStretchSumWeights")]
		[NativeName(NativeNameType.Type, "float")]
		public float ColumnsStretchSumWeights;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResizedColumnNextWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float ResizedColumnNextWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResizeLockMinContentsX2")]
		[NativeName(NativeNameType.Type, "float")]
		public float ResizeLockMinContentsX2;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RefScale")]
		[NativeName(NativeNameType.Type, "float")]
		public float RefScale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AngledHeadersHeight")]
		[NativeName(NativeNameType.Type, "float")]
		public float AngledHeadersHeight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AngledHeadersSlope")]
		[NativeName(NativeNameType.Type, "float")]
		public float AngledHeadersSlope;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "OuterRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect OuterRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InnerRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect InnerRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WorkRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect WorkRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InnerClipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect InnerClipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BgClipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect BgClipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Bg0ClipRectForDrawCmd")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect Bg0ClipRectForDrawCmd;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Bg2ClipRectForDrawCmd")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect Bg2ClipRectForDrawCmd;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HostClipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect HostClipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HostBackupInnerClipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect HostBackupInnerClipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "OuterWindow")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* OuterWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InnerWindow")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* InnerWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsNames")]
		[NativeName(NativeNameType.Type, "ImGuiTextBuffer")]
		public ImGuiTextBuffer ColumnsNames;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DrawSplitter")]
		[NativeName(NativeNameType.Type, "ImDrawListSplitter*")]
		public unsafe ImDrawListSplitter* DrawSplitter;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InstanceDataFirst")]
		[NativeName(NativeNameType.Type, "ImGuiTableInstanceData")]
		public ImGuiTableInstanceData InstanceDataFirst;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InstanceDataExtra")]
		[NativeName(NativeNameType.Type, "ImVector_ImGuiTableInstanceData")]
		public ImVectorImGuiTableInstanceData InstanceDataExtra;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortSpecsSingle")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnSortSpecs")]
		public ImGuiTableColumnSortSpecs SortSpecsSingle;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortSpecsMulti")]
		[NativeName(NativeNameType.Type, "ImVector_ImGuiTableColumnSortSpecs")]
		public ImVectorImGuiTableColumnSortSpecs SortSpecsMulti;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortSpecs")]
		[NativeName(NativeNameType.Type, "ImGuiTableSortSpecs")]
		public ImGuiTableSortSpecs SortSpecs;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortSpecsCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte SortSpecsCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsEnabledCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ColumnsEnabledCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsEnabledFixedCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ColumnsEnabledFixedCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DeclColumnsCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte DeclColumnsCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AngledHeadersCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte AngledHeadersCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HoveredColumnBody")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte HoveredColumnBody;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HoveredColumnBorder")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte HoveredColumnBorder;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HighlightColumnHeader")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte HighlightColumnHeader;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AutoFitSingleColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte AutoFitSingleColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResizedColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ResizedColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastResizedColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte LastResizedColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HeldHeaderColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte HeldHeaderColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ReorderColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ReorderColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ReorderColumnDir")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ReorderColumnDir;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LeftMostEnabledColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte LeftMostEnabledColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RightMostEnabledColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte RightMostEnabledColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LeftMostStretchedColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte LeftMostStretchedColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RightMostStretchedColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte RightMostStretchedColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContextPopupColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ContextPopupColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FreezeRowsRequest")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte FreezeRowsRequest;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FreezeRowsCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte FreezeRowsCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FreezeColumnsRequest")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte FreezeColumnsRequest;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FreezeColumnsCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte FreezeColumnsCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RowCellDataCurrent")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte RowCellDataCurrent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DummyDrawChannel")]
		[NativeName(NativeNameType.Type, "ImGuiTableDrawChannelIdx")]
		public byte DummyDrawChannel;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Bg2DrawChannelCurrent")]
		[NativeName(NativeNameType.Type, "ImGuiTableDrawChannelIdx")]
		public byte Bg2DrawChannelCurrent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Bg2DrawChannelUnfrozen")]
		[NativeName(NativeNameType.Type, "ImGuiTableDrawChannelIdx")]
		public byte Bg2DrawChannelUnfrozen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsLayoutLocked")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsLayoutLocked;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsInsideRow")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsInsideRow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsInitializing")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsInitializing;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsSortSpecsDirty")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsSortSpecsDirty;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsUsingHeaders")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsUsingHeaders;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsContextPopupOpen")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsContextPopupOpen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DisableDefaultContextMenu")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte DisableDefaultContextMenu;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsSettingsRequestLoad")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsSettingsRequestLoad;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsSettingsDirty")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsSettingsDirty;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsDefaultDisplayOrder")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsDefaultDisplayOrder;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsResetAllRequest")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsResetAllRequest;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsResetDisplayOrderRequest")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsResetDisplayOrderRequest;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsUnfrozenRows")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsUnfrozenRows;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsDefaultSizingPolicy")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsDefaultSizingPolicy;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsActiveIdAliveBeforeTable")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsActiveIdAliveBeforeTable;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsActiveIdInTable")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsActiveIdInTable;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HasScrollbarYCurr")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte HasScrollbarYCurr;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HasScrollbarYPrev")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte HasScrollbarYPrev;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MemoryCompacted")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte MemoryCompacted;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HostSkipItems")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte HostSkipItems;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiTable(uint id = default, ImGuiTableFlags flags = default, void* rawData = default, ImGuiTableTempData* tempData = default, ImSpanImGuiTableColumn columns = default, ImSpanImGuiTableColumnIdx displayOrderToIndex = default, ImSpanImGuiTableCellData rowCellData = default, ImBitArrayPtr enabledMaskByDisplayOrder = default, ImBitArrayPtr enabledMaskByIndex = default, ImBitArrayPtr visibleMaskByIndex = default, ImGuiTableFlags settingsLoadedFlags = default, int settingsOffset = default, int lastFrameActive = default, int columnsCount = default, int currentRow = default, int currentColumn = default, short instanceCurrent = default, short instanceInteracted = default, float rowPosY1 = default, float rowPosY2 = default, float rowMinHeight = default, float rowCellPaddingY = default, float rowTextBaseline = default, float rowIndentOffsetX = default, ImGuiTableRowFlags rowFlags = default, ImGuiTableRowFlags lastRowFlags = default, int rowBgColorCounter = default, uint* rowBgColor = default, uint borderColorStrong = default, uint borderColorLight = default, float borderX1 = default, float borderX2 = default, float hostIndentX = default, float minColumnWidth = default, float outerPaddingX = default, float cellPaddingX = default, float cellSpacingX1 = default, float cellSpacingX2 = default, float innerWidth = default, float columnsGivenWidth = default, float columnsAutoFitWidth = default, float columnsStretchSumWeights = default, float resizedColumnNextWidth = default, float resizeLockMinContentsX2 = default, float refScale = default, float angledHeadersHeight = default, float angledHeadersSlope = default, ImRect outerRect = default, ImRect innerRect = default, ImRect workRect = default, ImRect innerClipRect = default, ImRect bgClipRect = default, ImRect bg0ClipRectForDrawCmd = default, ImRect bg2ClipRectForDrawCmd = default, ImRect hostClipRect = default, ImRect hostBackupInnerClipRect = default, ImGuiWindow* outerWindow = default, ImGuiWindow* innerWindow = default, ImGuiTextBuffer columnsNames = default, ImDrawListSplitter* drawSplitter = default, ImGuiTableInstanceData instanceDataFirst = default, ImVectorImGuiTableInstanceData instanceDataExtra = default, ImGuiTableColumnSortSpecs sortSpecsSingle = default, ImVectorImGuiTableColumnSortSpecs sortSpecsMulti = default, ImGuiTableSortSpecs sortSpecs = default, sbyte sortSpecsCount = default, sbyte columnsEnabledCount = default, sbyte columnsEnabledFixedCount = default, sbyte declColumnsCount = default, sbyte angledHeadersCount = default, sbyte hoveredColumnBody = default, sbyte hoveredColumnBorder = default, sbyte highlightColumnHeader = default, sbyte autoFitSingleColumn = default, sbyte resizedColumn = default, sbyte lastResizedColumn = default, sbyte heldHeaderColumn = default, sbyte reorderColumn = default, sbyte reorderColumnDir = default, sbyte leftMostEnabledColumn = default, sbyte rightMostEnabledColumn = default, sbyte leftMostStretchedColumn = default, sbyte rightMostStretchedColumn = default, sbyte contextPopupColumn = default, sbyte freezeRowsRequest = default, sbyte freezeRowsCount = default, sbyte freezeColumnsRequest = default, sbyte freezeColumnsCount = default, sbyte rowCellDataCurrent = default, byte dummyDrawChannel = default, byte bg2DrawChannelCurrent = default, byte bg2DrawChannelUnfrozen = default, bool isLayoutLocked = default, bool isInsideRow = default, bool isInitializing = default, bool isSortSpecsDirty = default, bool isUsingHeaders = default, bool isContextPopupOpen = default, bool disableDefaultContextMenu = default, bool isSettingsRequestLoad = default, bool isSettingsDirty = default, bool isDefaultDisplayOrder = default, bool isResetAllRequest = default, bool isResetDisplayOrderRequest = default, bool isUnfrozenRows = default, bool isDefaultSizingPolicy = default, bool isActiveIdAliveBeforeTable = default, bool isActiveIdInTable = default, bool hasScrollbarYCurr = default, bool hasScrollbarYPrev = default, bool memoryCompacted = default, bool hostSkipItems = default)
		{
			ID = id;
			Flags = flags;
			RawData = rawData;
			TempData = tempData;
			Columns = columns;
			DisplayOrderToIndex = displayOrderToIndex;
			RowCellData = rowCellData;
			EnabledMaskByDisplayOrder = enabledMaskByDisplayOrder;
			EnabledMaskByIndex = enabledMaskByIndex;
			VisibleMaskByIndex = visibleMaskByIndex;
			SettingsLoadedFlags = settingsLoadedFlags;
			SettingsOffset = settingsOffset;
			LastFrameActive = lastFrameActive;
			ColumnsCount = columnsCount;
			CurrentRow = currentRow;
			CurrentColumn = currentColumn;
			InstanceCurrent = instanceCurrent;
			InstanceInteracted = instanceInteracted;
			RowPosY1 = rowPosY1;
			RowPosY2 = rowPosY2;
			RowMinHeight = rowMinHeight;
			RowCellPaddingY = rowCellPaddingY;
			RowTextBaseline = rowTextBaseline;
			RowIndentOffsetX = rowIndentOffsetX;
			RowFlags = rowFlags;
			LastRowFlags = lastRowFlags;
			RowBgColorCounter = rowBgColorCounter;
			if (rowBgColor != default(uint*))
			{
				RowBgColor_0 = rowBgColor[0];
				RowBgColor_1 = rowBgColor[1];
			}
			BorderColorStrong = borderColorStrong;
			BorderColorLight = borderColorLight;
			BorderX1 = borderX1;
			BorderX2 = borderX2;
			HostIndentX = hostIndentX;
			MinColumnWidth = minColumnWidth;
			OuterPaddingX = outerPaddingX;
			CellPaddingX = cellPaddingX;
			CellSpacingX1 = cellSpacingX1;
			CellSpacingX2 = cellSpacingX2;
			InnerWidth = innerWidth;
			ColumnsGivenWidth = columnsGivenWidth;
			ColumnsAutoFitWidth = columnsAutoFitWidth;
			ColumnsStretchSumWeights = columnsStretchSumWeights;
			ResizedColumnNextWidth = resizedColumnNextWidth;
			ResizeLockMinContentsX2 = resizeLockMinContentsX2;
			RefScale = refScale;
			AngledHeadersHeight = angledHeadersHeight;
			AngledHeadersSlope = angledHeadersSlope;
			OuterRect = outerRect;
			InnerRect = innerRect;
			WorkRect = workRect;
			InnerClipRect = innerClipRect;
			BgClipRect = bgClipRect;
			Bg0ClipRectForDrawCmd = bg0ClipRectForDrawCmd;
			Bg2ClipRectForDrawCmd = bg2ClipRectForDrawCmd;
			HostClipRect = hostClipRect;
			HostBackupInnerClipRect = hostBackupInnerClipRect;
			OuterWindow = outerWindow;
			InnerWindow = innerWindow;
			ColumnsNames = columnsNames;
			DrawSplitter = drawSplitter;
			InstanceDataFirst = instanceDataFirst;
			InstanceDataExtra = instanceDataExtra;
			SortSpecsSingle = sortSpecsSingle;
			SortSpecsMulti = sortSpecsMulti;
			SortSpecs = sortSpecs;
			SortSpecsCount = sortSpecsCount;
			ColumnsEnabledCount = columnsEnabledCount;
			ColumnsEnabledFixedCount = columnsEnabledFixedCount;
			DeclColumnsCount = declColumnsCount;
			AngledHeadersCount = angledHeadersCount;
			HoveredColumnBody = hoveredColumnBody;
			HoveredColumnBorder = hoveredColumnBorder;
			HighlightColumnHeader = highlightColumnHeader;
			AutoFitSingleColumn = autoFitSingleColumn;
			ResizedColumn = resizedColumn;
			LastResizedColumn = lastResizedColumn;
			HeldHeaderColumn = heldHeaderColumn;
			ReorderColumn = reorderColumn;
			ReorderColumnDir = reorderColumnDir;
			LeftMostEnabledColumn = leftMostEnabledColumn;
			RightMostEnabledColumn = rightMostEnabledColumn;
			LeftMostStretchedColumn = leftMostStretchedColumn;
			RightMostStretchedColumn = rightMostStretchedColumn;
			ContextPopupColumn = contextPopupColumn;
			FreezeRowsRequest = freezeRowsRequest;
			FreezeRowsCount = freezeRowsCount;
			FreezeColumnsRequest = freezeColumnsRequest;
			FreezeColumnsCount = freezeColumnsCount;
			RowCellDataCurrent = rowCellDataCurrent;
			DummyDrawChannel = dummyDrawChannel;
			Bg2DrawChannelCurrent = bg2DrawChannelCurrent;
			Bg2DrawChannelUnfrozen = bg2DrawChannelUnfrozen;
			IsLayoutLocked = isLayoutLocked ? (byte)1 : (byte)0;
			IsInsideRow = isInsideRow ? (byte)1 : (byte)0;
			IsInitializing = isInitializing ? (byte)1 : (byte)0;
			IsSortSpecsDirty = isSortSpecsDirty ? (byte)1 : (byte)0;
			IsUsingHeaders = isUsingHeaders ? (byte)1 : (byte)0;
			IsContextPopupOpen = isContextPopupOpen ? (byte)1 : (byte)0;
			DisableDefaultContextMenu = disableDefaultContextMenu ? (byte)1 : (byte)0;
			IsSettingsRequestLoad = isSettingsRequestLoad ? (byte)1 : (byte)0;
			IsSettingsDirty = isSettingsDirty ? (byte)1 : (byte)0;
			IsDefaultDisplayOrder = isDefaultDisplayOrder ? (byte)1 : (byte)0;
			IsResetAllRequest = isResetAllRequest ? (byte)1 : (byte)0;
			IsResetDisplayOrderRequest = isResetDisplayOrderRequest ? (byte)1 : (byte)0;
			IsUnfrozenRows = isUnfrozenRows ? (byte)1 : (byte)0;
			IsDefaultSizingPolicy = isDefaultSizingPolicy ? (byte)1 : (byte)0;
			IsActiveIdAliveBeforeTable = isActiveIdAliveBeforeTable ? (byte)1 : (byte)0;
			IsActiveIdInTable = isActiveIdInTable ? (byte)1 : (byte)0;
			HasScrollbarYCurr = hasScrollbarYCurr ? (byte)1 : (byte)0;
			HasScrollbarYPrev = hasScrollbarYPrev ? (byte)1 : (byte)0;
			MemoryCompacted = memoryCompacted ? (byte)1 : (byte)0;
			HostSkipItems = hostSkipItems ? (byte)1 : (byte)0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiTable(uint id = default, ImGuiTableFlags flags = default, void* rawData = default, ImGuiTableTempData* tempData = default, ImSpanImGuiTableColumn columns = default, ImSpanImGuiTableColumnIdx displayOrderToIndex = default, ImSpanImGuiTableCellData rowCellData = default, ImBitArrayPtr enabledMaskByDisplayOrder = default, ImBitArrayPtr enabledMaskByIndex = default, ImBitArrayPtr visibleMaskByIndex = default, ImGuiTableFlags settingsLoadedFlags = default, int settingsOffset = default, int lastFrameActive = default, int columnsCount = default, int currentRow = default, int currentColumn = default, short instanceCurrent = default, short instanceInteracted = default, float rowPosY1 = default, float rowPosY2 = default, float rowMinHeight = default, float rowCellPaddingY = default, float rowTextBaseline = default, float rowIndentOffsetX = default, ImGuiTableRowFlags rowFlags = default, ImGuiTableRowFlags lastRowFlags = default, int rowBgColorCounter = default, Span<uint> rowBgColor = default, uint borderColorStrong = default, uint borderColorLight = default, float borderX1 = default, float borderX2 = default, float hostIndentX = default, float minColumnWidth = default, float outerPaddingX = default, float cellPaddingX = default, float cellSpacingX1 = default, float cellSpacingX2 = default, float innerWidth = default, float columnsGivenWidth = default, float columnsAutoFitWidth = default, float columnsStretchSumWeights = default, float resizedColumnNextWidth = default, float resizeLockMinContentsX2 = default, float refScale = default, float angledHeadersHeight = default, float angledHeadersSlope = default, ImRect outerRect = default, ImRect innerRect = default, ImRect workRect = default, ImRect innerClipRect = default, ImRect bgClipRect = default, ImRect bg0ClipRectForDrawCmd = default, ImRect bg2ClipRectForDrawCmd = default, ImRect hostClipRect = default, ImRect hostBackupInnerClipRect = default, ImGuiWindow* outerWindow = default, ImGuiWindow* innerWindow = default, ImGuiTextBuffer columnsNames = default, ImDrawListSplitter* drawSplitter = default, ImGuiTableInstanceData instanceDataFirst = default, ImVectorImGuiTableInstanceData instanceDataExtra = default, ImGuiTableColumnSortSpecs sortSpecsSingle = default, ImVectorImGuiTableColumnSortSpecs sortSpecsMulti = default, ImGuiTableSortSpecs sortSpecs = default, sbyte sortSpecsCount = default, sbyte columnsEnabledCount = default, sbyte columnsEnabledFixedCount = default, sbyte declColumnsCount = default, sbyte angledHeadersCount = default, sbyte hoveredColumnBody = default, sbyte hoveredColumnBorder = default, sbyte highlightColumnHeader = default, sbyte autoFitSingleColumn = default, sbyte resizedColumn = default, sbyte lastResizedColumn = default, sbyte heldHeaderColumn = default, sbyte reorderColumn = default, sbyte reorderColumnDir = default, sbyte leftMostEnabledColumn = default, sbyte rightMostEnabledColumn = default, sbyte leftMostStretchedColumn = default, sbyte rightMostStretchedColumn = default, sbyte contextPopupColumn = default, sbyte freezeRowsRequest = default, sbyte freezeRowsCount = default, sbyte freezeColumnsRequest = default, sbyte freezeColumnsCount = default, sbyte rowCellDataCurrent = default, byte dummyDrawChannel = default, byte bg2DrawChannelCurrent = default, byte bg2DrawChannelUnfrozen = default, bool isLayoutLocked = default, bool isInsideRow = default, bool isInitializing = default, bool isSortSpecsDirty = default, bool isUsingHeaders = default, bool isContextPopupOpen = default, bool disableDefaultContextMenu = default, bool isSettingsRequestLoad = default, bool isSettingsDirty = default, bool isDefaultDisplayOrder = default, bool isResetAllRequest = default, bool isResetDisplayOrderRequest = default, bool isUnfrozenRows = default, bool isDefaultSizingPolicy = default, bool isActiveIdAliveBeforeTable = default, bool isActiveIdInTable = default, bool hasScrollbarYCurr = default, bool hasScrollbarYPrev = default, bool memoryCompacted = default, bool hostSkipItems = default)
		{
			ID = id;
			Flags = flags;
			RawData = rawData;
			TempData = tempData;
			Columns = columns;
			DisplayOrderToIndex = displayOrderToIndex;
			RowCellData = rowCellData;
			EnabledMaskByDisplayOrder = enabledMaskByDisplayOrder;
			EnabledMaskByIndex = enabledMaskByIndex;
			VisibleMaskByIndex = visibleMaskByIndex;
			SettingsLoadedFlags = settingsLoadedFlags;
			SettingsOffset = settingsOffset;
			LastFrameActive = lastFrameActive;
			ColumnsCount = columnsCount;
			CurrentRow = currentRow;
			CurrentColumn = currentColumn;
			InstanceCurrent = instanceCurrent;
			InstanceInteracted = instanceInteracted;
			RowPosY1 = rowPosY1;
			RowPosY2 = rowPosY2;
			RowMinHeight = rowMinHeight;
			RowCellPaddingY = rowCellPaddingY;
			RowTextBaseline = rowTextBaseline;
			RowIndentOffsetX = rowIndentOffsetX;
			RowFlags = rowFlags;
			LastRowFlags = lastRowFlags;
			RowBgColorCounter = rowBgColorCounter;
			if (rowBgColor != default(Span<uint>))
			{
				RowBgColor_0 = rowBgColor[0];
				RowBgColor_1 = rowBgColor[1];
			}
			BorderColorStrong = borderColorStrong;
			BorderColorLight = borderColorLight;
			BorderX1 = borderX1;
			BorderX2 = borderX2;
			HostIndentX = hostIndentX;
			MinColumnWidth = minColumnWidth;
			OuterPaddingX = outerPaddingX;
			CellPaddingX = cellPaddingX;
			CellSpacingX1 = cellSpacingX1;
			CellSpacingX2 = cellSpacingX2;
			InnerWidth = innerWidth;
			ColumnsGivenWidth = columnsGivenWidth;
			ColumnsAutoFitWidth = columnsAutoFitWidth;
			ColumnsStretchSumWeights = columnsStretchSumWeights;
			ResizedColumnNextWidth = resizedColumnNextWidth;
			ResizeLockMinContentsX2 = resizeLockMinContentsX2;
			RefScale = refScale;
			AngledHeadersHeight = angledHeadersHeight;
			AngledHeadersSlope = angledHeadersSlope;
			OuterRect = outerRect;
			InnerRect = innerRect;
			WorkRect = workRect;
			InnerClipRect = innerClipRect;
			BgClipRect = bgClipRect;
			Bg0ClipRectForDrawCmd = bg0ClipRectForDrawCmd;
			Bg2ClipRectForDrawCmd = bg2ClipRectForDrawCmd;
			HostClipRect = hostClipRect;
			HostBackupInnerClipRect = hostBackupInnerClipRect;
			OuterWindow = outerWindow;
			InnerWindow = innerWindow;
			ColumnsNames = columnsNames;
			DrawSplitter = drawSplitter;
			InstanceDataFirst = instanceDataFirst;
			InstanceDataExtra = instanceDataExtra;
			SortSpecsSingle = sortSpecsSingle;
			SortSpecsMulti = sortSpecsMulti;
			SortSpecs = sortSpecs;
			SortSpecsCount = sortSpecsCount;
			ColumnsEnabledCount = columnsEnabledCount;
			ColumnsEnabledFixedCount = columnsEnabledFixedCount;
			DeclColumnsCount = declColumnsCount;
			AngledHeadersCount = angledHeadersCount;
			HoveredColumnBody = hoveredColumnBody;
			HoveredColumnBorder = hoveredColumnBorder;
			HighlightColumnHeader = highlightColumnHeader;
			AutoFitSingleColumn = autoFitSingleColumn;
			ResizedColumn = resizedColumn;
			LastResizedColumn = lastResizedColumn;
			HeldHeaderColumn = heldHeaderColumn;
			ReorderColumn = reorderColumn;
			ReorderColumnDir = reorderColumnDir;
			LeftMostEnabledColumn = leftMostEnabledColumn;
			RightMostEnabledColumn = rightMostEnabledColumn;
			LeftMostStretchedColumn = leftMostStretchedColumn;
			RightMostStretchedColumn = rightMostStretchedColumn;
			ContextPopupColumn = contextPopupColumn;
			FreezeRowsRequest = freezeRowsRequest;
			FreezeRowsCount = freezeRowsCount;
			FreezeColumnsRequest = freezeColumnsRequest;
			FreezeColumnsCount = freezeColumnsCount;
			RowCellDataCurrent = rowCellDataCurrent;
			DummyDrawChannel = dummyDrawChannel;
			Bg2DrawChannelCurrent = bg2DrawChannelCurrent;
			Bg2DrawChannelUnfrozen = bg2DrawChannelUnfrozen;
			IsLayoutLocked = isLayoutLocked ? (byte)1 : (byte)0;
			IsInsideRow = isInsideRow ? (byte)1 : (byte)0;
			IsInitializing = isInitializing ? (byte)1 : (byte)0;
			IsSortSpecsDirty = isSortSpecsDirty ? (byte)1 : (byte)0;
			IsUsingHeaders = isUsingHeaders ? (byte)1 : (byte)0;
			IsContextPopupOpen = isContextPopupOpen ? (byte)1 : (byte)0;
			DisableDefaultContextMenu = disableDefaultContextMenu ? (byte)1 : (byte)0;
			IsSettingsRequestLoad = isSettingsRequestLoad ? (byte)1 : (byte)0;
			IsSettingsDirty = isSettingsDirty ? (byte)1 : (byte)0;
			IsDefaultDisplayOrder = isDefaultDisplayOrder ? (byte)1 : (byte)0;
			IsResetAllRequest = isResetAllRequest ? (byte)1 : (byte)0;
			IsResetDisplayOrderRequest = isResetDisplayOrderRequest ? (byte)1 : (byte)0;
			IsUnfrozenRows = isUnfrozenRows ? (byte)1 : (byte)0;
			IsDefaultSizingPolicy = isDefaultSizingPolicy ? (byte)1 : (byte)0;
			IsActiveIdAliveBeforeTable = isActiveIdAliveBeforeTable ? (byte)1 : (byte)0;
			IsActiveIdInTable = isActiveIdInTable ? (byte)1 : (byte)0;
			HasScrollbarYCurr = hasScrollbarYCurr ? (byte)1 : (byte)0;
			HasScrollbarYPrev = hasScrollbarYPrev ? (byte)1 : (byte)0;
			MemoryCompacted = memoryCompacted ? (byte)1 : (byte)0;
			HostSkipItems = hostSkipItems ? (byte)1 : (byte)0;
		}


	}

}
