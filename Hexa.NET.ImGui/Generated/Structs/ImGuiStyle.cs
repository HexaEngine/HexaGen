// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiStyle")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiStyle
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Alpha")]
		[NativeName(NativeNameType.Type, "float")]
		public float Alpha;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DisabledAlpha")]
		[NativeName(NativeNameType.Type, "float")]
		public float DisabledAlpha;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowPadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 WindowPadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float WindowRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float WindowBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowMinSize")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 WindowMinSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowTitleAlign")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 WindowTitleAlign;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowMenuButtonPosition")]
		[NativeName(NativeNameType.Type, "ImGuiDir")]
		public ImGuiDir WindowMenuButtonPosition;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ChildRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float ChildRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ChildBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float ChildBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PopupRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float PopupRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PopupBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float PopupBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FramePadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 FramePadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FrameRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float FrameRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FrameBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float FrameBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ItemSpacing")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ItemSpacing;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ItemInnerSpacing")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ItemInnerSpacing;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CellPadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 CellPadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TouchExtraPadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 TouchExtraPadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IndentSpacing")]
		[NativeName(NativeNameType.Type, "float")]
		public float IndentSpacing;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsMinSpacing")]
		[NativeName(NativeNameType.Type, "float")]
		public float ColumnsMinSpacing;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollbarSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float ScrollbarSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollbarRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float ScrollbarRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GrabMinSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float GrabMinSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GrabRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float GrabRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LogSliderDeadzone")]
		[NativeName(NativeNameType.Type, "float")]
		public float LogSliderDeadzone;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TabRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float TabRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TabBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float TabBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TabMinWidthForCloseButton")]
		[NativeName(NativeNameType.Type, "float")]
		public float TabMinWidthForCloseButton;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TabBarBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float TabBarBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TabBarOverlineSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float TabBarOverlineSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TableAngledHeadersAngle")]
		[NativeName(NativeNameType.Type, "float")]
		public float TableAngledHeadersAngle;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TableAngledHeadersTextAlign")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 TableAngledHeadersTextAlign;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColorButtonPosition")]
		[NativeName(NativeNameType.Type, "ImGuiDir")]
		public ImGuiDir ColorButtonPosition;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ButtonTextAlign")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ButtonTextAlign;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SelectableTextAlign")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 SelectableTextAlign;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SeparatorTextBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float SeparatorTextBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SeparatorTextAlign")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 SeparatorTextAlign;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SeparatorTextPadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 SeparatorTextPadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DisplayWindowPadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 DisplayWindowPadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DisplaySafeAreaPadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 DisplaySafeAreaPadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockingSeparatorSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float DockingSeparatorSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MouseCursorScale")]
		[NativeName(NativeNameType.Type, "float")]
		public float MouseCursorScale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AntiAliasedLines")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte AntiAliasedLines;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AntiAliasedLinesUseTex")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte AntiAliasedLinesUseTex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AntiAliasedFill")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte AntiAliasedFill;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurveTessellationTol")]
		[NativeName(NativeNameType.Type, "float")]
		public float CurveTessellationTol;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CircleTessellationMaxError")]
		[NativeName(NativeNameType.Type, "float")]
		public float CircleTessellationMaxError;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Colors")]
		[NativeName(NativeNameType.Type, "ImVec4[58]")]
		public Vector4 Colors_0;
		public Vector4 Colors_1;
		public Vector4 Colors_2;
		public Vector4 Colors_3;
		public Vector4 Colors_4;
		public Vector4 Colors_5;
		public Vector4 Colors_6;
		public Vector4 Colors_7;
		public Vector4 Colors_8;
		public Vector4 Colors_9;
		public Vector4 Colors_10;
		public Vector4 Colors_11;
		public Vector4 Colors_12;
		public Vector4 Colors_13;
		public Vector4 Colors_14;
		public Vector4 Colors_15;
		public Vector4 Colors_16;
		public Vector4 Colors_17;
		public Vector4 Colors_18;
		public Vector4 Colors_19;
		public Vector4 Colors_20;
		public Vector4 Colors_21;
		public Vector4 Colors_22;
		public Vector4 Colors_23;
		public Vector4 Colors_24;
		public Vector4 Colors_25;
		public Vector4 Colors_26;
		public Vector4 Colors_27;
		public Vector4 Colors_28;
		public Vector4 Colors_29;
		public Vector4 Colors_30;
		public Vector4 Colors_31;
		public Vector4 Colors_32;
		public Vector4 Colors_33;
		public Vector4 Colors_34;
		public Vector4 Colors_35;
		public Vector4 Colors_36;
		public Vector4 Colors_37;
		public Vector4 Colors_38;
		public Vector4 Colors_39;
		public Vector4 Colors_40;
		public Vector4 Colors_41;
		public Vector4 Colors_42;
		public Vector4 Colors_43;
		public Vector4 Colors_44;
		public Vector4 Colors_45;
		public Vector4 Colors_46;
		public Vector4 Colors_47;
		public Vector4 Colors_48;
		public Vector4 Colors_49;
		public Vector4 Colors_50;
		public Vector4 Colors_51;
		public Vector4 Colors_52;
		public Vector4 Colors_53;
		public Vector4 Colors_54;
		public Vector4 Colors_55;
		public Vector4 Colors_56;
		public Vector4 Colors_57;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HoverStationaryDelay")]
		[NativeName(NativeNameType.Type, "float")]
		public float HoverStationaryDelay;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HoverDelayShort")]
		[NativeName(NativeNameType.Type, "float")]
		public float HoverDelayShort;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HoverDelayNormal")]
		[NativeName(NativeNameType.Type, "float")]
		public float HoverDelayNormal;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HoverFlagsForTooltipMouse")]
		[NativeName(NativeNameType.Type, "ImGuiHoveredFlags")]
		public ImGuiHoveredFlags HoverFlagsForTooltipMouse;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HoverFlagsForTooltipNav")]
		[NativeName(NativeNameType.Type, "ImGuiHoveredFlags")]
		public ImGuiHoveredFlags HoverFlagsForTooltipNav;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiStyle(float alpha = default, float disabledAlpha = default, Vector2 windowPadding = default, float windowRounding = default, float windowBorderSize = default, Vector2 windowMinSize = default, Vector2 windowTitleAlign = default, ImGuiDir windowMenuButtonPosition = default, float childRounding = default, float childBorderSize = default, float popupRounding = default, float popupBorderSize = default, Vector2 framePadding = default, float frameRounding = default, float frameBorderSize = default, Vector2 itemSpacing = default, Vector2 itemInnerSpacing = default, Vector2 cellPadding = default, Vector2 touchExtraPadding = default, float indentSpacing = default, float columnsMinSpacing = default, float scrollbarSize = default, float scrollbarRounding = default, float grabMinSize = default, float grabRounding = default, float logSliderDeadzone = default, float tabRounding = default, float tabBorderSize = default, float tabMinWidthForCloseButton = default, float tabBarBorderSize = default, float tabBarOverlineSize = default, float tableAngledHeadersAngle = default, Vector2 tableAngledHeadersTextAlign = default, ImGuiDir colorButtonPosition = default, Vector2 buttonTextAlign = default, Vector2 selectableTextAlign = default, float separatorTextBorderSize = default, Vector2 separatorTextAlign = default, Vector2 separatorTextPadding = default, Vector2 displayWindowPadding = default, Vector2 displaySafeAreaPadding = default, float dockingSeparatorSize = default, float mouseCursorScale = default, bool antiAliasedLines = default, bool antiAliasedLinesUseTex = default, bool antiAliasedFill = default, float curveTessellationTol = default, float circleTessellationMaxError = default, Vector4* colors = default, float hoverStationaryDelay = default, float hoverDelayShort = default, float hoverDelayNormal = default, ImGuiHoveredFlags hoverFlagsForTooltipMouse = default, ImGuiHoveredFlags hoverFlagsForTooltipNav = default)
		{
			Alpha = alpha;
			DisabledAlpha = disabledAlpha;
			WindowPadding = windowPadding;
			WindowRounding = windowRounding;
			WindowBorderSize = windowBorderSize;
			WindowMinSize = windowMinSize;
			WindowTitleAlign = windowTitleAlign;
			WindowMenuButtonPosition = windowMenuButtonPosition;
			ChildRounding = childRounding;
			ChildBorderSize = childBorderSize;
			PopupRounding = popupRounding;
			PopupBorderSize = popupBorderSize;
			FramePadding = framePadding;
			FrameRounding = frameRounding;
			FrameBorderSize = frameBorderSize;
			ItemSpacing = itemSpacing;
			ItemInnerSpacing = itemInnerSpacing;
			CellPadding = cellPadding;
			TouchExtraPadding = touchExtraPadding;
			IndentSpacing = indentSpacing;
			ColumnsMinSpacing = columnsMinSpacing;
			ScrollbarSize = scrollbarSize;
			ScrollbarRounding = scrollbarRounding;
			GrabMinSize = grabMinSize;
			GrabRounding = grabRounding;
			LogSliderDeadzone = logSliderDeadzone;
			TabRounding = tabRounding;
			TabBorderSize = tabBorderSize;
			TabMinWidthForCloseButton = tabMinWidthForCloseButton;
			TabBarBorderSize = tabBarBorderSize;
			TabBarOverlineSize = tabBarOverlineSize;
			TableAngledHeadersAngle = tableAngledHeadersAngle;
			TableAngledHeadersTextAlign = tableAngledHeadersTextAlign;
			ColorButtonPosition = colorButtonPosition;
			ButtonTextAlign = buttonTextAlign;
			SelectableTextAlign = selectableTextAlign;
			SeparatorTextBorderSize = separatorTextBorderSize;
			SeparatorTextAlign = separatorTextAlign;
			SeparatorTextPadding = separatorTextPadding;
			DisplayWindowPadding = displayWindowPadding;
			DisplaySafeAreaPadding = displaySafeAreaPadding;
			DockingSeparatorSize = dockingSeparatorSize;
			MouseCursorScale = mouseCursorScale;
			AntiAliasedLines = antiAliasedLines ? (byte)1 : (byte)0;
			AntiAliasedLinesUseTex = antiAliasedLinesUseTex ? (byte)1 : (byte)0;
			AntiAliasedFill = antiAliasedFill ? (byte)1 : (byte)0;
			CurveTessellationTol = curveTessellationTol;
			CircleTessellationMaxError = circleTessellationMaxError;
			if (colors != default(Vector4*))
			{
				Colors_0 = colors[0];
				Colors_1 = colors[1];
				Colors_2 = colors[2];
				Colors_3 = colors[3];
				Colors_4 = colors[4];
				Colors_5 = colors[5];
				Colors_6 = colors[6];
				Colors_7 = colors[7];
				Colors_8 = colors[8];
				Colors_9 = colors[9];
				Colors_10 = colors[10];
				Colors_11 = colors[11];
				Colors_12 = colors[12];
				Colors_13 = colors[13];
				Colors_14 = colors[14];
				Colors_15 = colors[15];
				Colors_16 = colors[16];
				Colors_17 = colors[17];
				Colors_18 = colors[18];
				Colors_19 = colors[19];
				Colors_20 = colors[20];
				Colors_21 = colors[21];
				Colors_22 = colors[22];
				Colors_23 = colors[23];
				Colors_24 = colors[24];
				Colors_25 = colors[25];
				Colors_26 = colors[26];
				Colors_27 = colors[27];
				Colors_28 = colors[28];
				Colors_29 = colors[29];
				Colors_30 = colors[30];
				Colors_31 = colors[31];
				Colors_32 = colors[32];
				Colors_33 = colors[33];
				Colors_34 = colors[34];
				Colors_35 = colors[35];
				Colors_36 = colors[36];
				Colors_37 = colors[37];
				Colors_38 = colors[38];
				Colors_39 = colors[39];
				Colors_40 = colors[40];
				Colors_41 = colors[41];
				Colors_42 = colors[42];
				Colors_43 = colors[43];
				Colors_44 = colors[44];
				Colors_45 = colors[45];
				Colors_46 = colors[46];
				Colors_47 = colors[47];
				Colors_48 = colors[48];
				Colors_49 = colors[49];
				Colors_50 = colors[50];
				Colors_51 = colors[51];
				Colors_52 = colors[52];
				Colors_53 = colors[53];
				Colors_54 = colors[54];
				Colors_55 = colors[55];
				Colors_56 = colors[56];
				Colors_57 = colors[57];
			}
			HoverStationaryDelay = hoverStationaryDelay;
			HoverDelayShort = hoverDelayShort;
			HoverDelayNormal = hoverDelayNormal;
			HoverFlagsForTooltipMouse = hoverFlagsForTooltipMouse;
			HoverFlagsForTooltipNav = hoverFlagsForTooltipNav;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiStyle(float alpha = default, float disabledAlpha = default, Vector2 windowPadding = default, float windowRounding = default, float windowBorderSize = default, Vector2 windowMinSize = default, Vector2 windowTitleAlign = default, ImGuiDir windowMenuButtonPosition = default, float childRounding = default, float childBorderSize = default, float popupRounding = default, float popupBorderSize = default, Vector2 framePadding = default, float frameRounding = default, float frameBorderSize = default, Vector2 itemSpacing = default, Vector2 itemInnerSpacing = default, Vector2 cellPadding = default, Vector2 touchExtraPadding = default, float indentSpacing = default, float columnsMinSpacing = default, float scrollbarSize = default, float scrollbarRounding = default, float grabMinSize = default, float grabRounding = default, float logSliderDeadzone = default, float tabRounding = default, float tabBorderSize = default, float tabMinWidthForCloseButton = default, float tabBarBorderSize = default, float tabBarOverlineSize = default, float tableAngledHeadersAngle = default, Vector2 tableAngledHeadersTextAlign = default, ImGuiDir colorButtonPosition = default, Vector2 buttonTextAlign = default, Vector2 selectableTextAlign = default, float separatorTextBorderSize = default, Vector2 separatorTextAlign = default, Vector2 separatorTextPadding = default, Vector2 displayWindowPadding = default, Vector2 displaySafeAreaPadding = default, float dockingSeparatorSize = default, float mouseCursorScale = default, bool antiAliasedLines = default, bool antiAliasedLinesUseTex = default, bool antiAliasedFill = default, float curveTessellationTol = default, float circleTessellationMaxError = default, Span<Vector4> colors = default, float hoverStationaryDelay = default, float hoverDelayShort = default, float hoverDelayNormal = default, ImGuiHoveredFlags hoverFlagsForTooltipMouse = default, ImGuiHoveredFlags hoverFlagsForTooltipNav = default)
		{
			Alpha = alpha;
			DisabledAlpha = disabledAlpha;
			WindowPadding = windowPadding;
			WindowRounding = windowRounding;
			WindowBorderSize = windowBorderSize;
			WindowMinSize = windowMinSize;
			WindowTitleAlign = windowTitleAlign;
			WindowMenuButtonPosition = windowMenuButtonPosition;
			ChildRounding = childRounding;
			ChildBorderSize = childBorderSize;
			PopupRounding = popupRounding;
			PopupBorderSize = popupBorderSize;
			FramePadding = framePadding;
			FrameRounding = frameRounding;
			FrameBorderSize = frameBorderSize;
			ItemSpacing = itemSpacing;
			ItemInnerSpacing = itemInnerSpacing;
			CellPadding = cellPadding;
			TouchExtraPadding = touchExtraPadding;
			IndentSpacing = indentSpacing;
			ColumnsMinSpacing = columnsMinSpacing;
			ScrollbarSize = scrollbarSize;
			ScrollbarRounding = scrollbarRounding;
			GrabMinSize = grabMinSize;
			GrabRounding = grabRounding;
			LogSliderDeadzone = logSliderDeadzone;
			TabRounding = tabRounding;
			TabBorderSize = tabBorderSize;
			TabMinWidthForCloseButton = tabMinWidthForCloseButton;
			TabBarBorderSize = tabBarBorderSize;
			TabBarOverlineSize = tabBarOverlineSize;
			TableAngledHeadersAngle = tableAngledHeadersAngle;
			TableAngledHeadersTextAlign = tableAngledHeadersTextAlign;
			ColorButtonPosition = colorButtonPosition;
			ButtonTextAlign = buttonTextAlign;
			SelectableTextAlign = selectableTextAlign;
			SeparatorTextBorderSize = separatorTextBorderSize;
			SeparatorTextAlign = separatorTextAlign;
			SeparatorTextPadding = separatorTextPadding;
			DisplayWindowPadding = displayWindowPadding;
			DisplaySafeAreaPadding = displaySafeAreaPadding;
			DockingSeparatorSize = dockingSeparatorSize;
			MouseCursorScale = mouseCursorScale;
			AntiAliasedLines = antiAliasedLines ? (byte)1 : (byte)0;
			AntiAliasedLinesUseTex = antiAliasedLinesUseTex ? (byte)1 : (byte)0;
			AntiAliasedFill = antiAliasedFill ? (byte)1 : (byte)0;
			CurveTessellationTol = curveTessellationTol;
			CircleTessellationMaxError = circleTessellationMaxError;
			if (colors != default(Span<Vector4>))
			{
				Colors_0 = colors[0];
				Colors_1 = colors[1];
				Colors_2 = colors[2];
				Colors_3 = colors[3];
				Colors_4 = colors[4];
				Colors_5 = colors[5];
				Colors_6 = colors[6];
				Colors_7 = colors[7];
				Colors_8 = colors[8];
				Colors_9 = colors[9];
				Colors_10 = colors[10];
				Colors_11 = colors[11];
				Colors_12 = colors[12];
				Colors_13 = colors[13];
				Colors_14 = colors[14];
				Colors_15 = colors[15];
				Colors_16 = colors[16];
				Colors_17 = colors[17];
				Colors_18 = colors[18];
				Colors_19 = colors[19];
				Colors_20 = colors[20];
				Colors_21 = colors[21];
				Colors_22 = colors[22];
				Colors_23 = colors[23];
				Colors_24 = colors[24];
				Colors_25 = colors[25];
				Colors_26 = colors[26];
				Colors_27 = colors[27];
				Colors_28 = colors[28];
				Colors_29 = colors[29];
				Colors_30 = colors[30];
				Colors_31 = colors[31];
				Colors_32 = colors[32];
				Colors_33 = colors[33];
				Colors_34 = colors[34];
				Colors_35 = colors[35];
				Colors_36 = colors[36];
				Colors_37 = colors[37];
				Colors_38 = colors[38];
				Colors_39 = colors[39];
				Colors_40 = colors[40];
				Colors_41 = colors[41];
				Colors_42 = colors[42];
				Colors_43 = colors[43];
				Colors_44 = colors[44];
				Colors_45 = colors[45];
				Colors_46 = colors[46];
				Colors_47 = colors[47];
				Colors_48 = colors[48];
				Colors_49 = colors[49];
				Colors_50 = colors[50];
				Colors_51 = colors[51];
				Colors_52 = colors[52];
				Colors_53 = colors[53];
				Colors_54 = colors[54];
				Colors_55 = colors[55];
				Colors_56 = colors[56];
				Colors_57 = colors[57];
			}
			HoverStationaryDelay = hoverStationaryDelay;
			HoverDelayShort = hoverDelayShort;
			HoverDelayNormal = hoverDelayNormal;
			HoverFlagsForTooltipMouse = hoverFlagsForTooltipMouse;
			HoverFlagsForTooltipNav = hoverFlagsForTooltipNav;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<Vector4> Colors
		
		{
			get
			{
				fixed (Vector4* p = &this.Colors_0)
				{
					return new Span<Vector4>(p, 58);
				}
			}
		}
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyle_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public unsafe void Destroy()
		{
			fixed (ImGuiStyle* @this = &this)
			{
				ImGui.DestroyNative(@this);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStyle_ScaleAllSizes")]
		[return: NativeName(NativeNameType.Type, "void")]
		public unsafe void ScaleAllSizes([NativeName(NativeNameType.Param, "scale_factor")] [NativeName(NativeNameType.Type, "float")] float scaleFactor)
		{
			fixed (ImGuiStyle* @this = &this)
			{
				ImGui.ScaleAllSizesNative(@this, scaleFactor);
			}
		}

	}

}
