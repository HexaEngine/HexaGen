// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "STB_TexteditState")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct STBTexteditState
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "cursor")]
		[NativeName(NativeNameType.Type, "int")]
		public int Cursor;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "select_start")]
		[NativeName(NativeNameType.Type, "int")]
		public int SelectStart;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "select_end")]
		[NativeName(NativeNameType.Type, "int")]
		public int SelectEnd;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "insert_mode")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte InsertMode;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "row_count_per_page")]
		[NativeName(NativeNameType.Type, "int")]
		public int RowCountPerPage;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "cursor_at_end_of_line")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte CursorAtEndOfLine;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "initialized")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte Initialized;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "has_preferred_x")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte HasPreferredX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "single_line")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte SingleLine;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "padding1")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte Padding1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "padding2")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte Padding2;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "padding3")]
		[NativeName(NativeNameType.Type, "unsigned char")]
		public byte Padding3;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "preferred_x")]
		[NativeName(NativeNameType.Type, "float")]
		public float PreferredX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "undostate")]
		[NativeName(NativeNameType.Type, "StbUndoState")]
		public StbUndoState Undostate;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe STBTexteditState(int cursor = default, int selectStart = default, int selectEnd = default, byte insertMode = default, int rowCountPerPage = default, byte cursorAtEndOfLine = default, byte initialized = default, byte hasPreferredX = default, byte singleLine = default, byte padding1 = default, byte padding2 = default, byte padding3 = default, float preferredX = default, StbUndoState undostate = default)
		{
			Cursor = cursor;
			SelectStart = selectStart;
			SelectEnd = selectEnd;
			InsertMode = insertMode;
			RowCountPerPage = rowCountPerPage;
			CursorAtEndOfLine = cursorAtEndOfLine;
			Initialized = initialized;
			HasPreferredX = hasPreferredX;
			SingleLine = singleLine;
			Padding1 = padding1;
			Padding2 = padding2;
			Padding3 = padding3;
			PreferredX = preferredX;
			Undostate = undostate;
		}


	}

}
