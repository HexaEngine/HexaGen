// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiKeyRoutingData")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiKeyRoutingData
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NextEntryIndex")]
		[NativeName(NativeNameType.Type, "ImGuiKeyRoutingIndex")]
		public short NextEntryIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Mods")]
		[NativeName(NativeNameType.Type, "ImU16")]
		public ushort Mods;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RoutingCurrScore")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte RoutingCurrScore;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RoutingNextScore")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte RoutingNextScore;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RoutingCurr")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint RoutingCurr;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RoutingNext")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint RoutingNext;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiKeyRoutingData(short nextEntryIndex = default, ushort mods = default, byte routingCurrScore = default, byte routingNextScore = default, uint routingCurr = default, uint routingNext = default)
		{
			NextEntryIndex = nextEntryIndex;
			Mods = mods;
			RoutingCurrScore = routingCurrScore;
			RoutingNextScore = routingNextScore;
			RoutingCurr = routingCurr;
			RoutingNext = routingNext;
		}


	}

}
