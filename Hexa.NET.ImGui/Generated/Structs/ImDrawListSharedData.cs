// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImDrawListSharedData")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawListSharedData
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TexUvWhitePixel")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 TexUvWhitePixel;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Font")]
		[NativeName(NativeNameType.Type, "ImFont*")]
		public unsafe ImFont* Font;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FontSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float FontSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FontScale")]
		[NativeName(NativeNameType.Type, "float")]
		public float FontScale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurveTessellationTol")]
		[NativeName(NativeNameType.Type, "float")]
		public float CurveTessellationTol;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CircleSegmentMaxError")]
		[NativeName(NativeNameType.Type, "float")]
		public float CircleSegmentMaxError;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ClipRectFullscreen")]
		[NativeName(NativeNameType.Type, "ImVec4")]
		public Vector4 ClipRectFullscreen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InitialFlags")]
		[NativeName(NativeNameType.Type, "ImDrawListFlags")]
		public ImDrawListFlags InitialFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TempBuffer")]
		[NativeName(NativeNameType.Type, "ImVector_ImVec2")]
		public ImVectorImVec2 TempBuffer;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ArcFastVtx")]
		[NativeName(NativeNameType.Type, "ImVec2[48]")]
		public Vector2 ArcFastVtx_0;
		public Vector2 ArcFastVtx_1;
		public Vector2 ArcFastVtx_2;
		public Vector2 ArcFastVtx_3;
		public Vector2 ArcFastVtx_4;
		public Vector2 ArcFastVtx_5;
		public Vector2 ArcFastVtx_6;
		public Vector2 ArcFastVtx_7;
		public Vector2 ArcFastVtx_8;
		public Vector2 ArcFastVtx_9;
		public Vector2 ArcFastVtx_10;
		public Vector2 ArcFastVtx_11;
		public Vector2 ArcFastVtx_12;
		public Vector2 ArcFastVtx_13;
		public Vector2 ArcFastVtx_14;
		public Vector2 ArcFastVtx_15;
		public Vector2 ArcFastVtx_16;
		public Vector2 ArcFastVtx_17;
		public Vector2 ArcFastVtx_18;
		public Vector2 ArcFastVtx_19;
		public Vector2 ArcFastVtx_20;
		public Vector2 ArcFastVtx_21;
		public Vector2 ArcFastVtx_22;
		public Vector2 ArcFastVtx_23;
		public Vector2 ArcFastVtx_24;
		public Vector2 ArcFastVtx_25;
		public Vector2 ArcFastVtx_26;
		public Vector2 ArcFastVtx_27;
		public Vector2 ArcFastVtx_28;
		public Vector2 ArcFastVtx_29;
		public Vector2 ArcFastVtx_30;
		public Vector2 ArcFastVtx_31;
		public Vector2 ArcFastVtx_32;
		public Vector2 ArcFastVtx_33;
		public Vector2 ArcFastVtx_34;
		public Vector2 ArcFastVtx_35;
		public Vector2 ArcFastVtx_36;
		public Vector2 ArcFastVtx_37;
		public Vector2 ArcFastVtx_38;
		public Vector2 ArcFastVtx_39;
		public Vector2 ArcFastVtx_40;
		public Vector2 ArcFastVtx_41;
		public Vector2 ArcFastVtx_42;
		public Vector2 ArcFastVtx_43;
		public Vector2 ArcFastVtx_44;
		public Vector2 ArcFastVtx_45;
		public Vector2 ArcFastVtx_46;
		public Vector2 ArcFastVtx_47;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ArcFastRadiusCutoff")]
		[NativeName(NativeNameType.Type, "float")]
		public float ArcFastRadiusCutoff;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CircleSegmentCounts")]
		[NativeName(NativeNameType.Type, "ImU8[64]")]
		public byte CircleSegmentCounts_0;
		public byte CircleSegmentCounts_1;
		public byte CircleSegmentCounts_2;
		public byte CircleSegmentCounts_3;
		public byte CircleSegmentCounts_4;
		public byte CircleSegmentCounts_5;
		public byte CircleSegmentCounts_6;
		public byte CircleSegmentCounts_7;
		public byte CircleSegmentCounts_8;
		public byte CircleSegmentCounts_9;
		public byte CircleSegmentCounts_10;
		public byte CircleSegmentCounts_11;
		public byte CircleSegmentCounts_12;
		public byte CircleSegmentCounts_13;
		public byte CircleSegmentCounts_14;
		public byte CircleSegmentCounts_15;
		public byte CircleSegmentCounts_16;
		public byte CircleSegmentCounts_17;
		public byte CircleSegmentCounts_18;
		public byte CircleSegmentCounts_19;
		public byte CircleSegmentCounts_20;
		public byte CircleSegmentCounts_21;
		public byte CircleSegmentCounts_22;
		public byte CircleSegmentCounts_23;
		public byte CircleSegmentCounts_24;
		public byte CircleSegmentCounts_25;
		public byte CircleSegmentCounts_26;
		public byte CircleSegmentCounts_27;
		public byte CircleSegmentCounts_28;
		public byte CircleSegmentCounts_29;
		public byte CircleSegmentCounts_30;
		public byte CircleSegmentCounts_31;
		public byte CircleSegmentCounts_32;
		public byte CircleSegmentCounts_33;
		public byte CircleSegmentCounts_34;
		public byte CircleSegmentCounts_35;
		public byte CircleSegmentCounts_36;
		public byte CircleSegmentCounts_37;
		public byte CircleSegmentCounts_38;
		public byte CircleSegmentCounts_39;
		public byte CircleSegmentCounts_40;
		public byte CircleSegmentCounts_41;
		public byte CircleSegmentCounts_42;
		public byte CircleSegmentCounts_43;
		public byte CircleSegmentCounts_44;
		public byte CircleSegmentCounts_45;
		public byte CircleSegmentCounts_46;
		public byte CircleSegmentCounts_47;
		public byte CircleSegmentCounts_48;
		public byte CircleSegmentCounts_49;
		public byte CircleSegmentCounts_50;
		public byte CircleSegmentCounts_51;
		public byte CircleSegmentCounts_52;
		public byte CircleSegmentCounts_53;
		public byte CircleSegmentCounts_54;
		public byte CircleSegmentCounts_55;
		public byte CircleSegmentCounts_56;
		public byte CircleSegmentCounts_57;
		public byte CircleSegmentCounts_58;
		public byte CircleSegmentCounts_59;
		public byte CircleSegmentCounts_60;
		public byte CircleSegmentCounts_61;
		public byte CircleSegmentCounts_62;
		public byte CircleSegmentCounts_63;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TexUvLines")]
		[NativeName(NativeNameType.Type, "const ImVec4*")]
		public unsafe Vector4* TexUvLines;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImDrawListSharedData(Vector2 texUvWhitePixel = default, ImFont* font = default, float fontSize = default, float fontScale = default, float curveTessellationTol = default, float circleSegmentMaxError = default, Vector4 clipRectFullscreen = default, ImDrawListFlags initialFlags = default, ImVectorImVec2 tempBuffer = default, Vector2* arcFastVtx = default, float arcFastRadiusCutoff = default, byte* circleSegmentCounts = default, Vector4* texUvLines = default)
		{
			TexUvWhitePixel = texUvWhitePixel;
			Font = font;
			FontSize = fontSize;
			FontScale = fontScale;
			CurveTessellationTol = curveTessellationTol;
			CircleSegmentMaxError = circleSegmentMaxError;
			ClipRectFullscreen = clipRectFullscreen;
			InitialFlags = initialFlags;
			TempBuffer = tempBuffer;
			if (arcFastVtx != default(Vector2*))
			{
				ArcFastVtx_0 = arcFastVtx[0];
				ArcFastVtx_1 = arcFastVtx[1];
				ArcFastVtx_2 = arcFastVtx[2];
				ArcFastVtx_3 = arcFastVtx[3];
				ArcFastVtx_4 = arcFastVtx[4];
				ArcFastVtx_5 = arcFastVtx[5];
				ArcFastVtx_6 = arcFastVtx[6];
				ArcFastVtx_7 = arcFastVtx[7];
				ArcFastVtx_8 = arcFastVtx[8];
				ArcFastVtx_9 = arcFastVtx[9];
				ArcFastVtx_10 = arcFastVtx[10];
				ArcFastVtx_11 = arcFastVtx[11];
				ArcFastVtx_12 = arcFastVtx[12];
				ArcFastVtx_13 = arcFastVtx[13];
				ArcFastVtx_14 = arcFastVtx[14];
				ArcFastVtx_15 = arcFastVtx[15];
				ArcFastVtx_16 = arcFastVtx[16];
				ArcFastVtx_17 = arcFastVtx[17];
				ArcFastVtx_18 = arcFastVtx[18];
				ArcFastVtx_19 = arcFastVtx[19];
				ArcFastVtx_20 = arcFastVtx[20];
				ArcFastVtx_21 = arcFastVtx[21];
				ArcFastVtx_22 = arcFastVtx[22];
				ArcFastVtx_23 = arcFastVtx[23];
				ArcFastVtx_24 = arcFastVtx[24];
				ArcFastVtx_25 = arcFastVtx[25];
				ArcFastVtx_26 = arcFastVtx[26];
				ArcFastVtx_27 = arcFastVtx[27];
				ArcFastVtx_28 = arcFastVtx[28];
				ArcFastVtx_29 = arcFastVtx[29];
				ArcFastVtx_30 = arcFastVtx[30];
				ArcFastVtx_31 = arcFastVtx[31];
				ArcFastVtx_32 = arcFastVtx[32];
				ArcFastVtx_33 = arcFastVtx[33];
				ArcFastVtx_34 = arcFastVtx[34];
				ArcFastVtx_35 = arcFastVtx[35];
				ArcFastVtx_36 = arcFastVtx[36];
				ArcFastVtx_37 = arcFastVtx[37];
				ArcFastVtx_38 = arcFastVtx[38];
				ArcFastVtx_39 = arcFastVtx[39];
				ArcFastVtx_40 = arcFastVtx[40];
				ArcFastVtx_41 = arcFastVtx[41];
				ArcFastVtx_42 = arcFastVtx[42];
				ArcFastVtx_43 = arcFastVtx[43];
				ArcFastVtx_44 = arcFastVtx[44];
				ArcFastVtx_45 = arcFastVtx[45];
				ArcFastVtx_46 = arcFastVtx[46];
				ArcFastVtx_47 = arcFastVtx[47];
			}
			ArcFastRadiusCutoff = arcFastRadiusCutoff;
			if (circleSegmentCounts != default(byte*))
			{
				CircleSegmentCounts_0 = circleSegmentCounts[0];
				CircleSegmentCounts_1 = circleSegmentCounts[1];
				CircleSegmentCounts_2 = circleSegmentCounts[2];
				CircleSegmentCounts_3 = circleSegmentCounts[3];
				CircleSegmentCounts_4 = circleSegmentCounts[4];
				CircleSegmentCounts_5 = circleSegmentCounts[5];
				CircleSegmentCounts_6 = circleSegmentCounts[6];
				CircleSegmentCounts_7 = circleSegmentCounts[7];
				CircleSegmentCounts_8 = circleSegmentCounts[8];
				CircleSegmentCounts_9 = circleSegmentCounts[9];
				CircleSegmentCounts_10 = circleSegmentCounts[10];
				CircleSegmentCounts_11 = circleSegmentCounts[11];
				CircleSegmentCounts_12 = circleSegmentCounts[12];
				CircleSegmentCounts_13 = circleSegmentCounts[13];
				CircleSegmentCounts_14 = circleSegmentCounts[14];
				CircleSegmentCounts_15 = circleSegmentCounts[15];
				CircleSegmentCounts_16 = circleSegmentCounts[16];
				CircleSegmentCounts_17 = circleSegmentCounts[17];
				CircleSegmentCounts_18 = circleSegmentCounts[18];
				CircleSegmentCounts_19 = circleSegmentCounts[19];
				CircleSegmentCounts_20 = circleSegmentCounts[20];
				CircleSegmentCounts_21 = circleSegmentCounts[21];
				CircleSegmentCounts_22 = circleSegmentCounts[22];
				CircleSegmentCounts_23 = circleSegmentCounts[23];
				CircleSegmentCounts_24 = circleSegmentCounts[24];
				CircleSegmentCounts_25 = circleSegmentCounts[25];
				CircleSegmentCounts_26 = circleSegmentCounts[26];
				CircleSegmentCounts_27 = circleSegmentCounts[27];
				CircleSegmentCounts_28 = circleSegmentCounts[28];
				CircleSegmentCounts_29 = circleSegmentCounts[29];
				CircleSegmentCounts_30 = circleSegmentCounts[30];
				CircleSegmentCounts_31 = circleSegmentCounts[31];
				CircleSegmentCounts_32 = circleSegmentCounts[32];
				CircleSegmentCounts_33 = circleSegmentCounts[33];
				CircleSegmentCounts_34 = circleSegmentCounts[34];
				CircleSegmentCounts_35 = circleSegmentCounts[35];
				CircleSegmentCounts_36 = circleSegmentCounts[36];
				CircleSegmentCounts_37 = circleSegmentCounts[37];
				CircleSegmentCounts_38 = circleSegmentCounts[38];
				CircleSegmentCounts_39 = circleSegmentCounts[39];
				CircleSegmentCounts_40 = circleSegmentCounts[40];
				CircleSegmentCounts_41 = circleSegmentCounts[41];
				CircleSegmentCounts_42 = circleSegmentCounts[42];
				CircleSegmentCounts_43 = circleSegmentCounts[43];
				CircleSegmentCounts_44 = circleSegmentCounts[44];
				CircleSegmentCounts_45 = circleSegmentCounts[45];
				CircleSegmentCounts_46 = circleSegmentCounts[46];
				CircleSegmentCounts_47 = circleSegmentCounts[47];
				CircleSegmentCounts_48 = circleSegmentCounts[48];
				CircleSegmentCounts_49 = circleSegmentCounts[49];
				CircleSegmentCounts_50 = circleSegmentCounts[50];
				CircleSegmentCounts_51 = circleSegmentCounts[51];
				CircleSegmentCounts_52 = circleSegmentCounts[52];
				CircleSegmentCounts_53 = circleSegmentCounts[53];
				CircleSegmentCounts_54 = circleSegmentCounts[54];
				CircleSegmentCounts_55 = circleSegmentCounts[55];
				CircleSegmentCounts_56 = circleSegmentCounts[56];
				CircleSegmentCounts_57 = circleSegmentCounts[57];
				CircleSegmentCounts_58 = circleSegmentCounts[58];
				CircleSegmentCounts_59 = circleSegmentCounts[59];
				CircleSegmentCounts_60 = circleSegmentCounts[60];
				CircleSegmentCounts_61 = circleSegmentCounts[61];
				CircleSegmentCounts_62 = circleSegmentCounts[62];
				CircleSegmentCounts_63 = circleSegmentCounts[63];
			}
			TexUvLines = texUvLines;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImDrawListSharedData(Vector2 texUvWhitePixel = default, ImFont* font = default, float fontSize = default, float fontScale = default, float curveTessellationTol = default, float circleSegmentMaxError = default, Vector4 clipRectFullscreen = default, ImDrawListFlags initialFlags = default, ImVectorImVec2 tempBuffer = default, Span<Vector2> arcFastVtx = default, float arcFastRadiusCutoff = default, Span<byte> circleSegmentCounts = default, Vector4* texUvLines = default)
		{
			TexUvWhitePixel = texUvWhitePixel;
			Font = font;
			FontSize = fontSize;
			FontScale = fontScale;
			CurveTessellationTol = curveTessellationTol;
			CircleSegmentMaxError = circleSegmentMaxError;
			ClipRectFullscreen = clipRectFullscreen;
			InitialFlags = initialFlags;
			TempBuffer = tempBuffer;
			if (arcFastVtx != default(Span<Vector2>))
			{
				ArcFastVtx_0 = arcFastVtx[0];
				ArcFastVtx_1 = arcFastVtx[1];
				ArcFastVtx_2 = arcFastVtx[2];
				ArcFastVtx_3 = arcFastVtx[3];
				ArcFastVtx_4 = arcFastVtx[4];
				ArcFastVtx_5 = arcFastVtx[5];
				ArcFastVtx_6 = arcFastVtx[6];
				ArcFastVtx_7 = arcFastVtx[7];
				ArcFastVtx_8 = arcFastVtx[8];
				ArcFastVtx_9 = arcFastVtx[9];
				ArcFastVtx_10 = arcFastVtx[10];
				ArcFastVtx_11 = arcFastVtx[11];
				ArcFastVtx_12 = arcFastVtx[12];
				ArcFastVtx_13 = arcFastVtx[13];
				ArcFastVtx_14 = arcFastVtx[14];
				ArcFastVtx_15 = arcFastVtx[15];
				ArcFastVtx_16 = arcFastVtx[16];
				ArcFastVtx_17 = arcFastVtx[17];
				ArcFastVtx_18 = arcFastVtx[18];
				ArcFastVtx_19 = arcFastVtx[19];
				ArcFastVtx_20 = arcFastVtx[20];
				ArcFastVtx_21 = arcFastVtx[21];
				ArcFastVtx_22 = arcFastVtx[22];
				ArcFastVtx_23 = arcFastVtx[23];
				ArcFastVtx_24 = arcFastVtx[24];
				ArcFastVtx_25 = arcFastVtx[25];
				ArcFastVtx_26 = arcFastVtx[26];
				ArcFastVtx_27 = arcFastVtx[27];
				ArcFastVtx_28 = arcFastVtx[28];
				ArcFastVtx_29 = arcFastVtx[29];
				ArcFastVtx_30 = arcFastVtx[30];
				ArcFastVtx_31 = arcFastVtx[31];
				ArcFastVtx_32 = arcFastVtx[32];
				ArcFastVtx_33 = arcFastVtx[33];
				ArcFastVtx_34 = arcFastVtx[34];
				ArcFastVtx_35 = arcFastVtx[35];
				ArcFastVtx_36 = arcFastVtx[36];
				ArcFastVtx_37 = arcFastVtx[37];
				ArcFastVtx_38 = arcFastVtx[38];
				ArcFastVtx_39 = arcFastVtx[39];
				ArcFastVtx_40 = arcFastVtx[40];
				ArcFastVtx_41 = arcFastVtx[41];
				ArcFastVtx_42 = arcFastVtx[42];
				ArcFastVtx_43 = arcFastVtx[43];
				ArcFastVtx_44 = arcFastVtx[44];
				ArcFastVtx_45 = arcFastVtx[45];
				ArcFastVtx_46 = arcFastVtx[46];
				ArcFastVtx_47 = arcFastVtx[47];
			}
			ArcFastRadiusCutoff = arcFastRadiusCutoff;
			if (circleSegmentCounts != default(Span<byte>))
			{
				CircleSegmentCounts_0 = circleSegmentCounts[0];
				CircleSegmentCounts_1 = circleSegmentCounts[1];
				CircleSegmentCounts_2 = circleSegmentCounts[2];
				CircleSegmentCounts_3 = circleSegmentCounts[3];
				CircleSegmentCounts_4 = circleSegmentCounts[4];
				CircleSegmentCounts_5 = circleSegmentCounts[5];
				CircleSegmentCounts_6 = circleSegmentCounts[6];
				CircleSegmentCounts_7 = circleSegmentCounts[7];
				CircleSegmentCounts_8 = circleSegmentCounts[8];
				CircleSegmentCounts_9 = circleSegmentCounts[9];
				CircleSegmentCounts_10 = circleSegmentCounts[10];
				CircleSegmentCounts_11 = circleSegmentCounts[11];
				CircleSegmentCounts_12 = circleSegmentCounts[12];
				CircleSegmentCounts_13 = circleSegmentCounts[13];
				CircleSegmentCounts_14 = circleSegmentCounts[14];
				CircleSegmentCounts_15 = circleSegmentCounts[15];
				CircleSegmentCounts_16 = circleSegmentCounts[16];
				CircleSegmentCounts_17 = circleSegmentCounts[17];
				CircleSegmentCounts_18 = circleSegmentCounts[18];
				CircleSegmentCounts_19 = circleSegmentCounts[19];
				CircleSegmentCounts_20 = circleSegmentCounts[20];
				CircleSegmentCounts_21 = circleSegmentCounts[21];
				CircleSegmentCounts_22 = circleSegmentCounts[22];
				CircleSegmentCounts_23 = circleSegmentCounts[23];
				CircleSegmentCounts_24 = circleSegmentCounts[24];
				CircleSegmentCounts_25 = circleSegmentCounts[25];
				CircleSegmentCounts_26 = circleSegmentCounts[26];
				CircleSegmentCounts_27 = circleSegmentCounts[27];
				CircleSegmentCounts_28 = circleSegmentCounts[28];
				CircleSegmentCounts_29 = circleSegmentCounts[29];
				CircleSegmentCounts_30 = circleSegmentCounts[30];
				CircleSegmentCounts_31 = circleSegmentCounts[31];
				CircleSegmentCounts_32 = circleSegmentCounts[32];
				CircleSegmentCounts_33 = circleSegmentCounts[33];
				CircleSegmentCounts_34 = circleSegmentCounts[34];
				CircleSegmentCounts_35 = circleSegmentCounts[35];
				CircleSegmentCounts_36 = circleSegmentCounts[36];
				CircleSegmentCounts_37 = circleSegmentCounts[37];
				CircleSegmentCounts_38 = circleSegmentCounts[38];
				CircleSegmentCounts_39 = circleSegmentCounts[39];
				CircleSegmentCounts_40 = circleSegmentCounts[40];
				CircleSegmentCounts_41 = circleSegmentCounts[41];
				CircleSegmentCounts_42 = circleSegmentCounts[42];
				CircleSegmentCounts_43 = circleSegmentCounts[43];
				CircleSegmentCounts_44 = circleSegmentCounts[44];
				CircleSegmentCounts_45 = circleSegmentCounts[45];
				CircleSegmentCounts_46 = circleSegmentCounts[46];
				CircleSegmentCounts_47 = circleSegmentCounts[47];
				CircleSegmentCounts_48 = circleSegmentCounts[48];
				CircleSegmentCounts_49 = circleSegmentCounts[49];
				CircleSegmentCounts_50 = circleSegmentCounts[50];
				CircleSegmentCounts_51 = circleSegmentCounts[51];
				CircleSegmentCounts_52 = circleSegmentCounts[52];
				CircleSegmentCounts_53 = circleSegmentCounts[53];
				CircleSegmentCounts_54 = circleSegmentCounts[54];
				CircleSegmentCounts_55 = circleSegmentCounts[55];
				CircleSegmentCounts_56 = circleSegmentCounts[56];
				CircleSegmentCounts_57 = circleSegmentCounts[57];
				CircleSegmentCounts_58 = circleSegmentCounts[58];
				CircleSegmentCounts_59 = circleSegmentCounts[59];
				CircleSegmentCounts_60 = circleSegmentCounts[60];
				CircleSegmentCounts_61 = circleSegmentCounts[61];
				CircleSegmentCounts_62 = circleSegmentCounts[62];
				CircleSegmentCounts_63 = circleSegmentCounts[63];
			}
			TexUvLines = texUvLines;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<Vector2> ArcFastVtx
		
		{
			get
			{
				fixed (Vector2* p = &this.ArcFastVtx_0)
				{
					return new Span<Vector2>(p, 48);
				}
			}
		}
	}

}
