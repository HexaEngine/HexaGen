// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiWindow")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiWindow
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Ctx")]
		[NativeName(NativeNameType.Type, "ImGuiContext*")]
		public unsafe ImGuiContext* Ctx;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Name")]
		[NativeName(NativeNameType.Type, "char*")]
		public unsafe byte* Name;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ID")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint ID;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "ImGuiWindowFlags")]
		public ImGuiWindowFlags Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FlagsPreviousFrame")]
		[NativeName(NativeNameType.Type, "ImGuiWindowFlags")]
		public ImGuiWindowFlags FlagsPreviousFrame;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ChildFlags")]
		[NativeName(NativeNameType.Type, "ImGuiChildFlags")]
		public ImGuiChildFlags ChildFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowClass")]
		[NativeName(NativeNameType.Type, "ImGuiWindowClass")]
		public ImGuiWindowClass WindowClass;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Viewport")]
		[NativeName(NativeNameType.Type, "ImGuiViewportP*")]
		public unsafe ImGuiViewportP* Viewport;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ViewportId")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint ViewportId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ViewportPos")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ViewportPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ViewportAllowPlatformMonitorExtend")]
		[NativeName(NativeNameType.Type, "int")]
		public int ViewportAllowPlatformMonitorExtend;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Pos")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 Pos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Size")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 Size;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SizeFull")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 SizeFull;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentSize")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ContentSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentSizeIdeal")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ContentSizeIdeal;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentSizeExplicit")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ContentSizeExplicit;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowPadding")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 WindowPadding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowRounding")]
		[NativeName(NativeNameType.Type, "float")]
		public float WindowRounding;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WindowBorderSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float WindowBorderSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TitleBarHeight")]
		[NativeName(NativeNameType.Type, "float")]
		public float TitleBarHeight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MenuBarHeight")]
		[NativeName(NativeNameType.Type, "float")]
		public float MenuBarHeight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DecoOuterSizeX1")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecoOuterSizeX1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DecoOuterSizeY1")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecoOuterSizeY1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DecoOuterSizeX2")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecoOuterSizeX2;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DecoOuterSizeY2")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecoOuterSizeY2;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DecoInnerSizeX1")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecoInnerSizeX1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DecoInnerSizeY1")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecoInnerSizeY1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NameBufLen")]
		[NativeName(NativeNameType.Type, "int")]
		public int NameBufLen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MoveId")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint MoveId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TabId")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint TabId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ChildId")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint ChildId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PopupId")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint PopupId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Scroll")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 Scroll;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollMax")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ScrollMax;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollTarget")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ScrollTarget;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollTargetCenterRatio")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ScrollTargetCenterRatio;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollTargetEdgeSnapDist")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ScrollTargetEdgeSnapDist;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollbarSizes")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ScrollbarSizes;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollbarX")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte ScrollbarX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollbarY")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte ScrollbarY;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ViewportOwned")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte ViewportOwned;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Active")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte Active;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WasActive")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte WasActive;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WriteAccessed")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte WriteAccessed;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Collapsed")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte Collapsed;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WantCollapseToggle")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte WantCollapseToggle;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SkipItems")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte SkipItems;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SkipRefresh")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte SkipRefresh;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Appearing")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte Appearing;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Hidden")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte Hidden;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsFallbackWindow")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsFallbackWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsExplicitChild")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsExplicitChild;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HasCloseButton")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte HasCloseButton;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResizeBorderHovered")]
		[NativeName(NativeNameType.Type, "char")]
		public byte ResizeBorderHovered;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResizeBorderHeld")]
		[NativeName(NativeNameType.Type, "char")]
		public byte ResizeBorderHeld;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BeginCount")]
		[NativeName(NativeNameType.Type, "short")]
		public short BeginCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BeginCountPreviousFrame")]
		[NativeName(NativeNameType.Type, "short")]
		public short BeginCountPreviousFrame;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BeginOrderWithinParent")]
		[NativeName(NativeNameType.Type, "short")]
		public short BeginOrderWithinParent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BeginOrderWithinContext")]
		[NativeName(NativeNameType.Type, "short")]
		public short BeginOrderWithinContext;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FocusOrder")]
		[NativeName(NativeNameType.Type, "short")]
		public short FocusOrder;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AutoFitFramesX")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte AutoFitFramesX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AutoFitFramesY")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte AutoFitFramesY;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AutoFitOnlyGrows")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte AutoFitOnlyGrows;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AutoPosLastDirection")]
		[NativeName(NativeNameType.Type, "ImGuiDir")]
		public ImGuiDir AutoPosLastDirection;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HiddenFramesCanSkipItems")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte HiddenFramesCanSkipItems;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HiddenFramesCannotSkipItems")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte HiddenFramesCannotSkipItems;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HiddenFramesForRenderOnly")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte HiddenFramesForRenderOnly;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DisableInputsFrames")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte DisableInputsFrames;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SetWindowPosAllowFlags")]
		[NativeName(NativeNameType.Type, "ImGuiCond")]
		public ImGuiCond SetWindowPosAllowFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SetWindowSizeAllowFlags")]
		[NativeName(NativeNameType.Type, "ImGuiCond")]
		public ImGuiCond SetWindowSizeAllowFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SetWindowCollapsedAllowFlags")]
		[NativeName(NativeNameType.Type, "ImGuiCond")]
		public ImGuiCond SetWindowCollapsedAllowFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SetWindowDockAllowFlags")]
		[NativeName(NativeNameType.Type, "ImGuiCond")]
		public ImGuiCond SetWindowDockAllowFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SetWindowPosVal")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 SetWindowPosVal;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SetWindowPosPivot")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 SetWindowPosPivot;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IDStack")]
		[NativeName(NativeNameType.Type, "ImVector_ImGuiID")]
		public ImVectorImGuiID IDStack;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DC")]
		[NativeName(NativeNameType.Type, "ImGuiWindowTempData")]
		public ImGuiWindowTempData DC;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "OuterRectClipped")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect OuterRectClipped;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InnerRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect InnerRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InnerClipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect InnerClipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WorkRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect WorkRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ParentWorkRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect ParentWorkRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ClipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect ClipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentRegionRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect ContentRegionRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HitTestHoleSize")]
		[NativeName(NativeNameType.Type, "ImVec2ih")]
		public ImVec2Ih HitTestHoleSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HitTestHoleOffset")]
		[NativeName(NativeNameType.Type, "ImVec2ih")]
		public ImVec2Ih HitTestHoleOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastFrameActive")]
		[NativeName(NativeNameType.Type, "int")]
		public int LastFrameActive;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastFrameJustFocused")]
		[NativeName(NativeNameType.Type, "int")]
		public int LastFrameJustFocused;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastTimeActive")]
		[NativeName(NativeNameType.Type, "float")]
		public float LastTimeActive;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ItemWidthDefault")]
		[NativeName(NativeNameType.Type, "float")]
		public float ItemWidthDefault;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "StateStorage")]
		[NativeName(NativeNameType.Type, "ImGuiStorage")]
		public ImGuiStorage StateStorage;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsStorage")]
		[NativeName(NativeNameType.Type, "ImVector_ImGuiOldColumns")]
		public ImVectorImGuiOldColumns ColumnsStorage;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FontWindowScale")]
		[NativeName(NativeNameType.Type, "float")]
		public float FontWindowScale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FontDpiScale")]
		[NativeName(NativeNameType.Type, "float")]
		public float FontDpiScale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SettingsOffset")]
		[NativeName(NativeNameType.Type, "int")]
		public int SettingsOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DrawList")]
		[NativeName(NativeNameType.Type, "ImDrawList*")]
		public unsafe ImDrawList* DrawList;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DrawListInst")]
		[NativeName(NativeNameType.Type, "ImDrawList")]
		public ImDrawList DrawListInst;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ParentWindow")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* ParentWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ParentWindowInBeginStack")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* ParentWindowInBeginStack;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RootWindow")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* RootWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RootWindowPopupTree")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* RootWindowPopupTree;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RootWindowDockTree")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* RootWindowDockTree;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RootWindowForTitleBarHighlight")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* RootWindowForTitleBarHighlight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RootWindowForNav")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* RootWindowForNav;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ParentWindowForFocusRoute")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* ParentWindowForFocusRoute;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavLastChildNavWindow")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* NavLastChildNavWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavLastIds")]
		[NativeName(NativeNameType.Type, "ImGuiID[2]")]
		public uint NavLastIds_0;
		public uint NavLastIds_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavRectRel")]
		[NativeName(NativeNameType.Type, "ImRect[2]")]
		public ImRect NavRectRel_0;
		public ImRect NavRectRel_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavPreferredScoringPosRel")]
		[NativeName(NativeNameType.Type, "ImVec2[2]")]
		public Vector2 NavPreferredScoringPosRel_0;
		public Vector2 NavPreferredScoringPosRel_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavRootFocusScopeId")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint NavRootFocusScopeId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MemoryDrawListIdxCapacity")]
		[NativeName(NativeNameType.Type, "int")]
		public int MemoryDrawListIdxCapacity;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MemoryDrawListVtxCapacity")]
		[NativeName(NativeNameType.Type, "int")]
		public int MemoryDrawListVtxCapacity;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MemoryCompacted")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte MemoryCompacted;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockIsActive")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte DockIsActive;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockNodeIsVisible")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte DockNodeIsVisible;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockTabIsVisible")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte DockTabIsVisible;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockTabWantClose")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte DockTabWantClose;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockOrder")]
		[NativeName(NativeNameType.Type, "short")]
		public short DockOrder;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockStyle")]
		[NativeName(NativeNameType.Type, "ImGuiWindowDockStyle")]
		public ImGuiWindowDockStyle DockStyle;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockNode")]
		[NativeName(NativeNameType.Type, "ImGuiDockNode*")]
		public unsafe ImGuiDockNode* DockNode;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockNodeAsHost")]
		[NativeName(NativeNameType.Type, "ImGuiDockNode*")]
		public unsafe ImGuiDockNode* DockNodeAsHost;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockId")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint DockId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockTabItemStatusFlags")]
		[NativeName(NativeNameType.Type, "ImGuiItemStatusFlags")]
		public ImGuiItemStatusFlags DockTabItemStatusFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DockTabItemRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect DockTabItemRect;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiWindow(ImGuiContext* ctx = default, byte* name = default, uint id = default, ImGuiWindowFlags flags = default, ImGuiWindowFlags flagsPreviousFrame = default, ImGuiChildFlags childFlags = default, ImGuiWindowClass windowClass = default, ImGuiViewportP* viewport = default, uint viewportId = default, Vector2 viewportPos = default, int viewportAllowPlatformMonitorExtend = default, Vector2 pos = default, Vector2 size = default, Vector2 sizeFull = default, Vector2 contentSize = default, Vector2 contentSizeIdeal = default, Vector2 contentSizeExplicit = default, Vector2 windowPadding = default, float windowRounding = default, float windowBorderSize = default, float titleBarHeight = default, float menuBarHeight = default, float decoOuterSizeX1 = default, float decoOuterSizeY1 = default, float decoOuterSizeX2 = default, float decoOuterSizeY2 = default, float decoInnerSizeX1 = default, float decoInnerSizeY1 = default, int nameBufLen = default, uint moveId = default, uint tabId = default, uint childId = default, uint popupId = default, Vector2 scroll = default, Vector2 scrollMax = default, Vector2 scrollTarget = default, Vector2 scrollTargetCenterRatio = default, Vector2 scrollTargetEdgeSnapDist = default, Vector2 scrollbarSizes = default, bool scrollbarX = default, bool scrollbarY = default, bool viewportOwned = default, bool active = default, bool wasActive = default, bool writeAccessed = default, bool collapsed = default, bool wantCollapseToggle = default, bool skipItems = default, bool skipRefresh = default, bool appearing = default, bool hidden = default, bool isFallbackWindow = default, bool isExplicitChild = default, bool hasCloseButton = default, byte resizeBorderHovered = default, byte resizeBorderHeld = default, short beginCount = default, short beginCountPreviousFrame = default, short beginOrderWithinParent = default, short beginOrderWithinContext = default, short focusOrder = default, byte autoFitFramesX = default, byte autoFitFramesY = default, bool autoFitOnlyGrows = default, ImGuiDir autoPosLastDirection = default, byte hiddenFramesCanSkipItems = default, byte hiddenFramesCannotSkipItems = default, byte hiddenFramesForRenderOnly = default, byte disableInputsFrames = default, ImGuiCond setWindowPosAllowFlags = default, ImGuiCond setWindowSizeAllowFlags = default, ImGuiCond setWindowCollapsedAllowFlags = default, ImGuiCond setWindowDockAllowFlags = default, Vector2 setWindowPosVal = default, Vector2 setWindowPosPivot = default, ImVectorImGuiID idStack = default, ImGuiWindowTempData dc = default, ImRect outerRectClipped = default, ImRect innerRect = default, ImRect innerClipRect = default, ImRect workRect = default, ImRect parentWorkRect = default, ImRect clipRect = default, ImRect contentRegionRect = default, ImVec2Ih hitTestHoleSize = default, ImVec2Ih hitTestHoleOffset = default, int lastFrameActive = default, int lastFrameJustFocused = default, float lastTimeActive = default, float itemWidthDefault = default, ImGuiStorage stateStorage = default, ImVectorImGuiOldColumns columnsStorage = default, float fontWindowScale = default, float fontDpiScale = default, int settingsOffset = default, ImDrawList* drawList = default, ImDrawList drawListInst = default, ImGuiWindow* parentWindow = default, ImGuiWindow* parentWindowInBeginStack = default, ImGuiWindow* rootWindow = default, ImGuiWindow* rootWindowPopupTree = default, ImGuiWindow* rootWindowDockTree = default, ImGuiWindow* rootWindowForTitleBarHighlight = default, ImGuiWindow* rootWindowForNav = default, ImGuiWindow* parentWindowForFocusRoute = default, ImGuiWindow* navLastChildNavWindow = default, uint* navLastIds = default, ImRect* navRectRel = default, Vector2* navPreferredScoringPosRel = default, uint navRootFocusScopeId = default, int memoryDrawListIdxCapacity = default, int memoryDrawListVtxCapacity = default, bool memoryCompacted = default, bool dockIsActive = default, bool dockNodeIsVisible = default, bool dockTabIsVisible = default, bool dockTabWantClose = default, short dockOrder = default, ImGuiWindowDockStyle dockStyle = default, ImGuiDockNode* dockNode = default, ImGuiDockNode* dockNodeAsHost = default, uint dockId = default, ImGuiItemStatusFlags dockTabItemStatusFlags = default, ImRect dockTabItemRect = default)
		{
			Ctx = ctx;
			Name = name;
			ID = id;
			Flags = flags;
			FlagsPreviousFrame = flagsPreviousFrame;
			ChildFlags = childFlags;
			WindowClass = windowClass;
			Viewport = viewport;
			ViewportId = viewportId;
			ViewportPos = viewportPos;
			ViewportAllowPlatformMonitorExtend = viewportAllowPlatformMonitorExtend;
			Pos = pos;
			Size = size;
			SizeFull = sizeFull;
			ContentSize = contentSize;
			ContentSizeIdeal = contentSizeIdeal;
			ContentSizeExplicit = contentSizeExplicit;
			WindowPadding = windowPadding;
			WindowRounding = windowRounding;
			WindowBorderSize = windowBorderSize;
			TitleBarHeight = titleBarHeight;
			MenuBarHeight = menuBarHeight;
			DecoOuterSizeX1 = decoOuterSizeX1;
			DecoOuterSizeY1 = decoOuterSizeY1;
			DecoOuterSizeX2 = decoOuterSizeX2;
			DecoOuterSizeY2 = decoOuterSizeY2;
			DecoInnerSizeX1 = decoInnerSizeX1;
			DecoInnerSizeY1 = decoInnerSizeY1;
			NameBufLen = nameBufLen;
			MoveId = moveId;
			TabId = tabId;
			ChildId = childId;
			PopupId = popupId;
			Scroll = scroll;
			ScrollMax = scrollMax;
			ScrollTarget = scrollTarget;
			ScrollTargetCenterRatio = scrollTargetCenterRatio;
			ScrollTargetEdgeSnapDist = scrollTargetEdgeSnapDist;
			ScrollbarSizes = scrollbarSizes;
			ScrollbarX = scrollbarX ? (byte)1 : (byte)0;
			ScrollbarY = scrollbarY ? (byte)1 : (byte)0;
			ViewportOwned = viewportOwned ? (byte)1 : (byte)0;
			Active = active ? (byte)1 : (byte)0;
			WasActive = wasActive ? (byte)1 : (byte)0;
			WriteAccessed = writeAccessed ? (byte)1 : (byte)0;
			Collapsed = collapsed ? (byte)1 : (byte)0;
			WantCollapseToggle = wantCollapseToggle ? (byte)1 : (byte)0;
			SkipItems = skipItems ? (byte)1 : (byte)0;
			SkipRefresh = skipRefresh ? (byte)1 : (byte)0;
			Appearing = appearing ? (byte)1 : (byte)0;
			Hidden = hidden ? (byte)1 : (byte)0;
			IsFallbackWindow = isFallbackWindow ? (byte)1 : (byte)0;
			IsExplicitChild = isExplicitChild ? (byte)1 : (byte)0;
			HasCloseButton = hasCloseButton ? (byte)1 : (byte)0;
			ResizeBorderHovered = resizeBorderHovered;
			ResizeBorderHeld = resizeBorderHeld;
			BeginCount = beginCount;
			BeginCountPreviousFrame = beginCountPreviousFrame;
			BeginOrderWithinParent = beginOrderWithinParent;
			BeginOrderWithinContext = beginOrderWithinContext;
			FocusOrder = focusOrder;
			AutoFitFramesX = autoFitFramesX;
			AutoFitFramesY = autoFitFramesY;
			AutoFitOnlyGrows = autoFitOnlyGrows ? (byte)1 : (byte)0;
			AutoPosLastDirection = autoPosLastDirection;
			HiddenFramesCanSkipItems = hiddenFramesCanSkipItems;
			HiddenFramesCannotSkipItems = hiddenFramesCannotSkipItems;
			HiddenFramesForRenderOnly = hiddenFramesForRenderOnly;
			DisableInputsFrames = disableInputsFrames;
			SetWindowPosAllowFlags = setWindowPosAllowFlags;
			SetWindowSizeAllowFlags = setWindowSizeAllowFlags;
			SetWindowCollapsedAllowFlags = setWindowCollapsedAllowFlags;
			SetWindowDockAllowFlags = setWindowDockAllowFlags;
			SetWindowPosVal = setWindowPosVal;
			SetWindowPosPivot = setWindowPosPivot;
			IDStack = idStack;
			DC = dc;
			OuterRectClipped = outerRectClipped;
			InnerRect = innerRect;
			InnerClipRect = innerClipRect;
			WorkRect = workRect;
			ParentWorkRect = parentWorkRect;
			ClipRect = clipRect;
			ContentRegionRect = contentRegionRect;
			HitTestHoleSize = hitTestHoleSize;
			HitTestHoleOffset = hitTestHoleOffset;
			LastFrameActive = lastFrameActive;
			LastFrameJustFocused = lastFrameJustFocused;
			LastTimeActive = lastTimeActive;
			ItemWidthDefault = itemWidthDefault;
			StateStorage = stateStorage;
			ColumnsStorage = columnsStorage;
			FontWindowScale = fontWindowScale;
			FontDpiScale = fontDpiScale;
			SettingsOffset = settingsOffset;
			DrawList = drawList;
			DrawListInst = drawListInst;
			ParentWindow = parentWindow;
			ParentWindowInBeginStack = parentWindowInBeginStack;
			RootWindow = rootWindow;
			RootWindowPopupTree = rootWindowPopupTree;
			RootWindowDockTree = rootWindowDockTree;
			RootWindowForTitleBarHighlight = rootWindowForTitleBarHighlight;
			RootWindowForNav = rootWindowForNav;
			ParentWindowForFocusRoute = parentWindowForFocusRoute;
			NavLastChildNavWindow = navLastChildNavWindow;
			if (navLastIds != default(uint*))
			{
				NavLastIds_0 = navLastIds[0];
				NavLastIds_1 = navLastIds[1];
			}
			if (navRectRel != default(ImRect*))
			{
				NavRectRel_0 = navRectRel[0];
				NavRectRel_1 = navRectRel[1];
			}
			if (navPreferredScoringPosRel != default(Vector2*))
			{
				NavPreferredScoringPosRel_0 = navPreferredScoringPosRel[0];
				NavPreferredScoringPosRel_1 = navPreferredScoringPosRel[1];
			}
			NavRootFocusScopeId = navRootFocusScopeId;
			MemoryDrawListIdxCapacity = memoryDrawListIdxCapacity;
			MemoryDrawListVtxCapacity = memoryDrawListVtxCapacity;
			MemoryCompacted = memoryCompacted ? (byte)1 : (byte)0;
			DockIsActive = dockIsActive ? (byte)1 : (byte)0;
			DockNodeIsVisible = dockNodeIsVisible ? (byte)1 : (byte)0;
			DockTabIsVisible = dockTabIsVisible ? (byte)1 : (byte)0;
			DockTabWantClose = dockTabWantClose ? (byte)1 : (byte)0;
			DockOrder = dockOrder;
			DockStyle = dockStyle;
			DockNode = dockNode;
			DockNodeAsHost = dockNodeAsHost;
			DockId = dockId;
			DockTabItemStatusFlags = dockTabItemStatusFlags;
			DockTabItemRect = dockTabItemRect;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiWindow(ImGuiContext* ctx = default, byte* name = default, uint id = default, ImGuiWindowFlags flags = default, ImGuiWindowFlags flagsPreviousFrame = default, ImGuiChildFlags childFlags = default, ImGuiWindowClass windowClass = default, ImGuiViewportP* viewport = default, uint viewportId = default, Vector2 viewportPos = default, int viewportAllowPlatformMonitorExtend = default, Vector2 pos = default, Vector2 size = default, Vector2 sizeFull = default, Vector2 contentSize = default, Vector2 contentSizeIdeal = default, Vector2 contentSizeExplicit = default, Vector2 windowPadding = default, float windowRounding = default, float windowBorderSize = default, float titleBarHeight = default, float menuBarHeight = default, float decoOuterSizeX1 = default, float decoOuterSizeY1 = default, float decoOuterSizeX2 = default, float decoOuterSizeY2 = default, float decoInnerSizeX1 = default, float decoInnerSizeY1 = default, int nameBufLen = default, uint moveId = default, uint tabId = default, uint childId = default, uint popupId = default, Vector2 scroll = default, Vector2 scrollMax = default, Vector2 scrollTarget = default, Vector2 scrollTargetCenterRatio = default, Vector2 scrollTargetEdgeSnapDist = default, Vector2 scrollbarSizes = default, bool scrollbarX = default, bool scrollbarY = default, bool viewportOwned = default, bool active = default, bool wasActive = default, bool writeAccessed = default, bool collapsed = default, bool wantCollapseToggle = default, bool skipItems = default, bool skipRefresh = default, bool appearing = default, bool hidden = default, bool isFallbackWindow = default, bool isExplicitChild = default, bool hasCloseButton = default, byte resizeBorderHovered = default, byte resizeBorderHeld = default, short beginCount = default, short beginCountPreviousFrame = default, short beginOrderWithinParent = default, short beginOrderWithinContext = default, short focusOrder = default, byte autoFitFramesX = default, byte autoFitFramesY = default, bool autoFitOnlyGrows = default, ImGuiDir autoPosLastDirection = default, byte hiddenFramesCanSkipItems = default, byte hiddenFramesCannotSkipItems = default, byte hiddenFramesForRenderOnly = default, byte disableInputsFrames = default, ImGuiCond setWindowPosAllowFlags = default, ImGuiCond setWindowSizeAllowFlags = default, ImGuiCond setWindowCollapsedAllowFlags = default, ImGuiCond setWindowDockAllowFlags = default, Vector2 setWindowPosVal = default, Vector2 setWindowPosPivot = default, ImVectorImGuiID idStack = default, ImGuiWindowTempData dc = default, ImRect outerRectClipped = default, ImRect innerRect = default, ImRect innerClipRect = default, ImRect workRect = default, ImRect parentWorkRect = default, ImRect clipRect = default, ImRect contentRegionRect = default, ImVec2Ih hitTestHoleSize = default, ImVec2Ih hitTestHoleOffset = default, int lastFrameActive = default, int lastFrameJustFocused = default, float lastTimeActive = default, float itemWidthDefault = default, ImGuiStorage stateStorage = default, ImVectorImGuiOldColumns columnsStorage = default, float fontWindowScale = default, float fontDpiScale = default, int settingsOffset = default, ImDrawList* drawList = default, ImDrawList drawListInst = default, ImGuiWindow* parentWindow = default, ImGuiWindow* parentWindowInBeginStack = default, ImGuiWindow* rootWindow = default, ImGuiWindow* rootWindowPopupTree = default, ImGuiWindow* rootWindowDockTree = default, ImGuiWindow* rootWindowForTitleBarHighlight = default, ImGuiWindow* rootWindowForNav = default, ImGuiWindow* parentWindowForFocusRoute = default, ImGuiWindow* navLastChildNavWindow = default, Span<uint> navLastIds = default, Span<ImRect> navRectRel = default, Span<Vector2> navPreferredScoringPosRel = default, uint navRootFocusScopeId = default, int memoryDrawListIdxCapacity = default, int memoryDrawListVtxCapacity = default, bool memoryCompacted = default, bool dockIsActive = default, bool dockNodeIsVisible = default, bool dockTabIsVisible = default, bool dockTabWantClose = default, short dockOrder = default, ImGuiWindowDockStyle dockStyle = default, ImGuiDockNode* dockNode = default, ImGuiDockNode* dockNodeAsHost = default, uint dockId = default, ImGuiItemStatusFlags dockTabItemStatusFlags = default, ImRect dockTabItemRect = default)
		{
			Ctx = ctx;
			Name = name;
			ID = id;
			Flags = flags;
			FlagsPreviousFrame = flagsPreviousFrame;
			ChildFlags = childFlags;
			WindowClass = windowClass;
			Viewport = viewport;
			ViewportId = viewportId;
			ViewportPos = viewportPos;
			ViewportAllowPlatformMonitorExtend = viewportAllowPlatformMonitorExtend;
			Pos = pos;
			Size = size;
			SizeFull = sizeFull;
			ContentSize = contentSize;
			ContentSizeIdeal = contentSizeIdeal;
			ContentSizeExplicit = contentSizeExplicit;
			WindowPadding = windowPadding;
			WindowRounding = windowRounding;
			WindowBorderSize = windowBorderSize;
			TitleBarHeight = titleBarHeight;
			MenuBarHeight = menuBarHeight;
			DecoOuterSizeX1 = decoOuterSizeX1;
			DecoOuterSizeY1 = decoOuterSizeY1;
			DecoOuterSizeX2 = decoOuterSizeX2;
			DecoOuterSizeY2 = decoOuterSizeY2;
			DecoInnerSizeX1 = decoInnerSizeX1;
			DecoInnerSizeY1 = decoInnerSizeY1;
			NameBufLen = nameBufLen;
			MoveId = moveId;
			TabId = tabId;
			ChildId = childId;
			PopupId = popupId;
			Scroll = scroll;
			ScrollMax = scrollMax;
			ScrollTarget = scrollTarget;
			ScrollTargetCenterRatio = scrollTargetCenterRatio;
			ScrollTargetEdgeSnapDist = scrollTargetEdgeSnapDist;
			ScrollbarSizes = scrollbarSizes;
			ScrollbarX = scrollbarX ? (byte)1 : (byte)0;
			ScrollbarY = scrollbarY ? (byte)1 : (byte)0;
			ViewportOwned = viewportOwned ? (byte)1 : (byte)0;
			Active = active ? (byte)1 : (byte)0;
			WasActive = wasActive ? (byte)1 : (byte)0;
			WriteAccessed = writeAccessed ? (byte)1 : (byte)0;
			Collapsed = collapsed ? (byte)1 : (byte)0;
			WantCollapseToggle = wantCollapseToggle ? (byte)1 : (byte)0;
			SkipItems = skipItems ? (byte)1 : (byte)0;
			SkipRefresh = skipRefresh ? (byte)1 : (byte)0;
			Appearing = appearing ? (byte)1 : (byte)0;
			Hidden = hidden ? (byte)1 : (byte)0;
			IsFallbackWindow = isFallbackWindow ? (byte)1 : (byte)0;
			IsExplicitChild = isExplicitChild ? (byte)1 : (byte)0;
			HasCloseButton = hasCloseButton ? (byte)1 : (byte)0;
			ResizeBorderHovered = resizeBorderHovered;
			ResizeBorderHeld = resizeBorderHeld;
			BeginCount = beginCount;
			BeginCountPreviousFrame = beginCountPreviousFrame;
			BeginOrderWithinParent = beginOrderWithinParent;
			BeginOrderWithinContext = beginOrderWithinContext;
			FocusOrder = focusOrder;
			AutoFitFramesX = autoFitFramesX;
			AutoFitFramesY = autoFitFramesY;
			AutoFitOnlyGrows = autoFitOnlyGrows ? (byte)1 : (byte)0;
			AutoPosLastDirection = autoPosLastDirection;
			HiddenFramesCanSkipItems = hiddenFramesCanSkipItems;
			HiddenFramesCannotSkipItems = hiddenFramesCannotSkipItems;
			HiddenFramesForRenderOnly = hiddenFramesForRenderOnly;
			DisableInputsFrames = disableInputsFrames;
			SetWindowPosAllowFlags = setWindowPosAllowFlags;
			SetWindowSizeAllowFlags = setWindowSizeAllowFlags;
			SetWindowCollapsedAllowFlags = setWindowCollapsedAllowFlags;
			SetWindowDockAllowFlags = setWindowDockAllowFlags;
			SetWindowPosVal = setWindowPosVal;
			SetWindowPosPivot = setWindowPosPivot;
			IDStack = idStack;
			DC = dc;
			OuterRectClipped = outerRectClipped;
			InnerRect = innerRect;
			InnerClipRect = innerClipRect;
			WorkRect = workRect;
			ParentWorkRect = parentWorkRect;
			ClipRect = clipRect;
			ContentRegionRect = contentRegionRect;
			HitTestHoleSize = hitTestHoleSize;
			HitTestHoleOffset = hitTestHoleOffset;
			LastFrameActive = lastFrameActive;
			LastFrameJustFocused = lastFrameJustFocused;
			LastTimeActive = lastTimeActive;
			ItemWidthDefault = itemWidthDefault;
			StateStorage = stateStorage;
			ColumnsStorage = columnsStorage;
			FontWindowScale = fontWindowScale;
			FontDpiScale = fontDpiScale;
			SettingsOffset = settingsOffset;
			DrawList = drawList;
			DrawListInst = drawListInst;
			ParentWindow = parentWindow;
			ParentWindowInBeginStack = parentWindowInBeginStack;
			RootWindow = rootWindow;
			RootWindowPopupTree = rootWindowPopupTree;
			RootWindowDockTree = rootWindowDockTree;
			RootWindowForTitleBarHighlight = rootWindowForTitleBarHighlight;
			RootWindowForNav = rootWindowForNav;
			ParentWindowForFocusRoute = parentWindowForFocusRoute;
			NavLastChildNavWindow = navLastChildNavWindow;
			if (navLastIds != default(Span<uint>))
			{
				NavLastIds_0 = navLastIds[0];
				NavLastIds_1 = navLastIds[1];
			}
			if (navRectRel != default(Span<ImRect>))
			{
				NavRectRel_0 = navRectRel[0];
				NavRectRel_1 = navRectRel[1];
			}
			if (navPreferredScoringPosRel != default(Span<Vector2>))
			{
				NavPreferredScoringPosRel_0 = navPreferredScoringPosRel[0];
				NavPreferredScoringPosRel_1 = navPreferredScoringPosRel[1];
			}
			NavRootFocusScopeId = navRootFocusScopeId;
			MemoryDrawListIdxCapacity = memoryDrawListIdxCapacity;
			MemoryDrawListVtxCapacity = memoryDrawListVtxCapacity;
			MemoryCompacted = memoryCompacted ? (byte)1 : (byte)0;
			DockIsActive = dockIsActive ? (byte)1 : (byte)0;
			DockNodeIsVisible = dockNodeIsVisible ? (byte)1 : (byte)0;
			DockTabIsVisible = dockTabIsVisible ? (byte)1 : (byte)0;
			DockTabWantClose = dockTabWantClose ? (byte)1 : (byte)0;
			DockOrder = dockOrder;
			DockStyle = dockStyle;
			DockNode = dockNode;
			DockNodeAsHost = dockNodeAsHost;
			DockId = dockId;
			DockTabItemStatusFlags = dockTabItemStatusFlags;
			DockTabItemRect = dockTabItemRect;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<ImRect> NavRectRel
		
		{
			get
			{
				fixed (ImRect* p = &this.NavRectRel_0)
				{
					return new Span<ImRect>(p, 2);
				}
			}
		}
		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<Vector2> NavPreferredScoringPosRel
		
		{
			get
			{
				fixed (Vector2* p = &this.NavPreferredScoringPosRel_0)
				{
					return new Span<Vector2>(p, 2);
				}
			}
		}
	}

}
