// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiTableSettings")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTableSettings
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ID")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint ID;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SaveFlags")]
		[NativeName(NativeNameType.Type, "ImGuiTableFlags")]
		public ImGuiTableFlags SaveFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RefScale")]
		[NativeName(NativeNameType.Type, "float")]
		public float RefScale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsCount")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ColumnsCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColumnsCountMax")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte ColumnsCountMax;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WantApply")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte WantApply;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiTableSettings(uint id = default, ImGuiTableFlags saveFlags = default, float refScale = default, sbyte columnsCount = default, sbyte columnsCountMax = default, bool wantApply = default)
		{
			ID = id;
			SaveFlags = saveFlags;
			RefScale = refScale;
			ColumnsCount = columnsCount;
			ColumnsCountMax = columnsCountMax;
			WantApply = wantApply ? (byte)1 : (byte)0;
		}


	}

}
