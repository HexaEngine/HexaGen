// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// (Optional) Access via ImGui::GetPlatformIO()<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiPlatformIO")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiPlatformIO
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_CreateWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformCreateWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_DestroyWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformDestroyWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_ShowWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformShowWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_SetWindowPos")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, ImVec2 pos)*")]
		public unsafe void* PlatformSetWindowPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_GetWindowPos")]
		[NativeName(NativeNameType.Type, "ImVec2 (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformGetWindowPos;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_SetWindowSize")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, ImVec2 size)*")]
		public unsafe void* PlatformSetWindowSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_GetWindowSize")]
		[NativeName(NativeNameType.Type, "ImVec2 (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformGetWindowSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_SetWindowFocus")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformSetWindowFocus;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_GetWindowFocus")]
		[NativeName(NativeNameType.Type, "bool (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformGetWindowFocus;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_GetWindowMinimized")]
		[NativeName(NativeNameType.Type, "bool (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformGetWindowMinimized;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_SetWindowTitle")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, const char* str)*")]
		public unsafe void* PlatformSetWindowTitle;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_SetWindowAlpha")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, float alpha)*")]
		public unsafe void* PlatformSetWindowAlpha;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_UpdateWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformUpdateWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_RenderWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, void* render_arg)*")]
		public unsafe void* PlatformRenderWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_SwapBuffers")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, void* render_arg)*")]
		public unsafe void* PlatformSwapBuffers;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_GetWindowDpiScale")]
		[NativeName(NativeNameType.Type, "float (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformGetWindowDpiScale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_OnChangedViewport")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* PlatformOnChangedViewport;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Platform_CreateVkSurface")]
		[NativeName(NativeNameType.Type, "int (*)(ImGuiViewport* vp, ImU64 vk_inst, const void* vk_allocators, ImU64* out_vk_surface)*")]
		public unsafe void* PlatformCreateVkSurface;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Renderer_CreateWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* RendererCreateWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Renderer_DestroyWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp)*")]
		public unsafe void* RendererDestroyWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Renderer_SetWindowSize")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, ImVec2 size)*")]
		public unsafe void* RendererSetWindowSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Renderer_RenderWindow")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, void* render_arg)*")]
		public unsafe void* RendererRenderWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Renderer_SwapBuffers")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiViewport* vp, void* render_arg)*")]
		public unsafe void* RendererSwapBuffers;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Monitors")]
		[NativeName(NativeNameType.Type, "ImVector_ImGuiPlatformMonitor")]
		public ImVectorImGuiPlatformMonitor Monitors;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Viewports")]
		[NativeName(NativeNameType.Type, "ImVector_ImGuiViewportPtr")]
		public ImVectorImGuiViewportPtr Viewports;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiPlatformIO(delegate*<ImGuiViewport*, void> platformCreatewindow = default, delegate*<ImGuiViewport*, void> platformDestroywindow = default, delegate*<ImGuiViewport*, void> platformShowwindow = default, delegate*<ImGuiViewport*, Vector2, void> platformSetwindowpos = default, delegate*<ImGuiViewport*, Vector2> platformGetwindowpos = default, delegate*<ImGuiViewport*, Vector2, void> platformSetwindowsize = default, delegate*<ImGuiViewport*, Vector2> platformGetwindowsize = default, delegate*<ImGuiViewport*, void> platformSetwindowfocus = default, delegate*<ImGuiViewport*, bool> platformGetwindowfocus = default, delegate*<ImGuiViewport*, bool> platformGetwindowminimized = default, delegate*<ImGuiViewport*, byte*, void> platformSetwindowtitle = default, delegate*<ImGuiViewport*, float, void> platformSetwindowalpha = default, delegate*<ImGuiViewport*, void> platformUpdatewindow = default, delegate*<ImGuiViewport*, void*, void> platformRenderwindow = default, delegate*<ImGuiViewport*, void*, void> platformSwapbuffers = default, delegate*<ImGuiViewport*, float> platformGetwindowdpiscale = default, delegate*<ImGuiViewport*, void> platformOnchangedviewport = default, delegate*<ImGuiViewport*, ulong, void*, ulong*, int> platformCreatevksurface = default, delegate*<ImGuiViewport*, void> rendererCreatewindow = default, delegate*<ImGuiViewport*, void> rendererDestroywindow = default, delegate*<ImGuiViewport*, Vector2, void> rendererSetwindowsize = default, delegate*<ImGuiViewport*, void*, void> rendererRenderwindow = default, delegate*<ImGuiViewport*, void*, void> rendererSwapbuffers = default, ImVectorImGuiPlatformMonitor monitors = default, ImVectorImGuiViewportPtr viewports = default)
		{
			PlatformCreateWindow = (void*)platformCreatewindow;
			PlatformDestroyWindow = (void*)platformDestroywindow;
			PlatformShowWindow = (void*)platformShowwindow;
			PlatformSetWindowPos = (void*)platformSetwindowpos;
			PlatformGetWindowPos = (void*)platformGetwindowpos;
			PlatformSetWindowSize = (void*)platformSetwindowsize;
			PlatformGetWindowSize = (void*)platformGetwindowsize;
			PlatformSetWindowFocus = (void*)platformSetwindowfocus;
			PlatformGetWindowFocus = (void*)platformGetwindowfocus;
			PlatformGetWindowMinimized = (void*)platformGetwindowminimized;
			PlatformSetWindowTitle = (void*)platformSetwindowtitle;
			PlatformSetWindowAlpha = (void*)platformSetwindowalpha;
			PlatformUpdateWindow = (void*)platformUpdatewindow;
			PlatformRenderWindow = (void*)platformRenderwindow;
			PlatformSwapBuffers = (void*)platformSwapbuffers;
			PlatformGetWindowDpiScale = (void*)platformGetwindowdpiscale;
			PlatformOnChangedViewport = (void*)platformOnchangedviewport;
			PlatformCreateVkSurface = (void*)platformCreatevksurface;
			RendererCreateWindow = (void*)rendererCreatewindow;
			RendererDestroyWindow = (void*)rendererDestroywindow;
			RendererSetWindowSize = (void*)rendererSetwindowsize;
			RendererRenderWindow = (void*)rendererRenderwindow;
			RendererSwapBuffers = (void*)rendererSwapbuffers;
			Monitors = monitors;
			Viewports = viewports;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiPlatformIO_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public unsafe void Destroy()
		{
			fixed (ImGuiPlatformIO* @this = &this)
			{
				ImGui.DestroyNative(@this);
			}
		}

	}

}
