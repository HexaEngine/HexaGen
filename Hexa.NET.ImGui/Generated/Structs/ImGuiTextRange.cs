// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// [Internal]<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiTextRange")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTextRange
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "b")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* B;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "e")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* E;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiTextRange(byte* b = default, byte* e = default)
		{
			B = b;
			E = e;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTextRange_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public unsafe void Destroy()
		{
			fixed (ImGuiTextRange* @this = &this)
			{
				ImGui.DestroyNative(@this);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTextRange_empty")]
		[return: NativeName(NativeNameType.Type, "bool")]
		public unsafe bool empty()
		{
			fixed (ImGuiTextRange* @this = &this)
			{
				byte ret = ImGui.emptyNative(@this);
				return ret != 0;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTextRange_split")]
		[return: NativeName(NativeNameType.Type, "void")]
		public unsafe void split([NativeName(NativeNameType.Param, "separator")] [NativeName(NativeNameType.Type, "char")] byte separator, [NativeName(NativeNameType.Param, "out")] [NativeName(NativeNameType.Type, "ImVector_ImGuiTextRange*")] ImVectorImGuiTextRange* output)
		{
			fixed (ImGuiTextRange* @this = &this)
			{
				ImGui.splitNative(@this, separator, output);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiTextRange_split")]
		[return: NativeName(NativeNameType.Type, "void")]
		public unsafe void split([NativeName(NativeNameType.Param, "separator")] [NativeName(NativeNameType.Type, "char")] byte separator, [NativeName(NativeNameType.Param, "out")] [NativeName(NativeNameType.Type, "ImVector_ImGuiTextRange*")] ref ImVectorImGuiTextRange output)
		{
			fixed (ImGuiTextRange* @this = &this)
			{
				fixed (ImVectorImGuiTextRange* poutput = &output)
				{
					ImGui.splitNative(@this, separator, (ImVectorImGuiTextRange*)poutput);
				}
			}
		}

	}

}
