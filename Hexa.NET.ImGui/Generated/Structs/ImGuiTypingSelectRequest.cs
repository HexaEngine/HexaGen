// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiTypingSelectRequest")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTypingSelectRequest
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "ImGuiTypingSelectFlags")]
		public ImGuiTypingSelectFlags Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SearchBufferLen")]
		[NativeName(NativeNameType.Type, "int")]
		public int SearchBufferLen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SearchBuffer")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* SearchBuffer;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SelectRequest")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte SelectRequest;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SingleCharMode")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte SingleCharMode;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SingleCharSize")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte SingleCharSize;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiTypingSelectRequest(ImGuiTypingSelectFlags flags = default, int searchBufferLen = default, byte* searchBuffer = default, bool selectRequest = default, bool singleCharMode = default, byte singleCharSize = default)
		{
			Flags = flags;
			SearchBufferLen = searchBufferLen;
			SearchBuffer = searchBuffer;
			SelectRequest = selectRequest ? (byte)1 : (byte)0;
			SingleCharMode = singleCharMode ? (byte)1 : (byte)0;
			SingleCharSize = singleCharSize;
		}


	}

}
