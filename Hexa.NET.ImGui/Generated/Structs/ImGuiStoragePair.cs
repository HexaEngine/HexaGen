// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// [Internal] Key+Value for ImGuiStorage<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiStoragePair")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiStoragePair
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.StructOrClass, "ImGuiStoragePair::")]
		[StructLayout(LayoutKind.Explicit)]
		public partial struct ImGuiStoragePairUnion
		{
			/// <summary>
			/// To be documented.
			/// </summary>
			[NativeName(NativeNameType.Field, "val_i")]
			[NativeName(NativeNameType.Type, "int")]
			[FieldOffset(0)]
			public int ValI;

			/// <summary>
			/// To be documented.
			/// </summary>
			[NativeName(NativeNameType.Field, "val_f")]
			[NativeName(NativeNameType.Type, "float")]
			[FieldOffset(0)]
			public float ValF;

			/// <summary>
			/// To be documented.
			/// </summary>
			[NativeName(NativeNameType.Field, "val_p")]
			[NativeName(NativeNameType.Type, "void*")]
			[FieldOffset(0)]
			public unsafe void* ValP;


			/// <summary>
			/// To be documented.
			/// </summary>
			public unsafe ImGuiStoragePairUnion(int valI = default, float valF = default, void* valP = default)
			{
				ValI = valI;
				ValF = valF;
				ValP = valP;
			}


		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "key")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint Key;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "")]
		[NativeName(NativeNameType.Type, "")]
		public ImGuiStoragePairUnion Union;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiStoragePair(uint key = default, ImGuiStoragePairUnion union = default)
		{
			Key = key;
			Union = union;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImGuiStoragePair_destroy")]
		[return: NativeName(NativeNameType.Type, "void")]
		public unsafe void Destroy()
		{
			fixed (ImGuiStoragePair* @this = &this)
			{
				ImGui.DestroyNative(@this);
			}
		}

	}

}
