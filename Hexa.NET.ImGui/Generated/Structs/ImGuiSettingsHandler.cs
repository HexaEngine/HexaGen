// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiSettingsHandler")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiSettingsHandler
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TypeName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* TypeName;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TypeHash")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint TypeHash;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ClearAllFn")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiContext* ctx, ImGuiSettingsHandler* handler)*")]
		public unsafe void* ClearAllFn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ReadInitFn")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiContext* ctx, ImGuiSettingsHandler* handler)*")]
		public unsafe void* ReadInitFn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ReadOpenFn")]
		[NativeName(NativeNameType.Type, "void* (*)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, const char* name)*")]
		public unsafe void* ReadOpenFn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ReadLineFn")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, void* entry, const char* line)*")]
		public unsafe void* ReadLineFn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ApplyAllFn")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiContext* ctx, ImGuiSettingsHandler* handler)*")]
		public unsafe void* ApplyAllFn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WriteAllFn")]
		[NativeName(NativeNameType.Type, "void (*)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer* out_buf)*")]
		public unsafe void* WriteAllFn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "UserData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* UserData;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiSettingsHandler(byte* typeName = default, uint typeHash = default, delegate*<ImGuiContext*, ImGuiSettingsHandler*, void> clearAllFn = default, delegate*<ImGuiContext*, ImGuiSettingsHandler*, void> readInitFn = default, delegate*<ImGuiContext*, ImGuiSettingsHandler*, byte*, void*> readOpenFn = default, delegate*<ImGuiContext*, ImGuiSettingsHandler*, void*, byte*, void> readLineFn = default, delegate*<ImGuiContext*, ImGuiSettingsHandler*, void> applyAllFn = default, delegate*<ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*, void> writeAllFn = default, void* userData = default)
		{
			TypeName = typeName;
			TypeHash = typeHash;
			ClearAllFn = (void*)clearAllFn;
			ReadInitFn = (void*)readInitFn;
			ReadOpenFn = (void*)readOpenFn;
			ReadLineFn = (void*)readLineFn;
			ApplyAllFn = (void*)applyAllFn;
			WriteAllFn = (void*)writeAllFn;
			UserData = userData;
		}


	}

}
