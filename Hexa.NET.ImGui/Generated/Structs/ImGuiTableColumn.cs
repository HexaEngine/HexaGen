// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiTableColumn")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTableColumn
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnFlags")]
		public ImGuiTableColumnFlags Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WidthGiven")]
		[NativeName(NativeNameType.Type, "float")]
		public float WidthGiven;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MinX")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxX")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WidthRequest")]
		[NativeName(NativeNameType.Type, "float")]
		public float WidthRequest;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WidthAuto")]
		[NativeName(NativeNameType.Type, "float")]
		public float WidthAuto;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "StretchWeight")]
		[NativeName(NativeNameType.Type, "float")]
		public float StretchWeight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InitStretchWeightOrWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float InitStretchWeightOrWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ClipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect ClipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "UserID")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint UserID;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WorkMinX")]
		[NativeName(NativeNameType.Type, "float")]
		public float WorkMinX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WorkMaxX")]
		[NativeName(NativeNameType.Type, "float")]
		public float WorkMaxX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ItemWidth")]
		[NativeName(NativeNameType.Type, "float")]
		public float ItemWidth;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentMaxXFrozen")]
		[NativeName(NativeNameType.Type, "float")]
		public float ContentMaxXFrozen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentMaxXUnfrozen")]
		[NativeName(NativeNameType.Type, "float")]
		public float ContentMaxXUnfrozen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentMaxXHeadersUsed")]
		[NativeName(NativeNameType.Type, "float")]
		public float ContentMaxXHeadersUsed;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ContentMaxXHeadersIdeal")]
		[NativeName(NativeNameType.Type, "float")]
		public float ContentMaxXHeadersIdeal;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NameOffset")]
		[NativeName(NativeNameType.Type, "ImS16")]
		public short NameOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DisplayOrder")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte DisplayOrder;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IndexWithinEnabledSet")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte IndexWithinEnabledSet;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PrevEnabledColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte PrevEnabledColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NextEnabledColumn")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte NextEnabledColumn;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortOrder")]
		[NativeName(NativeNameType.Type, "ImGuiTableColumnIdx")]
		public sbyte SortOrder;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DrawChannelCurrent")]
		[NativeName(NativeNameType.Type, "ImGuiTableDrawChannelIdx")]
		public byte DrawChannelCurrent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DrawChannelFrozen")]
		[NativeName(NativeNameType.Type, "ImGuiTableDrawChannelIdx")]
		public byte DrawChannelFrozen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DrawChannelUnfrozen")]
		[NativeName(NativeNameType.Type, "ImGuiTableDrawChannelIdx")]
		public byte DrawChannelUnfrozen;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsEnabled")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsEnabled;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsUserEnabled")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsUserEnabled;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsUserEnabledNextFrame")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsUserEnabledNextFrame;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsVisibleX")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsVisibleX;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsVisibleY")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsVisibleY;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsRequestOutput")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsRequestOutput;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsSkipItems")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsSkipItems;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsPreserveWidthAuto")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsPreserveWidthAuto;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NavLayerCurrent")]
		[NativeName(NativeNameType.Type, "ImS8")]
		public byte NavLayerCurrent;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AutoFitQueue")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte AutoFitQueue;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CannotSkipItemsQueue")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte CannotSkipItemsQueue;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortDirection")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte SortDirection;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortDirectionsAvailCount")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte SortDirectionsAvailCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortDirectionsAvailMask")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte SortDirectionsAvailMask;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SortDirectionsAvailList")]
		[NativeName(NativeNameType.Type, "ImU8")]
		public byte SortDirectionsAvailList;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiTableColumn(ImGuiTableColumnFlags flags = default, float widthGiven = default, float minX = default, float maxX = default, float widthRequest = default, float widthAuto = default, float stretchWeight = default, float initStretchWeightOrWidth = default, ImRect clipRect = default, uint userId = default, float workMinX = default, float workMaxX = default, float itemWidth = default, float contentMaxXFrozen = default, float contentMaxXUnfrozen = default, float contentMaxXHeadersUsed = default, float contentMaxXHeadersIdeal = default, short nameOffset = default, sbyte displayOrder = default, sbyte indexWithinEnabledSet = default, sbyte prevEnabledColumn = default, sbyte nextEnabledColumn = default, sbyte sortOrder = default, byte drawChannelCurrent = default, byte drawChannelFrozen = default, byte drawChannelUnfrozen = default, bool isEnabled = default, bool isUserEnabled = default, bool isUserEnabledNextFrame = default, bool isVisibleX = default, bool isVisibleY = default, bool isRequestOutput = default, bool isSkipItems = default, bool isPreserveWidthAuto = default, byte navLayerCurrent = default, byte autoFitQueue = default, byte cannotSkipItemsQueue = default, byte sortDirection = default, byte sortDirectionsAvailCount = default, byte sortDirectionsAvailMask = default, byte sortDirectionsAvailList = default)
		{
			Flags = flags;
			WidthGiven = widthGiven;
			MinX = minX;
			MaxX = maxX;
			WidthRequest = widthRequest;
			WidthAuto = widthAuto;
			StretchWeight = stretchWeight;
			InitStretchWeightOrWidth = initStretchWeightOrWidth;
			ClipRect = clipRect;
			UserID = userId;
			WorkMinX = workMinX;
			WorkMaxX = workMaxX;
			ItemWidth = itemWidth;
			ContentMaxXFrozen = contentMaxXFrozen;
			ContentMaxXUnfrozen = contentMaxXUnfrozen;
			ContentMaxXHeadersUsed = contentMaxXHeadersUsed;
			ContentMaxXHeadersIdeal = contentMaxXHeadersIdeal;
			NameOffset = nameOffset;
			DisplayOrder = displayOrder;
			IndexWithinEnabledSet = indexWithinEnabledSet;
			PrevEnabledColumn = prevEnabledColumn;
			NextEnabledColumn = nextEnabledColumn;
			SortOrder = sortOrder;
			DrawChannelCurrent = drawChannelCurrent;
			DrawChannelFrozen = drawChannelFrozen;
			DrawChannelUnfrozen = drawChannelUnfrozen;
			IsEnabled = isEnabled ? (byte)1 : (byte)0;
			IsUserEnabled = isUserEnabled ? (byte)1 : (byte)0;
			IsUserEnabledNextFrame = isUserEnabledNextFrame ? (byte)1 : (byte)0;
			IsVisibleX = isVisibleX ? (byte)1 : (byte)0;
			IsVisibleY = isVisibleY ? (byte)1 : (byte)0;
			IsRequestOutput = isRequestOutput ? (byte)1 : (byte)0;
			IsSkipItems = isSkipItems ? (byte)1 : (byte)0;
			IsPreserveWidthAuto = isPreserveWidthAuto ? (byte)1 : (byte)0;
			NavLayerCurrent = navLayerCurrent;
			AutoFitQueue = autoFitQueue;
			CannotSkipItemsQueue = cannotSkipItemsQueue;
			SortDirection = sortDirection;
			SortDirectionsAvailCount = sortDirectionsAvailCount;
			SortDirectionsAvailMask = sortDirectionsAvailMask;
			SortDirectionsAvailList = sortDirectionsAvailList;
		}


	}

}
