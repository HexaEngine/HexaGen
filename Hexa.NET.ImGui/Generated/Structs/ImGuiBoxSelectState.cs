// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGui
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "ImGuiBoxSelectState")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiBoxSelectState
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ID")]
		[NativeName(NativeNameType.Type, "ImGuiID")]
		public uint ID;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsActive")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsActive;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsStarting")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsStarting;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsStartedFromVoid")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsStartedFromVoid;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsStartedSetNavIdOnce")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte IsStartedSetNavIdOnce;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RequestClear")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte RequestClear;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "KeyMods")]
		[NativeName(NativeNameType.Type, "ImGuiKeyChord")]
		public int KeyMods;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "StartPosRel")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 StartPosRel;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "EndPosRel")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 EndPosRel;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScrollAccum")]
		[NativeName(NativeNameType.Type, "ImVec2")]
		public Vector2 ScrollAccum;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Window")]
		[NativeName(NativeNameType.Type, "ImGuiWindow*")]
		public unsafe ImGuiWindow* Window;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "UnclipMode")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte UnclipMode;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "UnclipRect")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect UnclipRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BoxSelectRectPrev")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect BoxSelectRectPrev;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BoxSelectRectCurr")]
		[NativeName(NativeNameType.Type, "ImRect")]
		public ImRect BoxSelectRectCurr;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ImGuiBoxSelectState(uint id = default, bool isActive = default, bool isStarting = default, bool isStartedFromVoid = default, bool isStartedSetNavIdOnce = default, bool requestClear = default, int keyMods = default, Vector2 startPosRel = default, Vector2 endPosRel = default, Vector2 scrollAccum = default, ImGuiWindow* window = default, bool unclipMode = default, ImRect unclipRect = default, ImRect boxSelectRectPrev = default, ImRect boxSelectRectCurr = default)
		{
			ID = id;
			IsActive = isActive ? (byte)1 : (byte)0;
			IsStarting = isStarting ? (byte)1 : (byte)0;
			IsStartedFromVoid = isStartedFromVoid ? (byte)1 : (byte)0;
			IsStartedSetNavIdOnce = isStartedSetNavIdOnce ? (byte)1 : (byte)0;
			RequestClear = requestClear ? (byte)1 : (byte)0;
			KeyMods = keyMods;
			StartPosRel = startPosRel;
			EndPosRel = endPosRel;
			ScrollAccum = scrollAccum;
			Window = window;
			UnclipMode = unclipMode ? (byte)1 : (byte)0;
			UnclipRect = unclipRect;
			BoxSelectRectPrev = boxSelectRectPrev;
			BoxSelectRectCurr = boxSelectRectCurr;
		}


	}

}
