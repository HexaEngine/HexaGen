// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL2
{
	public unsafe partial class SDL
	{

		[NativeName(NativeNameType.Func, "glTexGenf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexGenf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexGenfNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		[NativeName(NativeNameType.Func, "glTexGenf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGenf([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlTexGenfNative(coord, pname, param);
		}

		[NativeName(NativeNameType.Func, "glTexGeni")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexGeni")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexGeniNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		[NativeName(NativeNameType.Func, "glTexGeni")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGeni([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlTexGeniNative(coord, pname, param);
		}

		[NativeName(NativeNameType.Func, "glTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexGendv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexGendvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* @params);

		[NativeName(NativeNameType.Func, "glTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* @params)
		{
			GlTexGendvNative(coord, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double @params)
		{
			fixed (double* pparams = &@params)
			{
				GlTexGendvNative(coord, pname, (double*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexGenfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexGenfvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlTexGenfvNative(coord, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlTexGenfvNative(coord, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexGeniv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexGenivNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlTexGenivNative(coord, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlTexGenivNative(coord, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexGendv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexGendvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] double* @params);

		[NativeName(NativeNameType.Func, "glGetTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] double* @params)
		{
			GlGetTexGendvNative(coord, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double @params)
		{
			fixed (double* pparams = &@params)
			{
				GlGetTexGendvNative(coord, pname, (double*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexGenfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexGenfvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexGenfvNative(coord, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexGenfvNative(coord, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexGeniv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexGenivNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexGenivNative(coord, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexGenivNative(coord, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glTexEnvf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexEnvf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexEnvfNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		[NativeName(NativeNameType.Func, "glTexEnvf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvf([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlTexEnvfNative(target, pname, param);
		}

		[NativeName(NativeNameType.Func, "glTexEnvi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexEnvi")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexEnviNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		[NativeName(NativeNameType.Func, "glTexEnvi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvi([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlTexEnviNative(target, pname, param);
		}

		[NativeName(NativeNameType.Func, "glTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexEnvfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexEnvfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlTexEnvfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlTexEnvfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexEnviv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexEnvivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlTexEnvivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlTexEnvivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexEnvfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexEnvfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexEnvfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexEnvfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexEnviv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexEnvivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexEnvivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexEnvivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glTexParameterf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexParameterf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexParameterfNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		[NativeName(NativeNameType.Func, "glTexParameterf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameterf([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlTexParameterfNative(target, pname, param);
		}

		[NativeName(NativeNameType.Func, "glTexParameteri")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexParameteri")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexParameteriNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		[NativeName(NativeNameType.Func, "glTexParameteri")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameteri([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlTexParameteriNative(target, pname, param);
		}

		[NativeName(NativeNameType.Func, "glTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlTexParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlTexParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlTexParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlTexParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexLevelParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexLevelParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexLevelParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetTexLevelParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexLevelParameterfvNative(target, level, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexLevelParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexLevelParameterfvNative(target, level, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetTexLevelParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexLevelParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexLevelParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetTexLevelParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexLevelParameterivNative(target, level, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetTexLevelParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexLevelParameterivNative(target, level, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexImage1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLint")] int internalFormat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		[NativeName(NativeNameType.Func, "glTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLint")] int internalFormat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexImage1DNative(target, level, internalFormat, width, border, format, type, pixels);
		}

		[NativeName(NativeNameType.Func, "glTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexImage2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLint")] int internalFormat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		[NativeName(NativeNameType.Func, "glTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLint")] int internalFormat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexImage2DNative(target, level, internalFormat, width, height, border, format, type, pixels);
		}

		[NativeName(NativeNameType.Func, "glGetTexImage")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetTexImage")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetTexImageNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "GLvoid*")] void* pixels);

		[NativeName(NativeNameType.Func, "glGetTexImage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexImage([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "GLvoid*")] void* pixels)
		{
			GlGetTexImageNative(target, level, format, type, pixels);
		}

		/// <summary>
		/// 1.1 functions <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "glGenTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGenTextures")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGenTexturesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "GLuint*")] uint* textures);

		/// <summary>/// 1.1 functions <br/>/// </summary>		[NativeName(NativeNameType.Func, "glGenTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGenTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "GLuint*")] uint* textures)
		{
			GlGenTexturesNative(n, textures);
		}

		/// <summary>/// 1.1 functions <br/>/// </summary>		[NativeName(NativeNameType.Func, "glGenTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGenTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "GLuint*")] ref uint textures)
		{
			fixed (uint* ptextures = &textures)
			{
				GlGenTexturesNative(n, (uint*)ptextures);
			}
		}

		[NativeName(NativeNameType.Func, "glDeleteTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glDeleteTextures")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlDeleteTexturesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures);

		[NativeName(NativeNameType.Func, "glDeleteTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDeleteTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures)
		{
			GlDeleteTexturesNative(n, textures);
		}

		[NativeName(NativeNameType.Func, "glDeleteTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDeleteTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures)
		{
			fixed (uint* ptextures = &textures)
			{
				GlDeleteTexturesNative(n, (uint*)ptextures);
			}
		}

		[NativeName(NativeNameType.Func, "glBindTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glBindTexture")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlBindTextureNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture);

		[NativeName(NativeNameType.Func, "glBindTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBindTexture([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture)
		{
			GlBindTextureNative(target, texture);
		}

		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glPrioritizeTextures")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlPrioritizeTexturesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] float* priorities);

		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] float* priorities)
		{
			GlPrioritizeTexturesNative(n, textures, priorities);
		}

		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] float* priorities)
		{
			fixed (uint* ptextures = &textures)
			{
				GlPrioritizeTexturesNative(n, (uint*)ptextures, priorities);
			}
		}

		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] ref float priorities)
		{
			fixed (float* ppriorities = &priorities)
			{
				GlPrioritizeTexturesNative(n, textures, (float*)ppriorities);
			}
		}

		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] ref float priorities)
		{
			fixed (uint* ptextures = &textures)
			{
				fixed (float* ppriorities = &priorities)
				{
					GlPrioritizeTexturesNative(n, (uint*)ptextures, (float*)ppriorities);
				}
			}
		}

		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		[LibraryImport(LibName, EntryPoint = "glAreTexturesResident")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte GlAreTexturesResidentNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* residences);

		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* residences)
		{
			byte ret = GlAreTexturesResidentNative(n, textures, residences);
			return ret;
		}

		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* residences)
		{
			fixed (uint* ptextures = &textures)
			{
				byte ret = GlAreTexturesResidentNative(n, (uint*)ptextures, residences);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] ref byte residences)
		{
			fixed (byte* presidences = &residences)
			{
				byte ret = GlAreTexturesResidentNative(n, textures, (byte*)presidences);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] ref byte residences)
		{
			fixed (uint* ptextures = &textures)
			{
				fixed (byte* presidences = &residences)
				{
					byte ret = GlAreTexturesResidentNative(n, (uint*)ptextures, (byte*)presidences);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "glIsTexture")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		[LibraryImport(LibName, EntryPoint = "glIsTexture")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte GlIsTextureNative([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture);

		[NativeName(NativeNameType.Func, "glIsTexture")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlIsTexture([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture)
		{
			byte ret = GlIsTextureNative(texture);
			return ret;
		}

		[NativeName(NativeNameType.Func, "glTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexSubImage1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexSubImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		[NativeName(NativeNameType.Func, "glTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexSubImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexSubImage1DNative(target, level, xoffset, width, format, type, pixels);
		}

		[NativeName(NativeNameType.Func, "glTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexSubImage2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexSubImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		[NativeName(NativeNameType.Func, "glTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexSubImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexSubImage2DNative(target, level, xoffset, yoffset, width, height, format, type, pixels);
		}

		[NativeName(NativeNameType.Func, "glCopyTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyTexImage1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyTexImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border);

		[NativeName(NativeNameType.Func, "glCopyTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border)
		{
			GlCopyTexImage1DNative(target, level, internalformat, x, y, width, border);
		}

		[NativeName(NativeNameType.Func, "glCopyTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyTexImage2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyTexImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border);

		[NativeName(NativeNameType.Func, "glCopyTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border)
		{
			GlCopyTexImage2DNative(target, level, internalformat, x, y, width, height, border);
		}

		[NativeName(NativeNameType.Func, "glCopyTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyTexSubImage1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyTexSubImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width);

		[NativeName(NativeNameType.Func, "glCopyTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexSubImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width)
		{
			GlCopyTexSubImage1DNative(target, level, xoffset, x, y, width);
		}

		[NativeName(NativeNameType.Func, "glCopyTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyTexSubImage2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyTexSubImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height);

		[NativeName(NativeNameType.Func, "glCopyTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexSubImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height)
		{
			GlCopyTexSubImage2DNative(target, level, xoffset, yoffset, x, y, width, height);
		}

		/// <summary>
		/// Evaluators<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "glMap1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMap1d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMap1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points);

		/// <summary>/// Evaluators<br/>/// </summary>		[NativeName(NativeNameType.Func, "glMap1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points)
		{
			GlMap1DNative(target, u1, u2, stride, order, points);
		}

		/// <summary>/// Evaluators<br/>/// </summary>		[NativeName(NativeNameType.Func, "glMap1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double points)
		{
			fixed (double* ppoints = &points)
			{
				GlMap1DNative(target, u1, u2, stride, order, (double*)ppoints);
			}
		}

		[NativeName(NativeNameType.Func, "glMap1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMap1f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMap1FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points);

		[NativeName(NativeNameType.Func, "glMap1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points)
		{
			GlMap1FNative(target, u1, u2, stride, order, points);
		}

		[NativeName(NativeNameType.Func, "glMap1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float points)
		{
			fixed (float* ppoints = &points)
			{
				GlMap1FNative(target, u1, u2, stride, order, (float*)ppoints);
			}
		}

		[NativeName(NativeNameType.Func, "glMap2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMap2d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMap2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points);

		[NativeName(NativeNameType.Func, "glMap2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points)
		{
			GlMap2DNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
		}

		[NativeName(NativeNameType.Func, "glMap2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double points)
		{
			fixed (double* ppoints = &points)
			{
				GlMap2DNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, (double*)ppoints);
			}
		}

		[NativeName(NativeNameType.Func, "glMap2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMap2f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMap2FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points);

		[NativeName(NativeNameType.Func, "glMap2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points)
		{
			GlMap2FNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
		}

		[NativeName(NativeNameType.Func, "glMap2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float points)
		{
			fixed (float* ppoints = &points)
			{
				GlMap2FNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, (float*)ppoints);
			}
		}

		[NativeName(NativeNameType.Func, "glGetMapdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetMapdv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetMapdvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glGetMapdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapdv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble*")] double* v)
		{
			GlGetMapdvNative(target, query, v);
		}

		[NativeName(NativeNameType.Func, "glGetMapdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapdv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlGetMapdvNative(target, query, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glGetMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetMapfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetMapfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glGetMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat*")] float* v)
		{
			GlGetMapfvNative(target, query, v);
		}

		[NativeName(NativeNameType.Func, "glGetMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlGetMapfvNative(target, query, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glGetMapiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetMapiv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetMapivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glGetMapiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapiv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLint*")] int* v)
		{
			GlGetMapivNative(target, query, v);
		}

		[NativeName(NativeNameType.Func, "glGetMapiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapiv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlGetMapivNative(target, query, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glEvalCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord1d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord1DNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u);

		[NativeName(NativeNameType.Func, "glEvalCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1D([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u)
		{
			GlEvalCoord1DNative(u);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord1f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord1FNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u);

		[NativeName(NativeNameType.Func, "glEvalCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1F([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u)
		{
			GlEvalCoord1FNative(u);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord1dv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord1DvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u);

		[NativeName(NativeNameType.Func, "glEvalCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u)
		{
			GlEvalCoord1DvNative(u);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double u)
		{
			fixed (double* pu = &u)
			{
				GlEvalCoord1DvNative((double*)pu);
			}
		}

		[NativeName(NativeNameType.Func, "glEvalCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord1fv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord1FvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u);

		[NativeName(NativeNameType.Func, "glEvalCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u)
		{
			GlEvalCoord1FvNative(u);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float u)
		{
			fixed (float* pu = &u)
			{
				GlEvalCoord1FvNative((float*)pu);
			}
		}

		[NativeName(NativeNameType.Func, "glEvalCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord2d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord2DNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble")] double v);

		[NativeName(NativeNameType.Func, "glEvalCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2D([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble")] double v)
		{
			GlEvalCoord2DNative(u, v);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord2f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord2FNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat")] float v);

		[NativeName(NativeNameType.Func, "glEvalCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2F([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat")] float v)
		{
			GlEvalCoord2FNative(u, v);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord2dv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord2DvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u);

		[NativeName(NativeNameType.Func, "glEvalCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u)
		{
			GlEvalCoord2DvNative(u);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double u)
		{
			fixed (double* pu = &u)
			{
				GlEvalCoord2DvNative((double*)pu);
			}
		}

		[NativeName(NativeNameType.Func, "glEvalCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalCoord2fv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalCoord2FvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u);

		[NativeName(NativeNameType.Func, "glEvalCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u)
		{
			GlEvalCoord2FvNative(u);
		}

		[NativeName(NativeNameType.Func, "glEvalCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float u)
		{
			fixed (float* pu = &u)
			{
				GlEvalCoord2FvNative((float*)pu);
			}
		}

		[NativeName(NativeNameType.Func, "glMapGrid1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMapGrid1d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMapGrid1DNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2);

		[NativeName(NativeNameType.Func, "glMapGrid1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid1D([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2)
		{
			GlMapGrid1DNative(un, u1, u2);
		}

		[NativeName(NativeNameType.Func, "glMapGrid1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMapGrid1f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMapGrid1FNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2);

		[NativeName(NativeNameType.Func, "glMapGrid1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid1F([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2)
		{
			GlMapGrid1FNative(un, u1, u2);
		}

		[NativeName(NativeNameType.Func, "glMapGrid2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMapGrid2d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMapGrid2DNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2);

		[NativeName(NativeNameType.Func, "glMapGrid2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid2D([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2)
		{
			GlMapGrid2DNative(un, u1, u2, vn, v1, v2);
		}

		[NativeName(NativeNameType.Func, "glMapGrid2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMapGrid2f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMapGrid2FNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2);

		[NativeName(NativeNameType.Func, "glMapGrid2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid2F([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2)
		{
			GlMapGrid2FNative(un, u1, u2, vn, v1, v2);
		}

		[NativeName(NativeNameType.Func, "glEvalPoint1")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalPoint1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalPoint1Native([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i);

		[NativeName(NativeNameType.Func, "glEvalPoint1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalPoint1([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i)
		{
			GlEvalPoint1Native(i);
		}

		[NativeName(NativeNameType.Func, "glEvalPoint2")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalPoint2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalPoint2Native([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i, [NativeName(NativeNameType.Param, "j")] [NativeName(NativeNameType.Type, "GLint")] int j);

		[NativeName(NativeNameType.Func, "glEvalPoint2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalPoint2([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i, [NativeName(NativeNameType.Param, "j")] [NativeName(NativeNameType.Type, "GLint")] int j)
		{
			GlEvalPoint2Native(i, j);
		}

		[NativeName(NativeNameType.Func, "glEvalMesh1")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalMesh1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalMesh1Native([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2);

		[NativeName(NativeNameType.Func, "glEvalMesh1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalMesh1([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2)
		{
			GlEvalMesh1Native(mode, i1, i2);
		}

		[NativeName(NativeNameType.Func, "glEvalMesh2")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glEvalMesh2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlEvalMesh2Native([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2, [NativeName(NativeNameType.Param, "j1")] [NativeName(NativeNameType.Type, "GLint")] int j1, [NativeName(NativeNameType.Param, "j2")] [NativeName(NativeNameType.Type, "GLint")] int j2);

		[NativeName(NativeNameType.Func, "glEvalMesh2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalMesh2([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2, [NativeName(NativeNameType.Param, "j1")] [NativeName(NativeNameType.Type, "GLint")] int j1, [NativeName(NativeNameType.Param, "j2")] [NativeName(NativeNameType.Type, "GLint")] int j2)
		{
			GlEvalMesh2Native(mode, i1, i2, j1, j2);
		}

		/// <summary>
		/// Fog<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "glFogf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glFogf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlFogfNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>/// Fog<br/>/// </summary>		[NativeName(NativeNameType.Func, "glFogf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogf([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlFogfNative(pname, param);
		}

		[NativeName(NativeNameType.Func, "glFogi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glFogi")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlFogiNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		[NativeName(NativeNameType.Func, "glFogi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogi([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlFogiNative(pname, param);
		}

		[NativeName(NativeNameType.Func, "glFogfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glFogfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlFogfvNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glFogfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogfv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlFogfvNative(pname, @params);
		}

		[NativeName(NativeNameType.Func, "glFogfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogfv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlFogfvNative(pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glFogiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glFogiv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlFogivNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glFogiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogiv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlFogivNative(pname, @params);
		}

		[NativeName(NativeNameType.Func, "glFogiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogiv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlFogivNative(pname, (int*)pparams);
			}
		}

		/// <summary>
		/// Selection and Feedback<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "glFeedbackBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glFeedbackBuffer")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlFeedbackBufferNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLfloat*")] float* buffer);

		/// <summary>/// Selection and Feedback<br/>/// </summary>		[NativeName(NativeNameType.Func, "glFeedbackBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFeedbackBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLfloat*")] float* buffer)
		{
			GlFeedbackBufferNative(size, type, buffer);
		}

		/// <summary>/// Selection and Feedback<br/>/// </summary>		[NativeName(NativeNameType.Func, "glFeedbackBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFeedbackBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float buffer)
		{
			fixed (float* pbuffer = &buffer)
			{
				GlFeedbackBufferNative(size, type, (float*)pbuffer);
			}
		}

		[NativeName(NativeNameType.Func, "glPassThrough")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glPassThrough")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlPassThroughNative([NativeName(NativeNameType.Param, "token")] [NativeName(NativeNameType.Type, "GLfloat")] float token);

		[NativeName(NativeNameType.Func, "glPassThrough")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPassThrough([NativeName(NativeNameType.Param, "token")] [NativeName(NativeNameType.Type, "GLfloat")] float token)
		{
			GlPassThroughNative(token);
		}

		[NativeName(NativeNameType.Func, "glSelectBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glSelectBuffer")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlSelectBufferNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLuint*")] uint* buffer);

		[NativeName(NativeNameType.Func, "glSelectBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlSelectBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLuint*")] uint* buffer)
		{
			GlSelectBufferNative(size, buffer);
		}

		[NativeName(NativeNameType.Func, "glSelectBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlSelectBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLuint*")] ref uint buffer)
		{
			fixed (uint* pbuffer = &buffer)
			{
				GlSelectBufferNative(size, (uint*)pbuffer);
			}
		}

		[NativeName(NativeNameType.Func, "glInitNames")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glInitNames")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlInitNamesNative();

		[NativeName(NativeNameType.Func, "glInitNames")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlInitNames()
		{
			GlInitNamesNative();
		}

		[NativeName(NativeNameType.Func, "glLoadName")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glLoadName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlLoadNameNative([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name);

		[NativeName(NativeNameType.Func, "glLoadName")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadName([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name)
		{
			GlLoadNameNative(name);
		}

		[NativeName(NativeNameType.Func, "glPushName")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glPushName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlPushNameNative([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name);

		[NativeName(NativeNameType.Func, "glPushName")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPushName([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name)
		{
			GlPushNameNative(name);
		}

		[NativeName(NativeNameType.Func, "glPopName")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glPopName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlPopNameNative();

		[NativeName(NativeNameType.Func, "glPopName")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPopName()
		{
			GlPopNameNative();
		}

		[NativeName(NativeNameType.Func, "glDrawRangeElements")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glDrawRangeElements")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlDrawRangeElementsNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "start")] [NativeName(NativeNameType.Type, "GLuint")] uint start, [NativeName(NativeNameType.Param, "end")] [NativeName(NativeNameType.Type, "GLuint")] uint end, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "indices")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* indices);

		[NativeName(NativeNameType.Func, "glDrawRangeElements")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDrawRangeElements([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "start")] [NativeName(NativeNameType.Type, "GLuint")] uint start, [NativeName(NativeNameType.Param, "end")] [NativeName(NativeNameType.Type, "GLuint")] uint end, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "indices")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* indices)
		{
			GlDrawRangeElementsNative(mode, start, end, count, type, indices);
		}

		[NativeName(NativeNameType.Func, "glTexImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexImage3D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexImage3DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLint")] int internalFormat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		[NativeName(NativeNameType.Func, "glTexImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexImage3D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLint")] int internalFormat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexImage3DNative(target, level, internalFormat, width, height, depth, border, format, type, pixels);
		}

		[NativeName(NativeNameType.Func, "glTexSubImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glTexSubImage3D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlTexSubImage3DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "zoffset")] [NativeName(NativeNameType.Type, "GLint")] int zoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		[NativeName(NativeNameType.Func, "glTexSubImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexSubImage3D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "zoffset")] [NativeName(NativeNameType.Type, "GLint")] int zoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexSubImage3DNative(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
		}

		[NativeName(NativeNameType.Func, "glCopyTexSubImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyTexSubImage3D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyTexSubImage3DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "zoffset")] [NativeName(NativeNameType.Type, "GLint")] int zoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height);

		[NativeName(NativeNameType.Func, "glCopyTexSubImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexSubImage3D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "zoffset")] [NativeName(NativeNameType.Type, "GLint")] int zoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height)
		{
			GlCopyTexSubImage3DNative(target, level, xoffset, yoffset, zoffset, x, y, width, height);
		}

		[NativeName(NativeNameType.Func, "glColorTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glColorTable")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlColorTableNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "table")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* table);

		[NativeName(NativeNameType.Func, "glColorTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorTable([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "table")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* table)
		{
			GlColorTableNative(target, internalformat, width, format, type, table);
		}

		[NativeName(NativeNameType.Func, "glColorSubTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glColorSubTable")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlColorSubTableNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "start")] [NativeName(NativeNameType.Type, "GLsizei")] int start, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data);

		[NativeName(NativeNameType.Func, "glColorSubTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorSubTable([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "start")] [NativeName(NativeNameType.Type, "GLsizei")] int start, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data)
		{
			GlColorSubTableNative(target, start, count, format, type, data);
		}

		[NativeName(NativeNameType.Func, "glColorTableParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glColorTableParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlColorTableParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glColorTableParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorTableParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlColorTableParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glColorTableParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorTableParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlColorTableParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glColorTableParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glColorTableParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlColorTableParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glColorTableParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorTableParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlColorTableParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glColorTableParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorTableParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlColorTableParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glCopyColorSubTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyColorSubTable")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyColorSubTableNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "start")] [NativeName(NativeNameType.Type, "GLsizei")] int start, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width);

		[NativeName(NativeNameType.Func, "glCopyColorSubTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyColorSubTable([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "start")] [NativeName(NativeNameType.Type, "GLsizei")] int start, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width)
		{
			GlCopyColorSubTableNative(target, start, x, y, width);
		}

		[NativeName(NativeNameType.Func, "glCopyColorTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyColorTable")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyColorTableNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width);

		[NativeName(NativeNameType.Func, "glCopyColorTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyColorTable([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width)
		{
			GlCopyColorTableNative(target, internalformat, x, y, width);
		}

		[NativeName(NativeNameType.Func, "glGetColorTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetColorTable")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetColorTableNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "table")] [NativeName(NativeNameType.Type, "GLvoid*")] void* table);

		[NativeName(NativeNameType.Func, "glGetColorTable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetColorTable([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "table")] [NativeName(NativeNameType.Type, "GLvoid*")] void* table)
		{
			GlGetColorTableNative(target, format, type, table);
		}

		[NativeName(NativeNameType.Func, "glGetColorTableParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetColorTableParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetColorTableParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetColorTableParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetColorTableParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetColorTableParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetColorTableParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetColorTableParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetColorTableParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetColorTableParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetColorTableParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetColorTableParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetColorTableParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetColorTableParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetColorTableParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetColorTableParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetColorTableParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetColorTableParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glBlendEquation")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glBlendEquation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlBlendEquationNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		[NativeName(NativeNameType.Func, "glBlendEquation")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBlendEquation([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlBlendEquationNative(mode);
		}

		[NativeName(NativeNameType.Func, "glBlendColor")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glBlendColor")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlBlendColorNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLclampf")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLclampf")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLclampf")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLclampf")] float alpha);

		[NativeName(NativeNameType.Func, "glBlendColor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBlendColor([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLclampf")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLclampf")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLclampf")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLclampf")] float alpha)
		{
			GlBlendColorNative(red, green, blue, alpha);
		}

		[NativeName(NativeNameType.Func, "glHistogram")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glHistogram")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlHistogramNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "sink")] [NativeName(NativeNameType.Type, "GLboolean")] byte sink);

		[NativeName(NativeNameType.Func, "glHistogram")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlHistogram([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "sink")] [NativeName(NativeNameType.Type, "GLboolean")] byte sink)
		{
			GlHistogramNative(target, width, internalformat, sink);
		}

		[NativeName(NativeNameType.Func, "glResetHistogram")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glResetHistogram")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlResetHistogramNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target);

		[NativeName(NativeNameType.Func, "glResetHistogram")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlResetHistogram([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target)
		{
			GlResetHistogramNative(target);
		}

		[NativeName(NativeNameType.Func, "glGetHistogram")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetHistogram")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetHistogramNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "reset")] [NativeName(NativeNameType.Type, "GLboolean")] byte reset, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLvoid*")] void* values);

		[NativeName(NativeNameType.Func, "glGetHistogram")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetHistogram([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "reset")] [NativeName(NativeNameType.Type, "GLboolean")] byte reset, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLvoid*")] void* values)
		{
			GlGetHistogramNative(target, reset, format, type, values);
		}

		[NativeName(NativeNameType.Func, "glGetHistogramParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetHistogramParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetHistogramParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetHistogramParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetHistogramParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetHistogramParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetHistogramParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetHistogramParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetHistogramParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetHistogramParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetHistogramParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetHistogramParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetHistogramParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetHistogramParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetHistogramParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetHistogramParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetHistogramParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetHistogramParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glMinmax")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMinmax")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMinmaxNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "sink")] [NativeName(NativeNameType.Type, "GLboolean")] byte sink);

		[NativeName(NativeNameType.Func, "glMinmax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMinmax([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "sink")] [NativeName(NativeNameType.Type, "GLboolean")] byte sink)
		{
			GlMinmaxNative(target, internalformat, sink);
		}

		[NativeName(NativeNameType.Func, "glResetMinmax")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glResetMinmax")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlResetMinmaxNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target);

		[NativeName(NativeNameType.Func, "glResetMinmax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlResetMinmax([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target)
		{
			GlResetMinmaxNative(target);
		}

		[NativeName(NativeNameType.Func, "glGetMinmax")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetMinmax")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetMinmaxNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "reset")] [NativeName(NativeNameType.Type, "GLboolean")] byte reset, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "types")] [NativeName(NativeNameType.Type, "GLenum")] uint types, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLvoid*")] void* values);

		[NativeName(NativeNameType.Func, "glGetMinmax")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMinmax([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "reset")] [NativeName(NativeNameType.Type, "GLboolean")] byte reset, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "types")] [NativeName(NativeNameType.Type, "GLenum")] uint types, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLvoid*")] void* values)
		{
			GlGetMinmaxNative(target, reset, format, types, values);
		}

		[NativeName(NativeNameType.Func, "glGetMinmaxParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetMinmaxParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetMinmaxParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetMinmaxParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMinmaxParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetMinmaxParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetMinmaxParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMinmaxParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetMinmaxParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetMinmaxParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetMinmaxParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetMinmaxParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetMinmaxParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMinmaxParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetMinmaxParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetMinmaxParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMinmaxParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetMinmaxParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glConvolutionFilter1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glConvolutionFilter1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlConvolutionFilter1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* image);

		[NativeName(NativeNameType.Func, "glConvolutionFilter1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionFilter1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* image)
		{
			GlConvolutionFilter1DNative(target, internalformat, width, format, type, image);
		}

		[NativeName(NativeNameType.Func, "glConvolutionFilter2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glConvolutionFilter2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlConvolutionFilter2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* image);

		[NativeName(NativeNameType.Func, "glConvolutionFilter2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionFilter2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* image)
		{
			GlConvolutionFilter2DNative(target, internalformat, width, height, format, type, image);
		}

		[NativeName(NativeNameType.Func, "glConvolutionParameterf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glConvolutionParameterf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlConvolutionParameterfNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat")] float @params);

		[NativeName(NativeNameType.Func, "glConvolutionParameterf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionParameterf([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat")] float @params)
		{
			GlConvolutionParameterfNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glConvolutionParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glConvolutionParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlConvolutionParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glConvolutionParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlConvolutionParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glConvolutionParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlConvolutionParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glConvolutionParameteri")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glConvolutionParameteri")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlConvolutionParameteriNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint")] int @params);

		[NativeName(NativeNameType.Func, "glConvolutionParameteri")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionParameteri([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint")] int @params)
		{
			GlConvolutionParameteriNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glConvolutionParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glConvolutionParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlConvolutionParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glConvolutionParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlConvolutionParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glConvolutionParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlConvolutionParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlConvolutionParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glCopyConvolutionFilter1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyConvolutionFilter1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyConvolutionFilter1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width);

		[NativeName(NativeNameType.Func, "glCopyConvolutionFilter1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyConvolutionFilter1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width)
		{
			GlCopyConvolutionFilter1DNative(target, internalformat, x, y, width);
		}

		[NativeName(NativeNameType.Func, "glCopyConvolutionFilter2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCopyConvolutionFilter2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCopyConvolutionFilter2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height);

		[NativeName(NativeNameType.Func, "glCopyConvolutionFilter2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyConvolutionFilter2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height)
		{
			GlCopyConvolutionFilter2DNative(target, internalformat, x, y, width, height);
		}

		[NativeName(NativeNameType.Func, "glGetConvolutionFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetConvolutionFilter")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetConvolutionFilterNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "GLvoid*")] void* image);

		[NativeName(NativeNameType.Func, "glGetConvolutionFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetConvolutionFilter([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "GLvoid*")] void* image)
		{
			GlGetConvolutionFilterNative(target, format, type, image);
		}

		[NativeName(NativeNameType.Func, "glGetConvolutionParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetConvolutionParameterfv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetConvolutionParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		[NativeName(NativeNameType.Func, "glGetConvolutionParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetConvolutionParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetConvolutionParameterfvNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetConvolutionParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetConvolutionParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetConvolutionParameterfvNative(target, pname, (float*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glGetConvolutionParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetConvolutionParameteriv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetConvolutionParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		[NativeName(NativeNameType.Func, "glGetConvolutionParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetConvolutionParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetConvolutionParameterivNative(target, pname, @params);
		}

		[NativeName(NativeNameType.Func, "glGetConvolutionParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetConvolutionParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetConvolutionParameterivNative(target, pname, (int*)pparams);
			}
		}

		[NativeName(NativeNameType.Func, "glSeparableFilter2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glSeparableFilter2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlSeparableFilter2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "row")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* row, [NativeName(NativeNameType.Param, "column")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* column);

		[NativeName(NativeNameType.Func, "glSeparableFilter2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlSeparableFilter2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "row")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* row, [NativeName(NativeNameType.Param, "column")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* column)
		{
			GlSeparableFilter2DNative(target, internalformat, width, height, format, type, row, column);
		}

		[NativeName(NativeNameType.Func, "glGetSeparableFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetSeparableFilter")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetSeparableFilterNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "row")] [NativeName(NativeNameType.Type, "GLvoid*")] void* row, [NativeName(NativeNameType.Param, "column")] [NativeName(NativeNameType.Type, "GLvoid*")] void* column, [NativeName(NativeNameType.Param, "span")] [NativeName(NativeNameType.Type, "GLvoid*")] void* span);

		[NativeName(NativeNameType.Func, "glGetSeparableFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetSeparableFilter([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "row")] [NativeName(NativeNameType.Type, "GLvoid*")] void* row, [NativeName(NativeNameType.Param, "column")] [NativeName(NativeNameType.Type, "GLvoid*")] void* column, [NativeName(NativeNameType.Param, "span")] [NativeName(NativeNameType.Type, "GLvoid*")] void* span)
		{
			GlGetSeparableFilterNative(target, format, type, row, column, span);
		}

		[NativeName(NativeNameType.Func, "glActiveTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glActiveTexture")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlActiveTextureNative([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture);

		[NativeName(NativeNameType.Func, "glActiveTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlActiveTexture([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture)
		{
			GlActiveTextureNative(texture);
		}

		[NativeName(NativeNameType.Func, "glClientActiveTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glClientActiveTexture")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlClientActiveTextureNative([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture);

		[NativeName(NativeNameType.Func, "glClientActiveTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClientActiveTexture([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture)
		{
			GlClientActiveTextureNative(texture);
		}

		[NativeName(NativeNameType.Func, "glCompressedTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCompressedTexImage1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCompressedTexImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data);

		[NativeName(NativeNameType.Func, "glCompressedTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCompressedTexImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data)
		{
			GlCompressedTexImage1DNative(target, level, internalformat, width, border, imageSize, data);
		}

		[NativeName(NativeNameType.Func, "glCompressedTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCompressedTexImage2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCompressedTexImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data);

		[NativeName(NativeNameType.Func, "glCompressedTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCompressedTexImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data)
		{
			GlCompressedTexImage2DNative(target, level, internalformat, width, height, border, imageSize, data);
		}

		[NativeName(NativeNameType.Func, "glCompressedTexImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCompressedTexImage3D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCompressedTexImage3DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data);

		[NativeName(NativeNameType.Func, "glCompressedTexImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCompressedTexImage3D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data)
		{
			GlCompressedTexImage3DNative(target, level, internalformat, width, height, depth, border, imageSize, data);
		}

		[NativeName(NativeNameType.Func, "glCompressedTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCompressedTexSubImage1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCompressedTexSubImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data);

		[NativeName(NativeNameType.Func, "glCompressedTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCompressedTexSubImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data)
		{
			GlCompressedTexSubImage1DNative(target, level, xoffset, width, format, imageSize, data);
		}

		[NativeName(NativeNameType.Func, "glCompressedTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCompressedTexSubImage2D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCompressedTexSubImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data);

		[NativeName(NativeNameType.Func, "glCompressedTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCompressedTexSubImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data)
		{
			GlCompressedTexSubImage2DNative(target, level, xoffset, yoffset, width, height, format, imageSize, data);
		}

		[NativeName(NativeNameType.Func, "glCompressedTexSubImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glCompressedTexSubImage3D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlCompressedTexSubImage3DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "zoffset")] [NativeName(NativeNameType.Type, "GLint")] int zoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data);

		[NativeName(NativeNameType.Func, "glCompressedTexSubImage3D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCompressedTexSubImage3D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "zoffset")] [NativeName(NativeNameType.Type, "GLint")] int zoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLsizei")] int depth, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "imageSize")] [NativeName(NativeNameType.Type, "GLsizei")] int imageSize, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* data)
		{
			GlCompressedTexSubImage3DNative(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
		}

		[NativeName(NativeNameType.Func, "glGetCompressedTexImage")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glGetCompressedTexImage")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlGetCompressedTexImageNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "lod")] [NativeName(NativeNameType.Type, "GLint")] int lod, [NativeName(NativeNameType.Param, "img")] [NativeName(NativeNameType.Type, "GLvoid*")] void* img);

		[NativeName(NativeNameType.Func, "glGetCompressedTexImage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetCompressedTexImage([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "lod")] [NativeName(NativeNameType.Type, "GLint")] int lod, [NativeName(NativeNameType.Param, "img")] [NativeName(NativeNameType.Type, "GLvoid*")] void* img)
		{
			GlGetCompressedTexImageNative(target, lod, img);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s)
		{
			GlMultiTexCoord1DNative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1dv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1DvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord1DvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord1DvNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s)
		{
			GlMultiTexCoord1FNative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1fv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1FvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord1FvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord1FvNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1i")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1INative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1I([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s)
		{
			GlMultiTexCoord1INative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1iv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1IvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord1IvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord1IvNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1s")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1SNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1S([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s)
		{
			GlMultiTexCoord1SNative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1sv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1SvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord1SvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord1SvNative(target, (short*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t)
		{
			GlMultiTexCoord2DNative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2dv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2DvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord2DvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord2DvNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t)
		{
			GlMultiTexCoord2FNative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2fv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2FvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord2FvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord2FvNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2i")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2INative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2I([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t)
		{
			GlMultiTexCoord2INative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2iv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2IvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord2IvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord2IvNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2s")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2SNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2S([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t)
		{
			GlMultiTexCoord2SNative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2sv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2SvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord2SvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord2SvNative(target, (short*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r)
		{
			GlMultiTexCoord3DNative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3dv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3DvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord3DvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord3DvNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r)
		{
			GlMultiTexCoord3FNative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3fv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3FvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord3FvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord3FvNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3i")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3INative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3I([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r)
		{
			GlMultiTexCoord3INative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3iv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3IvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord3IvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord3IvNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3s")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3SNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3S([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r)
		{
			GlMultiTexCoord3SNative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3sv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3SvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord3SvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord3SvNative(target, (short*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4d")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLdouble")] double q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLdouble")] double q)
		{
			GlMultiTexCoord4DNative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4dv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4DvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord4DvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Dv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord4DvNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4f")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLfloat")] float q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLfloat")] float q)
		{
			GlMultiTexCoord4FNative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4fv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4FvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord4FvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Fv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord4FvNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4i")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4INative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLint")] int q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4I([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLint")] int q)
		{
			GlMultiTexCoord4INative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4iv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4IvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord4IvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Iv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord4IvNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4s")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4SNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLshort")] short q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4S([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLshort")] short q)
		{
			GlMultiTexCoord4SNative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4sv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4SvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord4SvNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4Sv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord4SvNative(target, (short*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glLoadTransposeMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glLoadTransposeMatrixd")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlLoadTransposeMatrixdNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* m);

		[NativeName(NativeNameType.Func, "glLoadTransposeMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadTransposeMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* m)
		{
			GlLoadTransposeMatrixdNative(m);
		}

		[NativeName(NativeNameType.Func, "glLoadTransposeMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadTransposeMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double m)
		{
			fixed (double* pm = &m)
			{
				GlLoadTransposeMatrixdNative((double*)pm);
			}
		}

		[NativeName(NativeNameType.Func, "glLoadTransposeMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glLoadTransposeMatrixf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlLoadTransposeMatrixfNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* m);

		[NativeName(NativeNameType.Func, "glLoadTransposeMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadTransposeMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* m)
		{
			GlLoadTransposeMatrixfNative(m);
		}

		[NativeName(NativeNameType.Func, "glLoadTransposeMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadTransposeMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float m)
		{
			fixed (float* pm = &m)
			{
				GlLoadTransposeMatrixfNative((float*)pm);
			}
		}

		[NativeName(NativeNameType.Func, "glMultTransposeMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultTransposeMatrixd")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultTransposeMatrixdNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* m);

		[NativeName(NativeNameType.Func, "glMultTransposeMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultTransposeMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* m)
		{
			GlMultTransposeMatrixdNative(m);
		}

		[NativeName(NativeNameType.Func, "glMultTransposeMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultTransposeMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double m)
		{
			fixed (double* pm = &m)
			{
				GlMultTransposeMatrixdNative((double*)pm);
			}
		}

		[NativeName(NativeNameType.Func, "glMultTransposeMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultTransposeMatrixf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultTransposeMatrixfNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* m);

		[NativeName(NativeNameType.Func, "glMultTransposeMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultTransposeMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* m)
		{
			GlMultTransposeMatrixfNative(m);
		}

		[NativeName(NativeNameType.Func, "glMultTransposeMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultTransposeMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float m)
		{
			fixed (float* pm = &m)
			{
				GlMultTransposeMatrixfNative((float*)pm);
			}
		}

		[NativeName(NativeNameType.Func, "glSampleCoverage")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glSampleCoverage")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlSampleCoverageNative([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLclampf")] float value, [NativeName(NativeNameType.Param, "invert")] [NativeName(NativeNameType.Type, "GLboolean")] byte invert);

		[NativeName(NativeNameType.Func, "glSampleCoverage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlSampleCoverage([NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLclampf")] float value, [NativeName(NativeNameType.Param, "invert")] [NativeName(NativeNameType.Type, "GLboolean")] byte invert)
		{
			GlSampleCoverageNative(value, invert);
		}

		[NativeName(NativeNameType.Func, "glActiveTextureARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glActiveTextureARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlActiveTextureARBNative([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture);

		[NativeName(NativeNameType.Func, "glActiveTextureARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlActiveTextureARB([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture)
		{
			GlActiveTextureARBNative(texture);
		}

		[NativeName(NativeNameType.Func, "glClientActiveTextureARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glClientActiveTextureARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlClientActiveTextureARBNative([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture);

		[NativeName(NativeNameType.Func, "glClientActiveTextureARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClientActiveTextureARB([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLenum")] uint texture)
		{
			GlClientActiveTextureARBNative(texture);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1dARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1DARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1DARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s)
		{
			GlMultiTexCoord1DARBNative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1dvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1DvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord1DvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord1DvARBNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1fARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1FARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1FARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s)
		{
			GlMultiTexCoord1FARBNative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1fvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1FvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord1FvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord1FvARBNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1iARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1IARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1IARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s)
		{
			GlMultiTexCoord1IARBNative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1ivARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1IvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord1IvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord1IvARBNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1sARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1SARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1SARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s)
		{
			GlMultiTexCoord1SARBNative(target, s);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord1svARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord1SvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord1svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord1SvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord1svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord1SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord1SvARBNative(target, (short*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2dARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2DARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2DARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t)
		{
			GlMultiTexCoord2DARBNative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2dvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2DvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord2DvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord2DvARBNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2fARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2FARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2FARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t)
		{
			GlMultiTexCoord2FARBNative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2fvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2FvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord2FvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord2FvARBNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2iARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2IARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2IARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t)
		{
			GlMultiTexCoord2IARBNative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2ivARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2IvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord2IvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord2IvARBNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2sARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2SARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2SARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t)
		{
			GlMultiTexCoord2SARBNative(target, s, t);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord2svARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord2SvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord2svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord2SvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord2svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord2SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord2SvARBNative(target, (short*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3dARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3DARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3DARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r)
		{
			GlMultiTexCoord3DARBNative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3dvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3DvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord3DvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord3DvARBNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3fARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3FARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3FARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r)
		{
			GlMultiTexCoord3FARBNative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3fvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3FvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord3FvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord3FvARBNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3iARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3IARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3IARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r)
		{
			GlMultiTexCoord3IARBNative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3ivARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3IvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord3IvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord3IvARBNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3sARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3SARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3SARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r)
		{
			GlMultiTexCoord3SARBNative(target, s, t, r);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord3svARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord3SvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord3svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord3SvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord3svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord3SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord3SvARBNative(target, (short*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4dARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4DARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLdouble")] double q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4DARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLdouble")] double q)
		{
			GlMultiTexCoord4DARBNative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4dvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4DvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlMultiTexCoord4DvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4dvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4DvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlMultiTexCoord4DvARBNative(target, (double*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4fARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4FARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLfloat")] float q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4FARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLfloat")] float q)
		{
			GlMultiTexCoord4FARBNative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4fvARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4FvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlMultiTexCoord4FvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4fvARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4FvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlMultiTexCoord4FvARBNative(target, (float*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4iARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4IARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLint")] int q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4iARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4IARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLint")] int q)
		{
			GlMultiTexCoord4IARBNative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4ivARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4IvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlMultiTexCoord4IvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4ivARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4IvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlMultiTexCoord4IvARBNative(target, (int*)pv);
			}
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4sARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4SARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLshort")] short q);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4sARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4SARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLshort")] short q)
		{
			GlMultiTexCoord4SARBNative(target, s, t, r, q);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "glMultiTexCoord4svARB")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void GlMultiTexCoord4SvARBNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		[NativeName(NativeNameType.Func, "glMultiTexCoord4svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlMultiTexCoord4SvARBNative(target, v);
		}

		[NativeName(NativeNameType.Func, "glMultiTexCoord4svARB")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultiTexCoord4SvARB([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlMultiTexCoord4SvARBNative(target, (short*)pv);
			}
		}

		/// <summary>
		/// Get driver-specific information about a window.<br/>
		/// You must include SDL_syswm.h for the declaration of SDL_SysWMinfo.<br/>
		/// The caller must initialize the `info` structure's version by using<br/>
		/// `SDL_VERSION(<br/>
		/// &info<br/>
		/// .version)`, and then this function will fill in the rest<br/>
		/// of the structure with information about the given window.<br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDL_GetWindowWMInfo")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		[LibraryImport(LibName, EntryPoint = "SDL_GetWindowWMInfo")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLBool SDLGetWindowWMInfoNative([NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "info")] [NativeName(NativeNameType.Type, "SDL_SysWMinfo*")] SDLSysWMInfo* info);

		/// <summary>/// Get driver-specific information about a window.<br/>/// You must include SDL_syswm.h for the declaration of SDL_SysWMinfo.<br/>/// The caller must initialize the `info` structure's version by using<br/>/// `SDL_VERSION(<br/>/// &info<br/>/// .version)`, and then this function will fill in the rest<br/>/// of the structure with information about the given window.<br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDL_GetWindowWMInfo")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLGetWindowWMInfo([NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "info")] [NativeName(NativeNameType.Type, "SDL_SysWMinfo*")] SDLSysWMInfo* info)
		{
			SDLBool ret = SDLGetWindowWMInfoNative(window, info);
			return ret;
		}

		/// <summary>/// Get driver-specific information about a window.<br/>/// You must include SDL_syswm.h for the declaration of SDL_SysWMinfo.<br/>/// The caller must initialize the `info` structure's version by using<br/>/// `SDL_VERSION(<br/>/// &info<br/>/// .version)`, and then this function will fill in the rest<br/>/// of the structure with information about the given window.<br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDL_GetWindowWMInfo")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLGetWindowWMInfo([NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] ref SDLWindow window, [NativeName(NativeNameType.Param, "info")] [NativeName(NativeNameType.Type, "SDL_SysWMinfo*")] SDLSysWMInfo* info)
		{
			fixed (SDLWindow* pwindow = &window)
			{
				SDLBool ret = SDLGetWindowWMInfoNative((SDLWindow*)pwindow, info);
				return ret;
			}
		}

		/// <summary>/// Get driver-specific information about a window.<br/>/// You must include SDL_syswm.h for the declaration of SDL_SysWMinfo.<br/>/// The caller must initialize the `info` structure's version by using<br/>/// `SDL_VERSION(<br/>/// &info<br/>/// .version)`, and then this function will fill in the rest<br/>/// of the structure with information about the given window.<br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDL_GetWindowWMInfo")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLGetWindowWMInfo([NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "info")] [NativeName(NativeNameType.Type, "SDL_SysWMinfo*")] ref SDLSysWMInfo info)
		{
			fixed (SDLSysWMInfo* pinfo = &info)
			{
				SDLBool ret = SDLGetWindowWMInfoNative(window, (SDLSysWMInfo*)pinfo);
				return ret;
			}
		}

		/// <summary>/// Get driver-specific information about a window.<br/>/// You must include SDL_syswm.h for the declaration of SDL_SysWMinfo.<br/>/// The caller must initialize the `info` structure's version by using<br/>/// `SDL_VERSION(<br/>/// &info<br/>/// .version)`, and then this function will fill in the rest<br/>/// of the structure with information about the given window.<br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDL_GetWindowWMInfo")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLGetWindowWMInfo([NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] ref SDLWindow window, [NativeName(NativeNameType.Param, "info")] [NativeName(NativeNameType.Type, "SDL_SysWMinfo*")] ref SDLSysWMInfo info)
		{
			fixed (SDLWindow* pwindow = &window)
			{
				fixed (SDLSysWMInfo* pinfo = &info)
				{
					SDLBool ret = SDLGetWindowWMInfoNative((SDLWindow*)pwindow, (SDLSysWMInfo*)pinfo);
					return ret;
				}
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_Assert")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_Assert")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestAssertNative([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] byte* assertDescription);

		/// <summary>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Assert")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestAssert([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] byte* assertDescription)
		{
			SDLTestAssertNative(assertCondition, assertDescription);
		}

		/// <summary>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Assert")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestAssert([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] ref byte assertDescription)
		{
			fixed (byte* passertDescription = &assertDescription)
			{
				SDLTestAssertNative(assertCondition, (byte*)passertDescription);
			}
		}

		/// <summary>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Assert")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestAssert([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] string assertDescription)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (assertDescription != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(assertDescription);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(assertDescription, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			SDLTestAssertNative(assertCondition, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_AssertCheck")]
		[return: NativeName(NativeNameType.Type, "int")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_AssertCheck")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int SDLTestAssertCheckNative([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] byte* assertDescription);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_AssertCheck")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestAssertCheck([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] byte* assertDescription)
		{
			int ret = SDLTestAssertCheckNative(assertCondition, assertDescription);
			return ret;
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_AssertCheck")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestAssertCheck([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] ref byte assertDescription)
		{
			fixed (byte* passertDescription = &assertDescription)
			{
				int ret = SDLTestAssertCheckNative(assertCondition, (byte*)passertDescription);
				return ret;
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_AssertCheck")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestAssertCheck([NativeName(NativeNameType.Param, "assertCondition")] [NativeName(NativeNameType.Type, "int")] int assertCondition, [NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] string assertDescription)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (assertDescription != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(assertDescription);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(assertDescription, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			int ret = SDLTestAssertCheckNative(assertCondition, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_AssertPass")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_AssertPass")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestAssertPassNative([NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] byte* assertDescription);

		/// <summary>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_AssertPass")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestAssertPass([NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] byte* assertDescription)
		{
			SDLTestAssertPassNative(assertDescription);
		}

		/// <summary>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_AssertPass")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestAssertPass([NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] ref byte assertDescription)
		{
			fixed (byte* passertDescription = &assertDescription)
			{
				SDLTestAssertPassNative((byte*)passertDescription);
			}
		}

		/// <summary>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_AssertPass")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestAssertPass([NativeName(NativeNameType.Param, "assertDescription")] [NativeName(NativeNameType.Type, "const char*")] string assertDescription)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (assertDescription != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(assertDescription);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(assertDescription, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			SDLTestAssertPassNative(pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_ResetAssertSummary")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ResetAssertSummary")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestResetAssertSummaryNative();

		/// <summary>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_ResetAssertSummary")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestResetAssertSummary()
		{
			SDLTestResetAssertSummaryNative();
		}

		/// <summary>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_LogAssertSummary")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_LogAssertSummary")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestLogAssertSummaryNative();

		/// <summary>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_LogAssertSummary")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestLogAssertSummary()
		{
			SDLTestLogAssertSummaryNative();
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_AssertSummaryToTestResult")]
		[return: NativeName(NativeNameType.Type, "int")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_AssertSummaryToTestResult")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int SDLTestAssertSummaryToTestResultNative();

		/// <summary>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_AssertSummaryToTestResult")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestAssertSummaryToTestResult()
		{
			int ret = SDLTestAssertSummaryToTestResultNative();
			return ret;
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonCreateState")]
		[return: NativeName(NativeNameType.Type, "SDLTest_CommonState*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonCreateState")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLTestCommonState* SDLTestCommonCreateStateNative([NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] byte** argv, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "Uint32")] uint flags);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonCreateState")]
		[return: NativeName(NativeNameType.Type, "SDLTest_CommonState*")]
		public static SDLTestCommonState* SDLTestCommonCreateState([NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] byte** argv, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "Uint32")] uint flags)
		{
			SDLTestCommonState* ret = SDLTestCommonCreateStateNative(argv, flags);
			return ret;
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonCreateState")]
		[return: NativeName(NativeNameType.Type, "SDLTest_CommonState*")]
		public static SDLTestCommonState* SDLTestCommonCreateState([NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] ref byte* argv, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "Uint32")] uint flags)
		{
			fixed (byte** pargv = &argv)
			{
				SDLTestCommonState* ret = SDLTestCommonCreateStateNative((byte**)pargv, flags);
				return ret;
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonArg")]
		[return: NativeName(NativeNameType.Type, "int")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonArg")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int SDLTestCommonArgNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "int")] int index);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonArg")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCommonArg([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "int")] int index)
		{
			int ret = SDLTestCommonArgNative(state, index);
			return ret;
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonArg")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCommonArg([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "int")] int index)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				int ret = SDLTestCommonArgNative((SDLTestCommonState*)pstate, index);
				return ret;
			}
		}

		/// <summary>
		/// <br/>
		/// This logs the appropriate command line options for the subsystems in use<br/>
		/// plus other common options, and then any application-specific options.<br/>
		/// This uses the SDL_Log() function and splits up output to be friendly to<br/>
		/// 80-character-wide terminals.<br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonLogUsage")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestCommonLogUsageNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] byte* argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] byte** options);

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] byte* argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] byte** options)
		{
			SDLTestCommonLogUsageNative(state, argv0, options);
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] byte* argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] byte** options)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				SDLTestCommonLogUsageNative((SDLTestCommonState*)pstate, argv0, options);
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] ref byte argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] byte** options)
		{
			fixed (byte* pargv0 = &argv0)
			{
				SDLTestCommonLogUsageNative(state, (byte*)pargv0, options);
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] string argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] byte** options)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (argv0 != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(argv0);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(argv0, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			SDLTestCommonLogUsageNative(state, pStr0, options);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] ref byte argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] byte** options)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				fixed (byte* pargv0 = &argv0)
				{
					SDLTestCommonLogUsageNative((SDLTestCommonState*)pstate, (byte*)pargv0, options);
				}
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] string argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] byte** options)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (argv0 != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(argv0);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(argv0, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				SDLTestCommonLogUsageNative((SDLTestCommonState*)pstate, pStr0, options);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] byte* argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] ref byte* options)
		{
			fixed (byte** poptions = &options)
			{
				SDLTestCommonLogUsageNative(state, argv0, (byte**)poptions);
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] byte* argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] ref byte* options)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				fixed (byte** poptions = &options)
				{
					SDLTestCommonLogUsageNative((SDLTestCommonState*)pstate, argv0, (byte**)poptions);
				}
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] ref byte argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] ref byte* options)
		{
			fixed (byte* pargv0 = &argv0)
			{
				fixed (byte** poptions = &options)
				{
					SDLTestCommonLogUsageNative(state, (byte*)pargv0, (byte**)poptions);
				}
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] string argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] ref byte* options)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (argv0 != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(argv0);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(argv0, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			fixed (byte** poptions = &options)
			{
				SDLTestCommonLogUsageNative(state, pStr0, (byte**)poptions);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] ref byte argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] ref byte* options)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				fixed (byte* pargv0 = &argv0)
				{
					fixed (byte** poptions = &options)
					{
						SDLTestCommonLogUsageNative((SDLTestCommonState*)pstate, (byte*)pargv0, (byte**)poptions);
					}
				}
			}
		}

		/// <summary>/// <br/>/// This logs the appropriate command line options for the subsystems in use<br/>/// plus other common options, and then any application-specific options.<br/>/// This uses the SDL_Log() function and splits up output to be friendly to<br/>/// 80-character-wide terminals.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonLogUsage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonLogUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argv0")] [NativeName(NativeNameType.Type, "const char*")] string argv0, [NativeName(NativeNameType.Param, "options")] [NativeName(NativeNameType.Type, "const char**")] ref byte* options)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (argv0 != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(argv0);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(argv0, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				fixed (byte** poptions = &options)
				{
					SDLTestCommonLogUsageNative((SDLTestCommonState*)pstate, pStr0, (byte**)poptions);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
				}
			}
		}

		/// <summary>
		/// <br/>
		/// You should (probably) be using SDLTest_CommonLogUsage() instead, but this<br/>
		/// function remains for binary compatibility. Strings returned from this<br/>
		/// function are valid until SDLTest_CommonQuit() is called, in which case<br/>
		/// those strings' memory is freed and can no longer be used.<br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonUsage")]
		[return: NativeName(NativeNameType.Type, "const char*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonUsage")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* SDLTestCommonUsageNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state);

		/// <summary>/// <br/>/// You should (probably) be using SDLTest_CommonLogUsage() instead, but this<br/>/// function remains for binary compatibility. Strings returned from this<br/>/// function are valid until SDLTest_CommonQuit() is called, in which case<br/>/// those strings' memory is freed and can no longer be used.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonUsage")]
		[return: NativeName(NativeNameType.Type, "const char*")]
		public static byte* SDLTestCommonUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state)
		{
			byte* ret = SDLTestCommonUsageNative(state);
			return ret;
		}

		/// <summary>/// <br/>/// You should (probably) be using SDLTest_CommonLogUsage() instead, but this<br/>/// function remains for binary compatibility. Strings returned from this<br/>/// function are valid until SDLTest_CommonQuit() is called, in which case<br/>/// those strings' memory is freed and can no longer be used.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonUsage")]
		[return: NativeName(NativeNameType.Type, "const char*")]
		public static string SDLTestCommonUsageS([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state)
		{
			string ret = Utils.DecodeStringUTF8(SDLTestCommonUsageNative(state));
			return ret;
		}

		/// <summary>/// <br/>/// You should (probably) be using SDLTest_CommonLogUsage() instead, but this<br/>/// function remains for binary compatibility. Strings returned from this<br/>/// function are valid until SDLTest_CommonQuit() is called, in which case<br/>/// those strings' memory is freed and can no longer be used.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonUsage")]
		[return: NativeName(NativeNameType.Type, "const char*")]
		public static byte* SDLTestCommonUsage([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				byte* ret = SDLTestCommonUsageNative((SDLTestCommonState*)pstate);
				return ret;
			}
		}

		/// <summary>/// <br/>/// You should (probably) be using SDLTest_CommonLogUsage() instead, but this<br/>/// function remains for binary compatibility. Strings returned from this<br/>/// function are valid until SDLTest_CommonQuit() is called, in which case<br/>/// those strings' memory is freed and can no longer be used.<br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonUsage")]
		[return: NativeName(NativeNameType.Type, "const char*")]
		public static string SDLTestCommonUsageS([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				string ret = Utils.DecodeStringUTF8(SDLTestCommonUsageNative((SDLTestCommonState*)pstate));
				return ret;
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonInit")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonInit")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLBool SDLTestCommonInitNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonInit")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLTestCommonInit([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state)
		{
			SDLBool ret = SDLTestCommonInitNative(state);
			return ret;
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonInit")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLTestCommonInit([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				SDLBool ret = SDLTestCommonInitNative((SDLTestCommonState*)pstate);
				return ret;
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonDefaultArgs")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonDefaultArgs")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLBool SDLTestCommonDefaultArgsNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argc")] [NativeName(NativeNameType.Type, "const int")] int argc, [NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] byte** argv);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDefaultArgs")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLTestCommonDefaultArgs([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argc")] [NativeName(NativeNameType.Type, "const int")] int argc, [NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] byte** argv)
		{
			SDLBool ret = SDLTestCommonDefaultArgsNative(state, argc, argv);
			return ret;
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDefaultArgs")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLTestCommonDefaultArgs([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argc")] [NativeName(NativeNameType.Type, "const int")] int argc, [NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] byte** argv)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				SDLBool ret = SDLTestCommonDefaultArgsNative((SDLTestCommonState*)pstate, argc, argv);
				return ret;
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDefaultArgs")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLTestCommonDefaultArgs([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "argc")] [NativeName(NativeNameType.Type, "const int")] int argc, [NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] ref byte* argv)
		{
			fixed (byte** pargv = &argv)
			{
				SDLBool ret = SDLTestCommonDefaultArgsNative(state, argc, (byte**)pargv);
				return ret;
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDefaultArgs")]
		[return: NativeName(NativeNameType.Type, "SDL_bool")]
		public static SDLBool SDLTestCommonDefaultArgs([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "argc")] [NativeName(NativeNameType.Type, "const int")] int argc, [NativeName(NativeNameType.Param, "argv")] [NativeName(NativeNameType.Type, "char**")] ref byte* argv)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				fixed (byte** pargv = &argv)
				{
					SDLBool ret = SDLTestCommonDefaultArgsNative((SDLTestCommonState*)pstate, argc, (byte**)pargv);
					return ret;
				}
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonEvent")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestCommonEventNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] SDLEvent* evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] int* done);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] SDLEvent* evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] int* done)
		{
			SDLTestCommonEventNative(state, evnt, done);
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] SDLEvent* evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] int* done)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				SDLTestCommonEventNative((SDLTestCommonState*)pstate, evnt, done);
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] ref SDLEvent evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] int* done)
		{
			fixed (SDLEvent* pevnt = &evnt)
			{
				SDLTestCommonEventNative(state, (SDLEvent*)pevnt, done);
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] ref SDLEvent evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] int* done)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				fixed (SDLEvent* pevnt = &evnt)
				{
					SDLTestCommonEventNative((SDLTestCommonState*)pstate, (SDLEvent*)pevnt, done);
				}
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] SDLEvent* evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] ref int done)
		{
			fixed (int* pdone = &done)
			{
				SDLTestCommonEventNative(state, evnt, (int*)pdone);
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] SDLEvent* evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] ref int done)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				fixed (int* pdone = &done)
				{
					SDLTestCommonEventNative((SDLTestCommonState*)pstate, evnt, (int*)pdone);
				}
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] ref SDLEvent evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] ref int done)
		{
			fixed (SDLEvent* pevnt = &evnt)
			{
				fixed (int* pdone = &done)
				{
					SDLTestCommonEventNative(state, (SDLEvent*)pevnt, (int*)pdone);
				}
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonEvent([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state, [NativeName(NativeNameType.Param, "event")] [NativeName(NativeNameType.Type, "SDL_Event*")] ref SDLEvent evnt, [NativeName(NativeNameType.Param, "done")] [NativeName(NativeNameType.Type, "int*")] ref int done)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				fixed (SDLEvent* pevnt = &evnt)
				{
					fixed (int* pdone = &done)
					{
						SDLTestCommonEventNative((SDLTestCommonState*)pstate, (SDLEvent*)pevnt, (int*)pdone);
					}
				}
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonQuit")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonQuit")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestCommonQuitNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonQuit")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonQuit([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] SDLTestCommonState* state)
		{
			SDLTestCommonQuitNative(state);
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonQuit")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonQuit([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "SDLTest_CommonState*")] ref SDLTestCommonState state)
		{
			fixed (SDLTestCommonState* pstate = &state)
			{
				SDLTestCommonQuitNative((SDLTestCommonState*)pstate);
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CommonDrawWindowInfo")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void SDLTestCommonDrawWindowInfoNative([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] SDLRenderer* renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] int* usedHeight);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] SDLRenderer* renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] int* usedHeight)
		{
			SDLTestCommonDrawWindowInfoNative(renderer, window, usedHeight);
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] ref SDLRenderer renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] int* usedHeight)
		{
			fixed (SDLRenderer* prenderer = &renderer)
			{
				SDLTestCommonDrawWindowInfoNative((SDLRenderer*)prenderer, window, usedHeight);
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] SDLRenderer* renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] ref SDLWindow window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] int* usedHeight)
		{
			fixed (SDLWindow* pwindow = &window)
			{
				SDLTestCommonDrawWindowInfoNative(renderer, (SDLWindow*)pwindow, usedHeight);
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] ref SDLRenderer renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] ref SDLWindow window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] int* usedHeight)
		{
			fixed (SDLRenderer* prenderer = &renderer)
			{
				fixed (SDLWindow* pwindow = &window)
				{
					SDLTestCommonDrawWindowInfoNative((SDLRenderer*)prenderer, (SDLWindow*)pwindow, usedHeight);
				}
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] SDLRenderer* renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] ref int usedHeight)
		{
			fixed (int* pusedHeight = &usedHeight)
			{
				SDLTestCommonDrawWindowInfoNative(renderer, window, (int*)pusedHeight);
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] ref SDLRenderer renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] SDLWindow* window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] ref int usedHeight)
		{
			fixed (SDLRenderer* prenderer = &renderer)
			{
				fixed (int* pusedHeight = &usedHeight)
				{
					SDLTestCommonDrawWindowInfoNative((SDLRenderer*)prenderer, window, (int*)pusedHeight);
				}
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] SDLRenderer* renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] ref SDLWindow window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] ref int usedHeight)
		{
			fixed (SDLWindow* pwindow = &window)
			{
				fixed (int* pusedHeight = &usedHeight)
				{
					SDLTestCommonDrawWindowInfoNative(renderer, (SDLWindow*)pwindow, (int*)pusedHeight);
				}
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CommonDrawWindowInfo")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SDLTestCommonDrawWindowInfo([NativeName(NativeNameType.Param, "renderer")] [NativeName(NativeNameType.Type, "SDL_Renderer*")] ref SDLRenderer renderer, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "SDL_Window*")] ref SDLWindow window, [NativeName(NativeNameType.Param, "usedHeight")] [NativeName(NativeNameType.Type, "int*")] ref int usedHeight)
		{
			fixed (SDLRenderer* prenderer = &renderer)
			{
				fixed (SDLWindow* pwindow = &window)
				{
					fixed (int* pusedHeight = &usedHeight)
					{
						SDLTestCommonDrawWindowInfoNative((SDLRenderer*)prenderer, (SDLWindow*)pwindow, (int*)pusedHeight);
					}
				}
			}
		}

		/// <summary>
		/// Test images <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_ImageBlit")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlit")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitNative();

		/// <summary>/// Test images <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_ImageBlit")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlit()
		{
			SDLSurface* ret = SDLTestImageBlitNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitColor")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlitColor")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitColorNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitColor")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlitColor()
		{
			SDLSurface* ret = SDLTestImageBlitColorNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitAlpha")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlitAlpha")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitAlphaNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitAlpha")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlitAlpha()
		{
			SDLSurface* ret = SDLTestImageBlitAlphaNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendAdd")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlitBlendAdd")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitBlendAddNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendAdd")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlitBlendAdd()
		{
			SDLSurface* ret = SDLTestImageBlitBlendAddNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlend")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlitBlend")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitBlendNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlend")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlitBlend()
		{
			SDLSurface* ret = SDLTestImageBlitBlendNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendMod")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlitBlendMod")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitBlendModNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendMod")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlitBlendMod()
		{
			SDLSurface* ret = SDLTestImageBlitBlendModNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendNone")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlitBlendNone")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitBlendNoneNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendNone")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlitBlendNone()
		{
			SDLSurface* ret = SDLTestImageBlitBlendNoneNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendAll")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageBlitBlendAll")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageBlitBlendAllNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageBlitBlendAll")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageBlitBlendAll()
		{
			SDLSurface* ret = SDLTestImageBlitBlendAllNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImageFace")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImageFace")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImageFaceNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImageFace")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImageFace()
		{
			SDLSurface* ret = SDLTestImageFaceNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImagePrimitives")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImagePrimitives")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImagePrimitivesNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImagePrimitives")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImagePrimitives()
		{
			SDLSurface* ret = SDLTestImagePrimitivesNative();
			return ret;
		}

		[NativeName(NativeNameType.Func, "SDLTest_ImagePrimitivesBlend")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_ImagePrimitivesBlend")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial SDLSurface* SDLTestImagePrimitivesBlendNative();

		[NativeName(NativeNameType.Func, "SDLTest_ImagePrimitivesBlend")]
		[return: NativeName(NativeNameType.Type, "SDL_Surface*")]
		public static SDLSurface* SDLTestImagePrimitivesBlend()
		{
			SDLSurface* ret = SDLTestImagePrimitivesBlendNative();
			return ret;
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_CompareSurfaces")]
		[return: NativeName(NativeNameType.Type, "int")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_CompareSurfaces")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int SDLTestCompareSurfacesNative([NativeName(NativeNameType.Param, "surface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] SDLSurface* surface, [NativeName(NativeNameType.Param, "referenceSurface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] SDLSurface* referenceSurface, [NativeName(NativeNameType.Param, "allowable_error")] [NativeName(NativeNameType.Type, "int")] int allowableError);

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CompareSurfaces")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCompareSurfaces([NativeName(NativeNameType.Param, "surface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] SDLSurface* surface, [NativeName(NativeNameType.Param, "referenceSurface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] SDLSurface* referenceSurface, [NativeName(NativeNameType.Param, "allowable_error")] [NativeName(NativeNameType.Type, "int")] int allowableError)
		{
			int ret = SDLTestCompareSurfacesNative(surface, referenceSurface, allowableError);
			return ret;
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CompareSurfaces")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCompareSurfaces([NativeName(NativeNameType.Param, "surface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] ref SDLSurface surface, [NativeName(NativeNameType.Param, "referenceSurface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] SDLSurface* referenceSurface, [NativeName(NativeNameType.Param, "allowable_error")] [NativeName(NativeNameType.Type, "int")] int allowableError)
		{
			fixed (SDLSurface* psurface = &surface)
			{
				int ret = SDLTestCompareSurfacesNative((SDLSurface*)psurface, referenceSurface, allowableError);
				return ret;
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CompareSurfaces")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCompareSurfaces([NativeName(NativeNameType.Param, "surface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] SDLSurface* surface, [NativeName(NativeNameType.Param, "referenceSurface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] ref SDLSurface referenceSurface, [NativeName(NativeNameType.Param, "allowable_error")] [NativeName(NativeNameType.Type, "int")] int allowableError)
		{
			fixed (SDLSurface* preferenceSurface = &referenceSurface)
			{
				int ret = SDLTestCompareSurfacesNative(surface, (SDLSurface*)preferenceSurface, allowableError);
				return ret;
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_CompareSurfaces")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCompareSurfaces([NativeName(NativeNameType.Param, "surface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] ref SDLSurface surface, [NativeName(NativeNameType.Param, "referenceSurface")] [NativeName(NativeNameType.Type, "SDL_Surface*")] ref SDLSurface referenceSurface, [NativeName(NativeNameType.Param, "allowable_error")] [NativeName(NativeNameType.Type, "int")] int allowableError)
		{
			fixed (SDLSurface* psurface = &surface)
			{
				fixed (SDLSurface* preferenceSurface = &referenceSurface)
				{
					int ret = SDLTestCompareSurfacesNative((SDLSurface*)psurface, (SDLSurface*)preferenceSurface, allowableError);
					return ret;
				}
			}
		}

		/// <summary>
		/// <br/>
		/// Note: The function initializes the crc table required for all crc calculations.<br/>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_Crc32Init")]
		[return: NativeName(NativeNameType.Type, "int")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_Crc32Init")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int SDLTestCrc32InitNative([NativeName(NativeNameType.Param, "crcContext")] [NativeName(NativeNameType.Type, "SDLTest_Crc32Context*")] SDLTestCrc32Context* crcContext);

		/// <summary>/// <br/>/// Note: The function initializes the crc table required for all crc calculations.<br/>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Crc32Init")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCrc32Init([NativeName(NativeNameType.Param, "crcContext")] [NativeName(NativeNameType.Type, "SDLTest_Crc32Context*")] SDLTestCrc32Context* crcContext)
		{
			int ret = SDLTestCrc32InitNative(crcContext);
			return ret;
		}

		/// <summary>/// <br/>/// Note: The function initializes the crc table required for all crc calculations.<br/>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Crc32Init")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCrc32Init([NativeName(NativeNameType.Param, "crcContext")] [NativeName(NativeNameType.Type, "SDLTest_Crc32Context*")] ref SDLTestCrc32Context crcContext)
		{
			fixed (SDLTestCrc32Context* pcrcContext = &crcContext)
			{
				int ret = SDLTestCrc32InitNative((SDLTestCrc32Context*)pcrcContext);
				return ret;
			}
		}

		/// <summary>
		/// <br/>
		/// <br/>
		/// <br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "SDLTest_Crc32Calc")]
		[return: NativeName(NativeNameType.Type, "int")]
		[LibraryImport(LibName, EntryPoint = "SDLTest_Crc32Calc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int SDLTestCrc32CalcNative([NativeName(NativeNameType.Param, "crcContext")] [NativeName(NativeNameType.Type, "SDLTest_Crc32Context*")] SDLTestCrc32Context* crcContext, [NativeName(NativeNameType.Param, "inBuf")] [NativeName(NativeNameType.Type, "unsigned char*")] byte* inBuf, [NativeName(NativeNameType.Param, "inLen")] [NativeName(NativeNameType.Type, "unsigned int")] uint inLen, [NativeName(NativeNameType.Param, "crc32")] [NativeName(NativeNameType.Type, "unsigned int*")] uint* crc32);

		/// <summary>/// <br/>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Crc32Calc")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCrc32Calc([NativeName(NativeNameType.Param, "crcContext")] [NativeName(NativeNameType.Type, "SDLTest_Crc32Context*")] SDLTestCrc32Context* crcContext, [NativeName(NativeNameType.Param, "inBuf")] [NativeName(NativeNameType.Type, "unsigned char*")] byte* inBuf, [NativeName(NativeNameType.Param, "inLen")] [NativeName(NativeNameType.Type, "unsigned int")] uint inLen, [NativeName(NativeNameType.Param, "crc32")] [NativeName(NativeNameType.Type, "unsigned int*")] uint* crc32)
		{
			int ret = SDLTestCrc32CalcNative(crcContext, inBuf, inLen, crc32);
			return ret;
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Crc32Calc")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCrc32Calc([NativeName(NativeNameType.Param, "crcContext")] [NativeName(NativeNameType.Type, "SDLTest_Crc32Context*")] ref SDLTestCrc32Context crcContext, [NativeName(NativeNameType.Param, "inBuf")] [NativeName(NativeNameType.Type, "unsigned char*")] byte* inBuf, [NativeName(NativeNameType.Param, "inLen")] [NativeName(NativeNameType.Type, "unsigned int")] uint inLen, [NativeName(NativeNameType.Param, "crc32")] [NativeName(NativeNameType.Type, "unsigned int*")] uint* crc32)
		{
			fixed (SDLTestCrc32Context* pcrcContext = &crcContext)
			{
				int ret = SDLTestCrc32CalcNative((SDLTestCrc32Context*)pcrcContext, inBuf, inLen, crc32);
				return ret;
			}
		}

		/// <summary>/// <br/>/// <br/>/// <br/>/// <br/>/// </summary>		[NativeName(NativeNameType.Func, "SDLTest_Crc32Calc")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int SDLTestCrc32Calc([NativeName(NativeNameType.Param, "crcContext")] [NativeName(NativeNameType.Type, "SDLTest_Crc32Context*")] SDLTestCrc32Context* crcContext, [NativeName(NativeNameType.Param, "inBuf")] [NativeName(NativeNameType.Type, "unsigned char*")] ref byte inBuf, [NativeName(NativeNameType.Param, "inLen")] [NativeName(NativeNameType.Type, "unsigned int")] uint inLen, [NativeName(NativeNameType.Param, "crc32")] [NativeName(NativeNameType.Type, "unsigned int*")] uint* crc32)
		{
			fixed (byte* pinBuf = &inBuf)
			{
				int ret = SDLTestCrc32CalcNative(crcContext, (byte*)pinBuf, inLen, crc32);
				return ret;
			}
		}
	}
}
