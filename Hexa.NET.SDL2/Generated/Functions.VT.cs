// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL2
{
	public unsafe partial class SDL
	{
		internal static VTable vt;

		public static void InitApi()
		{
			vt = new VTable(LibraryLoader.LoadLibrary(), 1424);
			vt.Load(0, "SDL_GetPlatform");
			vt.Load(1, "SDL_malloc");
			vt.Load(2, "SDL_calloc");
			vt.Load(3, "SDL_realloc");
			vt.Load(4, "SDL_free");
			vt.Load(5, "SDL_GetOriginalMemoryFunctions");
			vt.Load(6, "SDL_GetMemoryFunctions");
			vt.Load(7, "SDL_SetMemoryFunctions");
			vt.Load(8, "SDL_GetNumAllocations");
			vt.Load(9, "SDL_getenv");
			vt.Load(10, "SDL_setenv");
			vt.Load(11, "SDL_qsort");
			vt.Load(12, "SDL_bsearch");
			vt.Load(13, "SDL_abs");
			vt.Load(14, "SDL_isalpha");
			vt.Load(15, "SDL_isalnum");
			vt.Load(16, "SDL_isblank");
			vt.Load(17, "SDL_iscntrl");
			vt.Load(18, "SDL_isdigit");
			vt.Load(19, "SDL_isxdigit");
			vt.Load(20, "SDL_ispunct");
			vt.Load(21, "SDL_isspace");
			vt.Load(22, "SDL_isupper");
			vt.Load(23, "SDL_islower");
			vt.Load(24, "SDL_isprint");
			vt.Load(25, "SDL_isgraph");
			vt.Load(26, "SDL_toupper");
			vt.Load(27, "SDL_tolower");
			vt.Load(28, "SDL_crc16");
			vt.Load(29, "SDL_crc32");
			vt.Load(30, "SDL_memset");
			vt.Load(31, "SDL_memcpy");
			vt.Load(32, "SDL_memmove");
			vt.Load(33, "SDL_memcmp");
			vt.Load(34, "SDL_wcslen");
			vt.Load(35, "SDL_wcslcpy");
			vt.Load(36, "SDL_wcslcat");
			vt.Load(37, "SDL_wcsdup");
			vt.Load(38, "SDL_wcsstr");
			vt.Load(39, "SDL_wcscmp");
			vt.Load(40, "SDL_wcsncmp");
			vt.Load(41, "SDL_wcscasecmp");
			vt.Load(42, "SDL_wcsncasecmp");
			vt.Load(43, "SDL_strlen");
			vt.Load(44, "SDL_strlcpy");
			vt.Load(45, "SDL_utf8strlcpy");
			vt.Load(46, "SDL_strlcat");
			vt.Load(47, "SDL_strdup");
			vt.Load(48, "SDL_strrev");
			vt.Load(49, "SDL_strupr");
			vt.Load(50, "SDL_strlwr");
			vt.Load(51, "SDL_strchr");
			vt.Load(52, "SDL_strrchr");
			vt.Load(53, "SDL_strstr");
			vt.Load(54, "SDL_strcasestr");
			vt.Load(55, "SDL_strtokr");
			vt.Load(56, "SDL_utf8strlen");
			vt.Load(57, "SDL_utf8strnlen");
			vt.Load(58, "SDL_itoa");
			vt.Load(59, "SDL_uitoa");
			vt.Load(60, "SDL_ltoa");
			vt.Load(61, "SDL_ultoa");
			vt.Load(62, "SDL_lltoa");
			vt.Load(63, "SDL_ulltoa");
			vt.Load(64, "SDL_atoi");
			vt.Load(65, "SDL_atof");
			vt.Load(66, "SDL_strtol");
			vt.Load(67, "SDL_strtoul");
			vt.Load(68, "SDL_strtoll");
			vt.Load(69, "SDL_strtoull");
			vt.Load(70, "SDL_strtod");
			vt.Load(71, "SDL_strcmp");
			vt.Load(72, "SDL_strncmp");
			vt.Load(73, "SDL_strcasecmp");
			vt.Load(74, "SDL_strncasecmp");
			vt.Load(75, "SDL_sscanf");
			vt.Load(76, "SDL_vsscanf");
			vt.Load(77, "SDL_snprintf");
			vt.Load(78, "SDL_vsnprintf");
			vt.Load(79, "SDL_asprintf");
			vt.Load(80, "SDL_vasprintf");
			vt.Load(81, "SDL_acos");
			vt.Load(82, "SDL_acosf");
			vt.Load(83, "SDL_asin");
			vt.Load(84, "SDL_asinf");
			vt.Load(85, "SDL_atan");
			vt.Load(86, "SDL_atanf");
			vt.Load(87, "SDL_atan2");
			vt.Load(88, "SDL_atan2f");
			vt.Load(89, "SDL_ceil");
			vt.Load(90, "SDL_ceilf");
			vt.Load(91, "SDL_copysign");
			vt.Load(92, "SDL_copysignf");
			vt.Load(93, "SDL_cos");
			vt.Load(94, "SDL_cosf");
			vt.Load(95, "SDL_exp");
			vt.Load(96, "SDL_expf");
			vt.Load(97, "SDL_fabs");
			vt.Load(98, "SDL_fabsf");
			vt.Load(99, "SDL_floor");
			vt.Load(100, "SDL_floorf");
			vt.Load(101, "SDL_trunc");
			vt.Load(102, "SDL_truncf");
			vt.Load(103, "SDL_fmod");
			vt.Load(104, "SDL_fmodf");
			vt.Load(105, "SDL_log");
			vt.Load(106, "SDL_logf");
			vt.Load(107, "SDL_log10");
			vt.Load(108, "SDL_log10f");
			vt.Load(109, "SDL_pow");
			vt.Load(110, "SDL_powf");
			vt.Load(111, "SDL_round");
			vt.Load(112, "SDL_roundf");
			vt.Load(113, "SDL_lround");
			vt.Load(114, "SDL_lroundf");
			vt.Load(115, "SDL_scalbn");
			vt.Load(116, "SDL_scalbnf");
			vt.Load(117, "SDL_sin");
			vt.Load(118, "SDL_sinf");
			vt.Load(119, "SDL_sqrt");
			vt.Load(120, "SDL_sqrtf");
			vt.Load(121, "SDL_tan");
			vt.Load(122, "SDL_tanf");
			vt.Load(123, "SDL_iconv_open");
			vt.Load(124, "SDL_iconv_close");
			vt.Load(125, "SDL_iconv");
			vt.Load(126, "SDL_iconv_string");
			vt.Load(127, "SDL_main");
			vt.Load(128, "SDL_SetMainReady");
			vt.Load(129, "SDL_RegisterApp");
			vt.Load(130, "SDL_UnregisterApp");
			vt.Load(131, "__debugbreak");
			vt.Load(132, "SDL_SetAssertionHandler");
			vt.Load(133, "SDL_GetDefaultAssertionHandler");
			vt.Load(134, "SDL_GetAssertionHandler");
			vt.Load(135, "SDL_GetAssertionReport");
			vt.Load(136, "SDL_ResetAssertionReport");
			vt.Load(137, "SDL_AtomicTryLock");
			vt.Load(138, "SDL_AtomicLock");
			vt.Load(139, "SDL_AtomicUnlock");
			vt.Load(140, "SDL_MemoryBarrierReleaseFunction");
			vt.Load(141, "SDL_MemoryBarrierAcquireFunction");
			vt.Load(142, "SDL_AtomicCAS");
			vt.Load(143, "SDL_AtomicSet");
			vt.Load(144, "SDL_AtomicGet");
			vt.Load(145, "SDL_AtomicAdd");
			vt.Load(146, "SDL_AtomicCASPtr");
			vt.Load(147, "SDL_AtomicSetPtr");
			vt.Load(148, "SDL_AtomicGetPtr");
			vt.Load(149, "SDL_SetError");
			vt.Load(150, "SDL_GetError");
			vt.Load(151, "SDL_GetErrorMsg");
			vt.Load(152, "SDL_ClearError");
			vt.Load(153, "SDL_Error");
			vt.Load(154, "SDL_CreateMutex");
			vt.Load(155, "SDL_LockMutex");
			vt.Load(156, "SDL_TryLockMutex");
			vt.Load(157, "SDL_UnlockMutex");
			vt.Load(158, "SDL_DestroyMutex");
			vt.Load(159, "SDL_CreateSemaphore");
			vt.Load(160, "SDL_DestroySemaphore");
			vt.Load(161, "SDL_SemWait");
			vt.Load(162, "SDL_SemTryWait");
			vt.Load(163, "SDL_SemWaitTimeout");
			vt.Load(164, "SDL_SemPost");
			vt.Load(165, "SDL_SemValue");
			vt.Load(166, "SDL_CreateCond");
			vt.Load(167, "SDL_DestroyCond");
			vt.Load(168, "SDL_CondSignal");
			vt.Load(169, "SDL_CondBroadcast");
			vt.Load(170, "SDL_CondWait");
			vt.Load(171, "SDL_CondWaitTimeout");
			vt.Load(172, "SDL_CreateThread");
			vt.Load(173, "SDL_CreateThreadWithStackSize");
			vt.Load(174, "SDL_GetThreadName");
			vt.Load(175, "SDL_ThreadID");
			vt.Load(176, "SDL_GetThreadID");
			vt.Load(177, "SDL_SetThreadPriority");
			vt.Load(178, "SDL_WaitThread");
			vt.Load(179, "SDL_DetachThread");
			vt.Load(180, "SDL_TLSCreate");
			vt.Load(181, "SDL_TLSGet");
			vt.Load(182, "SDL_TLSSet");
			vt.Load(183, "SDL_TLSCleanup");
			vt.Load(184, "SDL_RWFromFile");
			vt.Load(185, "SDL_RWFromFP");
			vt.Load(186, "SDL_RWFromMem");
			vt.Load(187, "SDL_RWFromConstMem");
			vt.Load(188, "SDL_AllocRW");
			vt.Load(189, "SDL_FreeRW");
			vt.Load(190, "SDL_RWsize");
			vt.Load(191, "SDL_RWseek");
			vt.Load(192, "SDL_RWtell");
			vt.Load(193, "SDL_RWread");
			vt.Load(194, "SDL_RWwrite");
			vt.Load(195, "SDL_RWclose");
			vt.Load(196, "SDL_LoadFile_RW");
			vt.Load(197, "SDL_LoadFile");
			vt.Load(198, "SDL_ReadU8");
			vt.Load(199, "SDL_ReadLE16");
			vt.Load(200, "SDL_ReadBE16");
			vt.Load(201, "SDL_ReadLE32");
			vt.Load(202, "SDL_ReadBE32");
			vt.Load(203, "SDL_ReadLE64");
			vt.Load(204, "SDL_ReadBE64");
			vt.Load(205, "SDL_WriteU8");
			vt.Load(206, "SDL_WriteLE16");
			vt.Load(207, "SDL_WriteBE16");
			vt.Load(208, "SDL_WriteLE32");
			vt.Load(209, "SDL_WriteBE32");
			vt.Load(210, "SDL_WriteLE64");
			vt.Load(211, "SDL_WriteBE64");
			vt.Load(212, "SDL_GetNumAudioDrivers");
			vt.Load(213, "SDL_GetAudioDriver");
			vt.Load(214, "SDL_AudioInit");
			vt.Load(215, "SDL_AudioQuit");
			vt.Load(216, "SDL_GetCurrentAudioDriver");
			vt.Load(217, "SDL_OpenAudio");
			vt.Load(218, "SDL_GetNumAudioDevices");
			vt.Load(219, "SDL_GetAudioDeviceName");
			vt.Load(220, "SDL_GetAudioDeviceSpec");
			vt.Load(221, "SDL_GetDefaultAudioInfo");
			vt.Load(222, "SDL_OpenAudioDevice");
			vt.Load(223, "SDL_GetAudioStatus");
			vt.Load(224, "SDL_GetAudioDeviceStatus");
			vt.Load(225, "SDL_PauseAudio");
			vt.Load(226, "SDL_PauseAudioDevice");
			vt.Load(227, "SDL_LoadWAV_RW");
			vt.Load(228, "SDL_FreeWAV");
			vt.Load(229, "SDL_BuildAudioCVT");
			vt.Load(230, "SDL_ConvertAudio");
			vt.Load(231, "SDL_NewAudioStream");
			vt.Load(232, "SDL_AudioStreamPut");
			vt.Load(233, "SDL_AudioStreamGet");
			vt.Load(234, "SDL_AudioStreamAvailable");
			vt.Load(235, "SDL_AudioStreamFlush");
			vt.Load(236, "SDL_AudioStreamClear");
			vt.Load(237, "SDL_FreeAudioStream");
			vt.Load(238, "SDL_MixAudio");
			vt.Load(239, "SDL_MixAudioFormat");
			vt.Load(240, "SDL_QueueAudio");
			vt.Load(241, "SDL_DequeueAudio");
			vt.Load(242, "SDL_GetQueuedAudioSize");
			vt.Load(243, "SDL_ClearQueuedAudio");
			vt.Load(244, "SDL_LockAudio");
			vt.Load(245, "SDL_LockAudioDevice");
			vt.Load(246, "SDL_UnlockAudio");
			vt.Load(247, "SDL_UnlockAudioDevice");
			vt.Load(248, "SDL_CloseAudio");
			vt.Load(249, "SDL_CloseAudioDevice");
			vt.Load(250, "SDL_SetClipboardText");
			vt.Load(251, "SDL_GetClipboardText");
			vt.Load(252, "SDL_HasClipboardText");
			vt.Load(253, "SDL_SetPrimarySelectionText");
			vt.Load(254, "SDL_GetPrimarySelectionText");
			vt.Load(255, "SDL_HasPrimarySelectionText");
			vt.Load(256, "SDL_GetCPUCount");
			vt.Load(257, "SDL_GetCPUCacheLineSize");
			vt.Load(258, "SDL_HasRDTSC");
			vt.Load(259, "SDL_HasAltiVec");
			vt.Load(260, "SDL_HasMMX");
			vt.Load(261, "SDL_Has3DNow");
			vt.Load(262, "SDL_HasSSE");
			vt.Load(263, "SDL_HasSSE2");
			vt.Load(264, "SDL_HasSSE3");
			vt.Load(265, "SDL_HasSSE41");
			vt.Load(266, "SDL_HasSSE42");
			vt.Load(267, "SDL_HasAVX");
			vt.Load(268, "SDL_HasAVX2");
			vt.Load(269, "SDL_HasAVX512F");
			vt.Load(270, "SDL_HasARMSIMD");
			vt.Load(271, "SDL_HasNEON");
			vt.Load(272, "SDL_HasLSX");
			vt.Load(273, "SDL_HasLASX");
			vt.Load(274, "SDL_GetSystemRAM");
			vt.Load(275, "SDL_SIMDGetAlignment");
			vt.Load(276, "SDL_SIMDAlloc");
			vt.Load(277, "SDL_SIMDRealloc");
			vt.Load(278, "SDL_SIMDFree");
			vt.Load(279, "SDL_GetPixelFormatName");
			vt.Load(280, "SDL_PixelFormatEnumToMasks");
			vt.Load(281, "SDL_MasksToPixelFormatEnum");
			vt.Load(282, "SDL_AllocFormat");
			vt.Load(283, "SDL_FreeFormat");
			vt.Load(284, "SDL_AllocPalette");
			vt.Load(285, "SDL_SetPixelFormatPalette");
			vt.Load(286, "SDL_SetPaletteColors");
			vt.Load(287, "SDL_FreePalette");
			vt.Load(288, "SDL_MapRGB");
			vt.Load(289, "SDL_MapRGBA");
			vt.Load(290, "SDL_GetRGB");
			vt.Load(291, "SDL_GetRGBA");
			vt.Load(292, "SDL_CalculateGammaRamp");
			vt.Load(293, "SDL_HasIntersection");
			vt.Load(294, "SDL_IntersectRect");
			vt.Load(295, "SDL_UnionRect");
			vt.Load(296, "SDL_EnclosePoints");
			vt.Load(297, "SDL_IntersectRectAndLine");
			vt.Load(298, "SDL_HasIntersectionF");
			vt.Load(299, "SDL_IntersectFRect");
			vt.Load(300, "SDL_UnionFRect");
			vt.Load(301, "SDL_EncloseFPoints");
			vt.Load(302, "SDL_IntersectFRectAndLine");
			vt.Load(303, "SDL_ComposeCustomBlendMode");
			vt.Load(304, "SDL_CreateRGBSurface");
			vt.Load(305, "SDL_CreateRGBSurfaceWithFormat");
			vt.Load(306, "SDL_CreateRGBSurfaceFrom");
			vt.Load(307, "SDL_CreateRGBSurfaceWithFormatFrom");
			vt.Load(308, "SDL_FreeSurface");
			vt.Load(309, "SDL_SetSurfacePalette");
			vt.Load(310, "SDL_LockSurface");
			vt.Load(311, "SDL_UnlockSurface");
			vt.Load(312, "SDL_LoadBMP_RW");
			vt.Load(313, "SDL_SaveBMP_RW");
			vt.Load(314, "SDL_SetSurfaceRLE");
			vt.Load(315, "SDL_HasSurfaceRLE");
			vt.Load(316, "SDL_SetColorKey");
			vt.Load(317, "SDL_HasColorKey");
			vt.Load(318, "SDL_GetColorKey");
			vt.Load(319, "SDL_SetSurfaceColorMod");
			vt.Load(320, "SDL_GetSurfaceColorMod");
			vt.Load(321, "SDL_SetSurfaceAlphaMod");
			vt.Load(322, "SDL_GetSurfaceAlphaMod");
			vt.Load(323, "SDL_SetSurfaceBlendMode");
			vt.Load(324, "SDL_GetSurfaceBlendMode");
			vt.Load(325, "SDL_SetClipRect");
			vt.Load(326, "SDL_GetClipRect");
			vt.Load(327, "SDL_DuplicateSurface");
			vt.Load(328, "SDL_ConvertSurface");
			vt.Load(329, "SDL_ConvertSurfaceFormat");
			vt.Load(330, "SDL_ConvertPixels");
			vt.Load(331, "SDL_PremultiplyAlpha");
			vt.Load(332, "SDL_FillRect");
			vt.Load(333, "SDL_FillRects");
			vt.Load(334, "SDL_UpperBlit");
			vt.Load(335, "SDL_LowerBlit");
			vt.Load(336, "SDL_SoftStretch");
			vt.Load(337, "SDL_SoftStretchLinear");
			vt.Load(338, "SDL_UpperBlitScaled");
			vt.Load(339, "SDL_LowerBlitScaled");
			vt.Load(340, "SDL_SetYUVConversionMode");
			vt.Load(341, "SDL_GetYUVConversionMode");
			vt.Load(342, "SDL_GetYUVConversionModeForResolution");
			vt.Load(343, "SDL_GetNumVideoDrivers");
			vt.Load(344, "SDL_GetVideoDriver");
			vt.Load(345, "SDL_VideoInit");
			vt.Load(346, "SDL_VideoQuit");
			vt.Load(347, "SDL_GetCurrentVideoDriver");
			vt.Load(348, "SDL_GetNumVideoDisplays");
			vt.Load(349, "SDL_GetDisplayName");
			vt.Load(350, "SDL_GetDisplayBounds");
			vt.Load(351, "SDL_GetDisplayUsableBounds");
			vt.Load(352, "SDL_GetDisplayDPI");
			vt.Load(353, "SDL_GetDisplayOrientation");
			vt.Load(354, "SDL_GetNumDisplayModes");
			vt.Load(355, "SDL_GetDisplayMode");
			vt.Load(356, "SDL_GetDesktopDisplayMode");
			vt.Load(357, "SDL_GetCurrentDisplayMode");
			vt.Load(358, "SDL_GetClosestDisplayMode");
			vt.Load(359, "SDL_GetPointDisplayIndex");
			vt.Load(360, "SDL_GetRectDisplayIndex");
			vt.Load(361, "SDL_GetWindowDisplayIndex");
			vt.Load(362, "SDL_SetWindowDisplayMode");
			vt.Load(363, "SDL_GetWindowDisplayMode");
			vt.Load(364, "SDL_GetWindowICCProfile");
			vt.Load(365, "SDL_GetWindowPixelFormat");
			vt.Load(366, "SDL_CreateWindow");
			vt.Load(367, "SDL_CreateWindowFrom");
			vt.Load(368, "SDL_GetWindowID");
			vt.Load(369, "SDL_GetWindowFromID");
			vt.Load(370, "SDL_GetWindowFlags");
			vt.Load(371, "SDL_SetWindowTitle");
			vt.Load(372, "SDL_GetWindowTitle");
			vt.Load(373, "SDL_SetWindowIcon");
			vt.Load(374, "SDL_SetWindowData");
			vt.Load(375, "SDL_GetWindowData");
			vt.Load(376, "SDL_SetWindowPosition");
			vt.Load(377, "SDL_GetWindowPosition");
			vt.Load(378, "SDL_SetWindowSize");
			vt.Load(379, "SDL_GetWindowSize");
			vt.Load(380, "SDL_GetWindowBordersSize");
			vt.Load(381, "SDL_GetWindowSizeInPixels");
			vt.Load(382, "SDL_SetWindowMinimumSize");
			vt.Load(383, "SDL_GetWindowMinimumSize");
			vt.Load(384, "SDL_SetWindowMaximumSize");
			vt.Load(385, "SDL_GetWindowMaximumSize");
			vt.Load(386, "SDL_SetWindowBordered");
			vt.Load(387, "SDL_SetWindowResizable");
			vt.Load(388, "SDL_SetWindowAlwaysOnTop");
			vt.Load(389, "SDL_ShowWindow");
			vt.Load(390, "SDL_HideWindow");
			vt.Load(391, "SDL_RaiseWindow");
			vt.Load(392, "SDL_MaximizeWindow");
			vt.Load(393, "SDL_MinimizeWindow");
			vt.Load(394, "SDL_RestoreWindow");
			vt.Load(395, "SDL_SetWindowFullscreen");
			vt.Load(396, "SDL_HasWindowSurface");
			vt.Load(397, "SDL_GetWindowSurface");
			vt.Load(398, "SDL_UpdateWindowSurface");
			vt.Load(399, "SDL_UpdateWindowSurfaceRects");
			vt.Load(400, "SDL_DestroyWindowSurface");
			vt.Load(401, "SDL_SetWindowGrab");
			vt.Load(402, "SDL_SetWindowKeyboardGrab");
			vt.Load(403, "SDL_SetWindowMouseGrab");
			vt.Load(404, "SDL_GetWindowGrab");
			vt.Load(405, "SDL_GetWindowKeyboardGrab");
			vt.Load(406, "SDL_GetWindowMouseGrab");
			vt.Load(407, "SDL_GetGrabbedWindow");
			vt.Load(408, "SDL_SetWindowMouseRect");
			vt.Load(409, "SDL_GetWindowMouseRect");
			vt.Load(410, "SDL_SetWindowBrightness");
			vt.Load(411, "SDL_GetWindowBrightness");
			vt.Load(412, "SDL_SetWindowOpacity");
			vt.Load(413, "SDL_GetWindowOpacity");
			vt.Load(414, "SDL_SetWindowModalFor");
			vt.Load(415, "SDL_SetWindowInputFocus");
			vt.Load(416, "SDL_SetWindowGammaRamp");
			vt.Load(417, "SDL_GetWindowGammaRamp");
			vt.Load(418, "SDL_SetWindowHitTest");
			vt.Load(419, "SDL_FlashWindow");
			vt.Load(420, "SDL_DestroyWindow");
			vt.Load(421, "SDL_IsScreenSaverEnabled");
			vt.Load(422, "SDL_EnableScreenSaver");
			vt.Load(423, "SDL_DisableScreenSaver");
			vt.Load(424, "SDL_GL_LoadLibrary");
			vt.Load(425, "SDL_GL_GetProcAddress");
			vt.Load(426, "SDL_GL_UnloadLibrary");
			vt.Load(427, "SDL_GL_ExtensionSupported");
			vt.Load(428, "SDL_GL_ResetAttributes");
			vt.Load(429, "SDL_GL_SetAttribute");
			vt.Load(430, "SDL_GL_GetAttribute");
			vt.Load(431, "SDL_GL_CreateContext");
			vt.Load(432, "SDL_GL_MakeCurrent");
			vt.Load(433, "SDL_GL_GetCurrentWindow");
			vt.Load(434, "SDL_GL_GetCurrentContext");
			vt.Load(435, "SDL_GL_GetDrawableSize");
			vt.Load(436, "SDL_GL_SetSwapInterval");
			vt.Load(437, "SDL_GL_GetSwapInterval");
			vt.Load(438, "SDL_GL_SwapWindow");
			vt.Load(439, "SDL_GL_DeleteContext");
			vt.Load(440, "SDL_GetKeyboardFocus");
			vt.Load(441, "SDL_GetKeyboardState");
			vt.Load(442, "SDL_ResetKeyboard");
			vt.Load(443, "SDL_GetModState");
			vt.Load(444, "SDL_SetModState");
			vt.Load(445, "SDL_GetKeyFromScancode");
			vt.Load(446, "SDL_GetScancodeFromKey");
			vt.Load(447, "SDL_GetScancodeName");
			vt.Load(448, "SDL_GetScancodeFromName");
			vt.Load(449, "SDL_GetKeyName");
			vt.Load(450, "SDL_GetKeyFromName");
			vt.Load(451, "SDL_StartTextInput");
			vt.Load(452, "SDL_IsTextInputActive");
			vt.Load(453, "SDL_StopTextInput");
			vt.Load(454, "SDL_ClearComposition");
			vt.Load(455, "SDL_IsTextInputShown");
			vt.Load(456, "SDL_SetTextInputRect");
			vt.Load(457, "SDL_HasScreenKeyboardSupport");
			vt.Load(458, "SDL_IsScreenKeyboardShown");
			vt.Load(459, "SDL_GetMouseFocus");
			vt.Load(460, "SDL_GetMouseState");
			vt.Load(461, "SDL_GetGlobalMouseState");
			vt.Load(462, "SDL_GetRelativeMouseState");
			vt.Load(463, "SDL_WarpMouseInWindow");
			vt.Load(464, "SDL_WarpMouseGlobal");
			vt.Load(465, "SDL_SetRelativeMouseMode");
			vt.Load(466, "SDL_CaptureMouse");
			vt.Load(467, "SDL_GetRelativeMouseMode");
			vt.Load(468, "SDL_CreateCursor");
			vt.Load(469, "SDL_CreateColorCursor");
			vt.Load(470, "SDL_CreateSystemCursor");
			vt.Load(471, "SDL_SetCursor");
			vt.Load(472, "SDL_GetCursor");
			vt.Load(473, "SDL_GetDefaultCursor");
			vt.Load(474, "SDL_FreeCursor");
			vt.Load(475, "SDL_ShowCursor");
			vt.Load(476, "SDL_GUIDToString");
			vt.Load(477, "SDL_GUIDFromString");
			vt.Load(478, "SDL_LockJoysticks");
			vt.Load(479, "SDL_UnlockJoysticks");
			vt.Load(480, "SDL_NumJoysticks");
			vt.Load(481, "SDL_JoystickNameForIndex");
			vt.Load(482, "SDL_JoystickPathForIndex");
			vt.Load(483, "SDL_JoystickGetDevicePlayerIndex");
			vt.Load(484, "SDL_JoystickGetDeviceGUID");
			vt.Load(485, "SDL_JoystickGetDeviceVendor");
			vt.Load(486, "SDL_JoystickGetDeviceProduct");
			vt.Load(487, "SDL_JoystickGetDeviceProductVersion");
			vt.Load(488, "SDL_JoystickGetDeviceType");
			vt.Load(489, "SDL_JoystickGetDeviceInstanceID");
			vt.Load(490, "SDL_JoystickOpen");
			vt.Load(491, "SDL_JoystickFromInstanceID");
			vt.Load(492, "SDL_JoystickFromPlayerIndex");
			vt.Load(493, "SDL_JoystickAttachVirtual");
			vt.Load(494, "SDL_JoystickAttachVirtualEx");
			vt.Load(495, "SDL_JoystickDetachVirtual");
			vt.Load(496, "SDL_JoystickIsVirtual");
			vt.Load(497, "SDL_JoystickSetVirtualAxis");
			vt.Load(498, "SDL_JoystickSetVirtualButton");
			vt.Load(499, "SDL_JoystickSetVirtualHat");
			vt.Load(500, "SDL_JoystickName");
			vt.Load(501, "SDL_JoystickPath");
			vt.Load(502, "SDL_JoystickGetPlayerIndex");
			vt.Load(503, "SDL_JoystickSetPlayerIndex");
			vt.Load(504, "SDL_JoystickGetGUID");
			vt.Load(505, "SDL_JoystickGetVendor");
			vt.Load(506, "SDL_JoystickGetProduct");
			vt.Load(507, "SDL_JoystickGetProductVersion");
			vt.Load(508, "SDL_JoystickGetFirmwareVersion");
			vt.Load(509, "SDL_JoystickGetSerial");
			vt.Load(510, "SDL_JoystickGetType");
			vt.Load(511, "SDL_JoystickGetGUIDString");
			vt.Load(512, "SDL_JoystickGetGUIDFromString");
			vt.Load(513, "SDL_GetJoystickGUIDInfo");
			vt.Load(514, "SDL_JoystickGetAttached");
			vt.Load(515, "SDL_JoystickInstanceID");
			vt.Load(516, "SDL_JoystickNumAxes");
			vt.Load(517, "SDL_JoystickNumBalls");
			vt.Load(518, "SDL_JoystickNumHats");
			vt.Load(519, "SDL_JoystickNumButtons");
			vt.Load(520, "SDL_JoystickUpdate");
			vt.Load(521, "SDL_JoystickEventState");
			vt.Load(522, "SDL_JoystickGetAxis");
			vt.Load(523, "SDL_JoystickGetAxisInitialState");
			vt.Load(524, "SDL_JoystickGetHat");
			vt.Load(525, "SDL_JoystickGetBall");
			vt.Load(526, "SDL_JoystickGetButton");
			vt.Load(527, "SDL_JoystickRumble");
			vt.Load(528, "SDL_JoystickRumbleTriggers");
			vt.Load(529, "SDL_JoystickHasLED");
			vt.Load(530, "SDL_JoystickHasRumble");
			vt.Load(531, "SDL_JoystickHasRumbleTriggers");
			vt.Load(532, "SDL_JoystickSetLED");
			vt.Load(533, "SDL_JoystickSendEffect");
			vt.Load(534, "SDL_JoystickClose");
			vt.Load(535, "SDL_JoystickCurrentPowerLevel");
			vt.Load(536, "SDL_LockSensors");
			vt.Load(537, "SDL_UnlockSensors");
			vt.Load(538, "SDL_NumSensors");
			vt.Load(539, "SDL_SensorGetDeviceName");
			vt.Load(540, "SDL_SensorGetDeviceType");
			vt.Load(541, "SDL_SensorGetDeviceNonPortableType");
			vt.Load(542, "SDL_SensorGetDeviceInstanceID");
			vt.Load(543, "SDL_SensorOpen");
			vt.Load(544, "SDL_SensorFromInstanceID");
			vt.Load(545, "SDL_SensorGetName");
			vt.Load(546, "SDL_SensorGetType");
			vt.Load(547, "SDL_SensorGetNonPortableType");
			vt.Load(548, "SDL_SensorGetInstanceID");
			vt.Load(549, "SDL_SensorGetData");
			vt.Load(550, "SDL_SensorGetDataWithTimestamp");
			vt.Load(551, "SDL_SensorClose");
			vt.Load(552, "SDL_SensorUpdate");
			vt.Load(553, "SDL_GameControllerAddMappingsFromRW");
			vt.Load(554, "SDL_GameControllerAddMapping");
			vt.Load(555, "SDL_GameControllerNumMappings");
			vt.Load(556, "SDL_GameControllerMappingForIndex");
			vt.Load(557, "SDL_GameControllerMappingForGUID");
			vt.Load(558, "SDL_GameControllerMapping");
			vt.Load(559, "SDL_IsGameController");
			vt.Load(560, "SDL_GameControllerNameForIndex");
			vt.Load(561, "SDL_GameControllerPathForIndex");
			vt.Load(562, "SDL_GameControllerTypeForIndex");
			vt.Load(563, "SDL_GameControllerMappingForDeviceIndex");
			vt.Load(564, "SDL_GameControllerOpen");
			vt.Load(565, "SDL_GameControllerFromInstanceID");
			vt.Load(566, "SDL_GameControllerFromPlayerIndex");
			vt.Load(567, "SDL_GameControllerName");
			vt.Load(568, "SDL_GameControllerPath");
			vt.Load(569, "SDL_GameControllerGetType");
			vt.Load(570, "SDL_GameControllerGetPlayerIndex");
			vt.Load(571, "SDL_GameControllerSetPlayerIndex");
			vt.Load(572, "SDL_GameControllerGetVendor");
			vt.Load(573, "SDL_GameControllerGetProduct");
			vt.Load(574, "SDL_GameControllerGetProductVersion");
			vt.Load(575, "SDL_GameControllerGetFirmwareVersion");
			vt.Load(576, "SDL_GameControllerGetSerial");
			vt.Load(577, "SDL_GameControllerGetSteamHandle");
			vt.Load(578, "SDL_GameControllerGetAttached");
			vt.Load(579, "SDL_GameControllerGetJoystick");
			vt.Load(580, "SDL_GameControllerEventState");
			vt.Load(581, "SDL_GameControllerUpdate");
			vt.Load(582, "SDL_GameControllerGetAxisFromString");
			vt.Load(583, "SDL_GameControllerGetStringForAxis");
			vt.Load(584, "SDL_GameControllerGetBindForAxis");
			vt.Load(585, "SDL_GameControllerHasAxis");
			vt.Load(586, "SDL_GameControllerGetAxis");
			vt.Load(587, "SDL_GameControllerGetButtonFromString");
			vt.Load(588, "SDL_GameControllerGetStringForButton");
			vt.Load(589, "SDL_GameControllerGetBindForButton");
			vt.Load(590, "SDL_GameControllerHasButton");
			vt.Load(591, "SDL_GameControllerGetButton");
			vt.Load(592, "SDL_GameControllerGetNumTouchpads");
			vt.Load(593, "SDL_GameControllerGetNumTouchpadFingers");
			vt.Load(594, "SDL_GameControllerGetTouchpadFinger");
			vt.Load(595, "SDL_GameControllerHasSensor");
			vt.Load(596, "SDL_GameControllerSetSensorEnabled");
			vt.Load(597, "SDL_GameControllerIsSensorEnabled");
			vt.Load(598, "SDL_GameControllerGetSensorDataRate");
			vt.Load(599, "SDL_GameControllerGetSensorData");
			vt.Load(600, "SDL_GameControllerGetSensorDataWithTimestamp");
			vt.Load(601, "SDL_GameControllerRumble");
			vt.Load(602, "SDL_GameControllerRumbleTriggers");
			vt.Load(603, "SDL_GameControllerHasLED");
			vt.Load(604, "SDL_GameControllerHasRumble");
			vt.Load(605, "SDL_GameControllerHasRumbleTriggers");
			vt.Load(606, "SDL_GameControllerSetLED");
			vt.Load(607, "SDL_GameControllerSendEffect");
			vt.Load(608, "SDL_GameControllerClose");
			vt.Load(609, "SDL_GameControllerGetAppleSFSymbolsNameForButton");
			vt.Load(610, "SDL_GameControllerGetAppleSFSymbolsNameForAxis");
			vt.Load(611, "SDL_GetNumTouchDevices");
			vt.Load(612, "SDL_GetTouchDevice");
			vt.Load(613, "SDL_GetTouchName");
			vt.Load(614, "SDL_GetTouchDeviceType");
			vt.Load(615, "SDL_GetNumTouchFingers");
			vt.Load(616, "SDL_GetTouchFinger");
			vt.Load(617, "SDL_RecordGesture");
			vt.Load(618, "SDL_SaveAllDollarTemplates");
			vt.Load(619, "SDL_SaveDollarTemplate");
			vt.Load(620, "SDL_LoadDollarTemplates");
			vt.Load(621, "SDL_PumpEvents");
			vt.Load(622, "SDL_PeepEvents");
			vt.Load(623, "SDL_HasEvent");
			vt.Load(624, "SDL_HasEvents");
			vt.Load(625, "SDL_FlushEvent");
			vt.Load(626, "SDL_FlushEvents");
			vt.Load(627, "SDL_PollEvent");
			vt.Load(628, "SDL_WaitEvent");
			vt.Load(629, "SDL_WaitEventTimeout");
			vt.Load(630, "SDL_PushEvent");
			vt.Load(631, "SDL_SetEventFilter");
			vt.Load(632, "SDL_GetEventFilter");
			vt.Load(633, "SDL_AddEventWatch");
			vt.Load(634, "SDL_DelEventWatch");
			vt.Load(635, "SDL_FilterEvents");
			vt.Load(636, "SDL_EventState");
			vt.Load(637, "SDL_RegisterEvents");
			vt.Load(638, "SDL_GetBasePath");
			vt.Load(639, "SDL_GetPrefPath");
			vt.Load(640, "SDL_NumHaptics");
			vt.Load(641, "SDL_HapticName");
			vt.Load(642, "SDL_HapticOpen");
			vt.Load(643, "SDL_HapticOpened");
			vt.Load(644, "SDL_HapticIndex");
			vt.Load(645, "SDL_MouseIsHaptic");
			vt.Load(646, "SDL_HapticOpenFromMouse");
			vt.Load(647, "SDL_JoystickIsHaptic");
			vt.Load(648, "SDL_HapticOpenFromJoystick");
			vt.Load(649, "SDL_HapticClose");
			vt.Load(650, "SDL_HapticNumEffects");
			vt.Load(651, "SDL_HapticNumEffectsPlaying");
			vt.Load(652, "SDL_HapticQuery");
			vt.Load(653, "SDL_HapticNumAxes");
			vt.Load(654, "SDL_HapticEffectSupported");
			vt.Load(655, "SDL_HapticNewEffect");
			vt.Load(656, "SDL_HapticUpdateEffect");
			vt.Load(657, "SDL_HapticRunEffect");
			vt.Load(658, "SDL_HapticStopEffect");
			vt.Load(659, "SDL_HapticDestroyEffect");
			vt.Load(660, "SDL_HapticGetEffectStatus");
			vt.Load(661, "SDL_HapticSetGain");
			vt.Load(662, "SDL_HapticSetAutocenter");
			vt.Load(663, "SDL_HapticPause");
			vt.Load(664, "SDL_HapticUnpause");
			vt.Load(665, "SDL_HapticStopAll");
			vt.Load(666, "SDL_HapticRumbleSupported");
			vt.Load(667, "SDL_HapticRumbleInit");
			vt.Load(668, "SDL_HapticRumblePlay");
			vt.Load(669, "SDL_HapticRumbleStop");
			vt.Load(670, "SDL_hid_init");
			vt.Load(671, "SDL_hid_exit");
			vt.Load(672, "SDL_hid_device_change_count");
			vt.Load(673, "SDL_hid_enumerate");
			vt.Load(674, "SDL_hid_free_enumeration");
			vt.Load(675, "SDL_hid_open");
			vt.Load(676, "SDL_hid_open_path");
			vt.Load(677, "SDL_hid_write");
			vt.Load(678, "SDL_hid_read_timeout");
			vt.Load(679, "SDL_hid_read");
			vt.Load(680, "SDL_hid_set_nonblocking");
			vt.Load(681, "SDL_hid_send_feature_report");
			vt.Load(682, "SDL_hid_get_feature_report");
			vt.Load(683, "SDL_hid_close");
			vt.Load(684, "SDL_hid_get_manufacturer_string");
			vt.Load(685, "SDL_hid_get_product_string");
			vt.Load(686, "SDL_hid_get_serial_number_string");
			vt.Load(687, "SDL_hid_get_indexed_string");
			vt.Load(688, "SDL_hid_ble_scan");
			vt.Load(689, "SDL_SetHintWithPriority");
			vt.Load(690, "SDL_SetHint");
			vt.Load(691, "SDL_ResetHint");
			vt.Load(692, "SDL_ResetHints");
			vt.Load(693, "SDL_GetHint");
			vt.Load(694, "SDL_GetHintBoolean");
			vt.Load(695, "SDL_AddHintCallback");
			vt.Load(696, "SDL_DelHintCallback");
			vt.Load(697, "SDL_ClearHints");
			vt.Load(698, "SDL_LoadObject");
			vt.Load(699, "SDL_LoadFunction");
			vt.Load(700, "SDL_UnloadObject");
			vt.Load(701, "SDL_LogSetAllPriority");
			vt.Load(702, "SDL_LogSetPriority");
			vt.Load(703, "SDL_LogGetPriority");
			vt.Load(704, "SDL_LogResetPriorities");
			vt.Load(705, "SDL_Log");
			vt.Load(706, "SDL_LogVerbose");
			vt.Load(707, "SDL_LogDebug");
			vt.Load(708, "SDL_LogInfo");
			vt.Load(709, "SDL_LogWarn");
			vt.Load(710, "SDL_LogError");
			vt.Load(711, "SDL_LogCritical");
			vt.Load(712, "SDL_LogMessage");
			vt.Load(713, "SDL_LogMessageV");
			vt.Load(714, "SDL_LogGetOutputFunction");
			vt.Load(715, "SDL_LogSetOutputFunction");
			vt.Load(716, "SDL_ShowMessageBox");
			vt.Load(717, "SDL_ShowSimpleMessageBox");
			vt.Load(718, "SDL_Metal_CreateView");
			vt.Load(719, "SDL_Metal_DestroyView");
			vt.Load(720, "SDL_Metal_GetLayer");
			vt.Load(721, "SDL_Metal_GetDrawableSize");
			vt.Load(722, "SDL_GetPowerInfo");
			vt.Load(723, "SDL_GetNumRenderDrivers");
			vt.Load(724, "SDL_GetRenderDriverInfo");
			vt.Load(725, "SDL_CreateWindowAndRenderer");
			vt.Load(726, "SDL_CreateRenderer");
			vt.Load(727, "SDL_CreateSoftwareRenderer");
			vt.Load(728, "SDL_GetRenderer");
			vt.Load(729, "SDL_RenderGetWindow");
			vt.Load(730, "SDL_GetRendererInfo");
			vt.Load(731, "SDL_GetRendererOutputSize");
			vt.Load(732, "SDL_CreateTexture");
			vt.Load(733, "SDL_CreateTextureFromSurface");
			vt.Load(734, "SDL_QueryTexture");
			vt.Load(735, "SDL_SetTextureColorMod");
			vt.Load(736, "SDL_GetTextureColorMod");
			vt.Load(737, "SDL_SetTextureAlphaMod");
			vt.Load(738, "SDL_GetTextureAlphaMod");
			vt.Load(739, "SDL_SetTextureBlendMode");
			vt.Load(740, "SDL_GetTextureBlendMode");
			vt.Load(741, "SDL_SetTextureScaleMode");
			vt.Load(742, "SDL_GetTextureScaleMode");
			vt.Load(743, "SDL_SetTextureUserData");
			vt.Load(744, "SDL_GetTextureUserData");
			vt.Load(745, "SDL_UpdateTexture");
			vt.Load(746, "SDL_UpdateYUVTexture");
			vt.Load(747, "SDL_UpdateNVTexture");
			vt.Load(748, "SDL_LockTexture");
			vt.Load(749, "SDL_LockTextureToSurface");
			vt.Load(750, "SDL_UnlockTexture");
			vt.Load(751, "SDL_RenderTargetSupported");
			vt.Load(752, "SDL_SetRenderTarget");
			vt.Load(753, "SDL_GetRenderTarget");
			vt.Load(754, "SDL_RenderSetLogicalSize");
			vt.Load(755, "SDL_RenderGetLogicalSize");
			vt.Load(756, "SDL_RenderSetIntegerScale");
			vt.Load(757, "SDL_RenderGetIntegerScale");
			vt.Load(758, "SDL_RenderSetViewport");
			vt.Load(759, "SDL_RenderGetViewport");
			vt.Load(760, "SDL_RenderSetClipRect");
			vt.Load(761, "SDL_RenderGetClipRect");
			vt.Load(762, "SDL_RenderIsClipEnabled");
			vt.Load(763, "SDL_RenderSetScale");
			vt.Load(764, "SDL_RenderGetScale");
			vt.Load(765, "SDL_RenderWindowToLogical");
			vt.Load(766, "SDL_RenderLogicalToWindow");
			vt.Load(767, "SDL_SetRenderDrawColor");
			vt.Load(768, "SDL_GetRenderDrawColor");
			vt.Load(769, "SDL_SetRenderDrawBlendMode");
			vt.Load(770, "SDL_GetRenderDrawBlendMode");
			vt.Load(771, "SDL_RenderClear");
			vt.Load(772, "SDL_RenderDrawPoint");
			vt.Load(773, "SDL_RenderDrawPoints");
			vt.Load(774, "SDL_RenderDrawLine");
			vt.Load(775, "SDL_RenderDrawLines");
			vt.Load(776, "SDL_RenderDrawRect");
			vt.Load(777, "SDL_RenderDrawRects");
			vt.Load(778, "SDL_RenderFillRect");
			vt.Load(779, "SDL_RenderFillRects");
			vt.Load(780, "SDL_RenderCopy");
			vt.Load(781, "SDL_RenderCopyEx");
			vt.Load(782, "SDL_RenderDrawPointF");
			vt.Load(783, "SDL_RenderDrawPointsF");
			vt.Load(784, "SDL_RenderDrawLineF");
			vt.Load(785, "SDL_RenderDrawLinesF");
			vt.Load(786, "SDL_RenderDrawRectF");
			vt.Load(787, "SDL_RenderDrawRectsF");
			vt.Load(788, "SDL_RenderFillRectF");
			vt.Load(789, "SDL_RenderFillRectsF");
			vt.Load(790, "SDL_RenderCopyF");
			vt.Load(791, "SDL_RenderCopyExF");
			vt.Load(792, "SDL_RenderGeometry");
			vt.Load(793, "SDL_RenderGeometryRaw");
			vt.Load(794, "SDL_RenderReadPixels");
			vt.Load(795, "SDL_RenderPresent");
			vt.Load(796, "SDL_DestroyTexture");
			vt.Load(797, "SDL_DestroyRenderer");
			vt.Load(798, "SDL_RenderFlush");
			vt.Load(799, "SDL_GL_BindTexture");
			vt.Load(800, "SDL_GL_UnbindTexture");
			vt.Load(801, "SDL_RenderGetMetalLayer");
			vt.Load(802, "SDL_RenderGetMetalCommandEncoder");
			vt.Load(803, "SDL_RenderSetVSync");
			vt.Load(804, "SDL_CreateShapedWindow");
			vt.Load(805, "SDL_IsShapedWindow");
			vt.Load(806, "SDL_SetWindowShape");
			vt.Load(807, "SDL_GetShapedWindowMode");
			vt.Load(808, "SDL_SetWindowsMessageHook");
			vt.Load(809, "SDL_Direct3D9GetAdapterIndex");
			vt.Load(810, "SDL_RenderGetD3D9Device");
			vt.Load(811, "SDL_RenderGetD3D11Device");
			vt.Load(812, "SDL_RenderGetD3D12Device");
			vt.Load(813, "SDL_DXGIGetOutputInfo");
			vt.Load(814, "SDL_IsTablet");
			vt.Load(815, "SDL_OnApplicationWillTerminate");
			vt.Load(816, "SDL_OnApplicationDidReceiveMemoryWarning");
			vt.Load(817, "SDL_OnApplicationWillResignActive");
			vt.Load(818, "SDL_OnApplicationDidEnterBackground");
			vt.Load(819, "SDL_OnApplicationWillEnterForeground");
			vt.Load(820, "SDL_OnApplicationDidBecomeActive");
			vt.Load(821, "SDL_GetTicks");
			vt.Load(822, "SDL_GetTicks64");
			vt.Load(823, "SDL_GetPerformanceCounter");
			vt.Load(824, "SDL_GetPerformanceFrequency");
			vt.Load(825, "SDL_Delay");
			vt.Load(826, "SDL_AddTimer");
			vt.Load(827, "SDL_RemoveTimer");
			vt.Load(828, "SDL_GetVersion");
			vt.Load(829, "SDL_GetRevision");
			vt.Load(830, "SDL_GetRevisionNumber");
			vt.Load(831, "SDL_GetPreferredLocales");
			vt.Load(832, "SDL_OpenURL");
			vt.Load(833, "SDL_Init");
			vt.Load(834, "SDL_InitSubSystem");
			vt.Load(835, "SDL_QuitSubSystem");
			vt.Load(836, "SDL_WasInit");
			vt.Load(837, "SDL_Quit");
			vt.Load(838, "eglChooseConfig");
			vt.Load(839, "eglCopyBuffers");
			vt.Load(840, "eglCreateContext");
			vt.Load(841, "eglCreatePbufferSurface");
			vt.Load(842, "eglCreatePixmapSurface");
			vt.Load(843, "eglCreateWindowSurface");
			vt.Load(844, "eglDestroyContext");
			vt.Load(845, "eglDestroySurface");
			vt.Load(846, "eglGetConfigAttrib");
			vt.Load(847, "eglGetConfigs");
			vt.Load(848, "eglGetCurrentDisplay");
			vt.Load(849, "eglGetCurrentSurface");
			vt.Load(850, "eglGetDisplay");
			vt.Load(851, "eglGetError");
			vt.Load(852, "eglGetProcAddress");
			vt.Load(853, "eglInitialize");
			vt.Load(854, "eglMakeCurrent");
			vt.Load(855, "eglQueryContext");
			vt.Load(856, "eglQueryString");
			vt.Load(857, "eglQuerySurface");
			vt.Load(858, "eglSwapBuffers");
			vt.Load(859, "eglTerminate");
			vt.Load(860, "eglWaitGL");
			vt.Load(861, "eglWaitNative");
			vt.Load(862, "eglBindTexImage");
			vt.Load(863, "eglReleaseTexImage");
			vt.Load(864, "eglSurfaceAttrib");
			vt.Load(865, "eglSwapInterval");
			vt.Load(866, "eglBindAPI");
			vt.Load(867, "eglQueryAPI");
			vt.Load(868, "eglCreatePbufferFromClientBuffer");
			vt.Load(869, "eglReleaseThread");
			vt.Load(870, "eglWaitClient");
			vt.Load(871, "eglGetCurrentContext");
			vt.Load(872, "eglCreateSync");
			vt.Load(873, "eglDestroySync");
			vt.Load(874, "eglClientWaitSync");
			vt.Load(875, "eglGetSyncAttrib");
			vt.Load(876, "eglCreateImage");
			vt.Load(877, "eglDestroyImage");
			vt.Load(878, "eglGetPlatformDisplay");
			vt.Load(879, "eglCreatePlatformWindowSurface");
			vt.Load(880, "eglCreatePlatformPixmapSurface");
			vt.Load(881, "eglWaitSync");
			vt.Load(882, "glClearIndex");
			vt.Load(883, "glClearColor");
			vt.Load(884, "glClear");
			vt.Load(885, "glIndexMask");
			vt.Load(886, "glColorMask");
			vt.Load(887, "glAlphaFunc");
			vt.Load(888, "glBlendFunc");
			vt.Load(889, "glLogicOp");
			vt.Load(890, "glCullFace");
			vt.Load(891, "glFrontFace");
			vt.Load(892, "glPointSize");
			vt.Load(893, "glLineWidth");
			vt.Load(894, "glLineStipple");
			vt.Load(895, "glPolygonMode");
			vt.Load(896, "glPolygonOffset");
			vt.Load(897, "glPolygonStipple");
			vt.Load(898, "glGetPolygonStipple");
			vt.Load(899, "glEdgeFlag");
			vt.Load(900, "glEdgeFlagv");
			vt.Load(901, "glScissor");
			vt.Load(902, "glClipPlane");
			vt.Load(903, "glGetClipPlane");
			vt.Load(904, "glDrawBuffer");
			vt.Load(905, "glReadBuffer");
			vt.Load(906, "glEnable");
			vt.Load(907, "glDisable");
			vt.Load(908, "glIsEnabled");
			vt.Load(909, "glEnableClientState");
			vt.Load(910, "glDisableClientState");
			vt.Load(911, "glGetBooleanv");
			vt.Load(912, "glGetDoublev");
			vt.Load(913, "glGetFloatv");
			vt.Load(914, "glGetIntegerv");
			vt.Load(915, "glPushAttrib");
			vt.Load(916, "glPopAttrib");
			vt.Load(917, "glPushClientAttrib");
			vt.Load(918, "glPopClientAttrib");
			vt.Load(919, "glRenderMode");
			vt.Load(920, "glGetError");
			vt.Load(921, "glGetString");
			vt.Load(922, "glFinish");
			vt.Load(923, "glFlush");
			vt.Load(924, "glHint");
			vt.Load(925, "glClearDepth");
			vt.Load(926, "glDepthFunc");
			vt.Load(927, "glDepthMask");
			vt.Load(928, "glDepthRange");
			vt.Load(929, "glClearAccum");
			vt.Load(930, "glAccum");
			vt.Load(931, "glMatrixMode");
			vt.Load(932, "glOrtho");
			vt.Load(933, "glFrustum");
			vt.Load(934, "glViewport");
			vt.Load(935, "glPushMatrix");
			vt.Load(936, "glPopMatrix");
			vt.Load(937, "glLoadIdentity");
			vt.Load(938, "glLoadMatrixd");
			vt.Load(939, "glLoadMatrixf");
			vt.Load(940, "glMultMatrixd");
			vt.Load(941, "glMultMatrixf");
			vt.Load(942, "glRotated");
			vt.Load(943, "glRotatef");
			vt.Load(944, "glScaled");
			vt.Load(945, "glScalef");
			vt.Load(946, "glTranslated");
			vt.Load(947, "glTranslatef");
			vt.Load(948, "glIsList");
			vt.Load(949, "glDeleteLists");
			vt.Load(950, "glGenLists");
			vt.Load(951, "glNewList");
			vt.Load(952, "glEndList");
			vt.Load(953, "glCallList");
			vt.Load(954, "glCallLists");
			vt.Load(955, "glListBase");
			vt.Load(956, "glBegin");
			vt.Load(957, "glEnd");
			vt.Load(958, "glVertex2d");
			vt.Load(959, "glVertex2f");
			vt.Load(960, "glVertex2i");
			vt.Load(961, "glVertex2s");
			vt.Load(962, "glVertex3d");
			vt.Load(963, "glVertex3f");
			vt.Load(964, "glVertex3i");
			vt.Load(965, "glVertex3s");
			vt.Load(966, "glVertex4d");
			vt.Load(967, "glVertex4f");
			vt.Load(968, "glVertex4i");
			vt.Load(969, "glVertex4s");
			vt.Load(970, "glVertex2dv");
			vt.Load(971, "glVertex2fv");
			vt.Load(972, "glVertex2iv");
			vt.Load(973, "glVertex2sv");
			vt.Load(974, "glVertex3dv");
			vt.Load(975, "glVertex3fv");
			vt.Load(976, "glVertex3iv");
			vt.Load(977, "glVertex3sv");
			vt.Load(978, "glVertex4dv");
			vt.Load(979, "glVertex4fv");
			vt.Load(980, "glVertex4iv");
			vt.Load(981, "glVertex4sv");
			vt.Load(982, "glNormal3b");
			vt.Load(983, "glNormal3d");
			vt.Load(984, "glNormal3f");
			vt.Load(985, "glNormal3i");
			vt.Load(986, "glNormal3s");
			vt.Load(987, "glNormal3bv");
			vt.Load(988, "glNormal3dv");
			vt.Load(989, "glNormal3fv");
			vt.Load(990, "glNormal3iv");
			vt.Load(991, "glNormal3sv");
			vt.Load(992, "glIndexd");
			vt.Load(993, "glIndexf");
			vt.Load(994, "glIndexi");
			vt.Load(995, "glIndexs");
			vt.Load(996, "glIndexub");
			vt.Load(997, "glIndexdv");
			vt.Load(998, "glIndexfv");
			vt.Load(999, "glIndexiv");
			vt.Load(1000, "glIndexsv");
			vt.Load(1001, "glIndexubv");
			vt.Load(1002, "glColor3b");
			vt.Load(1003, "glColor3d");
			vt.Load(1004, "glColor3f");
			vt.Load(1005, "glColor3i");
			vt.Load(1006, "glColor3s");
			vt.Load(1007, "glColor3ub");
			vt.Load(1008, "glColor3ui");
			vt.Load(1009, "glColor3us");
			vt.Load(1010, "glColor4b");
			vt.Load(1011, "glColor4d");
			vt.Load(1012, "glColor4f");
			vt.Load(1013, "glColor4i");
			vt.Load(1014, "glColor4s");
			vt.Load(1015, "glColor4ub");
			vt.Load(1016, "glColor4ui");
			vt.Load(1017, "glColor4us");
			vt.Load(1018, "glColor3bv");
			vt.Load(1019, "glColor3dv");
			vt.Load(1020, "glColor3fv");
			vt.Load(1021, "glColor3iv");
			vt.Load(1022, "glColor3sv");
			vt.Load(1023, "glColor3ubv");
			vt.Load(1024, "glColor3uiv");
			vt.Load(1025, "glColor3usv");
			vt.Load(1026, "glColor4bv");
			vt.Load(1027, "glColor4dv");
			vt.Load(1028, "glColor4fv");
			vt.Load(1029, "glColor4iv");
			vt.Load(1030, "glColor4sv");
			vt.Load(1031, "glColor4ubv");
			vt.Load(1032, "glColor4uiv");
			vt.Load(1033, "glColor4usv");
			vt.Load(1034, "glTexCoord1d");
			vt.Load(1035, "glTexCoord1f");
			vt.Load(1036, "glTexCoord1i");
			vt.Load(1037, "glTexCoord1s");
			vt.Load(1038, "glTexCoord2d");
			vt.Load(1039, "glTexCoord2f");
			vt.Load(1040, "glTexCoord2i");
			vt.Load(1041, "glTexCoord2s");
			vt.Load(1042, "glTexCoord3d");
			vt.Load(1043, "glTexCoord3f");
			vt.Load(1044, "glTexCoord3i");
			vt.Load(1045, "glTexCoord3s");
			vt.Load(1046, "glTexCoord4d");
			vt.Load(1047, "glTexCoord4f");
			vt.Load(1048, "glTexCoord4i");
			vt.Load(1049, "glTexCoord4s");
			vt.Load(1050, "glTexCoord1dv");
			vt.Load(1051, "glTexCoord1fv");
			vt.Load(1052, "glTexCoord1iv");
			vt.Load(1053, "glTexCoord1sv");
			vt.Load(1054, "glTexCoord2dv");
			vt.Load(1055, "glTexCoord2fv");
			vt.Load(1056, "glTexCoord2iv");
			vt.Load(1057, "glTexCoord2sv");
			vt.Load(1058, "glTexCoord3dv");
			vt.Load(1059, "glTexCoord3fv");
			vt.Load(1060, "glTexCoord3iv");
			vt.Load(1061, "glTexCoord3sv");
			vt.Load(1062, "glTexCoord4dv");
			vt.Load(1063, "glTexCoord4fv");
			vt.Load(1064, "glTexCoord4iv");
			vt.Load(1065, "glTexCoord4sv");
			vt.Load(1066, "glRasterPos2d");
			vt.Load(1067, "glRasterPos2f");
			vt.Load(1068, "glRasterPos2i");
			vt.Load(1069, "glRasterPos2s");
			vt.Load(1070, "glRasterPos3d");
			vt.Load(1071, "glRasterPos3f");
			vt.Load(1072, "glRasterPos3i");
			vt.Load(1073, "glRasterPos3s");
			vt.Load(1074, "glRasterPos4d");
			vt.Load(1075, "glRasterPos4f");
			vt.Load(1076, "glRasterPos4i");
			vt.Load(1077, "glRasterPos4s");
			vt.Load(1078, "glRasterPos2dv");
			vt.Load(1079, "glRasterPos2fv");
			vt.Load(1080, "glRasterPos2iv");
			vt.Load(1081, "glRasterPos2sv");
			vt.Load(1082, "glRasterPos3dv");
			vt.Load(1083, "glRasterPos3fv");
			vt.Load(1084, "glRasterPos3iv");
			vt.Load(1085, "glRasterPos3sv");
			vt.Load(1086, "glRasterPos4dv");
			vt.Load(1087, "glRasterPos4fv");
			vt.Load(1088, "glRasterPos4iv");
			vt.Load(1089, "glRasterPos4sv");
			vt.Load(1090, "glRectd");
			vt.Load(1091, "glRectf");
			vt.Load(1092, "glRecti");
			vt.Load(1093, "glRects");
			vt.Load(1094, "glRectdv");
			vt.Load(1095, "glRectfv");
			vt.Load(1096, "glRectiv");
			vt.Load(1097, "glRectsv");
			vt.Load(1098, "glVertexPointer");
			vt.Load(1099, "glNormalPointer");
			vt.Load(1100, "glColorPointer");
			vt.Load(1101, "glIndexPointer");
			vt.Load(1102, "glTexCoordPointer");
			vt.Load(1103, "glEdgeFlagPointer");
			vt.Load(1104, "glGetPointerv");
			vt.Load(1105, "glArrayElement");
			vt.Load(1106, "glDrawArrays");
			vt.Load(1107, "glDrawElements");
			vt.Load(1108, "glInterleavedArrays");
			vt.Load(1109, "glShadeModel");
			vt.Load(1110, "glLightf");
			vt.Load(1111, "glLighti");
			vt.Load(1112, "glLightfv");
			vt.Load(1113, "glLightiv");
			vt.Load(1114, "glGetLightfv");
			vt.Load(1115, "glGetLightiv");
			vt.Load(1116, "glLightModelf");
			vt.Load(1117, "glLightModeli");
			vt.Load(1118, "glLightModelfv");
			vt.Load(1119, "glLightModeliv");
			vt.Load(1120, "glMaterialf");
			vt.Load(1121, "glMateriali");
			vt.Load(1122, "glMaterialfv");
			vt.Load(1123, "glMaterialiv");
			vt.Load(1124, "glGetMaterialfv");
			vt.Load(1125, "glGetMaterialiv");
			vt.Load(1126, "glColorMaterial");
			vt.Load(1127, "glPixelZoom");
			vt.Load(1128, "glPixelStoref");
			vt.Load(1129, "glPixelStorei");
			vt.Load(1130, "glPixelTransferf");
			vt.Load(1131, "glPixelTransferi");
			vt.Load(1132, "glPixelMapfv");
			vt.Load(1133, "glPixelMapuiv");
			vt.Load(1134, "glPixelMapusv");
			vt.Load(1135, "glGetPixelMapfv");
			vt.Load(1136, "glGetPixelMapuiv");
			vt.Load(1137, "glGetPixelMapusv");
			vt.Load(1138, "glBitmap");
			vt.Load(1139, "glReadPixels");
			vt.Load(1140, "glDrawPixels");
			vt.Load(1141, "glCopyPixels");
			vt.Load(1142, "glStencilFunc");
			vt.Load(1143, "glStencilMask");
			vt.Load(1144, "glStencilOp");
			vt.Load(1145, "glClearStencil");
			vt.Load(1146, "glTexGend");
			vt.Load(1147, "glTexGenf");
			vt.Load(1148, "glTexGeni");
			vt.Load(1149, "glTexGendv");
			vt.Load(1150, "glTexGenfv");
			vt.Load(1151, "glTexGeniv");
			vt.Load(1152, "glGetTexGendv");
			vt.Load(1153, "glGetTexGenfv");
			vt.Load(1154, "glGetTexGeniv");
			vt.Load(1155, "glTexEnvf");
			vt.Load(1156, "glTexEnvi");
			vt.Load(1157, "glTexEnvfv");
			vt.Load(1158, "glTexEnviv");
			vt.Load(1159, "glGetTexEnvfv");
			vt.Load(1160, "glGetTexEnviv");
			vt.Load(1161, "glTexParameterf");
			vt.Load(1162, "glTexParameteri");
			vt.Load(1163, "glTexParameterfv");
			vt.Load(1164, "glTexParameteriv");
			vt.Load(1165, "glGetTexParameterfv");
			vt.Load(1166, "glGetTexParameteriv");
			vt.Load(1167, "glGetTexLevelParameterfv");
			vt.Load(1168, "glGetTexLevelParameteriv");
			vt.Load(1169, "glTexImage1D");
			vt.Load(1170, "glTexImage2D");
			vt.Load(1171, "glGetTexImage");
			vt.Load(1172, "glGenTextures");
			vt.Load(1173, "glDeleteTextures");
			vt.Load(1174, "glBindTexture");
			vt.Load(1175, "glPrioritizeTextures");
			vt.Load(1176, "glAreTexturesResident");
			vt.Load(1177, "glIsTexture");
			vt.Load(1178, "glTexSubImage1D");
			vt.Load(1179, "glTexSubImage2D");
			vt.Load(1180, "glCopyTexImage1D");
			vt.Load(1181, "glCopyTexImage2D");
			vt.Load(1182, "glCopyTexSubImage1D");
			vt.Load(1183, "glCopyTexSubImage2D");
			vt.Load(1184, "glMap1d");
			vt.Load(1185, "glMap1f");
			vt.Load(1186, "glMap2d");
			vt.Load(1187, "glMap2f");
			vt.Load(1188, "glGetMapdv");
			vt.Load(1189, "glGetMapfv");
			vt.Load(1190, "glGetMapiv");
			vt.Load(1191, "glEvalCoord1d");
			vt.Load(1192, "glEvalCoord1f");
			vt.Load(1193, "glEvalCoord1dv");
			vt.Load(1194, "glEvalCoord1fv");
			vt.Load(1195, "glEvalCoord2d");
			vt.Load(1196, "glEvalCoord2f");
			vt.Load(1197, "glEvalCoord2dv");
			vt.Load(1198, "glEvalCoord2fv");
			vt.Load(1199, "glMapGrid1d");
			vt.Load(1200, "glMapGrid1f");
			vt.Load(1201, "glMapGrid2d");
			vt.Load(1202, "glMapGrid2f");
			vt.Load(1203, "glEvalPoint1");
			vt.Load(1204, "glEvalPoint2");
			vt.Load(1205, "glEvalMesh1");
			vt.Load(1206, "glEvalMesh2");
			vt.Load(1207, "glFogf");
			vt.Load(1208, "glFogi");
			vt.Load(1209, "glFogfv");
			vt.Load(1210, "glFogiv");
			vt.Load(1211, "glFeedbackBuffer");
			vt.Load(1212, "glPassThrough");
			vt.Load(1213, "glSelectBuffer");
			vt.Load(1214, "glInitNames");
			vt.Load(1215, "glLoadName");
			vt.Load(1216, "glPushName");
			vt.Load(1217, "glPopName");
			vt.Load(1218, "glDrawRangeElements");
			vt.Load(1219, "glTexImage3D");
			vt.Load(1220, "glTexSubImage3D");
			vt.Load(1221, "glCopyTexSubImage3D");
			vt.Load(1222, "glColorTable");
			vt.Load(1223, "glColorSubTable");
			vt.Load(1224, "glColorTableParameteriv");
			vt.Load(1225, "glColorTableParameterfv");
			vt.Load(1226, "glCopyColorSubTable");
			vt.Load(1227, "glCopyColorTable");
			vt.Load(1228, "glGetColorTable");
			vt.Load(1229, "glGetColorTableParameterfv");
			vt.Load(1230, "glGetColorTableParameteriv");
			vt.Load(1231, "glBlendEquation");
			vt.Load(1232, "glBlendColor");
			vt.Load(1233, "glHistogram");
			vt.Load(1234, "glResetHistogram");
			vt.Load(1235, "glGetHistogram");
			vt.Load(1236, "glGetHistogramParameterfv");
			vt.Load(1237, "glGetHistogramParameteriv");
			vt.Load(1238, "glMinmax");
			vt.Load(1239, "glResetMinmax");
			vt.Load(1240, "glGetMinmax");
			vt.Load(1241, "glGetMinmaxParameterfv");
			vt.Load(1242, "glGetMinmaxParameteriv");
			vt.Load(1243, "glConvolutionFilter1D");
			vt.Load(1244, "glConvolutionFilter2D");
			vt.Load(1245, "glConvolutionParameterf");
			vt.Load(1246, "glConvolutionParameterfv");
			vt.Load(1247, "glConvolutionParameteri");
			vt.Load(1248, "glConvolutionParameteriv");
			vt.Load(1249, "glCopyConvolutionFilter1D");
			vt.Load(1250, "glCopyConvolutionFilter2D");
			vt.Load(1251, "glGetConvolutionFilter");
			vt.Load(1252, "glGetConvolutionParameterfv");
			vt.Load(1253, "glGetConvolutionParameteriv");
			vt.Load(1254, "glSeparableFilter2D");
			vt.Load(1255, "glGetSeparableFilter");
			vt.Load(1256, "glActiveTexture");
			vt.Load(1257, "glClientActiveTexture");
			vt.Load(1258, "glCompressedTexImage1D");
			vt.Load(1259, "glCompressedTexImage2D");
			vt.Load(1260, "glCompressedTexImage3D");
			vt.Load(1261, "glCompressedTexSubImage1D");
			vt.Load(1262, "glCompressedTexSubImage2D");
			vt.Load(1263, "glCompressedTexSubImage3D");
			vt.Load(1264, "glGetCompressedTexImage");
			vt.Load(1265, "glMultiTexCoord1d");
			vt.Load(1266, "glMultiTexCoord1dv");
			vt.Load(1267, "glMultiTexCoord1f");
			vt.Load(1268, "glMultiTexCoord1fv");
			vt.Load(1269, "glMultiTexCoord1i");
			vt.Load(1270, "glMultiTexCoord1iv");
			vt.Load(1271, "glMultiTexCoord1s");
			vt.Load(1272, "glMultiTexCoord1sv");
			vt.Load(1273, "glMultiTexCoord2d");
			vt.Load(1274, "glMultiTexCoord2dv");
			vt.Load(1275, "glMultiTexCoord2f");
			vt.Load(1276, "glMultiTexCoord2fv");
			vt.Load(1277, "glMultiTexCoord2i");
			vt.Load(1278, "glMultiTexCoord2iv");
			vt.Load(1279, "glMultiTexCoord2s");
			vt.Load(1280, "glMultiTexCoord2sv");
			vt.Load(1281, "glMultiTexCoord3d");
			vt.Load(1282, "glMultiTexCoord3dv");
			vt.Load(1283, "glMultiTexCoord3f");
			vt.Load(1284, "glMultiTexCoord3fv");
			vt.Load(1285, "glMultiTexCoord3i");
			vt.Load(1286, "glMultiTexCoord3iv");
			vt.Load(1287, "glMultiTexCoord3s");
			vt.Load(1288, "glMultiTexCoord3sv");
			vt.Load(1289, "glMultiTexCoord4d");
			vt.Load(1290, "glMultiTexCoord4dv");
			vt.Load(1291, "glMultiTexCoord4f");
			vt.Load(1292, "glMultiTexCoord4fv");
			vt.Load(1293, "glMultiTexCoord4i");
			vt.Load(1294, "glMultiTexCoord4iv");
			vt.Load(1295, "glMultiTexCoord4s");
			vt.Load(1296, "glMultiTexCoord4sv");
			vt.Load(1297, "glLoadTransposeMatrixd");
			vt.Load(1298, "glLoadTransposeMatrixf");
			vt.Load(1299, "glMultTransposeMatrixd");
			vt.Load(1300, "glMultTransposeMatrixf");
			vt.Load(1301, "glSampleCoverage");
			vt.Load(1302, "glActiveTextureARB");
			vt.Load(1303, "glClientActiveTextureARB");
			vt.Load(1304, "glMultiTexCoord1dARB");
			vt.Load(1305, "glMultiTexCoord1dvARB");
			vt.Load(1306, "glMultiTexCoord1fARB");
			vt.Load(1307, "glMultiTexCoord1fvARB");
			vt.Load(1308, "glMultiTexCoord1iARB");
			vt.Load(1309, "glMultiTexCoord1ivARB");
			vt.Load(1310, "glMultiTexCoord1sARB");
			vt.Load(1311, "glMultiTexCoord1svARB");
			vt.Load(1312, "glMultiTexCoord2dARB");
			vt.Load(1313, "glMultiTexCoord2dvARB");
			vt.Load(1314, "glMultiTexCoord2fARB");
			vt.Load(1315, "glMultiTexCoord2fvARB");
			vt.Load(1316, "glMultiTexCoord2iARB");
			vt.Load(1317, "glMultiTexCoord2ivARB");
			vt.Load(1318, "glMultiTexCoord2sARB");
			vt.Load(1319, "glMultiTexCoord2svARB");
			vt.Load(1320, "glMultiTexCoord3dARB");
			vt.Load(1321, "glMultiTexCoord3dvARB");
			vt.Load(1322, "glMultiTexCoord3fARB");
			vt.Load(1323, "glMultiTexCoord3fvARB");
			vt.Load(1324, "glMultiTexCoord3iARB");
			vt.Load(1325, "glMultiTexCoord3ivARB");
			vt.Load(1326, "glMultiTexCoord3sARB");
			vt.Load(1327, "glMultiTexCoord3svARB");
			vt.Load(1328, "glMultiTexCoord4dARB");
			vt.Load(1329, "glMultiTexCoord4dvARB");
			vt.Load(1330, "glMultiTexCoord4fARB");
			vt.Load(1331, "glMultiTexCoord4fvARB");
			vt.Load(1332, "glMultiTexCoord4iARB");
			vt.Load(1333, "glMultiTexCoord4ivARB");
			vt.Load(1334, "glMultiTexCoord4sARB");
			vt.Load(1335, "glMultiTexCoord4svARB");
			vt.Load(1336, "SDL_GetWindowWMInfo");
			vt.Load(1337, "SDLTest_Assert");
			vt.Load(1338, "SDLTest_AssertCheck");
			vt.Load(1339, "SDLTest_AssertPass");
			vt.Load(1340, "SDLTest_ResetAssertSummary");
			vt.Load(1341, "SDLTest_LogAssertSummary");
			vt.Load(1342, "SDLTest_AssertSummaryToTestResult");
			vt.Load(1343, "SDLTest_CommonCreateState");
			vt.Load(1344, "SDLTest_CommonArg");
			vt.Load(1345, "SDLTest_CommonLogUsage");
			vt.Load(1346, "SDLTest_CommonUsage");
			vt.Load(1347, "SDLTest_CommonInit");
			vt.Load(1348, "SDLTest_CommonDefaultArgs");
			vt.Load(1349, "SDLTest_CommonEvent");
			vt.Load(1350, "SDLTest_CommonQuit");
			vt.Load(1351, "SDLTest_CommonDrawWindowInfo");
			vt.Load(1352, "SDLTest_ImageBlit");
			vt.Load(1353, "SDLTest_ImageBlitColor");
			vt.Load(1354, "SDLTest_ImageBlitAlpha");
			vt.Load(1355, "SDLTest_ImageBlitBlendAdd");
			vt.Load(1356, "SDLTest_ImageBlitBlend");
			vt.Load(1357, "SDLTest_ImageBlitBlendMod");
			vt.Load(1358, "SDLTest_ImageBlitBlendNone");
			vt.Load(1359, "SDLTest_ImageBlitBlendAll");
			vt.Load(1360, "SDLTest_ImageFace");
			vt.Load(1361, "SDLTest_ImagePrimitives");
			vt.Load(1362, "SDLTest_ImagePrimitivesBlend");
			vt.Load(1363, "SDLTest_CompareSurfaces");
			vt.Load(1364, "SDLTest_Crc32Init");
			vt.Load(1365, "SDLTest_Crc32Calc");
			vt.Load(1366, "SDLTest_Crc32CalcStart");
			vt.Load(1367, "SDLTest_Crc32CalcEnd");
			vt.Load(1368, "SDLTest_Crc32CalcBuffer");
			vt.Load(1369, "SDLTest_Crc32Done");
			vt.Load(1370, "SDLTest_DrawCharacter");
			vt.Load(1371, "SDLTest_DrawString");
			vt.Load(1372, "SDLTest_TextWindowCreate");
			vt.Load(1373, "SDLTest_TextWindowDisplay");
			vt.Load(1374, "SDLTest_TextWindowAddText");
			vt.Load(1375, "SDLTest_TextWindowAddTextWithLength");
			vt.Load(1376, "SDLTest_TextWindowClear");
			vt.Load(1377, "SDLTest_TextWindowDestroy");
			vt.Load(1378, "SDLTest_CleanupTextDrawing");
			vt.Load(1379, "SDLTest_FuzzerInit");
			vt.Load(1380, "SDLTest_RandomUint8");
			vt.Load(1381, "SDLTest_RandomSint8");
			vt.Load(1382, "SDLTest_RandomUint16");
			vt.Load(1383, "SDLTest_RandomSint16");
			vt.Load(1384, "SDLTest_RandomSint32");
			vt.Load(1385, "SDLTest_RandomUint32");
			vt.Load(1386, "SDLTest_RandomUint64");
			vt.Load(1387, "SDLTest_RandomSint64");
			vt.Load(1388, "SDLTest_RandomUnitFloat");
			vt.Load(1389, "SDLTest_RandomUnitDouble");
			vt.Load(1390, "SDLTest_RandomFloat");
			vt.Load(1391, "SDLTest_RandomDouble");
			vt.Load(1392, "SDLTest_RandomUint8BoundaryValue");
			vt.Load(1393, "SDLTest_RandomUint16BoundaryValue");
			vt.Load(1394, "SDLTest_RandomUint32BoundaryValue");
			vt.Load(1395, "SDLTest_RandomUint64BoundaryValue");
			vt.Load(1396, "SDLTest_RandomSint8BoundaryValue");
			vt.Load(1397, "SDLTest_RandomSint16BoundaryValue");
			vt.Load(1398, "SDLTest_RandomSint32BoundaryValue");
			vt.Load(1399, "SDLTest_RandomSint64BoundaryValue");
			vt.Load(1400, "SDLTest_RandomIntegerInRange");
			vt.Load(1401, "SDLTest_RandomAsciiString");
			vt.Load(1402, "SDLTest_RandomAsciiStringWithMaximumLength");
			vt.Load(1403, "SDLTest_RandomAsciiStringOfSize");
			vt.Load(1404, "SDLTest_GetFuzzerInvocationCount");
			vt.Load(1405, "SDLTest_GenerateRunSeed");
			vt.Load(1406, "SDLTest_RunSuites");
			vt.Load(1407, "SDLTest_Log");
			vt.Load(1408, "SDLTest_LogError");
			vt.Load(1409, "SDLTest_Md5Init");
			vt.Load(1410, "SDLTest_Md5Update");
			vt.Load(1411, "SDLTest_Md5Final");
			vt.Load(1412, "SDLTest_TrackAllocations");
			vt.Load(1413, "SDLTest_LogAllocations");
			vt.Load(1414, "SDLTest_RandomInit");
			vt.Load(1415, "SDLTest_RandomInitTime");
			vt.Load(1416, "SDLTest_Random");
			vt.Load(1417, "SDL_Vulkan_LoadLibrary");
			vt.Load(1418, "SDL_Vulkan_GetVkGetInstanceProcAddr");
			vt.Load(1419, "SDL_Vulkan_UnloadLibrary");
			vt.Load(1420, "SDL_Vulkan_GetInstanceExtensions");
			vt.Load(1421, "SDL_Vulkan_CreateSurface");
			vt.Load(1422, "SDL_Vulkan_GetDrawableSize");
		}

		public static void FreeApi()
		{
			vt.Free();
		}
	}
}
