// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL2
{
	/// <summary>
	/// <br/>
	/// This struct is exclusively for the ::SDL_HAPTIC_RAMP effect.<br/>
	/// The ramp effect starts at start strength and ends at end strength.<br/>
	/// It augments in linear fashion.  If you use attack and fade with a ramp<br/>
	/// the effects get added to the ramp effect making the effect become<br/>
	/// quadratic instead of linear.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_HapticRamp")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLHapticRamp
	{
		/// <summary>
		/// ::SDL_HAPTIC_RAMP <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Type;

		/// <summary>
		/// Direction of the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "direction")]
		[NativeName(NativeNameType.Type, "SDL_HapticDirection")]
		public SDLHapticDirection Direction;

		/// <summary>
		/// Duration of the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "length")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Length;

		/// <summary>
		/// Delay before starting the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "delay")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Delay;

		/// <summary>
		/// Button that triggers the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "button")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Button;

		/// <summary>
		/// How soon it can be triggered again after button. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "interval")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Interval;

		/// <summary>
		/// Beginning strength level. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "start")]
		[NativeName(NativeNameType.Type, "Sint16")]
		public short Start;

		/// <summary>
		/// Ending strength level. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "end")]
		[NativeName(NativeNameType.Type, "Sint16")]
		public short End;

		/// <summary>
		/// Duration of the attack. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "attack_length")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort AttackLength;

		/// <summary>
		/// Level at the start of the attack. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "attack_level")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort AttackLevel;

		/// <summary>
		/// Duration of the fade. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "fade_length")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort FadeLength;

		/// <summary>
		/// Level at the end of the fade. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "fade_level")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort FadeLevel;


		public unsafe SDLHapticRamp(ushort type = default, SDLHapticDirection direction = default, uint length = default, ushort delay = default, ushort button = default, ushort interval = default, short start = default, short end = default, ushort attackLength = default, ushort attackLevel = default, ushort fadeLength = default, ushort fadeLevel = default)
		{
			Type = type;
			Direction = direction;
			Length = length;
			Delay = delay;
			Button = button;
			Interval = interval;
			Start = start;
			End = end;
			AttackLength = attackLength;
			AttackLevel = attackLevel;
			FadeLength = fadeLength;
			FadeLevel = fadeLevel;
		}


	}

}
