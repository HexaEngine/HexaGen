// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL2
{
	/// <summary>
	/// <br/>
	/// The struct handles the following effects:<br/>
	/// - ::SDL_HAPTIC_SINE<br/>
	/// - ::SDL_HAPTIC_LEFTRIGHT<br/>
	/// - ::SDL_HAPTIC_TRIANGLE<br/>
	/// - ::SDL_HAPTIC_SAWTOOTHUP<br/>
	/// - ::SDL_HAPTIC_SAWTOOTHDOWN<br/>
	/// A periodic effect consists in a wave-shaped effect that repeats itself<br/>
	/// over time.  The type determines the shape of the wave and the parameters<br/>
	/// determine the dimensions of the wave.<br/>
	/// Phase is given by hundredth of a degree meaning that giving the phase a value<br/>
	/// of 9000 will displace it 25% of its period.  Here are sample values:<br/>
	/// -     0: No phase displacement.<br/>
	/// -  9000: Displaced 25% of its period.<br/>
	/// - 18000: Displaced 50% of its period.<br/>
	/// - 27000: Displaced 75% of its period.<br/>
	/// - 36000: Displaced 100% of its period, same as 0, but 0 is preferred.<br/>
	/// Examples:<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_HapticPeriodic")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLHapticPeriodic
	{
		/// <summary>
		/// ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,<br/>
		/// ::SDL_HAPTIC_TRIANGLE, ::SDL_HAPTIC_SAWTOOTHUP or<br/>
		/// ::SDL_HAPTIC_SAWTOOTHDOWN <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Type;

		/// <summary>
		/// Direction of the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "direction")]
		[NativeName(NativeNameType.Type, "SDL_HapticDirection")]
		public SDLHapticDirection Direction;

		/// <summary>
		/// Duration of the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "length")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Length;

		/// <summary>
		/// Delay before starting the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "delay")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Delay;

		/// <summary>
		/// Button that triggers the effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "button")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Button;

		/// <summary>
		/// How soon it can be triggered again after button. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "interval")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Interval;

		/// <summary>
		/// Period of the wave. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "period")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Period;

		/// <summary>
		/// Peak value; if negative, equivalent to 180 degrees extra phase shift. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "magnitude")]
		[NativeName(NativeNameType.Type, "Sint16")]
		public short Magnitude;

		/// <summary>
		/// Mean value of the wave. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "Sint16")]
		public short Offset;

		/// <summary>
		/// Positive phase shift given by hundredth of a degree. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "phase")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort Phase;

		/// <summary>
		/// Duration of the attack. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "attack_length")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort AttackLength;

		/// <summary>
		/// Level at the start of the attack. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "attack_level")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort AttackLevel;

		/// <summary>
		/// Duration of the fade. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "fade_length")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort FadeLength;

		/// <summary>
		/// Level at the end of the fade. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "fade_level")]
		[NativeName(NativeNameType.Type, "Uint16")]
		public ushort FadeLevel;


		public unsafe SDLHapticPeriodic(ushort type = default, SDLHapticDirection direction = default, uint length = default, ushort delay = default, ushort button = default, ushort interval = default, ushort period = default, short magnitude = default, short offset = default, ushort phase = default, ushort attackLength = default, ushort attackLevel = default, ushort fadeLength = default, ushort fadeLevel = default)
		{
			Type = type;
			Direction = direction;
			Length = length;
			Delay = delay;
			Button = button;
			Interval = interval;
			Period = period;
			Magnitude = magnitude;
			Offset = offset;
			Phase = phase;
			AttackLength = attackLength;
			AttackLevel = attackLevel;
			FadeLength = fadeLength;
			FadeLevel = fadeLevel;
		}


	}

}
