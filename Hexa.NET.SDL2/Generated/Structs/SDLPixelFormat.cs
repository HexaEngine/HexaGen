// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL2
{
	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_PixelFormat")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLPixelFormat
	{
		[NativeName(NativeNameType.Field, "format")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Format;
		[NativeName(NativeNameType.Field, "palette")]
		[NativeName(NativeNameType.Type, "SDL_Palette*")]
		public unsafe SDLPalette* Palette;
		[NativeName(NativeNameType.Field, "BitsPerPixel")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte BitsPerPixel;
		[NativeName(NativeNameType.Field, "BytesPerPixel")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte BytesPerPixel;
		[NativeName(NativeNameType.Field, "padding")]
		[NativeName(NativeNameType.Type, "Uint8[2]")]
		public byte Padding_0;
		public byte Padding_1;
		[NativeName(NativeNameType.Field, "Rmask")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Rmask;
		[NativeName(NativeNameType.Field, "Gmask")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Gmask;
		[NativeName(NativeNameType.Field, "Bmask")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Bmask;
		[NativeName(NativeNameType.Field, "Amask")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Amask;
		[NativeName(NativeNameType.Field, "Rloss")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Rloss;
		[NativeName(NativeNameType.Field, "Gloss")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Gloss;
		[NativeName(NativeNameType.Field, "Bloss")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Bloss;
		[NativeName(NativeNameType.Field, "Aloss")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Aloss;
		[NativeName(NativeNameType.Field, "Rshift")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Rshift;
		[NativeName(NativeNameType.Field, "Gshift")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Gshift;
		[NativeName(NativeNameType.Field, "Bshift")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Bshift;
		[NativeName(NativeNameType.Field, "Ashift")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Ashift;
		[NativeName(NativeNameType.Field, "refcount")]
		[NativeName(NativeNameType.Type, "int")]
		public int Refcount;
		[NativeName(NativeNameType.Field, "next")]
		[NativeName(NativeNameType.Type, "SDL_PixelFormat*")]
		public unsafe SDLPixelFormat* Next;

		public unsafe SDLPixelFormat(uint format = default, SDLPalette* palette = default, byte bitsPerPixel = default, byte bytesPerPixel = default, byte* padding = default, uint rmask = default, uint gmask = default, uint bmask = default, uint amask = default, byte rloss = default, byte gloss = default, byte bloss = default, byte aloss = default, byte rshift = default, byte gshift = default, byte bshift = default, byte ashift = default, int refcount = default, SDLPixelFormat* next = default)
		{
			Format = format;
			Palette = palette;
			BitsPerPixel = bitsPerPixel;
			BytesPerPixel = bytesPerPixel;
			if (padding != default(byte*))
			{
				Padding_0 = padding[0];
				Padding_1 = padding[1];
			}
			Rmask = rmask;
			Gmask = gmask;
			Bmask = bmask;
			Amask = amask;
			Rloss = rloss;
			Gloss = gloss;
			Bloss = bloss;
			Aloss = aloss;
			Rshift = rshift;
			Gshift = gshift;
			Bshift = bshift;
			Ashift = ashift;
			Refcount = refcount;
			Next = next;
		}

		public unsafe SDLPixelFormat(uint format = default, SDLPalette* palette = default, byte bitsPerPixel = default, byte bytesPerPixel = default, Span<byte> padding = default, uint rmask = default, uint gmask = default, uint bmask = default, uint amask = default, byte rloss = default, byte gloss = default, byte bloss = default, byte aloss = default, byte rshift = default, byte gshift = default, byte bshift = default, byte ashift = default, int refcount = default, SDLPixelFormat* next = default)
		{
			Format = format;
			Palette = palette;
			BitsPerPixel = bitsPerPixel;
			BytesPerPixel = bytesPerPixel;
			if (padding != default(Span<byte>))
			{
				Padding_0 = padding[0];
				Padding_1 = padding[1];
			}
			Rmask = rmask;
			Gmask = gmask;
			Bmask = bmask;
			Amask = amask;
			Rloss = rloss;
			Gloss = gloss;
			Bloss = bloss;
			Aloss = aloss;
			Rshift = rshift;
			Gshift = gshift;
			Bshift = bshift;
			Ashift = ashift;
			Refcount = refcount;
			Next = next;
		}


	}

}
