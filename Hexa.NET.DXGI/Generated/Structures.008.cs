// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiHdrMetadataHdr10
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort RedPrimary_0;
		public ushort RedPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort GreenPrimary_0;
		public ushort GreenPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort BluePrimary_0;
		public ushort BluePrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort WhitePoint_0;
		public ushort WhitePoint_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint MaxMasteringLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint MinMasteringLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort MaxContentLightLevel;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort MaxFrameAverageLightLevel;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiHdrMetadataHdr10(ushort* redPrimary = default, ushort* greenPrimary = default, ushort* bluePrimary = default, ushort* whitePoint = default, uint maxMasteringLuminance = default, uint minMasteringLuminance = default, ushort maxContentLightLevel = default, ushort maxFrameAverageLightLevel = default)
		{
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MaxMasteringLuminance = maxMasteringLuminance;
			MinMasteringLuminance = minMasteringLuminance;
			MaxContentLightLevel = maxContentLightLevel;
			MaxFrameAverageLightLevel = maxFrameAverageLightLevel;
		}

		/// <summary>/// To be documented./// </summary>		public unsafe DxgiHdrMetadataHdr10(Span<ushort> redPrimary = default, Span<ushort> greenPrimary = default, Span<ushort> bluePrimary = default, Span<ushort> whitePoint = default, uint maxMasteringLuminance = default, uint minMasteringLuminance = default, ushort maxContentLightLevel = default, ushort maxFrameAverageLightLevel = default)
		{
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MaxMasteringLuminance = maxMasteringLuminance;
			MinMasteringLuminance = minMasteringLuminance;
			MaxContentLightLevel = maxContentLightLevel;
			MaxFrameAverageLightLevel = maxFrameAverageLightLevel;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiHdrMetadataHdr10Plus
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public byte Data_0;
		public byte Data_1;
		public byte Data_2;
		public byte Data_3;
		public byte Data_4;
		public byte Data_5;
		public byte Data_6;
		public byte Data_7;
		public byte Data_8;
		public byte Data_9;
		public byte Data_10;
		public byte Data_11;
		public byte Data_12;
		public byte Data_13;
		public byte Data_14;
		public byte Data_15;
		public byte Data_16;
		public byte Data_17;
		public byte Data_18;
		public byte Data_19;
		public byte Data_20;
		public byte Data_21;
		public byte Data_22;
		public byte Data_23;
		public byte Data_24;
		public byte Data_25;
		public byte Data_26;
		public byte Data_27;
		public byte Data_28;
		public byte Data_29;
		public byte Data_30;
		public byte Data_31;
		public byte Data_32;
		public byte Data_33;
		public byte Data_34;
		public byte Data_35;
		public byte Data_36;
		public byte Data_37;
		public byte Data_38;
		public byte Data_39;
		public byte Data_40;
		public byte Data_41;
		public byte Data_42;
		public byte Data_43;
		public byte Data_44;
		public byte Data_45;
		public byte Data_46;
		public byte Data_47;
		public byte Data_48;
		public byte Data_49;
		public byte Data_50;
		public byte Data_51;
		public byte Data_52;
		public byte Data_53;
		public byte Data_54;
		public byte Data_55;
		public byte Data_56;
		public byte Data_57;
		public byte Data_58;
		public byte Data_59;
		public byte Data_60;
		public byte Data_61;
		public byte Data_62;
		public byte Data_63;
		public byte Data_64;
		public byte Data_65;
		public byte Data_66;
		public byte Data_67;
		public byte Data_68;
		public byte Data_69;
		public byte Data_70;
		public byte Data_71;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiHdrMetadataHdr10Plus(byte* data = default)
		{
			if (data != default)
			{
				Data_0 = data[0];
				Data_1 = data[1];
				Data_2 = data[2];
				Data_3 = data[3];
				Data_4 = data[4];
				Data_5 = data[5];
				Data_6 = data[6];
				Data_7 = data[7];
				Data_8 = data[8];
				Data_9 = data[9];
				Data_10 = data[10];
				Data_11 = data[11];
				Data_12 = data[12];
				Data_13 = data[13];
				Data_14 = data[14];
				Data_15 = data[15];
				Data_16 = data[16];
				Data_17 = data[17];
				Data_18 = data[18];
				Data_19 = data[19];
				Data_20 = data[20];
				Data_21 = data[21];
				Data_22 = data[22];
				Data_23 = data[23];
				Data_24 = data[24];
				Data_25 = data[25];
				Data_26 = data[26];
				Data_27 = data[27];
				Data_28 = data[28];
				Data_29 = data[29];
				Data_30 = data[30];
				Data_31 = data[31];
				Data_32 = data[32];
				Data_33 = data[33];
				Data_34 = data[34];
				Data_35 = data[35];
				Data_36 = data[36];
				Data_37 = data[37];
				Data_38 = data[38];
				Data_39 = data[39];
				Data_40 = data[40];
				Data_41 = data[41];
				Data_42 = data[42];
				Data_43 = data[43];
				Data_44 = data[44];
				Data_45 = data[45];
				Data_46 = data[46];
				Data_47 = data[47];
				Data_48 = data[48];
				Data_49 = data[49];
				Data_50 = data[50];
				Data_51 = data[51];
				Data_52 = data[52];
				Data_53 = data[53];
				Data_54 = data[54];
				Data_55 = data[55];
				Data_56 = data[56];
				Data_57 = data[57];
				Data_58 = data[58];
				Data_59 = data[59];
				Data_60 = data[60];
				Data_61 = data[61];
				Data_62 = data[62];
				Data_63 = data[63];
				Data_64 = data[64];
				Data_65 = data[65];
				Data_66 = data[66];
				Data_67 = data[67];
				Data_68 = data[68];
				Data_69 = data[69];
				Data_70 = data[70];
				Data_71 = data[71];
			}
		}

		/// <summary>/// To be documented./// </summary>		public unsafe DxgiHdrMetadataHdr10Plus(Span<byte> data = default)
		{
			if (data != default)
			{
				Data_0 = data[0];
				Data_1 = data[1];
				Data_2 = data[2];
				Data_3 = data[3];
				Data_4 = data[4];
				Data_5 = data[5];
				Data_6 = data[6];
				Data_7 = data[7];
				Data_8 = data[8];
				Data_9 = data[9];
				Data_10 = data[10];
				Data_11 = data[11];
				Data_12 = data[12];
				Data_13 = data[13];
				Data_14 = data[14];
				Data_15 = data[15];
				Data_16 = data[16];
				Data_17 = data[17];
				Data_18 = data[18];
				Data_19 = data[19];
				Data_20 = data[20];
				Data_21 = data[21];
				Data_22 = data[22];
				Data_23 = data[23];
				Data_24 = data[24];
				Data_25 = data[25];
				Data_26 = data[26];
				Data_27 = data[27];
				Data_28 = data[28];
				Data_29 = data[29];
				Data_30 = data[30];
				Data_31 = data[31];
				Data_32 = data[32];
				Data_33 = data[33];
				Data_34 = data[34];
				Data_35 = data[35];
				Data_36 = data[36];
				Data_37 = data[37];
				Data_38 = data[38];
				Data_39 = data[39];
				Data_40 = data[40];
				Data_41 = data[41];
				Data_42 = data[42];
				Data_43 = data[43];
				Data_44 = data[44];
				Data_45 = data[45];
				Data_46 = data[46];
				Data_47 = data[47];
				Data_48 = data[48];
				Data_49 = data[49];
				Data_50 = data[50];
				Data_51 = data[51];
				Data_52 = data[52];
				Data_53 = data[53];
				Data_54 = data[54];
				Data_55 = data[55];
				Data_56 = data[56];
				Data_57 = data[57];
				Data_58 = data[58];
				Data_59 = data[59];
				Data_60 = data[60];
				Data_61 = data[61];
				Data_62 = data[62];
				Data_63 = data[63];
				Data_64 = data[64];
				Data_65 = data[65];
				Data_66 = data[66];
				Data_67 = data[67];
				Data_68 = data[68];
				Data_69 = data[69];
				Data_70 = data[70];
				Data_71 = data[71];
			}
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("3c8d99d1-4fbf-4181-a82c-af66bf7bd24e")]
	public partial struct IDXGIAdapter4 : IComObject, IComObject<IDXGIAdapter4>, IComObject<IDXGIAdapter3>, IComObject<IDXGIAdapter2>, IComObject<IDXGIAdapter1>, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("3c8d99d1-4fbf-4181-a82c-af66bf7bd24e");

		public unsafe IDXGIAdapter4 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc*, int>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc*, int>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, int>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, int>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, int>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, int>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc1*, int>)(LpVtbl[10]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc1*, int>)(LpVtbl[10]))(ptr, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc2(DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc2*, int>)(LpVtbl[11]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc2(ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc2*, int>)(LpVtbl[11]))(ptr, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterHardwareContentProtectionTeardownStatusEvent(nint hEvent, uint* pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, int>)(LpVtbl[12]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterHardwareContentProtectionTeardownStatusEvent(nint hEvent, ref uint pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, int>)(LpVtbl[12]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void UnregisterHardwareContentProtectionTeardownStatus(uint dwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, void>)(LpVtbl[13]))(ptr, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryVideoMemoryInfo(uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, DxgiQueryVideoMemoryInfo* pVideoMemoryInfo) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, int>)(LpVtbl[14]))(ptr, nodeIndex, memorySegmentGroup, pVideoMemoryInfo);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryVideoMemoryInfo(uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, ref DxgiQueryVideoMemoryInfo pVideoMemoryInfo) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiQueryVideoMemoryInfo* ppVideoMemoryInfo = &pVideoMemoryInfo)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, int>)(LpVtbl[14]))(ptr, nodeIndex, memorySegmentGroup, (DxgiQueryVideoMemoryInfo*)ppVideoMemoryInfo);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetVideoMemoryReservation(uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, ulong reservation) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, ulong, int>)(LpVtbl[15]))(ptr, nodeIndex, memorySegmentGroup, reservation);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterVideoMemoryBudgetChangeNotificationEvent(nint hEvent, uint* pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, int>)(LpVtbl[16]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterVideoMemoryBudgetChangeNotificationEvent(nint hEvent, ref uint pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, int>)(LpVtbl[16]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void UnregisterVideoMemoryBudgetChangeNotification(uint dwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, void>)(LpVtbl[17]))(ptr, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc3(DxgiAdapterDesc3* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc3*, int>)(LpVtbl[18]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc3(ref DxgiAdapterDesc3 pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc3* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc3*, int>)(LpVtbl[18]))(ptr, (DxgiAdapterDesc3*)ppDesc);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIAdapter3 (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter3>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter2 (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter2>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter1 (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter1>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiAdapterDesc3
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public char Description_0;
		public char Description_1;
		public char Description_2;
		public char Description_3;
		public char Description_4;
		public char Description_5;
		public char Description_6;
		public char Description_7;
		public char Description_8;
		public char Description_9;
		public char Description_10;
		public char Description_11;
		public char Description_12;
		public char Description_13;
		public char Description_14;
		public char Description_15;
		public char Description_16;
		public char Description_17;
		public char Description_18;
		public char Description_19;
		public char Description_20;
		public char Description_21;
		public char Description_22;
		public char Description_23;
		public char Description_24;
		public char Description_25;
		public char Description_26;
		public char Description_27;
		public char Description_28;
		public char Description_29;
		public char Description_30;
		public char Description_31;
		public char Description_32;
		public char Description_33;
		public char Description_34;
		public char Description_35;
		public char Description_36;
		public char Description_37;
		public char Description_38;
		public char Description_39;
		public char Description_40;
		public char Description_41;
		public char Description_42;
		public char Description_43;
		public char Description_44;
		public char Description_45;
		public char Description_46;
		public char Description_47;
		public char Description_48;
		public char Description_49;
		public char Description_50;
		public char Description_51;
		public char Description_52;
		public char Description_53;
		public char Description_54;
		public char Description_55;
		public char Description_56;
		public char Description_57;
		public char Description_58;
		public char Description_59;
		public char Description_60;
		public char Description_61;
		public char Description_62;
		public char Description_63;
		public char Description_64;
		public char Description_65;
		public char Description_66;
		public char Description_67;
		public char Description_68;
		public char Description_69;
		public char Description_70;
		public char Description_71;
		public char Description_72;
		public char Description_73;
		public char Description_74;
		public char Description_75;
		public char Description_76;
		public char Description_77;
		public char Description_78;
		public char Description_79;
		public char Description_80;
		public char Description_81;
		public char Description_82;
		public char Description_83;
		public char Description_84;
		public char Description_85;
		public char Description_86;
		public char Description_87;
		public char Description_88;
		public char Description_89;
		public char Description_90;
		public char Description_91;
		public char Description_92;
		public char Description_93;
		public char Description_94;
		public char Description_95;
		public char Description_96;
		public char Description_97;
		public char Description_98;
		public char Description_99;
		public char Description_100;
		public char Description_101;
		public char Description_102;
		public char Description_103;
		public char Description_104;
		public char Description_105;
		public char Description_106;
		public char Description_107;
		public char Description_108;
		public char Description_109;
		public char Description_110;
		public char Description_111;
		public char Description_112;
		public char Description_113;
		public char Description_114;
		public char Description_115;
		public char Description_116;
		public char Description_117;
		public char Description_118;
		public char Description_119;
		public char Description_120;
		public char Description_121;
		public char Description_122;
		public char Description_123;
		public char Description_124;
		public char Description_125;
		public char Description_126;
		public char Description_127;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint VendorId;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint DeviceId;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint SubSysId;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Revision;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nuint DedicatedVideoMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nuint DedicatedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nuint SharedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Luid AdapterLuid;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiAdapterFlag3 Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiGraphicsPreemptionGranularity GraphicsPreemptionGranularity;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiComputePreemptionGranularity ComputePreemptionGranularity;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiAdapterDesc3(char* description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, DxgiAdapterFlag3 flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}

		/// <summary>/// To be documented./// </summary>		public unsafe DxgiAdapterDesc3(Span<char> description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, DxgiAdapterFlag3 flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("068346e8-aaec-4b84-add7-137f513f77a1")]
	public partial struct IDXGIOutput6 : IComObject, IComObject<IDXGIOutput6>, IComObject<IDXGIOutput5>, IComObject<IDXGIOutput4>, IComObject<IDXGIOutput3>, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("068346e8-aaec-4b84-add7-137f513f77a1");

		public unsafe IDXGIOutput6 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int WaitForVBlank() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, int>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(IUnknown* pDevice, int exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ref IUnknown pDevice, int exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ComPtr<IUnknown> pDevice, int exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.Handle, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput6*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(IDXGISurface* pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ref IDXGISurface pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(IDXGIResource* pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(ref IDXGIResource pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SupportsOverlays() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, int>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlaySupport(DxgiFormat enumFormat, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, int>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlaySupport(DxgiFormat enumFormat, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, int>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlaySupport(DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, int>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.Handle, pFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlaySupport(DxgiFormat enumFormat, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, int>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlaySupport(DxgiFormat enumFormat, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, int>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlaySupport(DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, int>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.Handle, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlayColorSpaceSupport(DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, int>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlayColorSpaceSupport(DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, int>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlayColorSpaceSupport(DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, int>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.Handle, pFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlayColorSpaceSupport(DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, int>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlayColorSpaceSupport(DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, int>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckOverlayColorSpaceSupport(DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, int>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.Handle, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, int>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(DxgiOutputDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc1*, int>)(LpVtbl[27]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(ref DxgiOutputDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc1*, int>)(LpVtbl[27]))(ptr, (DxgiOutputDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckHardwareCompositionSupport(uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, int>)(LpVtbl[28]))(ptr, pFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckHardwareCompositionSupport(ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, int>)(LpVtbl[28]))(ptr, (uint*)ppFlags);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput5 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput5>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput4 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput4>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput3 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput3>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput2 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput2>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// interface __MIDL_itf_dxgi1_6_0000_0001 <br/>
	/// [local] <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutputDesc1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public char DeviceName_0;
		public char DeviceName_1;
		public char DeviceName_2;
		public char DeviceName_3;
		public char DeviceName_4;
		public char DeviceName_5;
		public char DeviceName_6;
		public char DeviceName_7;
		public char DeviceName_8;
		public char DeviceName_9;
		public char DeviceName_10;
		public char DeviceName_11;
		public char DeviceName_12;
		public char DeviceName_13;
		public char DeviceName_14;
		public char DeviceName_15;
		public char DeviceName_16;
		public char DeviceName_17;
		public char DeviceName_18;
		public char DeviceName_19;
		public char DeviceName_20;
		public char DeviceName_21;
		public char DeviceName_22;
		public char DeviceName_23;
		public char DeviceName_24;
		public char DeviceName_25;
		public char DeviceName_26;
		public char DeviceName_27;
		public char DeviceName_28;
		public char DeviceName_29;
		public char DeviceName_30;
		public char DeviceName_31;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Rect32 DesktopCoordinates;

		/// <summary>
		/// To be documented.
		/// </summary>
		public int AttachedToDesktop;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiModeRotation Rotation;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nint Monitor;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint BitsPerColor;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiColorSpaceType ColorSpace;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float RedPrimary_0;
		public float RedPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float GreenPrimary_0;
		public float GreenPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float BluePrimary_0;
		public float BluePrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float WhitePoint_0;
		public float WhitePoint_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MinLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MaxLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MaxFullFrameLuminance;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiOutputDesc1(char* deviceName = default, Rect32 desktopCoordinates = default, int attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default, uint bitsPerColor = default, DxgiColorSpaceType colorSpace = default, float* redPrimary = default, float* greenPrimary = default, float* bluePrimary = default, float* whitePoint = default, float minLuminance = default, float maxLuminance = default, float maxFullFrameLuminance = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
			BitsPerColor = bitsPerColor;
			ColorSpace = colorSpace;
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MinLuminance = minLuminance;
			MaxLuminance = maxLuminance;
			MaxFullFrameLuminance = maxFullFrameLuminance;
		}

		/// <summary>/// To be documented./// </summary>		public unsafe DxgiOutputDesc1(Span<char> deviceName = default, Rect32 desktopCoordinates = default, int attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default, uint bitsPerColor = default, DxgiColorSpaceType colorSpace = default, Span<float> redPrimary = default, Span<float> greenPrimary = default, Span<float> bluePrimary = default, Span<float> whitePoint = default, float minLuminance = default, float maxLuminance = default, float maxFullFrameLuminance = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
			BitsPerColor = bitsPerColor;
			ColorSpace = colorSpace;
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MinLuminance = minLuminance;
			MaxLuminance = maxLuminance;
			MaxFullFrameLuminance = maxFullFrameLuminance;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("c1b6694f-ff09-44a9-b03c-77900a0a1d17")]
	public partial struct IDXGIFactory6 : IComObject, IComObject<IDXGIFactory6>, IComObject<IDXGIFactory5>, IComObject<IDXGIFactory4>, IComObject<IDXGIFactory3>, IComObject<IDXGIFactory2>, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("c1b6694f-ff09-44a9-b03c-77900a0a1d17");

		public unsafe IDXGIFactory6 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapters(uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, int>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapters(uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, int>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapters(uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, int>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int MakeWindowAssociation(nint windowHandle, uint flags) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, int>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetWindowAssociation(nint* pWindowHandle) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint*, int>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetWindowAssociation(ref nint pWindowHandle) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint*, int>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.Handle, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.Handle, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChain(ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, int>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSoftwareAdapter(nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, int>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSoftwareAdapter(nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, int>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSoftwareAdapter(nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, int>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapters1(uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, int>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapters1(uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, int>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapters1(uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, int>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int IsCurrent() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, int>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int IsWindowedStereoEnabled() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, int>)(LpVtbl[14]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForHwnd(ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForCoreWindow(ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSharedResourceAdapterLuid(nint hResource, Luid* pLuid) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, Luid*, int>)(LpVtbl[17]))(ptr, hResource, pLuid);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSharedResourceAdapterLuid(nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Luid* ppLuid = &pLuid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, Luid*, int>)(LpVtbl[17]))(ptr, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterStereoStatusWindow(nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, int>)(LpVtbl[18]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterStereoStatusWindow(nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, int>)(LpVtbl[18]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterStereoStatusEvent(nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, int>)(LpVtbl[19]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterStereoStatusEvent(nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, int>)(LpVtbl[19]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void UnregisterStereoStatus(uint dwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, void>)(LpVtbl[20]))(ptr, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterOcclusionStatusWindow(nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, int>)(LpVtbl[21]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterOcclusionStatusWindow(nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, int>)(LpVtbl[21]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterOcclusionStatusEvent(nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, int>)(LpVtbl[22]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int RegisterOcclusionStatusEvent(nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, int>)(LpVtbl[22]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void UnregisterOcclusionStatus(uint dwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, void>)(LpVtbl[23]))(ptr, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSwapChainForComposition(ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint GetCreationFlags() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint>)(LpVtbl[25]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByLuid(Luid adapterLuid, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, int>)(LpVtbl[26]))(ptr, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByLuid(Luid adapterLuid, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, int>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByLuid<T>(Luid adapterLuid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, int>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByLuid<T>(Luid adapterLuid, ref Guid riid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, int>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumWarpAdapter(Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[27]))(ptr, riid, ppvAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumWarpAdapter(ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[27]))(ptr, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumWarpAdapter<T>(out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[27]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumWarpAdapter<T>(ref Guid riid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, int>)(LpVtbl[27]))(ptr, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckFeatureSupport(DxgiFeature feature, void* pFeatureSupportData, uint featureSupportDataSize) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, DxgiFeature, void*, uint, int>)(LpVtbl[28]))(ptr, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckFeatureSupport<T>(DxgiFeature feature, ComPtr<T> pFeatureSupportData, uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, DxgiFeature, void*, uint, int>)(LpVtbl[28]))(ptr, feature, (void*)pFeatureSupportData.Handle, featureSupportDataSize);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByGpuPreference(uint adapter, DxgiGpuPreference gpuPreference, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, int>)(LpVtbl[29]))(ptr, adapter, gpuPreference, riid, ppvAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByGpuPreference(uint adapter, DxgiGpuPreference gpuPreference, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, int>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByGpuPreference<T>(uint adapter, DxgiGpuPreference gpuPreference, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, int>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumAdapterByGpuPreference<T>(uint adapter, DxgiGpuPreference gpuPreference, ref Guid riid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, int>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory5 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory5>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory4 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory4>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory3 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory3>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory2 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory2>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory1 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory1>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IUnknown>(ref value);
		}

	}
}
