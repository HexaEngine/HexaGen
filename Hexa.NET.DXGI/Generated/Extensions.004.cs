// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{
	public static unsafe partial class Extensions
	{

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[15]))(handle, (IUnknown*)pDevice.Handle, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[15]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[15]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[15]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[15]))(handle, (IUnknown*)pDevice.Handle, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory3> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, Luid*, int>)(handle->LpVtbl[17]))(handle, hResource, pLuid);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory3> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, Luid*, int>)(handle->LpVtbl[17]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, int>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, int>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, int>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, int>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory3> comObj, uint dwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, int>)(handle->LpVtbl[21]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, int>)(handle->LpVtbl[21]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, int>)(handle->LpVtbl[22]))(handle, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, int>)(handle->LpVtbl[22]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory3> comObj, uint dwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, void>)(handle->LpVtbl[23]))(handle, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint GetCreationFlags(this ComPtr<IDXGIFactory3> comObj) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint>)(handle->LpVtbl[25]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIDecodeSwapChain> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIDecodeSwapChain> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGIDecodeSwapChain> comObj) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGIDecodeSwapChain> comObj) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PresentBuffer(this ComPtr<IDXGIDecodeSwapChain> comObj, uint bufferToPresent, uint syncInterval, uint flags) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint, uint, uint, int>)(handle->LpVtbl[3]))(handle, bufferToPresent, syncInterval, flags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[4]))(handle, pRect);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[4]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[5]))(handle, pRect);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[5]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, uint width, uint height) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint, uint, int>)(handle->LpVtbl[6]))(handle, width, height);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[7]))(handle, pRect);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[7]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[8]))(handle, pRect);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, int>)(handle->LpVtbl[8]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, uint* pWidth, uint* pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, int>)(handle->LpVtbl[9]))(handle, pWidth, pHeight);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, ref uint pWidth, uint* pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, int>)(handle->LpVtbl[9]))(handle, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, uint* pWidth, ref uint pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (uint* ppHeight = &pHeight)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, int>)(handle->LpVtbl[9]))(handle, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, ref uint pWidth, ref uint pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, int>)(handle->LpVtbl[9]))(handle, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetColorSpace(this ComPtr<IDXGIDecodeSwapChain> comObj, DXGIMULTIPLANEOVERLAYYCbCrFLAGS colorSpace) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, DXGIMULTIPLANEOVERLAYYCbCrFLAGS, int>)(handle->LpVtbl[10]))(handle, colorSpace);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static DXGIMULTIPLANEOVERLAYYCbCrFLAGS GetColorSpace(this ComPtr<IDXGIDecodeSwapChain> comObj) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			DXGIMULTIPLANEOVERLAYYCbCrFLAGS ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, DXGIMULTIPLANEOVERLAYYCbCrFLAGS>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIFactoryMedia> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIFactoryMedia> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIFactoryMedia> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIFactoryMedia> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGIFactoryMedia> comObj) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGIFactoryMedia> comObj) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[3]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int>)(handle->LpVtbl[4]))(handle, (IUnknown*)pDevice.Handle, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.Handle, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGISwapChainMedia> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGISwapChainMedia> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGISwapChainMedia> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGISwapChainMedia> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGISwapChainMedia> comObj) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGISwapChainMedia> comObj) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetFrameStatisticsMedia(this ComPtr<IDXGISwapChainMedia> comObj, DxgiFrameStatisticsMedia* pStats) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, DxgiFrameStatisticsMedia*, int>)(handle->LpVtbl[3]))(handle, pStats);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetFrameStatisticsMedia(this ComPtr<IDXGISwapChainMedia> comObj, ref DxgiFrameStatisticsMedia pStats) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (DxgiFrameStatisticsMedia* ppStats = &pStats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, DxgiFrameStatisticsMedia*, int>)(handle->LpVtbl[3]))(handle, (DxgiFrameStatisticsMedia*)ppStats);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPresentDuration(this ComPtr<IDXGISwapChainMedia> comObj, uint duration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, int>)(handle->LpVtbl[4]))(handle, duration);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, uint* pClosestSmallerPresentDuration, uint* pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, int>)(handle->LpVtbl[5]))(handle, desiredPresentDuration, pClosestSmallerPresentDuration, pClosestLargerPresentDuration);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, ref uint pClosestSmallerPresentDuration, uint* pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (uint* ppClosestSmallerPresentDuration = &pClosestSmallerPresentDuration)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, int>)(handle->LpVtbl[5]))(handle, desiredPresentDuration, (uint*)ppClosestSmallerPresentDuration, pClosestLargerPresentDuration);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, uint* pClosestSmallerPresentDuration, ref uint pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (uint* ppClosestLargerPresentDuration = &pClosestLargerPresentDuration)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, int>)(handle->LpVtbl[5]))(handle, desiredPresentDuration, pClosestSmallerPresentDuration, (uint*)ppClosestLargerPresentDuration);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, ref uint pClosestSmallerPresentDuration, ref uint pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (uint* ppClosestSmallerPresentDuration = &pClosestSmallerPresentDuration)
			{
				fixed (uint* ppClosestLargerPresentDuration = &pClosestLargerPresentDuration)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, int>)(handle->LpVtbl[5]))(handle, desiredPresentDuration, (uint*)ppClosestSmallerPresentDuration, (uint*)ppClosestLargerPresentDuration);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIOutput3> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIOutput3> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIOutput3> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIOutput3> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateData(this ComPtr<IDXGIOutput3> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint, void*, int>)(handle->LpVtbl[3]))(handle, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateData(this ComPtr<IDXGIOutput3> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGIOutput3> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGIOutput3> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGIOutput3> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGIOutput3> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGIOutput3> comObj, Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGIOutput3> comObj, ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGIOutput3> comObj, Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGIOutput3> comObj, ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent(this ComPtr<IDXGIOutput3> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent(this ComPtr<IDXGIOutput3> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent<T>(this ComPtr<IDXGIOutput3> comObj, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent<T>(this ComPtr<IDXGIOutput3> comObj, ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDesc(this ComPtr<IDXGIOutput3> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiOutputDesc*, int>)(handle->LpVtbl[7]))(handle, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDesc(this ComPtr<IDXGIOutput3> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiOutputDesc*, int>)(handle->LpVtbl[7]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(handle->LpVtbl[8]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(handle->LpVtbl[8]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(handle->LpVtbl[8]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(handle->LpVtbl[8]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(handle->LpVtbl[9]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int WaitForVBlank(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, int>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int TakeOwnership(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, int exclusive) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, int, int>)(handle->LpVtbl[11]))(handle, pDevice, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int TakeOwnership(this ComPtr<IDXGIOutput3> comObj, ref IUnknown pDevice, int exclusive) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, int, int>)(handle->LpVtbl[11]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int TakeOwnership(this ComPtr<IDXGIOutput3> comObj, ComPtr<IUnknown> pDevice, int exclusive) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, int, int>)(handle->LpVtbl[11]))(handle, (IUnknown*)pDevice.Handle, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static void ReleaseOwnership(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput3*, void>)(handle->LpVtbl[12]))(handle);
		}

		/// <summary>/// To be documented./// </summary>		public static int GetGammaControlCapabilities(this ComPtr<IDXGIOutput3> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControlCapabilities*, int>)(handle->LpVtbl[13]))(handle, pGammaCaps);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetGammaControlCapabilities(this ComPtr<IDXGIOutput3> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControlCapabilities*, int>)(handle->LpVtbl[13]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetGammaControl(this ComPtr<IDXGIOutput3> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, int>)(handle->LpVtbl[14]))(handle, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetGammaControl(this ComPtr<IDXGIOutput3> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, int>)(handle->LpVtbl[14]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetGammaControl(this ComPtr<IDXGIOutput3> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, int>)(handle->LpVtbl[15]))(handle, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetGammaControl(this ComPtr<IDXGIOutput3> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, int>)(handle->LpVtbl[15]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetDisplaySurface(this ComPtr<IDXGIOutput3> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, int>)(handle->LpVtbl[16]))(handle, pScanoutSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetDisplaySurface(this ComPtr<IDXGIOutput3> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, int>)(handle->LpVtbl[16]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetDisplaySurface(this ComPtr<IDXGIOutput3> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, int>)(handle->LpVtbl[16]))(handle, (IDXGISurface*)pScanoutSurface.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplaySurfaceData(this ComPtr<IDXGIOutput3> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, int>)(handle->LpVtbl[17]))(handle, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplaySurfaceData(this ComPtr<IDXGIOutput3> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, int>)(handle->LpVtbl[17]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplaySurfaceData(this ComPtr<IDXGIOutput3> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, int>)(handle->LpVtbl[17]))(handle, (IDXGISurface*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetFrameStatistics(this ComPtr<IDXGIOutput3> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFrameStatistics*, int>)(handle->LpVtbl[18]))(handle, pStats);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetFrameStatistics(this ComPtr<IDXGIOutput3> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFrameStatistics*, int>)(handle->LpVtbl[18]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(handle->LpVtbl[19]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(handle->LpVtbl[19]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(handle->LpVtbl[19]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(handle->LpVtbl[19]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(handle->LpVtbl[20]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplaySurfaceData1(this ComPtr<IDXGIOutput3> comObj, IDXGIResource* pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, int>)(handle->LpVtbl[21]))(handle, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplaySurfaceData1(this ComPtr<IDXGIOutput3> comObj, ref IDXGIResource pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, int>)(handle->LpVtbl[21]))(handle, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDisplaySurfaceData1(this ComPtr<IDXGIOutput3> comObj, ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, int>)(handle->LpVtbl[21]))(handle, (IDXGIResource*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, int>)(handle->LpVtbl[22]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, int>)(handle->LpVtbl[22]))(handle, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, int>)(handle->LpVtbl[22]))(handle, (IUnknown*)pDevice.Handle, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, int>)(handle->LpVtbl[22]))(handle, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, int>)(handle->LpVtbl[22]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, int>)(handle->LpVtbl[22]))(handle, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, int>)(handle->LpVtbl[22]))(handle, (IUnknown*)pDevice.Handle, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SupportsOverlays(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, int>)(handle->LpVtbl[23]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, int>)(handle->LpVtbl[24]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, int>)(handle->LpVtbl[24]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, int>)(handle->LpVtbl[24]))(handle, enumFormat, (IUnknown*)pConcernedDevice.Handle, pFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, int>)(handle->LpVtbl[24]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, int>)(handle->LpVtbl[24]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, int>)(handle->LpVtbl[24]))(handle, enumFormat, (IUnknown*)pConcernedDevice.Handle, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGISwapChain3> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGISwapChain3> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGISwapChain3> comObj) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGISwapChain3> comObj) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateData(this ComPtr<IDXGISwapChain3> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint, void*, int>)(handle->LpVtbl[3]))(handle, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateData(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGISwapChain3> comObj, Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGISwapChain3> comObj, Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetPrivateData<T>(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent(this ComPtr<IDXGISwapChain3> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent<T>(this ComPtr<IDXGISwapChain3> comObj, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetParent<T>(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDevice(this ComPtr<IDXGISwapChain3> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, riid, ppDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDevice(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDevice<T>(this ComPtr<IDXGISwapChain3> comObj, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			ppDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetDevice<T>(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int Present(this ComPtr<IDXGISwapChain3> comObj, uint syncInterval, uint flags) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, int>)(handle->LpVtbl[8]))(handle, syncInterval, flags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetBuffer(this ComPtr<IDXGISwapChain3> comObj, uint buffer, Guid* riid, void** ppSurface) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, buffer, riid, ppSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetBuffer(this ComPtr<IDXGISwapChain3> comObj, uint buffer, ref Guid riid, void** ppSurface) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetBuffer<T>(this ComPtr<IDXGISwapChain3> comObj, uint buffer, out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* handle = comObj.Handle;
			ppSurface = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, buffer, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSurface.GetAddressOf());
			return ret;
		}
	}
}
