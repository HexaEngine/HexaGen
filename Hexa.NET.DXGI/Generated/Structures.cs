// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("aec22fb8-76f3-4639-9be0-28eb43a67a2e")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIObject")]
	public partial struct IDXGIObject : IComObject, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("aec22fb8-76f3-4639-9be0-28eb43a67a2e");

		public unsafe IDXGIObject (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGIObject value)
		{
			return Unsafe.As<IDXGIObject, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("3d3e0379-f9de-4d58-bb6c-18d62992f1a6")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDeviceSubObject")]
	public partial struct IDXGIDeviceSubObject : IComObject, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("3d3e0379-f9de-4d58-bb6c-18d62992f1a6");

		public unsafe IDXGIDeviceSubObject (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDeviceSubObject value)
		{
			return Unsafe.As<IDXGIDeviceSubObject, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDeviceSubObject value)
		{
			return Unsafe.As<IDXGIDeviceSubObject, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("035f3ab4-482e-4e50-b41f-8a7f8bd8960b")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIResource")]
	public partial struct IDXGIResource : IComObject, IComObject<IDXGIResource>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("035f3ab4-482e-4e50-b41f-8a7f8bd8960b");

		public unsafe IDXGIResource (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedHandle([NativeName(NativeNameType.Param, "pSharedHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] nint* pSharedHandle) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, nint*, HResult>)(LpVtbl[8]))(ptr, pSharedHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedHandle([NativeName(NativeNameType.Param, "pSharedHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] ref nint pSharedHandle) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppSharedHandle = &pSharedHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, nint*, HResult>)(LpVtbl[8]))(ptr, (nint*)ppSharedHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetUsage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetUsage([NativeName(NativeNameType.Param, "pUsage")] [NativeName(NativeNameType.Type, "DXGI_USAGE*")] uint* pUsage) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(LpVtbl[9]))(ptr, pUsage);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetUsage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetUsage([NativeName(NativeNameType.Param, "pUsage")] [NativeName(NativeNameType.Type, "DXGI_USAGE*")] ref uint pUsage) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUsage = &pUsage)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(LpVtbl[9]))(ptr, (uint*)ppUsage);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetEvictionPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetEvictionPriority([NativeName(NativeNameType.Param, "EvictionPriority")] [NativeName(NativeNameType.Type, "UINT")] uint evictionPriority) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint, HResult>)(LpVtbl[10]))(ptr, evictionPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetEvictionPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetEvictionPriority([NativeName(NativeNameType.Param, "pEvictionPriority")] [NativeName(NativeNameType.Type, "UINT*")] uint* pEvictionPriority) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(LpVtbl[11]))(ptr, pEvictionPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetEvictionPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetEvictionPriority([NativeName(NativeNameType.Param, "pEvictionPriority")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pEvictionPriority) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppEvictionPriority = &pEvictionPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(LpVtbl[11]))(ptr, (uint*)ppEvictionPriority);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGIResource value)
		{
			return Unsafe.As<IDXGIResource, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIResource value)
		{
			return Unsafe.As<IDXGIResource, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIResource value)
		{
			return Unsafe.As<IDXGIResource, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("9d8e1289-d7b3-465f-8126-250e349af85d")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIKeyedMutex")]
	public partial struct IDXGIKeyedMutex : IComObject, IComObject<IDXGIKeyedMutex>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("9d8e1289-d7b3-465f-8126-250e349af85d");

		public unsafe IDXGIKeyedMutex (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AcquireSync")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AcquireSync([NativeName(NativeNameType.Param, "Key")] [NativeName(NativeNameType.Type, "UINT64")] ulong key, [NativeName(NativeNameType.Param, "dwMilliseconds")] [NativeName(NativeNameType.Type, "DWORD")] uint dwMilliseconds) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, ulong, uint, HResult>)(LpVtbl[8]))(ptr, key, dwMilliseconds);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseSync")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReleaseSync([NativeName(NativeNameType.Param, "Key")] [NativeName(NativeNameType.Type, "UINT64")] ulong key) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, ulong, HResult>)(LpVtbl[9]))(ptr, key);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGIKeyedMutex value)
		{
			return Unsafe.As<IDXGIKeyedMutex, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIKeyedMutex value)
		{
			return Unsafe.As<IDXGIKeyedMutex, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIKeyedMutex value)
		{
			return Unsafe.As<IDXGIKeyedMutex, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("cafcb56c-6ac3-4889-bf47-9e23bbd260ec")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISurface")]
	public partial struct IDXGISurface : IComObject, IComObject<IDXGISurface>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("cafcb56c-6ac3-4889-bf47-9e23bbd260ec");

		public unsafe IDXGISurface (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiSurfaceDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiSurfaceDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Map")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Map([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] DxgiMappedRect* pLockedRect, [NativeName(NativeNameType.Param, "MapFlags")] [NativeName(NativeNameType.Type, "UINT")] uint mapFlags) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiMappedRect*, uint, HResult>)(LpVtbl[9]))(ptr, pLockedRect, mapFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Map")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Map([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] ref DxgiMappedRect pLockedRect, [NativeName(NativeNameType.Param, "MapFlags")] [NativeName(NativeNameType.Type, "UINT")] uint mapFlags) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiMappedRect*, uint, HResult>)(LpVtbl[9]))(ptr, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Unmap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Unmap() 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISurface value)
		{
			return Unsafe.As<IDXGISurface, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISurface value)
		{
			return Unsafe.As<IDXGISurface, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISurface value)
		{
			return Unsafe.As<IDXGISurface, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_SURFACE_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSurfaceDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Width")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Height")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Format")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT")]
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SampleDesc")]
		[NativeName(NativeNameType.Type, "DXGI_SAMPLE_DESC")]
		public DxgiSampleDesc SampleDesc;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiSurfaceDesc(uint width = default, uint height = default, DxgiFormat format = default, DxgiSampleDesc sampleDesc = default)
		{
			Width = width;
			Height = height;
			Format = format;
			SampleDesc = sampleDesc;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_SAMPLE_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSampleDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Count")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Count;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Quality")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Quality;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiSampleDesc(uint count = default, uint quality = default)
		{
			Count = count;
			Quality = quality;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_MAPPED_RECT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiMappedRect
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Pitch")]
		[NativeName(NativeNameType.Type, "INT")]
		public int Pitch;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pBits")]
		[NativeName(NativeNameType.Type, "BYTE*")]
		public unsafe byte* PBits;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiMappedRect(int pitch = default, byte* pBits = default)
		{
			Pitch = pitch;
			PBits = pBits;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("4ae63092-6327-4c1b-80ae-bfe12ea32b86")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISurface1")]
	public partial struct IDXGISurface1 : IComObject, IComObject<IDXGISurface1>, IComObject<IDXGISurface>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("4ae63092-6327-4c1b-80ae-bfe12ea32b86");

		public unsafe IDXGISurface1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiSurfaceDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiSurfaceDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Map")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Map([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] DxgiMappedRect* pLockedRect, [NativeName(NativeNameType.Param, "MapFlags")] [NativeName(NativeNameType.Type, "UINT")] uint mapFlags) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiMappedRect*, uint, HResult>)(LpVtbl[9]))(ptr, pLockedRect, mapFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Map")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Map([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] ref DxgiMappedRect pLockedRect, [NativeName(NativeNameType.Param, "MapFlags")] [NativeName(NativeNameType.Type, "UINT")] uint mapFlags) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiMappedRect*, uint, HResult>)(LpVtbl[9]))(ptr, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Unmap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Unmap() 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDC([NativeName(NativeNameType.Param, "Discard")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 discard, [NativeName(NativeNameType.Param, "phdc")] [NativeName(NativeNameType.Type, "HDC*")] nint* phdc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Bool32, nint*, HResult>)(LpVtbl[11]))(ptr, discard, phdc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDC([NativeName(NativeNameType.Param, "Discard")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 discard, [NativeName(NativeNameType.Param, "phdc")] [NativeName(NativeNameType.Type, "HDC*")] ref nint phdc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* pphdc = &phdc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Bool32, nint*, HResult>)(LpVtbl[11]))(ptr, discard, (nint*)pphdc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReleaseDC([NativeName(NativeNameType.Param, "pDirtyRect")] [NativeName(NativeNameType.Type, "RECT*")] Rect32* pDirtyRect) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Rect32*, HResult>)(LpVtbl[12]))(ptr, pDirtyRect);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReleaseDC([NativeName(NativeNameType.Param, "pDirtyRect")] [NativeName(NativeNameType.Type, "RECT*")] ref Rect32 pDirtyRect) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppDirtyRect = &pDirtyRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Rect32*, HResult>)(LpVtbl[12]))(ptr, (Rect32*)ppDirtyRect);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISurface (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IDXGISurface>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("2411e7e1-12ac-4ccf-bd14-9798e8534dc0")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIAdapter")]
	public partial struct IDXGIAdapter : IComObject, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("2411e7e1-12ac-4ccf-bd14-9798e8534dc0");

		public unsafe IDXGIAdapter (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter value)
		{
			return Unsafe.As<IDXGIAdapter, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter value)
		{
			return Unsafe.As<IDXGIAdapter, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("ae02eedb-c735-4690-8d52-5a8dc20213aa")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutput")]
	public partial struct IDXGIOutput : IComObject, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("ae02eedb-c735-4690-8d52-5a8dc20213aa");

		public unsafe IDXGIOutput (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "WaitForVBlank")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.GetAddressOf(), exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseOwnership")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pDestination) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pDestination) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput value)
		{
			return Unsafe.As<IDXGIOutput, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput value)
		{
			return Unsafe.As<IDXGIOutput, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_OUTPUT_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutputDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DeviceName")]
		[NativeName(NativeNameType.Type, "WCHAR[32]")]
		public char DeviceName_0;
		public char DeviceName_1;
		public char DeviceName_2;
		public char DeviceName_3;
		public char DeviceName_4;
		public char DeviceName_5;
		public char DeviceName_6;
		public char DeviceName_7;
		public char DeviceName_8;
		public char DeviceName_9;
		public char DeviceName_10;
		public char DeviceName_11;
		public char DeviceName_12;
		public char DeviceName_13;
		public char DeviceName_14;
		public char DeviceName_15;
		public char DeviceName_16;
		public char DeviceName_17;
		public char DeviceName_18;
		public char DeviceName_19;
		public char DeviceName_20;
		public char DeviceName_21;
		public char DeviceName_22;
		public char DeviceName_23;
		public char DeviceName_24;
		public char DeviceName_25;
		public char DeviceName_26;
		public char DeviceName_27;
		public char DeviceName_28;
		public char DeviceName_29;
		public char DeviceName_30;
		public char DeviceName_31;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DesktopCoordinates")]
		[NativeName(NativeNameType.Type, "RECT")]
		public Rect32 DesktopCoordinates;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AttachedToDesktop")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 AttachedToDesktop;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Rotation")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION")]
		public DxgiModeRotation Rotation;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Monitor")]
		[NativeName(NativeNameType.Type, "HMONITOR")]
		public nint Monitor;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutputDesc(char* deviceName = default, Rect32 desktopCoordinates = default, Bool32 attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutputDesc(Span<char> deviceName = default, Rect32 desktopCoordinates = default, Bool32 attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_MODE_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiModeDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Width")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Height")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RefreshRate")]
		[NativeName(NativeNameType.Type, "DXGI_RATIONAL")]
		public DxgiRational RefreshRate;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Format")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT")]
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScanlineOrdering")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_SCANLINE_ORDER")]
		public DxgiModeScanlineOrder ScanlineOrdering;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Scaling")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_SCALING")]
		public DxgiModeScaling Scaling;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiModeDesc(uint width = default, uint height = default, DxgiRational refreshRate = default, DxgiFormat format = default, DxgiModeScanlineOrder scanlineOrdering = default, DxgiModeScaling scaling = default)
		{
			Width = width;
			Height = height;
			RefreshRate = refreshRate;
			Format = format;
			ScanlineOrdering = scanlineOrdering;
			Scaling = scaling;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_RATIONAL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiRational
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Numerator")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Numerator;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Denominator")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Denominator;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiRational(uint numerator = default, uint denominator = default)
		{
			Numerator = numerator;
			Denominator = denominator;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_GAMMA_CONTROL_CAPABILITIES")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiGammaControlCapabilities
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScaleAndOffsetSupported")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 ScaleAndOffsetSupported;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxConvertedValue")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxConvertedValue;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MinConvertedValue")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinConvertedValue;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NumGammaControlPoints")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NumGammaControlPoints;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ControlPointPositions")]
		[NativeName(NativeNameType.Type, "float[1025]")]
		public float ControlPointPositions_0;
		public float ControlPointPositions_1;
		public float ControlPointPositions_2;
		public float ControlPointPositions_3;
		public float ControlPointPositions_4;
		public float ControlPointPositions_5;
		public float ControlPointPositions_6;
		public float ControlPointPositions_7;
		public float ControlPointPositions_8;
		public float ControlPointPositions_9;
		public float ControlPointPositions_10;
		public float ControlPointPositions_11;
		public float ControlPointPositions_12;
		public float ControlPointPositions_13;
		public float ControlPointPositions_14;
		public float ControlPointPositions_15;
		public float ControlPointPositions_16;
		public float ControlPointPositions_17;
		public float ControlPointPositions_18;
		public float ControlPointPositions_19;
		public float ControlPointPositions_20;
		public float ControlPointPositions_21;
		public float ControlPointPositions_22;
		public float ControlPointPositions_23;
		public float ControlPointPositions_24;
		public float ControlPointPositions_25;
		public float ControlPointPositions_26;
		public float ControlPointPositions_27;
		public float ControlPointPositions_28;
		public float ControlPointPositions_29;
		public float ControlPointPositions_30;
		public float ControlPointPositions_31;
		public float ControlPointPositions_32;
		public float ControlPointPositions_33;
		public float ControlPointPositions_34;
		public float ControlPointPositions_35;
		public float ControlPointPositions_36;
		public float ControlPointPositions_37;
		public float ControlPointPositions_38;
		public float ControlPointPositions_39;
		public float ControlPointPositions_40;
		public float ControlPointPositions_41;
		public float ControlPointPositions_42;
		public float ControlPointPositions_43;
		public float ControlPointPositions_44;
		public float ControlPointPositions_45;
		public float ControlPointPositions_46;
		public float ControlPointPositions_47;
		public float ControlPointPositions_48;
		public float ControlPointPositions_49;
		public float ControlPointPositions_50;
		public float ControlPointPositions_51;
		public float ControlPointPositions_52;
		public float ControlPointPositions_53;
		public float ControlPointPositions_54;
		public float ControlPointPositions_55;
		public float ControlPointPositions_56;
		public float ControlPointPositions_57;
		public float ControlPointPositions_58;
		public float ControlPointPositions_59;
		public float ControlPointPositions_60;
		public float ControlPointPositions_61;
		public float ControlPointPositions_62;
		public float ControlPointPositions_63;
		public float ControlPointPositions_64;
		public float ControlPointPositions_65;
		public float ControlPointPositions_66;
		public float ControlPointPositions_67;
		public float ControlPointPositions_68;
		public float ControlPointPositions_69;
		public float ControlPointPositions_70;
		public float ControlPointPositions_71;
		public float ControlPointPositions_72;
		public float ControlPointPositions_73;
		public float ControlPointPositions_74;
		public float ControlPointPositions_75;
		public float ControlPointPositions_76;
		public float ControlPointPositions_77;
		public float ControlPointPositions_78;
		public float ControlPointPositions_79;
		public float ControlPointPositions_80;
		public float ControlPointPositions_81;
		public float ControlPointPositions_82;
		public float ControlPointPositions_83;
		public float ControlPointPositions_84;
		public float ControlPointPositions_85;
		public float ControlPointPositions_86;
		public float ControlPointPositions_87;
		public float ControlPointPositions_88;
		public float ControlPointPositions_89;
		public float ControlPointPositions_90;
		public float ControlPointPositions_91;
		public float ControlPointPositions_92;
		public float ControlPointPositions_93;
		public float ControlPointPositions_94;
		public float ControlPointPositions_95;
		public float ControlPointPositions_96;
		public float ControlPointPositions_97;
		public float ControlPointPositions_98;
		public float ControlPointPositions_99;
		public float ControlPointPositions_100;
		public float ControlPointPositions_101;
		public float ControlPointPositions_102;
		public float ControlPointPositions_103;
		public float ControlPointPositions_104;
		public float ControlPointPositions_105;
		public float ControlPointPositions_106;
		public float ControlPointPositions_107;
		public float ControlPointPositions_108;
		public float ControlPointPositions_109;
		public float ControlPointPositions_110;
		public float ControlPointPositions_111;
		public float ControlPointPositions_112;
		public float ControlPointPositions_113;
		public float ControlPointPositions_114;
		public float ControlPointPositions_115;
		public float ControlPointPositions_116;
		public float ControlPointPositions_117;
		public float ControlPointPositions_118;
		public float ControlPointPositions_119;
		public float ControlPointPositions_120;
		public float ControlPointPositions_121;
		public float ControlPointPositions_122;
		public float ControlPointPositions_123;
		public float ControlPointPositions_124;
		public float ControlPointPositions_125;
		public float ControlPointPositions_126;
		public float ControlPointPositions_127;
		public float ControlPointPositions_128;
		public float ControlPointPositions_129;
		public float ControlPointPositions_130;
		public float ControlPointPositions_131;
		public float ControlPointPositions_132;
		public float ControlPointPositions_133;
		public float ControlPointPositions_134;
		public float ControlPointPositions_135;
		public float ControlPointPositions_136;
		public float ControlPointPositions_137;
		public float ControlPointPositions_138;
		public float ControlPointPositions_139;
		public float ControlPointPositions_140;
		public float ControlPointPositions_141;
		public float ControlPointPositions_142;
		public float ControlPointPositions_143;
		public float ControlPointPositions_144;
		public float ControlPointPositions_145;
		public float ControlPointPositions_146;
		public float ControlPointPositions_147;
		public float ControlPointPositions_148;
		public float ControlPointPositions_149;
		public float ControlPointPositions_150;
		public float ControlPointPositions_151;
		public float ControlPointPositions_152;
		public float ControlPointPositions_153;
		public float ControlPointPositions_154;
		public float ControlPointPositions_155;
		public float ControlPointPositions_156;
		public float ControlPointPositions_157;
		public float ControlPointPositions_158;
		public float ControlPointPositions_159;
		public float ControlPointPositions_160;
		public float ControlPointPositions_161;
		public float ControlPointPositions_162;
		public float ControlPointPositions_163;
		public float ControlPointPositions_164;
		public float ControlPointPositions_165;
		public float ControlPointPositions_166;
		public float ControlPointPositions_167;
		public float ControlPointPositions_168;
		public float ControlPointPositions_169;
		public float ControlPointPositions_170;
		public float ControlPointPositions_171;
		public float ControlPointPositions_172;
		public float ControlPointPositions_173;
		public float ControlPointPositions_174;
		public float ControlPointPositions_175;
		public float ControlPointPositions_176;
		public float ControlPointPositions_177;
		public float ControlPointPositions_178;
		public float ControlPointPositions_179;
		public float ControlPointPositions_180;
		public float ControlPointPositions_181;
		public float ControlPointPositions_182;
		public float ControlPointPositions_183;
		public float ControlPointPositions_184;
		public float ControlPointPositions_185;
		public float ControlPointPositions_186;
		public float ControlPointPositions_187;
		public float ControlPointPositions_188;
		public float ControlPointPositions_189;
		public float ControlPointPositions_190;
		public float ControlPointPositions_191;
		public float ControlPointPositions_192;
		public float ControlPointPositions_193;
		public float ControlPointPositions_194;
		public float ControlPointPositions_195;
		public float ControlPointPositions_196;
		public float ControlPointPositions_197;
		public float ControlPointPositions_198;
		public float ControlPointPositions_199;
		public float ControlPointPositions_200;
		public float ControlPointPositions_201;
		public float ControlPointPositions_202;
		public float ControlPointPositions_203;
		public float ControlPointPositions_204;
		public float ControlPointPositions_205;
		public float ControlPointPositions_206;
		public float ControlPointPositions_207;
		public float ControlPointPositions_208;
		public float ControlPointPositions_209;
		public float ControlPointPositions_210;
		public float ControlPointPositions_211;
		public float ControlPointPositions_212;
		public float ControlPointPositions_213;
		public float ControlPointPositions_214;
		public float ControlPointPositions_215;
		public float ControlPointPositions_216;
		public float ControlPointPositions_217;
		public float ControlPointPositions_218;
		public float ControlPointPositions_219;
		public float ControlPointPositions_220;
		public float ControlPointPositions_221;
		public float ControlPointPositions_222;
		public float ControlPointPositions_223;
		public float ControlPointPositions_224;
		public float ControlPointPositions_225;
		public float ControlPointPositions_226;
		public float ControlPointPositions_227;
		public float ControlPointPositions_228;
		public float ControlPointPositions_229;
		public float ControlPointPositions_230;
		public float ControlPointPositions_231;
		public float ControlPointPositions_232;
		public float ControlPointPositions_233;
		public float ControlPointPositions_234;
		public float ControlPointPositions_235;
		public float ControlPointPositions_236;
		public float ControlPointPositions_237;
		public float ControlPointPositions_238;
		public float ControlPointPositions_239;
		public float ControlPointPositions_240;
		public float ControlPointPositions_241;
		public float ControlPointPositions_242;
		public float ControlPointPositions_243;
		public float ControlPointPositions_244;
		public float ControlPointPositions_245;
		public float ControlPointPositions_246;
		public float ControlPointPositions_247;
		public float ControlPointPositions_248;
		public float ControlPointPositions_249;
		public float ControlPointPositions_250;
		public float ControlPointPositions_251;
		public float ControlPointPositions_252;
		public float ControlPointPositions_253;
		public float ControlPointPositions_254;
		public float ControlPointPositions_255;
		public float ControlPointPositions_256;
		public float ControlPointPositions_257;
		public float ControlPointPositions_258;
		public float ControlPointPositions_259;
		public float ControlPointPositions_260;
		public float ControlPointPositions_261;
		public float ControlPointPositions_262;
		public float ControlPointPositions_263;
		public float ControlPointPositions_264;
		public float ControlPointPositions_265;
		public float ControlPointPositions_266;
		public float ControlPointPositions_267;
		public float ControlPointPositions_268;
		public float ControlPointPositions_269;
		public float ControlPointPositions_270;
		public float ControlPointPositions_271;
		public float ControlPointPositions_272;
		public float ControlPointPositions_273;
		public float ControlPointPositions_274;
		public float ControlPointPositions_275;
		public float ControlPointPositions_276;
		public float ControlPointPositions_277;
		public float ControlPointPositions_278;
		public float ControlPointPositions_279;
		public float ControlPointPositions_280;
		public float ControlPointPositions_281;
		public float ControlPointPositions_282;
		public float ControlPointPositions_283;
		public float ControlPointPositions_284;
		public float ControlPointPositions_285;
		public float ControlPointPositions_286;
		public float ControlPointPositions_287;
		public float ControlPointPositions_288;
		public float ControlPointPositions_289;
		public float ControlPointPositions_290;
		public float ControlPointPositions_291;
		public float ControlPointPositions_292;
		public float ControlPointPositions_293;
		public float ControlPointPositions_294;
		public float ControlPointPositions_295;
		public float ControlPointPositions_296;
		public float ControlPointPositions_297;
		public float ControlPointPositions_298;
		public float ControlPointPositions_299;
		public float ControlPointPositions_300;
		public float ControlPointPositions_301;
		public float ControlPointPositions_302;
		public float ControlPointPositions_303;
		public float ControlPointPositions_304;
		public float ControlPointPositions_305;
		public float ControlPointPositions_306;
		public float ControlPointPositions_307;
		public float ControlPointPositions_308;
		public float ControlPointPositions_309;
		public float ControlPointPositions_310;
		public float ControlPointPositions_311;
		public float ControlPointPositions_312;
		public float ControlPointPositions_313;
		public float ControlPointPositions_314;
		public float ControlPointPositions_315;
		public float ControlPointPositions_316;
		public float ControlPointPositions_317;
		public float ControlPointPositions_318;
		public float ControlPointPositions_319;
		public float ControlPointPositions_320;
		public float ControlPointPositions_321;
		public float ControlPointPositions_322;
		public float ControlPointPositions_323;
		public float ControlPointPositions_324;
		public float ControlPointPositions_325;
		public float ControlPointPositions_326;
		public float ControlPointPositions_327;
		public float ControlPointPositions_328;
		public float ControlPointPositions_329;
		public float ControlPointPositions_330;
		public float ControlPointPositions_331;
		public float ControlPointPositions_332;
		public float ControlPointPositions_333;
		public float ControlPointPositions_334;
		public float ControlPointPositions_335;
		public float ControlPointPositions_336;
		public float ControlPointPositions_337;
		public float ControlPointPositions_338;
		public float ControlPointPositions_339;
		public float ControlPointPositions_340;
		public float ControlPointPositions_341;
		public float ControlPointPositions_342;
		public float ControlPointPositions_343;
		public float ControlPointPositions_344;
		public float ControlPointPositions_345;
		public float ControlPointPositions_346;
		public float ControlPointPositions_347;
		public float ControlPointPositions_348;
		public float ControlPointPositions_349;
		public float ControlPointPositions_350;
		public float ControlPointPositions_351;
		public float ControlPointPositions_352;
		public float ControlPointPositions_353;
		public float ControlPointPositions_354;
		public float ControlPointPositions_355;
		public float ControlPointPositions_356;
		public float ControlPointPositions_357;
		public float ControlPointPositions_358;
		public float ControlPointPositions_359;
		public float ControlPointPositions_360;
		public float ControlPointPositions_361;
		public float ControlPointPositions_362;
		public float ControlPointPositions_363;
		public float ControlPointPositions_364;
		public float ControlPointPositions_365;
		public float ControlPointPositions_366;
		public float ControlPointPositions_367;
		public float ControlPointPositions_368;
		public float ControlPointPositions_369;
		public float ControlPointPositions_370;
		public float ControlPointPositions_371;
		public float ControlPointPositions_372;
		public float ControlPointPositions_373;
		public float ControlPointPositions_374;
		public float ControlPointPositions_375;
		public float ControlPointPositions_376;
		public float ControlPointPositions_377;
		public float ControlPointPositions_378;
		public float ControlPointPositions_379;
		public float ControlPointPositions_380;
		public float ControlPointPositions_381;
		public float ControlPointPositions_382;
		public float ControlPointPositions_383;
		public float ControlPointPositions_384;
		public float ControlPointPositions_385;
		public float ControlPointPositions_386;
		public float ControlPointPositions_387;
		public float ControlPointPositions_388;
		public float ControlPointPositions_389;
		public float ControlPointPositions_390;
		public float ControlPointPositions_391;
		public float ControlPointPositions_392;
		public float ControlPointPositions_393;
		public float ControlPointPositions_394;
		public float ControlPointPositions_395;
		public float ControlPointPositions_396;
		public float ControlPointPositions_397;
		public float ControlPointPositions_398;
		public float ControlPointPositions_399;
		public float ControlPointPositions_400;
		public float ControlPointPositions_401;
		public float ControlPointPositions_402;
		public float ControlPointPositions_403;
		public float ControlPointPositions_404;
		public float ControlPointPositions_405;
		public float ControlPointPositions_406;
		public float ControlPointPositions_407;
		public float ControlPointPositions_408;
		public float ControlPointPositions_409;
		public float ControlPointPositions_410;
		public float ControlPointPositions_411;
		public float ControlPointPositions_412;
		public float ControlPointPositions_413;
		public float ControlPointPositions_414;
		public float ControlPointPositions_415;
		public float ControlPointPositions_416;
		public float ControlPointPositions_417;
		public float ControlPointPositions_418;
		public float ControlPointPositions_419;
		public float ControlPointPositions_420;
		public float ControlPointPositions_421;
		public float ControlPointPositions_422;
		public float ControlPointPositions_423;
		public float ControlPointPositions_424;
		public float ControlPointPositions_425;
		public float ControlPointPositions_426;
		public float ControlPointPositions_427;
		public float ControlPointPositions_428;
		public float ControlPointPositions_429;
		public float ControlPointPositions_430;
		public float ControlPointPositions_431;
		public float ControlPointPositions_432;
		public float ControlPointPositions_433;
		public float ControlPointPositions_434;
		public float ControlPointPositions_435;
		public float ControlPointPositions_436;
		public float ControlPointPositions_437;
		public float ControlPointPositions_438;
		public float ControlPointPositions_439;
		public float ControlPointPositions_440;
		public float ControlPointPositions_441;
		public float ControlPointPositions_442;
		public float ControlPointPositions_443;
		public float ControlPointPositions_444;
		public float ControlPointPositions_445;
		public float ControlPointPositions_446;
		public float ControlPointPositions_447;
		public float ControlPointPositions_448;
		public float ControlPointPositions_449;
		public float ControlPointPositions_450;
		public float ControlPointPositions_451;
		public float ControlPointPositions_452;
		public float ControlPointPositions_453;
		public float ControlPointPositions_454;
		public float ControlPointPositions_455;
		public float ControlPointPositions_456;
		public float ControlPointPositions_457;
		public float ControlPointPositions_458;
		public float ControlPointPositions_459;
		public float ControlPointPositions_460;
		public float ControlPointPositions_461;
		public float ControlPointPositions_462;
		public float ControlPointPositions_463;
		public float ControlPointPositions_464;
		public float ControlPointPositions_465;
		public float ControlPointPositions_466;
		public float ControlPointPositions_467;
		public float ControlPointPositions_468;
		public float ControlPointPositions_469;
		public float ControlPointPositions_470;
		public float ControlPointPositions_471;
		public float ControlPointPositions_472;
		public float ControlPointPositions_473;
		public float ControlPointPositions_474;
		public float ControlPointPositions_475;
		public float ControlPointPositions_476;
		public float ControlPointPositions_477;
		public float ControlPointPositions_478;
		public float ControlPointPositions_479;
		public float ControlPointPositions_480;
		public float ControlPointPositions_481;
		public float ControlPointPositions_482;
		public float ControlPointPositions_483;
		public float ControlPointPositions_484;
		public float ControlPointPositions_485;
		public float ControlPointPositions_486;
		public float ControlPointPositions_487;
		public float ControlPointPositions_488;
		public float ControlPointPositions_489;
		public float ControlPointPositions_490;
		public float ControlPointPositions_491;
		public float ControlPointPositions_492;
		public float ControlPointPositions_493;
		public float ControlPointPositions_494;
		public float ControlPointPositions_495;
		public float ControlPointPositions_496;
		public float ControlPointPositions_497;
		public float ControlPointPositions_498;
		public float ControlPointPositions_499;
		public float ControlPointPositions_500;
		public float ControlPointPositions_501;
		public float ControlPointPositions_502;
		public float ControlPointPositions_503;
		public float ControlPointPositions_504;
		public float ControlPointPositions_505;
		public float ControlPointPositions_506;
		public float ControlPointPositions_507;
		public float ControlPointPositions_508;
		public float ControlPointPositions_509;
		public float ControlPointPositions_510;
		public float ControlPointPositions_511;
		public float ControlPointPositions_512;
		public float ControlPointPositions_513;
		public float ControlPointPositions_514;
		public float ControlPointPositions_515;
		public float ControlPointPositions_516;
		public float ControlPointPositions_517;
		public float ControlPointPositions_518;
		public float ControlPointPositions_519;
		public float ControlPointPositions_520;
		public float ControlPointPositions_521;
		public float ControlPointPositions_522;
		public float ControlPointPositions_523;
		public float ControlPointPositions_524;
		public float ControlPointPositions_525;
		public float ControlPointPositions_526;
		public float ControlPointPositions_527;
		public float ControlPointPositions_528;
		public float ControlPointPositions_529;
		public float ControlPointPositions_530;
		public float ControlPointPositions_531;
		public float ControlPointPositions_532;
		public float ControlPointPositions_533;
		public float ControlPointPositions_534;
		public float ControlPointPositions_535;
		public float ControlPointPositions_536;
		public float ControlPointPositions_537;
		public float ControlPointPositions_538;
		public float ControlPointPositions_539;
		public float ControlPointPositions_540;
		public float ControlPointPositions_541;
		public float ControlPointPositions_542;
		public float ControlPointPositions_543;
		public float ControlPointPositions_544;
		public float ControlPointPositions_545;
		public float ControlPointPositions_546;
		public float ControlPointPositions_547;
		public float ControlPointPositions_548;
		public float ControlPointPositions_549;
		public float ControlPointPositions_550;
		public float ControlPointPositions_551;
		public float ControlPointPositions_552;
		public float ControlPointPositions_553;
		public float ControlPointPositions_554;
		public float ControlPointPositions_555;
		public float ControlPointPositions_556;
		public float ControlPointPositions_557;
		public float ControlPointPositions_558;
		public float ControlPointPositions_559;
		public float ControlPointPositions_560;
		public float ControlPointPositions_561;
		public float ControlPointPositions_562;
		public float ControlPointPositions_563;
		public float ControlPointPositions_564;
		public float ControlPointPositions_565;
		public float ControlPointPositions_566;
		public float ControlPointPositions_567;
		public float ControlPointPositions_568;
		public float ControlPointPositions_569;
		public float ControlPointPositions_570;
		public float ControlPointPositions_571;
		public float ControlPointPositions_572;
		public float ControlPointPositions_573;
		public float ControlPointPositions_574;
		public float ControlPointPositions_575;
		public float ControlPointPositions_576;
		public float ControlPointPositions_577;
		public float ControlPointPositions_578;
		public float ControlPointPositions_579;
		public float ControlPointPositions_580;
		public float ControlPointPositions_581;
		public float ControlPointPositions_582;
		public float ControlPointPositions_583;
		public float ControlPointPositions_584;
		public float ControlPointPositions_585;
		public float ControlPointPositions_586;
		public float ControlPointPositions_587;
		public float ControlPointPositions_588;
		public float ControlPointPositions_589;
		public float ControlPointPositions_590;
		public float ControlPointPositions_591;
		public float ControlPointPositions_592;
		public float ControlPointPositions_593;
		public float ControlPointPositions_594;
		public float ControlPointPositions_595;
		public float ControlPointPositions_596;
		public float ControlPointPositions_597;
		public float ControlPointPositions_598;
		public float ControlPointPositions_599;
		public float ControlPointPositions_600;
		public float ControlPointPositions_601;
		public float ControlPointPositions_602;
		public float ControlPointPositions_603;
		public float ControlPointPositions_604;
		public float ControlPointPositions_605;
		public float ControlPointPositions_606;
		public float ControlPointPositions_607;
		public float ControlPointPositions_608;
		public float ControlPointPositions_609;
		public float ControlPointPositions_610;
		public float ControlPointPositions_611;
		public float ControlPointPositions_612;
		public float ControlPointPositions_613;
		public float ControlPointPositions_614;
		public float ControlPointPositions_615;
		public float ControlPointPositions_616;
		public float ControlPointPositions_617;
		public float ControlPointPositions_618;
		public float ControlPointPositions_619;
		public float ControlPointPositions_620;
		public float ControlPointPositions_621;
		public float ControlPointPositions_622;
		public float ControlPointPositions_623;
		public float ControlPointPositions_624;
		public float ControlPointPositions_625;
		public float ControlPointPositions_626;
		public float ControlPointPositions_627;
		public float ControlPointPositions_628;
		public float ControlPointPositions_629;
		public float ControlPointPositions_630;
		public float ControlPointPositions_631;
		public float ControlPointPositions_632;
		public float ControlPointPositions_633;
		public float ControlPointPositions_634;
		public float ControlPointPositions_635;
		public float ControlPointPositions_636;
		public float ControlPointPositions_637;
		public float ControlPointPositions_638;
		public float ControlPointPositions_639;
		public float ControlPointPositions_640;
		public float ControlPointPositions_641;
		public float ControlPointPositions_642;
		public float ControlPointPositions_643;
		public float ControlPointPositions_644;
		public float ControlPointPositions_645;
		public float ControlPointPositions_646;
		public float ControlPointPositions_647;
		public float ControlPointPositions_648;
		public float ControlPointPositions_649;
		public float ControlPointPositions_650;
		public float ControlPointPositions_651;
		public float ControlPointPositions_652;
		public float ControlPointPositions_653;
		public float ControlPointPositions_654;
		public float ControlPointPositions_655;
		public float ControlPointPositions_656;
		public float ControlPointPositions_657;
		public float ControlPointPositions_658;
		public float ControlPointPositions_659;
		public float ControlPointPositions_660;
		public float ControlPointPositions_661;
		public float ControlPointPositions_662;
		public float ControlPointPositions_663;
		public float ControlPointPositions_664;
		public float ControlPointPositions_665;
		public float ControlPointPositions_666;
		public float ControlPointPositions_667;
		public float ControlPointPositions_668;
		public float ControlPointPositions_669;
		public float ControlPointPositions_670;
		public float ControlPointPositions_671;
		public float ControlPointPositions_672;
		public float ControlPointPositions_673;
		public float ControlPointPositions_674;
		public float ControlPointPositions_675;
		public float ControlPointPositions_676;
		public float ControlPointPositions_677;
		public float ControlPointPositions_678;
		public float ControlPointPositions_679;
		public float ControlPointPositions_680;
		public float ControlPointPositions_681;
		public float ControlPointPositions_682;
		public float ControlPointPositions_683;
		public float ControlPointPositions_684;
		public float ControlPointPositions_685;
		public float ControlPointPositions_686;
		public float ControlPointPositions_687;
		public float ControlPointPositions_688;
		public float ControlPointPositions_689;
		public float ControlPointPositions_690;
		public float ControlPointPositions_691;
		public float ControlPointPositions_692;
		public float ControlPointPositions_693;
		public float ControlPointPositions_694;
		public float ControlPointPositions_695;
		public float ControlPointPositions_696;
		public float ControlPointPositions_697;
		public float ControlPointPositions_698;
		public float ControlPointPositions_699;
		public float ControlPointPositions_700;
		public float ControlPointPositions_701;
		public float ControlPointPositions_702;
		public float ControlPointPositions_703;
		public float ControlPointPositions_704;
		public float ControlPointPositions_705;
		public float ControlPointPositions_706;
		public float ControlPointPositions_707;
		public float ControlPointPositions_708;
		public float ControlPointPositions_709;
		public float ControlPointPositions_710;
		public float ControlPointPositions_711;
		public float ControlPointPositions_712;
		public float ControlPointPositions_713;
		public float ControlPointPositions_714;
		public float ControlPointPositions_715;
		public float ControlPointPositions_716;
		public float ControlPointPositions_717;
		public float ControlPointPositions_718;
		public float ControlPointPositions_719;
		public float ControlPointPositions_720;
		public float ControlPointPositions_721;
		public float ControlPointPositions_722;
		public float ControlPointPositions_723;
		public float ControlPointPositions_724;
		public float ControlPointPositions_725;
		public float ControlPointPositions_726;
		public float ControlPointPositions_727;
		public float ControlPointPositions_728;
		public float ControlPointPositions_729;
		public float ControlPointPositions_730;
		public float ControlPointPositions_731;
		public float ControlPointPositions_732;
		public float ControlPointPositions_733;
		public float ControlPointPositions_734;
		public float ControlPointPositions_735;
		public float ControlPointPositions_736;
		public float ControlPointPositions_737;
		public float ControlPointPositions_738;
		public float ControlPointPositions_739;
		public float ControlPointPositions_740;
		public float ControlPointPositions_741;
		public float ControlPointPositions_742;
		public float ControlPointPositions_743;
		public float ControlPointPositions_744;
		public float ControlPointPositions_745;
		public float ControlPointPositions_746;
		public float ControlPointPositions_747;
		public float ControlPointPositions_748;
		public float ControlPointPositions_749;
		public float ControlPointPositions_750;
		public float ControlPointPositions_751;
		public float ControlPointPositions_752;
		public float ControlPointPositions_753;
		public float ControlPointPositions_754;
		public float ControlPointPositions_755;
		public float ControlPointPositions_756;
		public float ControlPointPositions_757;
		public float ControlPointPositions_758;
		public float ControlPointPositions_759;
		public float ControlPointPositions_760;
		public float ControlPointPositions_761;
		public float ControlPointPositions_762;
		public float ControlPointPositions_763;
		public float ControlPointPositions_764;
		public float ControlPointPositions_765;
		public float ControlPointPositions_766;
		public float ControlPointPositions_767;
		public float ControlPointPositions_768;
		public float ControlPointPositions_769;
		public float ControlPointPositions_770;
		public float ControlPointPositions_771;
		public float ControlPointPositions_772;
		public float ControlPointPositions_773;
		public float ControlPointPositions_774;
		public float ControlPointPositions_775;
		public float ControlPointPositions_776;
		public float ControlPointPositions_777;
		public float ControlPointPositions_778;
		public float ControlPointPositions_779;
		public float ControlPointPositions_780;
		public float ControlPointPositions_781;
		public float ControlPointPositions_782;
		public float ControlPointPositions_783;
		public float ControlPointPositions_784;
		public float ControlPointPositions_785;
		public float ControlPointPositions_786;
		public float ControlPointPositions_787;
		public float ControlPointPositions_788;
		public float ControlPointPositions_789;
		public float ControlPointPositions_790;
		public float ControlPointPositions_791;
		public float ControlPointPositions_792;
		public float ControlPointPositions_793;
		public float ControlPointPositions_794;
		public float ControlPointPositions_795;
		public float ControlPointPositions_796;
		public float ControlPointPositions_797;
		public float ControlPointPositions_798;
		public float ControlPointPositions_799;
		public float ControlPointPositions_800;
		public float ControlPointPositions_801;
		public float ControlPointPositions_802;
		public float ControlPointPositions_803;
		public float ControlPointPositions_804;
		public float ControlPointPositions_805;
		public float ControlPointPositions_806;
		public float ControlPointPositions_807;
		public float ControlPointPositions_808;
		public float ControlPointPositions_809;
		public float ControlPointPositions_810;
		public float ControlPointPositions_811;
		public float ControlPointPositions_812;
		public float ControlPointPositions_813;
		public float ControlPointPositions_814;
		public float ControlPointPositions_815;
		public float ControlPointPositions_816;
		public float ControlPointPositions_817;
		public float ControlPointPositions_818;
		public float ControlPointPositions_819;
		public float ControlPointPositions_820;
		public float ControlPointPositions_821;
		public float ControlPointPositions_822;
		public float ControlPointPositions_823;
		public float ControlPointPositions_824;
		public float ControlPointPositions_825;
		public float ControlPointPositions_826;
		public float ControlPointPositions_827;
		public float ControlPointPositions_828;
		public float ControlPointPositions_829;
		public float ControlPointPositions_830;
		public float ControlPointPositions_831;
		public float ControlPointPositions_832;
		public float ControlPointPositions_833;
		public float ControlPointPositions_834;
		public float ControlPointPositions_835;
		public float ControlPointPositions_836;
		public float ControlPointPositions_837;
		public float ControlPointPositions_838;
		public float ControlPointPositions_839;
		public float ControlPointPositions_840;
		public float ControlPointPositions_841;
		public float ControlPointPositions_842;
		public float ControlPointPositions_843;
		public float ControlPointPositions_844;
		public float ControlPointPositions_845;
		public float ControlPointPositions_846;
		public float ControlPointPositions_847;
		public float ControlPointPositions_848;
		public float ControlPointPositions_849;
		public float ControlPointPositions_850;
		public float ControlPointPositions_851;
		public float ControlPointPositions_852;
		public float ControlPointPositions_853;
		public float ControlPointPositions_854;
		public float ControlPointPositions_855;
		public float ControlPointPositions_856;
		public float ControlPointPositions_857;
		public float ControlPointPositions_858;
		public float ControlPointPositions_859;
		public float ControlPointPositions_860;
		public float ControlPointPositions_861;
		public float ControlPointPositions_862;
		public float ControlPointPositions_863;
		public float ControlPointPositions_864;
		public float ControlPointPositions_865;
		public float ControlPointPositions_866;
		public float ControlPointPositions_867;
		public float ControlPointPositions_868;
		public float ControlPointPositions_869;
		public float ControlPointPositions_870;
		public float ControlPointPositions_871;
		public float ControlPointPositions_872;
		public float ControlPointPositions_873;
		public float ControlPointPositions_874;
		public float ControlPointPositions_875;
		public float ControlPointPositions_876;
		public float ControlPointPositions_877;
		public float ControlPointPositions_878;
		public float ControlPointPositions_879;
		public float ControlPointPositions_880;
		public float ControlPointPositions_881;
		public float ControlPointPositions_882;
		public float ControlPointPositions_883;
		public float ControlPointPositions_884;
		public float ControlPointPositions_885;
		public float ControlPointPositions_886;
		public float ControlPointPositions_887;
		public float ControlPointPositions_888;
		public float ControlPointPositions_889;
		public float ControlPointPositions_890;
		public float ControlPointPositions_891;
		public float ControlPointPositions_892;
		public float ControlPointPositions_893;
		public float ControlPointPositions_894;
		public float ControlPointPositions_895;
		public float ControlPointPositions_896;
		public float ControlPointPositions_897;
		public float ControlPointPositions_898;
		public float ControlPointPositions_899;
		public float ControlPointPositions_900;
		public float ControlPointPositions_901;
		public float ControlPointPositions_902;
		public float ControlPointPositions_903;
		public float ControlPointPositions_904;
		public float ControlPointPositions_905;
		public float ControlPointPositions_906;
		public float ControlPointPositions_907;
		public float ControlPointPositions_908;
		public float ControlPointPositions_909;
		public float ControlPointPositions_910;
		public float ControlPointPositions_911;
		public float ControlPointPositions_912;
		public float ControlPointPositions_913;
		public float ControlPointPositions_914;
		public float ControlPointPositions_915;
		public float ControlPointPositions_916;
		public float ControlPointPositions_917;
		public float ControlPointPositions_918;
		public float ControlPointPositions_919;
		public float ControlPointPositions_920;
		public float ControlPointPositions_921;
		public float ControlPointPositions_922;
		public float ControlPointPositions_923;
		public float ControlPointPositions_924;
		public float ControlPointPositions_925;
		public float ControlPointPositions_926;
		public float ControlPointPositions_927;
		public float ControlPointPositions_928;
		public float ControlPointPositions_929;
		public float ControlPointPositions_930;
		public float ControlPointPositions_931;
		public float ControlPointPositions_932;
		public float ControlPointPositions_933;
		public float ControlPointPositions_934;
		public float ControlPointPositions_935;
		public float ControlPointPositions_936;
		public float ControlPointPositions_937;
		public float ControlPointPositions_938;
		public float ControlPointPositions_939;
		public float ControlPointPositions_940;
		public float ControlPointPositions_941;
		public float ControlPointPositions_942;
		public float ControlPointPositions_943;
		public float ControlPointPositions_944;
		public float ControlPointPositions_945;
		public float ControlPointPositions_946;
		public float ControlPointPositions_947;
		public float ControlPointPositions_948;
		public float ControlPointPositions_949;
		public float ControlPointPositions_950;
		public float ControlPointPositions_951;
		public float ControlPointPositions_952;
		public float ControlPointPositions_953;
		public float ControlPointPositions_954;
		public float ControlPointPositions_955;
		public float ControlPointPositions_956;
		public float ControlPointPositions_957;
		public float ControlPointPositions_958;
		public float ControlPointPositions_959;
		public float ControlPointPositions_960;
		public float ControlPointPositions_961;
		public float ControlPointPositions_962;
		public float ControlPointPositions_963;
		public float ControlPointPositions_964;
		public float ControlPointPositions_965;
		public float ControlPointPositions_966;
		public float ControlPointPositions_967;
		public float ControlPointPositions_968;
		public float ControlPointPositions_969;
		public float ControlPointPositions_970;
		public float ControlPointPositions_971;
		public float ControlPointPositions_972;
		public float ControlPointPositions_973;
		public float ControlPointPositions_974;
		public float ControlPointPositions_975;
		public float ControlPointPositions_976;
		public float ControlPointPositions_977;
		public float ControlPointPositions_978;
		public float ControlPointPositions_979;
		public float ControlPointPositions_980;
		public float ControlPointPositions_981;
		public float ControlPointPositions_982;
		public float ControlPointPositions_983;
		public float ControlPointPositions_984;
		public float ControlPointPositions_985;
		public float ControlPointPositions_986;
		public float ControlPointPositions_987;
		public float ControlPointPositions_988;
		public float ControlPointPositions_989;
		public float ControlPointPositions_990;
		public float ControlPointPositions_991;
		public float ControlPointPositions_992;
		public float ControlPointPositions_993;
		public float ControlPointPositions_994;
		public float ControlPointPositions_995;
		public float ControlPointPositions_996;
		public float ControlPointPositions_997;
		public float ControlPointPositions_998;
		public float ControlPointPositions_999;
		public float ControlPointPositions_1000;
		public float ControlPointPositions_1001;
		public float ControlPointPositions_1002;
		public float ControlPointPositions_1003;
		public float ControlPointPositions_1004;
		public float ControlPointPositions_1005;
		public float ControlPointPositions_1006;
		public float ControlPointPositions_1007;
		public float ControlPointPositions_1008;
		public float ControlPointPositions_1009;
		public float ControlPointPositions_1010;
		public float ControlPointPositions_1011;
		public float ControlPointPositions_1012;
		public float ControlPointPositions_1013;
		public float ControlPointPositions_1014;
		public float ControlPointPositions_1015;
		public float ControlPointPositions_1016;
		public float ControlPointPositions_1017;
		public float ControlPointPositions_1018;
		public float ControlPointPositions_1019;
		public float ControlPointPositions_1020;
		public float ControlPointPositions_1021;
		public float ControlPointPositions_1022;
		public float ControlPointPositions_1023;
		public float ControlPointPositions_1024;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiGammaControlCapabilities(Bool32 scaleAndOffsetSupported = default, float maxConvertedValue = default, float minConvertedValue = default, uint numGammaControlPoints = default, float* controlPointPositions = default)
		{
			ScaleAndOffsetSupported = scaleAndOffsetSupported;
			MaxConvertedValue = maxConvertedValue;
			MinConvertedValue = minConvertedValue;
			NumGammaControlPoints = numGammaControlPoints;
			if (controlPointPositions != default)
			{
				ControlPointPositions_0 = controlPointPositions[0];
				ControlPointPositions_1 = controlPointPositions[1];
				ControlPointPositions_2 = controlPointPositions[2];
				ControlPointPositions_3 = controlPointPositions[3];
				ControlPointPositions_4 = controlPointPositions[4];
				ControlPointPositions_5 = controlPointPositions[5];
				ControlPointPositions_6 = controlPointPositions[6];
				ControlPointPositions_7 = controlPointPositions[7];
				ControlPointPositions_8 = controlPointPositions[8];
				ControlPointPositions_9 = controlPointPositions[9];
				ControlPointPositions_10 = controlPointPositions[10];
				ControlPointPositions_11 = controlPointPositions[11];
				ControlPointPositions_12 = controlPointPositions[12];
				ControlPointPositions_13 = controlPointPositions[13];
				ControlPointPositions_14 = controlPointPositions[14];
				ControlPointPositions_15 = controlPointPositions[15];
				ControlPointPositions_16 = controlPointPositions[16];
				ControlPointPositions_17 = controlPointPositions[17];
				ControlPointPositions_18 = controlPointPositions[18];
				ControlPointPositions_19 = controlPointPositions[19];
				ControlPointPositions_20 = controlPointPositions[20];
				ControlPointPositions_21 = controlPointPositions[21];
				ControlPointPositions_22 = controlPointPositions[22];
				ControlPointPositions_23 = controlPointPositions[23];
				ControlPointPositions_24 = controlPointPositions[24];
				ControlPointPositions_25 = controlPointPositions[25];
				ControlPointPositions_26 = controlPointPositions[26];
				ControlPointPositions_27 = controlPointPositions[27];
				ControlPointPositions_28 = controlPointPositions[28];
				ControlPointPositions_29 = controlPointPositions[29];
				ControlPointPositions_30 = controlPointPositions[30];
				ControlPointPositions_31 = controlPointPositions[31];
				ControlPointPositions_32 = controlPointPositions[32];
				ControlPointPositions_33 = controlPointPositions[33];
				ControlPointPositions_34 = controlPointPositions[34];
				ControlPointPositions_35 = controlPointPositions[35];
				ControlPointPositions_36 = controlPointPositions[36];
				ControlPointPositions_37 = controlPointPositions[37];
				ControlPointPositions_38 = controlPointPositions[38];
				ControlPointPositions_39 = controlPointPositions[39];
				ControlPointPositions_40 = controlPointPositions[40];
				ControlPointPositions_41 = controlPointPositions[41];
				ControlPointPositions_42 = controlPointPositions[42];
				ControlPointPositions_43 = controlPointPositions[43];
				ControlPointPositions_44 = controlPointPositions[44];
				ControlPointPositions_45 = controlPointPositions[45];
				ControlPointPositions_46 = controlPointPositions[46];
				ControlPointPositions_47 = controlPointPositions[47];
				ControlPointPositions_48 = controlPointPositions[48];
				ControlPointPositions_49 = controlPointPositions[49];
				ControlPointPositions_50 = controlPointPositions[50];
				ControlPointPositions_51 = controlPointPositions[51];
				ControlPointPositions_52 = controlPointPositions[52];
				ControlPointPositions_53 = controlPointPositions[53];
				ControlPointPositions_54 = controlPointPositions[54];
				ControlPointPositions_55 = controlPointPositions[55];
				ControlPointPositions_56 = controlPointPositions[56];
				ControlPointPositions_57 = controlPointPositions[57];
				ControlPointPositions_58 = controlPointPositions[58];
				ControlPointPositions_59 = controlPointPositions[59];
				ControlPointPositions_60 = controlPointPositions[60];
				ControlPointPositions_61 = controlPointPositions[61];
				ControlPointPositions_62 = controlPointPositions[62];
				ControlPointPositions_63 = controlPointPositions[63];
				ControlPointPositions_64 = controlPointPositions[64];
				ControlPointPositions_65 = controlPointPositions[65];
				ControlPointPositions_66 = controlPointPositions[66];
				ControlPointPositions_67 = controlPointPositions[67];
				ControlPointPositions_68 = controlPointPositions[68];
				ControlPointPositions_69 = controlPointPositions[69];
				ControlPointPositions_70 = controlPointPositions[70];
				ControlPointPositions_71 = controlPointPositions[71];
				ControlPointPositions_72 = controlPointPositions[72];
				ControlPointPositions_73 = controlPointPositions[73];
				ControlPointPositions_74 = controlPointPositions[74];
				ControlPointPositions_75 = controlPointPositions[75];
				ControlPointPositions_76 = controlPointPositions[76];
				ControlPointPositions_77 = controlPointPositions[77];
				ControlPointPositions_78 = controlPointPositions[78];
				ControlPointPositions_79 = controlPointPositions[79];
				ControlPointPositions_80 = controlPointPositions[80];
				ControlPointPositions_81 = controlPointPositions[81];
				ControlPointPositions_82 = controlPointPositions[82];
				ControlPointPositions_83 = controlPointPositions[83];
				ControlPointPositions_84 = controlPointPositions[84];
				ControlPointPositions_85 = controlPointPositions[85];
				ControlPointPositions_86 = controlPointPositions[86];
				ControlPointPositions_87 = controlPointPositions[87];
				ControlPointPositions_88 = controlPointPositions[88];
				ControlPointPositions_89 = controlPointPositions[89];
				ControlPointPositions_90 = controlPointPositions[90];
				ControlPointPositions_91 = controlPointPositions[91];
				ControlPointPositions_92 = controlPointPositions[92];
				ControlPointPositions_93 = controlPointPositions[93];
				ControlPointPositions_94 = controlPointPositions[94];
				ControlPointPositions_95 = controlPointPositions[95];
				ControlPointPositions_96 = controlPointPositions[96];
				ControlPointPositions_97 = controlPointPositions[97];
				ControlPointPositions_98 = controlPointPositions[98];
				ControlPointPositions_99 = controlPointPositions[99];
				ControlPointPositions_100 = controlPointPositions[100];
				ControlPointPositions_101 = controlPointPositions[101];
				ControlPointPositions_102 = controlPointPositions[102];
				ControlPointPositions_103 = controlPointPositions[103];
				ControlPointPositions_104 = controlPointPositions[104];
				ControlPointPositions_105 = controlPointPositions[105];
				ControlPointPositions_106 = controlPointPositions[106];
				ControlPointPositions_107 = controlPointPositions[107];
				ControlPointPositions_108 = controlPointPositions[108];
				ControlPointPositions_109 = controlPointPositions[109];
				ControlPointPositions_110 = controlPointPositions[110];
				ControlPointPositions_111 = controlPointPositions[111];
				ControlPointPositions_112 = controlPointPositions[112];
				ControlPointPositions_113 = controlPointPositions[113];
				ControlPointPositions_114 = controlPointPositions[114];
				ControlPointPositions_115 = controlPointPositions[115];
				ControlPointPositions_116 = controlPointPositions[116];
				ControlPointPositions_117 = controlPointPositions[117];
				ControlPointPositions_118 = controlPointPositions[118];
				ControlPointPositions_119 = controlPointPositions[119];
				ControlPointPositions_120 = controlPointPositions[120];
				ControlPointPositions_121 = controlPointPositions[121];
				ControlPointPositions_122 = controlPointPositions[122];
				ControlPointPositions_123 = controlPointPositions[123];
				ControlPointPositions_124 = controlPointPositions[124];
				ControlPointPositions_125 = controlPointPositions[125];
				ControlPointPositions_126 = controlPointPositions[126];
				ControlPointPositions_127 = controlPointPositions[127];
				ControlPointPositions_128 = controlPointPositions[128];
				ControlPointPositions_129 = controlPointPositions[129];
				ControlPointPositions_130 = controlPointPositions[130];
				ControlPointPositions_131 = controlPointPositions[131];
				ControlPointPositions_132 = controlPointPositions[132];
				ControlPointPositions_133 = controlPointPositions[133];
				ControlPointPositions_134 = controlPointPositions[134];
				ControlPointPositions_135 = controlPointPositions[135];
				ControlPointPositions_136 = controlPointPositions[136];
				ControlPointPositions_137 = controlPointPositions[137];
				ControlPointPositions_138 = controlPointPositions[138];
				ControlPointPositions_139 = controlPointPositions[139];
				ControlPointPositions_140 = controlPointPositions[140];
				ControlPointPositions_141 = controlPointPositions[141];
				ControlPointPositions_142 = controlPointPositions[142];
				ControlPointPositions_143 = controlPointPositions[143];
				ControlPointPositions_144 = controlPointPositions[144];
				ControlPointPositions_145 = controlPointPositions[145];
				ControlPointPositions_146 = controlPointPositions[146];
				ControlPointPositions_147 = controlPointPositions[147];
				ControlPointPositions_148 = controlPointPositions[148];
				ControlPointPositions_149 = controlPointPositions[149];
				ControlPointPositions_150 = controlPointPositions[150];
				ControlPointPositions_151 = controlPointPositions[151];
				ControlPointPositions_152 = controlPointPositions[152];
				ControlPointPositions_153 = controlPointPositions[153];
				ControlPointPositions_154 = controlPointPositions[154];
				ControlPointPositions_155 = controlPointPositions[155];
				ControlPointPositions_156 = controlPointPositions[156];
				ControlPointPositions_157 = controlPointPositions[157];
				ControlPointPositions_158 = controlPointPositions[158];
				ControlPointPositions_159 = controlPointPositions[159];
				ControlPointPositions_160 = controlPointPositions[160];
				ControlPointPositions_161 = controlPointPositions[161];
				ControlPointPositions_162 = controlPointPositions[162];
				ControlPointPositions_163 = controlPointPositions[163];
				ControlPointPositions_164 = controlPointPositions[164];
				ControlPointPositions_165 = controlPointPositions[165];
				ControlPointPositions_166 = controlPointPositions[166];
				ControlPointPositions_167 = controlPointPositions[167];
				ControlPointPositions_168 = controlPointPositions[168];
				ControlPointPositions_169 = controlPointPositions[169];
				ControlPointPositions_170 = controlPointPositions[170];
				ControlPointPositions_171 = controlPointPositions[171];
				ControlPointPositions_172 = controlPointPositions[172];
				ControlPointPositions_173 = controlPointPositions[173];
				ControlPointPositions_174 = controlPointPositions[174];
				ControlPointPositions_175 = controlPointPositions[175];
				ControlPointPositions_176 = controlPointPositions[176];
				ControlPointPositions_177 = controlPointPositions[177];
				ControlPointPositions_178 = controlPointPositions[178];
				ControlPointPositions_179 = controlPointPositions[179];
				ControlPointPositions_180 = controlPointPositions[180];
				ControlPointPositions_181 = controlPointPositions[181];
				ControlPointPositions_182 = controlPointPositions[182];
				ControlPointPositions_183 = controlPointPositions[183];
				ControlPointPositions_184 = controlPointPositions[184];
				ControlPointPositions_185 = controlPointPositions[185];
				ControlPointPositions_186 = controlPointPositions[186];
				ControlPointPositions_187 = controlPointPositions[187];
				ControlPointPositions_188 = controlPointPositions[188];
				ControlPointPositions_189 = controlPointPositions[189];
				ControlPointPositions_190 = controlPointPositions[190];
				ControlPointPositions_191 = controlPointPositions[191];
				ControlPointPositions_192 = controlPointPositions[192];
				ControlPointPositions_193 = controlPointPositions[193];
				ControlPointPositions_194 = controlPointPositions[194];
				ControlPointPositions_195 = controlPointPositions[195];
				ControlPointPositions_196 = controlPointPositions[196];
				ControlPointPositions_197 = controlPointPositions[197];
				ControlPointPositions_198 = controlPointPositions[198];
				ControlPointPositions_199 = controlPointPositions[199];
				ControlPointPositions_200 = controlPointPositions[200];
				ControlPointPositions_201 = controlPointPositions[201];
				ControlPointPositions_202 = controlPointPositions[202];
				ControlPointPositions_203 = controlPointPositions[203];
				ControlPointPositions_204 = controlPointPositions[204];
				ControlPointPositions_205 = controlPointPositions[205];
				ControlPointPositions_206 = controlPointPositions[206];
				ControlPointPositions_207 = controlPointPositions[207];
				ControlPointPositions_208 = controlPointPositions[208];
				ControlPointPositions_209 = controlPointPositions[209];
				ControlPointPositions_210 = controlPointPositions[210];
				ControlPointPositions_211 = controlPointPositions[211];
				ControlPointPositions_212 = controlPointPositions[212];
				ControlPointPositions_213 = controlPointPositions[213];
				ControlPointPositions_214 = controlPointPositions[214];
				ControlPointPositions_215 = controlPointPositions[215];
				ControlPointPositions_216 = controlPointPositions[216];
				ControlPointPositions_217 = controlPointPositions[217];
				ControlPointPositions_218 = controlPointPositions[218];
				ControlPointPositions_219 = controlPointPositions[219];
				ControlPointPositions_220 = controlPointPositions[220];
				ControlPointPositions_221 = controlPointPositions[221];
				ControlPointPositions_222 = controlPointPositions[222];
				ControlPointPositions_223 = controlPointPositions[223];
				ControlPointPositions_224 = controlPointPositions[224];
				ControlPointPositions_225 = controlPointPositions[225];
				ControlPointPositions_226 = controlPointPositions[226];
				ControlPointPositions_227 = controlPointPositions[227];
				ControlPointPositions_228 = controlPointPositions[228];
				ControlPointPositions_229 = controlPointPositions[229];
				ControlPointPositions_230 = controlPointPositions[230];
				ControlPointPositions_231 = controlPointPositions[231];
				ControlPointPositions_232 = controlPointPositions[232];
				ControlPointPositions_233 = controlPointPositions[233];
				ControlPointPositions_234 = controlPointPositions[234];
				ControlPointPositions_235 = controlPointPositions[235];
				ControlPointPositions_236 = controlPointPositions[236];
				ControlPointPositions_237 = controlPointPositions[237];
				ControlPointPositions_238 = controlPointPositions[238];
				ControlPointPositions_239 = controlPointPositions[239];
				ControlPointPositions_240 = controlPointPositions[240];
				ControlPointPositions_241 = controlPointPositions[241];
				ControlPointPositions_242 = controlPointPositions[242];
				ControlPointPositions_243 = controlPointPositions[243];
				ControlPointPositions_244 = controlPointPositions[244];
				ControlPointPositions_245 = controlPointPositions[245];
				ControlPointPositions_246 = controlPointPositions[246];
				ControlPointPositions_247 = controlPointPositions[247];
				ControlPointPositions_248 = controlPointPositions[248];
				ControlPointPositions_249 = controlPointPositions[249];
				ControlPointPositions_250 = controlPointPositions[250];
				ControlPointPositions_251 = controlPointPositions[251];
				ControlPointPositions_252 = controlPointPositions[252];
				ControlPointPositions_253 = controlPointPositions[253];
				ControlPointPositions_254 = controlPointPositions[254];
				ControlPointPositions_255 = controlPointPositions[255];
				ControlPointPositions_256 = controlPointPositions[256];
				ControlPointPositions_257 = controlPointPositions[257];
				ControlPointPositions_258 = controlPointPositions[258];
				ControlPointPositions_259 = controlPointPositions[259];
				ControlPointPositions_260 = controlPointPositions[260];
				ControlPointPositions_261 = controlPointPositions[261];
				ControlPointPositions_262 = controlPointPositions[262];
				ControlPointPositions_263 = controlPointPositions[263];
				ControlPointPositions_264 = controlPointPositions[264];
				ControlPointPositions_265 = controlPointPositions[265];
				ControlPointPositions_266 = controlPointPositions[266];
				ControlPointPositions_267 = controlPointPositions[267];
				ControlPointPositions_268 = controlPointPositions[268];
				ControlPointPositions_269 = controlPointPositions[269];
				ControlPointPositions_270 = controlPointPositions[270];
				ControlPointPositions_271 = controlPointPositions[271];
				ControlPointPositions_272 = controlPointPositions[272];
				ControlPointPositions_273 = controlPointPositions[273];
				ControlPointPositions_274 = controlPointPositions[274];
				ControlPointPositions_275 = controlPointPositions[275];
				ControlPointPositions_276 = controlPointPositions[276];
				ControlPointPositions_277 = controlPointPositions[277];
				ControlPointPositions_278 = controlPointPositions[278];
				ControlPointPositions_279 = controlPointPositions[279];
				ControlPointPositions_280 = controlPointPositions[280];
				ControlPointPositions_281 = controlPointPositions[281];
				ControlPointPositions_282 = controlPointPositions[282];
				ControlPointPositions_283 = controlPointPositions[283];
				ControlPointPositions_284 = controlPointPositions[284];
				ControlPointPositions_285 = controlPointPositions[285];
				ControlPointPositions_286 = controlPointPositions[286];
				ControlPointPositions_287 = controlPointPositions[287];
				ControlPointPositions_288 = controlPointPositions[288];
				ControlPointPositions_289 = controlPointPositions[289];
				ControlPointPositions_290 = controlPointPositions[290];
				ControlPointPositions_291 = controlPointPositions[291];
				ControlPointPositions_292 = controlPointPositions[292];
				ControlPointPositions_293 = controlPointPositions[293];
				ControlPointPositions_294 = controlPointPositions[294];
				ControlPointPositions_295 = controlPointPositions[295];
				ControlPointPositions_296 = controlPointPositions[296];
				ControlPointPositions_297 = controlPointPositions[297];
				ControlPointPositions_298 = controlPointPositions[298];
				ControlPointPositions_299 = controlPointPositions[299];
				ControlPointPositions_300 = controlPointPositions[300];
				ControlPointPositions_301 = controlPointPositions[301];
				ControlPointPositions_302 = controlPointPositions[302];
				ControlPointPositions_303 = controlPointPositions[303];
				ControlPointPositions_304 = controlPointPositions[304];
				ControlPointPositions_305 = controlPointPositions[305];
				ControlPointPositions_306 = controlPointPositions[306];
				ControlPointPositions_307 = controlPointPositions[307];
				ControlPointPositions_308 = controlPointPositions[308];
				ControlPointPositions_309 = controlPointPositions[309];
				ControlPointPositions_310 = controlPointPositions[310];
				ControlPointPositions_311 = controlPointPositions[311];
				ControlPointPositions_312 = controlPointPositions[312];
				ControlPointPositions_313 = controlPointPositions[313];
				ControlPointPositions_314 = controlPointPositions[314];
				ControlPointPositions_315 = controlPointPositions[315];
				ControlPointPositions_316 = controlPointPositions[316];
				ControlPointPositions_317 = controlPointPositions[317];
				ControlPointPositions_318 = controlPointPositions[318];
				ControlPointPositions_319 = controlPointPositions[319];
				ControlPointPositions_320 = controlPointPositions[320];
				ControlPointPositions_321 = controlPointPositions[321];
				ControlPointPositions_322 = controlPointPositions[322];
				ControlPointPositions_323 = controlPointPositions[323];
				ControlPointPositions_324 = controlPointPositions[324];
				ControlPointPositions_325 = controlPointPositions[325];
				ControlPointPositions_326 = controlPointPositions[326];
				ControlPointPositions_327 = controlPointPositions[327];
				ControlPointPositions_328 = controlPointPositions[328];
				ControlPointPositions_329 = controlPointPositions[329];
				ControlPointPositions_330 = controlPointPositions[330];
				ControlPointPositions_331 = controlPointPositions[331];
				ControlPointPositions_332 = controlPointPositions[332];
				ControlPointPositions_333 = controlPointPositions[333];
				ControlPointPositions_334 = controlPointPositions[334];
				ControlPointPositions_335 = controlPointPositions[335];
				ControlPointPositions_336 = controlPointPositions[336];
				ControlPointPositions_337 = controlPointPositions[337];
				ControlPointPositions_338 = controlPointPositions[338];
				ControlPointPositions_339 = controlPointPositions[339];
				ControlPointPositions_340 = controlPointPositions[340];
				ControlPointPositions_341 = controlPointPositions[341];
				ControlPointPositions_342 = controlPointPositions[342];
				ControlPointPositions_343 = controlPointPositions[343];
				ControlPointPositions_344 = controlPointPositions[344];
				ControlPointPositions_345 = controlPointPositions[345];
				ControlPointPositions_346 = controlPointPositions[346];
				ControlPointPositions_347 = controlPointPositions[347];
				ControlPointPositions_348 = controlPointPositions[348];
				ControlPointPositions_349 = controlPointPositions[349];
				ControlPointPositions_350 = controlPointPositions[350];
				ControlPointPositions_351 = controlPointPositions[351];
				ControlPointPositions_352 = controlPointPositions[352];
				ControlPointPositions_353 = controlPointPositions[353];
				ControlPointPositions_354 = controlPointPositions[354];
				ControlPointPositions_355 = controlPointPositions[355];
				ControlPointPositions_356 = controlPointPositions[356];
				ControlPointPositions_357 = controlPointPositions[357];
				ControlPointPositions_358 = controlPointPositions[358];
				ControlPointPositions_359 = controlPointPositions[359];
				ControlPointPositions_360 = controlPointPositions[360];
				ControlPointPositions_361 = controlPointPositions[361];
				ControlPointPositions_362 = controlPointPositions[362];
				ControlPointPositions_363 = controlPointPositions[363];
				ControlPointPositions_364 = controlPointPositions[364];
				ControlPointPositions_365 = controlPointPositions[365];
				ControlPointPositions_366 = controlPointPositions[366];
				ControlPointPositions_367 = controlPointPositions[367];
				ControlPointPositions_368 = controlPointPositions[368];
				ControlPointPositions_369 = controlPointPositions[369];
				ControlPointPositions_370 = controlPointPositions[370];
				ControlPointPositions_371 = controlPointPositions[371];
				ControlPointPositions_372 = controlPointPositions[372];
				ControlPointPositions_373 = controlPointPositions[373];
				ControlPointPositions_374 = controlPointPositions[374];
				ControlPointPositions_375 = controlPointPositions[375];
				ControlPointPositions_376 = controlPointPositions[376];
				ControlPointPositions_377 = controlPointPositions[377];
				ControlPointPositions_378 = controlPointPositions[378];
				ControlPointPositions_379 = controlPointPositions[379];
				ControlPointPositions_380 = controlPointPositions[380];
				ControlPointPositions_381 = controlPointPositions[381];
				ControlPointPositions_382 = controlPointPositions[382];
				ControlPointPositions_383 = controlPointPositions[383];
				ControlPointPositions_384 = controlPointPositions[384];
				ControlPointPositions_385 = controlPointPositions[385];
				ControlPointPositions_386 = controlPointPositions[386];
				ControlPointPositions_387 = controlPointPositions[387];
				ControlPointPositions_388 = controlPointPositions[388];
				ControlPointPositions_389 = controlPointPositions[389];
				ControlPointPositions_390 = controlPointPositions[390];
				ControlPointPositions_391 = controlPointPositions[391];
				ControlPointPositions_392 = controlPointPositions[392];
				ControlPointPositions_393 = controlPointPositions[393];
				ControlPointPositions_394 = controlPointPositions[394];
				ControlPointPositions_395 = controlPointPositions[395];
				ControlPointPositions_396 = controlPointPositions[396];
				ControlPointPositions_397 = controlPointPositions[397];
				ControlPointPositions_398 = controlPointPositions[398];
				ControlPointPositions_399 = controlPointPositions[399];
				ControlPointPositions_400 = controlPointPositions[400];
				ControlPointPositions_401 = controlPointPositions[401];
				ControlPointPositions_402 = controlPointPositions[402];
				ControlPointPositions_403 = controlPointPositions[403];
				ControlPointPositions_404 = controlPointPositions[404];
				ControlPointPositions_405 = controlPointPositions[405];
				ControlPointPositions_406 = controlPointPositions[406];
				ControlPointPositions_407 = controlPointPositions[407];
				ControlPointPositions_408 = controlPointPositions[408];
				ControlPointPositions_409 = controlPointPositions[409];
				ControlPointPositions_410 = controlPointPositions[410];
				ControlPointPositions_411 = controlPointPositions[411];
				ControlPointPositions_412 = controlPointPositions[412];
				ControlPointPositions_413 = controlPointPositions[413];
				ControlPointPositions_414 = controlPointPositions[414];
				ControlPointPositions_415 = controlPointPositions[415];
				ControlPointPositions_416 = controlPointPositions[416];
				ControlPointPositions_417 = controlPointPositions[417];
				ControlPointPositions_418 = controlPointPositions[418];
				ControlPointPositions_419 = controlPointPositions[419];
				ControlPointPositions_420 = controlPointPositions[420];
				ControlPointPositions_421 = controlPointPositions[421];
				ControlPointPositions_422 = controlPointPositions[422];
				ControlPointPositions_423 = controlPointPositions[423];
				ControlPointPositions_424 = controlPointPositions[424];
				ControlPointPositions_425 = controlPointPositions[425];
				ControlPointPositions_426 = controlPointPositions[426];
				ControlPointPositions_427 = controlPointPositions[427];
				ControlPointPositions_428 = controlPointPositions[428];
				ControlPointPositions_429 = controlPointPositions[429];
				ControlPointPositions_430 = controlPointPositions[430];
				ControlPointPositions_431 = controlPointPositions[431];
				ControlPointPositions_432 = controlPointPositions[432];
				ControlPointPositions_433 = controlPointPositions[433];
				ControlPointPositions_434 = controlPointPositions[434];
				ControlPointPositions_435 = controlPointPositions[435];
				ControlPointPositions_436 = controlPointPositions[436];
				ControlPointPositions_437 = controlPointPositions[437];
				ControlPointPositions_438 = controlPointPositions[438];
				ControlPointPositions_439 = controlPointPositions[439];
				ControlPointPositions_440 = controlPointPositions[440];
				ControlPointPositions_441 = controlPointPositions[441];
				ControlPointPositions_442 = controlPointPositions[442];
				ControlPointPositions_443 = controlPointPositions[443];
				ControlPointPositions_444 = controlPointPositions[444];
				ControlPointPositions_445 = controlPointPositions[445];
				ControlPointPositions_446 = controlPointPositions[446];
				ControlPointPositions_447 = controlPointPositions[447];
				ControlPointPositions_448 = controlPointPositions[448];
				ControlPointPositions_449 = controlPointPositions[449];
				ControlPointPositions_450 = controlPointPositions[450];
				ControlPointPositions_451 = controlPointPositions[451];
				ControlPointPositions_452 = controlPointPositions[452];
				ControlPointPositions_453 = controlPointPositions[453];
				ControlPointPositions_454 = controlPointPositions[454];
				ControlPointPositions_455 = controlPointPositions[455];
				ControlPointPositions_456 = controlPointPositions[456];
				ControlPointPositions_457 = controlPointPositions[457];
				ControlPointPositions_458 = controlPointPositions[458];
				ControlPointPositions_459 = controlPointPositions[459];
				ControlPointPositions_460 = controlPointPositions[460];
				ControlPointPositions_461 = controlPointPositions[461];
				ControlPointPositions_462 = controlPointPositions[462];
				ControlPointPositions_463 = controlPointPositions[463];
				ControlPointPositions_464 = controlPointPositions[464];
				ControlPointPositions_465 = controlPointPositions[465];
				ControlPointPositions_466 = controlPointPositions[466];
				ControlPointPositions_467 = controlPointPositions[467];
				ControlPointPositions_468 = controlPointPositions[468];
				ControlPointPositions_469 = controlPointPositions[469];
				ControlPointPositions_470 = controlPointPositions[470];
				ControlPointPositions_471 = controlPointPositions[471];
				ControlPointPositions_472 = controlPointPositions[472];
				ControlPointPositions_473 = controlPointPositions[473];
				ControlPointPositions_474 = controlPointPositions[474];
				ControlPointPositions_475 = controlPointPositions[475];
				ControlPointPositions_476 = controlPointPositions[476];
				ControlPointPositions_477 = controlPointPositions[477];
				ControlPointPositions_478 = controlPointPositions[478];
				ControlPointPositions_479 = controlPointPositions[479];
				ControlPointPositions_480 = controlPointPositions[480];
				ControlPointPositions_481 = controlPointPositions[481];
				ControlPointPositions_482 = controlPointPositions[482];
				ControlPointPositions_483 = controlPointPositions[483];
				ControlPointPositions_484 = controlPointPositions[484];
				ControlPointPositions_485 = controlPointPositions[485];
				ControlPointPositions_486 = controlPointPositions[486];
				ControlPointPositions_487 = controlPointPositions[487];
				ControlPointPositions_488 = controlPointPositions[488];
				ControlPointPositions_489 = controlPointPositions[489];
				ControlPointPositions_490 = controlPointPositions[490];
				ControlPointPositions_491 = controlPointPositions[491];
				ControlPointPositions_492 = controlPointPositions[492];
				ControlPointPositions_493 = controlPointPositions[493];
				ControlPointPositions_494 = controlPointPositions[494];
				ControlPointPositions_495 = controlPointPositions[495];
				ControlPointPositions_496 = controlPointPositions[496];
				ControlPointPositions_497 = controlPointPositions[497];
				ControlPointPositions_498 = controlPointPositions[498];
				ControlPointPositions_499 = controlPointPositions[499];
				ControlPointPositions_500 = controlPointPositions[500];
				ControlPointPositions_501 = controlPointPositions[501];
				ControlPointPositions_502 = controlPointPositions[502];
				ControlPointPositions_503 = controlPointPositions[503];
				ControlPointPositions_504 = controlPointPositions[504];
				ControlPointPositions_505 = controlPointPositions[505];
				ControlPointPositions_506 = controlPointPositions[506];
				ControlPointPositions_507 = controlPointPositions[507];
				ControlPointPositions_508 = controlPointPositions[508];
				ControlPointPositions_509 = controlPointPositions[509];
				ControlPointPositions_510 = controlPointPositions[510];
				ControlPointPositions_511 = controlPointPositions[511];
				ControlPointPositions_512 = controlPointPositions[512];
				ControlPointPositions_513 = controlPointPositions[513];
				ControlPointPositions_514 = controlPointPositions[514];
				ControlPointPositions_515 = controlPointPositions[515];
				ControlPointPositions_516 = controlPointPositions[516];
				ControlPointPositions_517 = controlPointPositions[517];
				ControlPointPositions_518 = controlPointPositions[518];
				ControlPointPositions_519 = controlPointPositions[519];
				ControlPointPositions_520 = controlPointPositions[520];
				ControlPointPositions_521 = controlPointPositions[521];
				ControlPointPositions_522 = controlPointPositions[522];
				ControlPointPositions_523 = controlPointPositions[523];
				ControlPointPositions_524 = controlPointPositions[524];
				ControlPointPositions_525 = controlPointPositions[525];
				ControlPointPositions_526 = controlPointPositions[526];
				ControlPointPositions_527 = controlPointPositions[527];
				ControlPointPositions_528 = controlPointPositions[528];
				ControlPointPositions_529 = controlPointPositions[529];
				ControlPointPositions_530 = controlPointPositions[530];
				ControlPointPositions_531 = controlPointPositions[531];
				ControlPointPositions_532 = controlPointPositions[532];
				ControlPointPositions_533 = controlPointPositions[533];
				ControlPointPositions_534 = controlPointPositions[534];
				ControlPointPositions_535 = controlPointPositions[535];
				ControlPointPositions_536 = controlPointPositions[536];
				ControlPointPositions_537 = controlPointPositions[537];
				ControlPointPositions_538 = controlPointPositions[538];
				ControlPointPositions_539 = controlPointPositions[539];
				ControlPointPositions_540 = controlPointPositions[540];
				ControlPointPositions_541 = controlPointPositions[541];
				ControlPointPositions_542 = controlPointPositions[542];
				ControlPointPositions_543 = controlPointPositions[543];
				ControlPointPositions_544 = controlPointPositions[544];
				ControlPointPositions_545 = controlPointPositions[545];
				ControlPointPositions_546 = controlPointPositions[546];
				ControlPointPositions_547 = controlPointPositions[547];
				ControlPointPositions_548 = controlPointPositions[548];
				ControlPointPositions_549 = controlPointPositions[549];
				ControlPointPositions_550 = controlPointPositions[550];
				ControlPointPositions_551 = controlPointPositions[551];
				ControlPointPositions_552 = controlPointPositions[552];
				ControlPointPositions_553 = controlPointPositions[553];
				ControlPointPositions_554 = controlPointPositions[554];
				ControlPointPositions_555 = controlPointPositions[555];
				ControlPointPositions_556 = controlPointPositions[556];
				ControlPointPositions_557 = controlPointPositions[557];
				ControlPointPositions_558 = controlPointPositions[558];
				ControlPointPositions_559 = controlPointPositions[559];
				ControlPointPositions_560 = controlPointPositions[560];
				ControlPointPositions_561 = controlPointPositions[561];
				ControlPointPositions_562 = controlPointPositions[562];
				ControlPointPositions_563 = controlPointPositions[563];
				ControlPointPositions_564 = controlPointPositions[564];
				ControlPointPositions_565 = controlPointPositions[565];
				ControlPointPositions_566 = controlPointPositions[566];
				ControlPointPositions_567 = controlPointPositions[567];
				ControlPointPositions_568 = controlPointPositions[568];
				ControlPointPositions_569 = controlPointPositions[569];
				ControlPointPositions_570 = controlPointPositions[570];
				ControlPointPositions_571 = controlPointPositions[571];
				ControlPointPositions_572 = controlPointPositions[572];
				ControlPointPositions_573 = controlPointPositions[573];
				ControlPointPositions_574 = controlPointPositions[574];
				ControlPointPositions_575 = controlPointPositions[575];
				ControlPointPositions_576 = controlPointPositions[576];
				ControlPointPositions_577 = controlPointPositions[577];
				ControlPointPositions_578 = controlPointPositions[578];
				ControlPointPositions_579 = controlPointPositions[579];
				ControlPointPositions_580 = controlPointPositions[580];
				ControlPointPositions_581 = controlPointPositions[581];
				ControlPointPositions_582 = controlPointPositions[582];
				ControlPointPositions_583 = controlPointPositions[583];
				ControlPointPositions_584 = controlPointPositions[584];
				ControlPointPositions_585 = controlPointPositions[585];
				ControlPointPositions_586 = controlPointPositions[586];
				ControlPointPositions_587 = controlPointPositions[587];
				ControlPointPositions_588 = controlPointPositions[588];
				ControlPointPositions_589 = controlPointPositions[589];
				ControlPointPositions_590 = controlPointPositions[590];
				ControlPointPositions_591 = controlPointPositions[591];
				ControlPointPositions_592 = controlPointPositions[592];
				ControlPointPositions_593 = controlPointPositions[593];
				ControlPointPositions_594 = controlPointPositions[594];
				ControlPointPositions_595 = controlPointPositions[595];
				ControlPointPositions_596 = controlPointPositions[596];
				ControlPointPositions_597 = controlPointPositions[597];
				ControlPointPositions_598 = controlPointPositions[598];
				ControlPointPositions_599 = controlPointPositions[599];
				ControlPointPositions_600 = controlPointPositions[600];
				ControlPointPositions_601 = controlPointPositions[601];
				ControlPointPositions_602 = controlPointPositions[602];
				ControlPointPositions_603 = controlPointPositions[603];
				ControlPointPositions_604 = controlPointPositions[604];
				ControlPointPositions_605 = controlPointPositions[605];
				ControlPointPositions_606 = controlPointPositions[606];
				ControlPointPositions_607 = controlPointPositions[607];
				ControlPointPositions_608 = controlPointPositions[608];
				ControlPointPositions_609 = controlPointPositions[609];
				ControlPointPositions_610 = controlPointPositions[610];
				ControlPointPositions_611 = controlPointPositions[611];
				ControlPointPositions_612 = controlPointPositions[612];
				ControlPointPositions_613 = controlPointPositions[613];
				ControlPointPositions_614 = controlPointPositions[614];
				ControlPointPositions_615 = controlPointPositions[615];
				ControlPointPositions_616 = controlPointPositions[616];
				ControlPointPositions_617 = controlPointPositions[617];
				ControlPointPositions_618 = controlPointPositions[618];
				ControlPointPositions_619 = controlPointPositions[619];
				ControlPointPositions_620 = controlPointPositions[620];
				ControlPointPositions_621 = controlPointPositions[621];
				ControlPointPositions_622 = controlPointPositions[622];
				ControlPointPositions_623 = controlPointPositions[623];
				ControlPointPositions_624 = controlPointPositions[624];
				ControlPointPositions_625 = controlPointPositions[625];
				ControlPointPositions_626 = controlPointPositions[626];
				ControlPointPositions_627 = controlPointPositions[627];
				ControlPointPositions_628 = controlPointPositions[628];
				ControlPointPositions_629 = controlPointPositions[629];
				ControlPointPositions_630 = controlPointPositions[630];
				ControlPointPositions_631 = controlPointPositions[631];
				ControlPointPositions_632 = controlPointPositions[632];
				ControlPointPositions_633 = controlPointPositions[633];
				ControlPointPositions_634 = controlPointPositions[634];
				ControlPointPositions_635 = controlPointPositions[635];
				ControlPointPositions_636 = controlPointPositions[636];
				ControlPointPositions_637 = controlPointPositions[637];
				ControlPointPositions_638 = controlPointPositions[638];
				ControlPointPositions_639 = controlPointPositions[639];
				ControlPointPositions_640 = controlPointPositions[640];
				ControlPointPositions_641 = controlPointPositions[641];
				ControlPointPositions_642 = controlPointPositions[642];
				ControlPointPositions_643 = controlPointPositions[643];
				ControlPointPositions_644 = controlPointPositions[644];
				ControlPointPositions_645 = controlPointPositions[645];
				ControlPointPositions_646 = controlPointPositions[646];
				ControlPointPositions_647 = controlPointPositions[647];
				ControlPointPositions_648 = controlPointPositions[648];
				ControlPointPositions_649 = controlPointPositions[649];
				ControlPointPositions_650 = controlPointPositions[650];
				ControlPointPositions_651 = controlPointPositions[651];
				ControlPointPositions_652 = controlPointPositions[652];
				ControlPointPositions_653 = controlPointPositions[653];
				ControlPointPositions_654 = controlPointPositions[654];
				ControlPointPositions_655 = controlPointPositions[655];
				ControlPointPositions_656 = controlPointPositions[656];
				ControlPointPositions_657 = controlPointPositions[657];
				ControlPointPositions_658 = controlPointPositions[658];
				ControlPointPositions_659 = controlPointPositions[659];
				ControlPointPositions_660 = controlPointPositions[660];
				ControlPointPositions_661 = controlPointPositions[661];
				ControlPointPositions_662 = controlPointPositions[662];
				ControlPointPositions_663 = controlPointPositions[663];
				ControlPointPositions_664 = controlPointPositions[664];
				ControlPointPositions_665 = controlPointPositions[665];
				ControlPointPositions_666 = controlPointPositions[666];
				ControlPointPositions_667 = controlPointPositions[667];
				ControlPointPositions_668 = controlPointPositions[668];
				ControlPointPositions_669 = controlPointPositions[669];
				ControlPointPositions_670 = controlPointPositions[670];
				ControlPointPositions_671 = controlPointPositions[671];
				ControlPointPositions_672 = controlPointPositions[672];
				ControlPointPositions_673 = controlPointPositions[673];
				ControlPointPositions_674 = controlPointPositions[674];
				ControlPointPositions_675 = controlPointPositions[675];
				ControlPointPositions_676 = controlPointPositions[676];
				ControlPointPositions_677 = controlPointPositions[677];
				ControlPointPositions_678 = controlPointPositions[678];
				ControlPointPositions_679 = controlPointPositions[679];
				ControlPointPositions_680 = controlPointPositions[680];
				ControlPointPositions_681 = controlPointPositions[681];
				ControlPointPositions_682 = controlPointPositions[682];
				ControlPointPositions_683 = controlPointPositions[683];
				ControlPointPositions_684 = controlPointPositions[684];
				ControlPointPositions_685 = controlPointPositions[685];
				ControlPointPositions_686 = controlPointPositions[686];
				ControlPointPositions_687 = controlPointPositions[687];
				ControlPointPositions_688 = controlPointPositions[688];
				ControlPointPositions_689 = controlPointPositions[689];
				ControlPointPositions_690 = controlPointPositions[690];
				ControlPointPositions_691 = controlPointPositions[691];
				ControlPointPositions_692 = controlPointPositions[692];
				ControlPointPositions_693 = controlPointPositions[693];
				ControlPointPositions_694 = controlPointPositions[694];
				ControlPointPositions_695 = controlPointPositions[695];
				ControlPointPositions_696 = controlPointPositions[696];
				ControlPointPositions_697 = controlPointPositions[697];
				ControlPointPositions_698 = controlPointPositions[698];
				ControlPointPositions_699 = controlPointPositions[699];
				ControlPointPositions_700 = controlPointPositions[700];
				ControlPointPositions_701 = controlPointPositions[701];
				ControlPointPositions_702 = controlPointPositions[702];
				ControlPointPositions_703 = controlPointPositions[703];
				ControlPointPositions_704 = controlPointPositions[704];
				ControlPointPositions_705 = controlPointPositions[705];
				ControlPointPositions_706 = controlPointPositions[706];
				ControlPointPositions_707 = controlPointPositions[707];
				ControlPointPositions_708 = controlPointPositions[708];
				ControlPointPositions_709 = controlPointPositions[709];
				ControlPointPositions_710 = controlPointPositions[710];
				ControlPointPositions_711 = controlPointPositions[711];
				ControlPointPositions_712 = controlPointPositions[712];
				ControlPointPositions_713 = controlPointPositions[713];
				ControlPointPositions_714 = controlPointPositions[714];
				ControlPointPositions_715 = controlPointPositions[715];
				ControlPointPositions_716 = controlPointPositions[716];
				ControlPointPositions_717 = controlPointPositions[717];
				ControlPointPositions_718 = controlPointPositions[718];
				ControlPointPositions_719 = controlPointPositions[719];
				ControlPointPositions_720 = controlPointPositions[720];
				ControlPointPositions_721 = controlPointPositions[721];
				ControlPointPositions_722 = controlPointPositions[722];
				ControlPointPositions_723 = controlPointPositions[723];
				ControlPointPositions_724 = controlPointPositions[724];
				ControlPointPositions_725 = controlPointPositions[725];
				ControlPointPositions_726 = controlPointPositions[726];
				ControlPointPositions_727 = controlPointPositions[727];
				ControlPointPositions_728 = controlPointPositions[728];
				ControlPointPositions_729 = controlPointPositions[729];
				ControlPointPositions_730 = controlPointPositions[730];
				ControlPointPositions_731 = controlPointPositions[731];
				ControlPointPositions_732 = controlPointPositions[732];
				ControlPointPositions_733 = controlPointPositions[733];
				ControlPointPositions_734 = controlPointPositions[734];
				ControlPointPositions_735 = controlPointPositions[735];
				ControlPointPositions_736 = controlPointPositions[736];
				ControlPointPositions_737 = controlPointPositions[737];
				ControlPointPositions_738 = controlPointPositions[738];
				ControlPointPositions_739 = controlPointPositions[739];
				ControlPointPositions_740 = controlPointPositions[740];
				ControlPointPositions_741 = controlPointPositions[741];
				ControlPointPositions_742 = controlPointPositions[742];
				ControlPointPositions_743 = controlPointPositions[743];
				ControlPointPositions_744 = controlPointPositions[744];
				ControlPointPositions_745 = controlPointPositions[745];
				ControlPointPositions_746 = controlPointPositions[746];
				ControlPointPositions_747 = controlPointPositions[747];
				ControlPointPositions_748 = controlPointPositions[748];
				ControlPointPositions_749 = controlPointPositions[749];
				ControlPointPositions_750 = controlPointPositions[750];
				ControlPointPositions_751 = controlPointPositions[751];
				ControlPointPositions_752 = controlPointPositions[752];
				ControlPointPositions_753 = controlPointPositions[753];
				ControlPointPositions_754 = controlPointPositions[754];
				ControlPointPositions_755 = controlPointPositions[755];
				ControlPointPositions_756 = controlPointPositions[756];
				ControlPointPositions_757 = controlPointPositions[757];
				ControlPointPositions_758 = controlPointPositions[758];
				ControlPointPositions_759 = controlPointPositions[759];
				ControlPointPositions_760 = controlPointPositions[760];
				ControlPointPositions_761 = controlPointPositions[761];
				ControlPointPositions_762 = controlPointPositions[762];
				ControlPointPositions_763 = controlPointPositions[763];
				ControlPointPositions_764 = controlPointPositions[764];
				ControlPointPositions_765 = controlPointPositions[765];
				ControlPointPositions_766 = controlPointPositions[766];
				ControlPointPositions_767 = controlPointPositions[767];
				ControlPointPositions_768 = controlPointPositions[768];
				ControlPointPositions_769 = controlPointPositions[769];
				ControlPointPositions_770 = controlPointPositions[770];
				ControlPointPositions_771 = controlPointPositions[771];
				ControlPointPositions_772 = controlPointPositions[772];
				ControlPointPositions_773 = controlPointPositions[773];
				ControlPointPositions_774 = controlPointPositions[774];
				ControlPointPositions_775 = controlPointPositions[775];
				ControlPointPositions_776 = controlPointPositions[776];
				ControlPointPositions_777 = controlPointPositions[777];
				ControlPointPositions_778 = controlPointPositions[778];
				ControlPointPositions_779 = controlPointPositions[779];
				ControlPointPositions_780 = controlPointPositions[780];
				ControlPointPositions_781 = controlPointPositions[781];
				ControlPointPositions_782 = controlPointPositions[782];
				ControlPointPositions_783 = controlPointPositions[783];
				ControlPointPositions_784 = controlPointPositions[784];
				ControlPointPositions_785 = controlPointPositions[785];
				ControlPointPositions_786 = controlPointPositions[786];
				ControlPointPositions_787 = controlPointPositions[787];
				ControlPointPositions_788 = controlPointPositions[788];
				ControlPointPositions_789 = controlPointPositions[789];
				ControlPointPositions_790 = controlPointPositions[790];
				ControlPointPositions_791 = controlPointPositions[791];
				ControlPointPositions_792 = controlPointPositions[792];
				ControlPointPositions_793 = controlPointPositions[793];
				ControlPointPositions_794 = controlPointPositions[794];
				ControlPointPositions_795 = controlPointPositions[795];
				ControlPointPositions_796 = controlPointPositions[796];
				ControlPointPositions_797 = controlPointPositions[797];
				ControlPointPositions_798 = controlPointPositions[798];
				ControlPointPositions_799 = controlPointPositions[799];
				ControlPointPositions_800 = controlPointPositions[800];
				ControlPointPositions_801 = controlPointPositions[801];
				ControlPointPositions_802 = controlPointPositions[802];
				ControlPointPositions_803 = controlPointPositions[803];
				ControlPointPositions_804 = controlPointPositions[804];
				ControlPointPositions_805 = controlPointPositions[805];
				ControlPointPositions_806 = controlPointPositions[806];
				ControlPointPositions_807 = controlPointPositions[807];
				ControlPointPositions_808 = controlPointPositions[808];
				ControlPointPositions_809 = controlPointPositions[809];
				ControlPointPositions_810 = controlPointPositions[810];
				ControlPointPositions_811 = controlPointPositions[811];
				ControlPointPositions_812 = controlPointPositions[812];
				ControlPointPositions_813 = controlPointPositions[813];
				ControlPointPositions_814 = controlPointPositions[814];
				ControlPointPositions_815 = controlPointPositions[815];
				ControlPointPositions_816 = controlPointPositions[816];
				ControlPointPositions_817 = controlPointPositions[817];
				ControlPointPositions_818 = controlPointPositions[818];
				ControlPointPositions_819 = controlPointPositions[819];
				ControlPointPositions_820 = controlPointPositions[820];
				ControlPointPositions_821 = controlPointPositions[821];
				ControlPointPositions_822 = controlPointPositions[822];
				ControlPointPositions_823 = controlPointPositions[823];
				ControlPointPositions_824 = controlPointPositions[824];
				ControlPointPositions_825 = controlPointPositions[825];
				ControlPointPositions_826 = controlPointPositions[826];
				ControlPointPositions_827 = controlPointPositions[827];
				ControlPointPositions_828 = controlPointPositions[828];
				ControlPointPositions_829 = controlPointPositions[829];
				ControlPointPositions_830 = controlPointPositions[830];
				ControlPointPositions_831 = controlPointPositions[831];
				ControlPointPositions_832 = controlPointPositions[832];
				ControlPointPositions_833 = controlPointPositions[833];
				ControlPointPositions_834 = controlPointPositions[834];
				ControlPointPositions_835 = controlPointPositions[835];
				ControlPointPositions_836 = controlPointPositions[836];
				ControlPointPositions_837 = controlPointPositions[837];
				ControlPointPositions_838 = controlPointPositions[838];
				ControlPointPositions_839 = controlPointPositions[839];
				ControlPointPositions_840 = controlPointPositions[840];
				ControlPointPositions_841 = controlPointPositions[841];
				ControlPointPositions_842 = controlPointPositions[842];
				ControlPointPositions_843 = controlPointPositions[843];
				ControlPointPositions_844 = controlPointPositions[844];
				ControlPointPositions_845 = controlPointPositions[845];
				ControlPointPositions_846 = controlPointPositions[846];
				ControlPointPositions_847 = controlPointPositions[847];
				ControlPointPositions_848 = controlPointPositions[848];
				ControlPointPositions_849 = controlPointPositions[849];
				ControlPointPositions_850 = controlPointPositions[850];
				ControlPointPositions_851 = controlPointPositions[851];
				ControlPointPositions_852 = controlPointPositions[852];
				ControlPointPositions_853 = controlPointPositions[853];
				ControlPointPositions_854 = controlPointPositions[854];
				ControlPointPositions_855 = controlPointPositions[855];
				ControlPointPositions_856 = controlPointPositions[856];
				ControlPointPositions_857 = controlPointPositions[857];
				ControlPointPositions_858 = controlPointPositions[858];
				ControlPointPositions_859 = controlPointPositions[859];
				ControlPointPositions_860 = controlPointPositions[860];
				ControlPointPositions_861 = controlPointPositions[861];
				ControlPointPositions_862 = controlPointPositions[862];
				ControlPointPositions_863 = controlPointPositions[863];
				ControlPointPositions_864 = controlPointPositions[864];
				ControlPointPositions_865 = controlPointPositions[865];
				ControlPointPositions_866 = controlPointPositions[866];
				ControlPointPositions_867 = controlPointPositions[867];
				ControlPointPositions_868 = controlPointPositions[868];
				ControlPointPositions_869 = controlPointPositions[869];
				ControlPointPositions_870 = controlPointPositions[870];
				ControlPointPositions_871 = controlPointPositions[871];
				ControlPointPositions_872 = controlPointPositions[872];
				ControlPointPositions_873 = controlPointPositions[873];
				ControlPointPositions_874 = controlPointPositions[874];
				ControlPointPositions_875 = controlPointPositions[875];
				ControlPointPositions_876 = controlPointPositions[876];
				ControlPointPositions_877 = controlPointPositions[877];
				ControlPointPositions_878 = controlPointPositions[878];
				ControlPointPositions_879 = controlPointPositions[879];
				ControlPointPositions_880 = controlPointPositions[880];
				ControlPointPositions_881 = controlPointPositions[881];
				ControlPointPositions_882 = controlPointPositions[882];
				ControlPointPositions_883 = controlPointPositions[883];
				ControlPointPositions_884 = controlPointPositions[884];
				ControlPointPositions_885 = controlPointPositions[885];
				ControlPointPositions_886 = controlPointPositions[886];
				ControlPointPositions_887 = controlPointPositions[887];
				ControlPointPositions_888 = controlPointPositions[888];
				ControlPointPositions_889 = controlPointPositions[889];
				ControlPointPositions_890 = controlPointPositions[890];
				ControlPointPositions_891 = controlPointPositions[891];
				ControlPointPositions_892 = controlPointPositions[892];
				ControlPointPositions_893 = controlPointPositions[893];
				ControlPointPositions_894 = controlPointPositions[894];
				ControlPointPositions_895 = controlPointPositions[895];
				ControlPointPositions_896 = controlPointPositions[896];
				ControlPointPositions_897 = controlPointPositions[897];
				ControlPointPositions_898 = controlPointPositions[898];
				ControlPointPositions_899 = controlPointPositions[899];
				ControlPointPositions_900 = controlPointPositions[900];
				ControlPointPositions_901 = controlPointPositions[901];
				ControlPointPositions_902 = controlPointPositions[902];
				ControlPointPositions_903 = controlPointPositions[903];
				ControlPointPositions_904 = controlPointPositions[904];
				ControlPointPositions_905 = controlPointPositions[905];
				ControlPointPositions_906 = controlPointPositions[906];
				ControlPointPositions_907 = controlPointPositions[907];
				ControlPointPositions_908 = controlPointPositions[908];
				ControlPointPositions_909 = controlPointPositions[909];
				ControlPointPositions_910 = controlPointPositions[910];
				ControlPointPositions_911 = controlPointPositions[911];
				ControlPointPositions_912 = controlPointPositions[912];
				ControlPointPositions_913 = controlPointPositions[913];
				ControlPointPositions_914 = controlPointPositions[914];
				ControlPointPositions_915 = controlPointPositions[915];
				ControlPointPositions_916 = controlPointPositions[916];
				ControlPointPositions_917 = controlPointPositions[917];
				ControlPointPositions_918 = controlPointPositions[918];
				ControlPointPositions_919 = controlPointPositions[919];
				ControlPointPositions_920 = controlPointPositions[920];
				ControlPointPositions_921 = controlPointPositions[921];
				ControlPointPositions_922 = controlPointPositions[922];
				ControlPointPositions_923 = controlPointPositions[923];
				ControlPointPositions_924 = controlPointPositions[924];
				ControlPointPositions_925 = controlPointPositions[925];
				ControlPointPositions_926 = controlPointPositions[926];
				ControlPointPositions_927 = controlPointPositions[927];
				ControlPointPositions_928 = controlPointPositions[928];
				ControlPointPositions_929 = controlPointPositions[929];
				ControlPointPositions_930 = controlPointPositions[930];
				ControlPointPositions_931 = controlPointPositions[931];
				ControlPointPositions_932 = controlPointPositions[932];
				ControlPointPositions_933 = controlPointPositions[933];
				ControlPointPositions_934 = controlPointPositions[934];
				ControlPointPositions_935 = controlPointPositions[935];
				ControlPointPositions_936 = controlPointPositions[936];
				ControlPointPositions_937 = controlPointPositions[937];
				ControlPointPositions_938 = controlPointPositions[938];
				ControlPointPositions_939 = controlPointPositions[939];
				ControlPointPositions_940 = controlPointPositions[940];
				ControlPointPositions_941 = controlPointPositions[941];
				ControlPointPositions_942 = controlPointPositions[942];
				ControlPointPositions_943 = controlPointPositions[943];
				ControlPointPositions_944 = controlPointPositions[944];
				ControlPointPositions_945 = controlPointPositions[945];
				ControlPointPositions_946 = controlPointPositions[946];
				ControlPointPositions_947 = controlPointPositions[947];
				ControlPointPositions_948 = controlPointPositions[948];
				ControlPointPositions_949 = controlPointPositions[949];
				ControlPointPositions_950 = controlPointPositions[950];
				ControlPointPositions_951 = controlPointPositions[951];
				ControlPointPositions_952 = controlPointPositions[952];
				ControlPointPositions_953 = controlPointPositions[953];
				ControlPointPositions_954 = controlPointPositions[954];
				ControlPointPositions_955 = controlPointPositions[955];
				ControlPointPositions_956 = controlPointPositions[956];
				ControlPointPositions_957 = controlPointPositions[957];
				ControlPointPositions_958 = controlPointPositions[958];
				ControlPointPositions_959 = controlPointPositions[959];
				ControlPointPositions_960 = controlPointPositions[960];
				ControlPointPositions_961 = controlPointPositions[961];
				ControlPointPositions_962 = controlPointPositions[962];
				ControlPointPositions_963 = controlPointPositions[963];
				ControlPointPositions_964 = controlPointPositions[964];
				ControlPointPositions_965 = controlPointPositions[965];
				ControlPointPositions_966 = controlPointPositions[966];
				ControlPointPositions_967 = controlPointPositions[967];
				ControlPointPositions_968 = controlPointPositions[968];
				ControlPointPositions_969 = controlPointPositions[969];
				ControlPointPositions_970 = controlPointPositions[970];
				ControlPointPositions_971 = controlPointPositions[971];
				ControlPointPositions_972 = controlPointPositions[972];
				ControlPointPositions_973 = controlPointPositions[973];
				ControlPointPositions_974 = controlPointPositions[974];
				ControlPointPositions_975 = controlPointPositions[975];
				ControlPointPositions_976 = controlPointPositions[976];
				ControlPointPositions_977 = controlPointPositions[977];
				ControlPointPositions_978 = controlPointPositions[978];
				ControlPointPositions_979 = controlPointPositions[979];
				ControlPointPositions_980 = controlPointPositions[980];
				ControlPointPositions_981 = controlPointPositions[981];
				ControlPointPositions_982 = controlPointPositions[982];
				ControlPointPositions_983 = controlPointPositions[983];
				ControlPointPositions_984 = controlPointPositions[984];
				ControlPointPositions_985 = controlPointPositions[985];
				ControlPointPositions_986 = controlPointPositions[986];
				ControlPointPositions_987 = controlPointPositions[987];
				ControlPointPositions_988 = controlPointPositions[988];
				ControlPointPositions_989 = controlPointPositions[989];
				ControlPointPositions_990 = controlPointPositions[990];
				ControlPointPositions_991 = controlPointPositions[991];
				ControlPointPositions_992 = controlPointPositions[992];
				ControlPointPositions_993 = controlPointPositions[993];
				ControlPointPositions_994 = controlPointPositions[994];
				ControlPointPositions_995 = controlPointPositions[995];
				ControlPointPositions_996 = controlPointPositions[996];
				ControlPointPositions_997 = controlPointPositions[997];
				ControlPointPositions_998 = controlPointPositions[998];
				ControlPointPositions_999 = controlPointPositions[999];
				ControlPointPositions_1000 = controlPointPositions[1000];
				ControlPointPositions_1001 = controlPointPositions[1001];
				ControlPointPositions_1002 = controlPointPositions[1002];
				ControlPointPositions_1003 = controlPointPositions[1003];
				ControlPointPositions_1004 = controlPointPositions[1004];
				ControlPointPositions_1005 = controlPointPositions[1005];
				ControlPointPositions_1006 = controlPointPositions[1006];
				ControlPointPositions_1007 = controlPointPositions[1007];
				ControlPointPositions_1008 = controlPointPositions[1008];
				ControlPointPositions_1009 = controlPointPositions[1009];
				ControlPointPositions_1010 = controlPointPositions[1010];
				ControlPointPositions_1011 = controlPointPositions[1011];
				ControlPointPositions_1012 = controlPointPositions[1012];
				ControlPointPositions_1013 = controlPointPositions[1013];
				ControlPointPositions_1014 = controlPointPositions[1014];
				ControlPointPositions_1015 = controlPointPositions[1015];
				ControlPointPositions_1016 = controlPointPositions[1016];
				ControlPointPositions_1017 = controlPointPositions[1017];
				ControlPointPositions_1018 = controlPointPositions[1018];
				ControlPointPositions_1019 = controlPointPositions[1019];
				ControlPointPositions_1020 = controlPointPositions[1020];
				ControlPointPositions_1021 = controlPointPositions[1021];
				ControlPointPositions_1022 = controlPointPositions[1022];
				ControlPointPositions_1023 = controlPointPositions[1023];
				ControlPointPositions_1024 = controlPointPositions[1024];
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiGammaControlCapabilities(Bool32 scaleAndOffsetSupported = default, float maxConvertedValue = default, float minConvertedValue = default, uint numGammaControlPoints = default, Span<float> controlPointPositions = default)
		{
			ScaleAndOffsetSupported = scaleAndOffsetSupported;
			MaxConvertedValue = maxConvertedValue;
			MinConvertedValue = minConvertedValue;
			NumGammaControlPoints = numGammaControlPoints;
			if (controlPointPositions != default)
			{
				ControlPointPositions_0 = controlPointPositions[0];
				ControlPointPositions_1 = controlPointPositions[1];
				ControlPointPositions_2 = controlPointPositions[2];
				ControlPointPositions_3 = controlPointPositions[3];
				ControlPointPositions_4 = controlPointPositions[4];
				ControlPointPositions_5 = controlPointPositions[5];
				ControlPointPositions_6 = controlPointPositions[6];
				ControlPointPositions_7 = controlPointPositions[7];
				ControlPointPositions_8 = controlPointPositions[8];
				ControlPointPositions_9 = controlPointPositions[9];
				ControlPointPositions_10 = controlPointPositions[10];
				ControlPointPositions_11 = controlPointPositions[11];
				ControlPointPositions_12 = controlPointPositions[12];
				ControlPointPositions_13 = controlPointPositions[13];
				ControlPointPositions_14 = controlPointPositions[14];
				ControlPointPositions_15 = controlPointPositions[15];
				ControlPointPositions_16 = controlPointPositions[16];
				ControlPointPositions_17 = controlPointPositions[17];
				ControlPointPositions_18 = controlPointPositions[18];
				ControlPointPositions_19 = controlPointPositions[19];
				ControlPointPositions_20 = controlPointPositions[20];
				ControlPointPositions_21 = controlPointPositions[21];
				ControlPointPositions_22 = controlPointPositions[22];
				ControlPointPositions_23 = controlPointPositions[23];
				ControlPointPositions_24 = controlPointPositions[24];
				ControlPointPositions_25 = controlPointPositions[25];
				ControlPointPositions_26 = controlPointPositions[26];
				ControlPointPositions_27 = controlPointPositions[27];
				ControlPointPositions_28 = controlPointPositions[28];
				ControlPointPositions_29 = controlPointPositions[29];
				ControlPointPositions_30 = controlPointPositions[30];
				ControlPointPositions_31 = controlPointPositions[31];
				ControlPointPositions_32 = controlPointPositions[32];
				ControlPointPositions_33 = controlPointPositions[33];
				ControlPointPositions_34 = controlPointPositions[34];
				ControlPointPositions_35 = controlPointPositions[35];
				ControlPointPositions_36 = controlPointPositions[36];
				ControlPointPositions_37 = controlPointPositions[37];
				ControlPointPositions_38 = controlPointPositions[38];
				ControlPointPositions_39 = controlPointPositions[39];
				ControlPointPositions_40 = controlPointPositions[40];
				ControlPointPositions_41 = controlPointPositions[41];
				ControlPointPositions_42 = controlPointPositions[42];
				ControlPointPositions_43 = controlPointPositions[43];
				ControlPointPositions_44 = controlPointPositions[44];
				ControlPointPositions_45 = controlPointPositions[45];
				ControlPointPositions_46 = controlPointPositions[46];
				ControlPointPositions_47 = controlPointPositions[47];
				ControlPointPositions_48 = controlPointPositions[48];
				ControlPointPositions_49 = controlPointPositions[49];
				ControlPointPositions_50 = controlPointPositions[50];
				ControlPointPositions_51 = controlPointPositions[51];
				ControlPointPositions_52 = controlPointPositions[52];
				ControlPointPositions_53 = controlPointPositions[53];
				ControlPointPositions_54 = controlPointPositions[54];
				ControlPointPositions_55 = controlPointPositions[55];
				ControlPointPositions_56 = controlPointPositions[56];
				ControlPointPositions_57 = controlPointPositions[57];
				ControlPointPositions_58 = controlPointPositions[58];
				ControlPointPositions_59 = controlPointPositions[59];
				ControlPointPositions_60 = controlPointPositions[60];
				ControlPointPositions_61 = controlPointPositions[61];
				ControlPointPositions_62 = controlPointPositions[62];
				ControlPointPositions_63 = controlPointPositions[63];
				ControlPointPositions_64 = controlPointPositions[64];
				ControlPointPositions_65 = controlPointPositions[65];
				ControlPointPositions_66 = controlPointPositions[66];
				ControlPointPositions_67 = controlPointPositions[67];
				ControlPointPositions_68 = controlPointPositions[68];
				ControlPointPositions_69 = controlPointPositions[69];
				ControlPointPositions_70 = controlPointPositions[70];
				ControlPointPositions_71 = controlPointPositions[71];
				ControlPointPositions_72 = controlPointPositions[72];
				ControlPointPositions_73 = controlPointPositions[73];
				ControlPointPositions_74 = controlPointPositions[74];
				ControlPointPositions_75 = controlPointPositions[75];
				ControlPointPositions_76 = controlPointPositions[76];
				ControlPointPositions_77 = controlPointPositions[77];
				ControlPointPositions_78 = controlPointPositions[78];
				ControlPointPositions_79 = controlPointPositions[79];
				ControlPointPositions_80 = controlPointPositions[80];
				ControlPointPositions_81 = controlPointPositions[81];
				ControlPointPositions_82 = controlPointPositions[82];
				ControlPointPositions_83 = controlPointPositions[83];
				ControlPointPositions_84 = controlPointPositions[84];
				ControlPointPositions_85 = controlPointPositions[85];
				ControlPointPositions_86 = controlPointPositions[86];
				ControlPointPositions_87 = controlPointPositions[87];
				ControlPointPositions_88 = controlPointPositions[88];
				ControlPointPositions_89 = controlPointPositions[89];
				ControlPointPositions_90 = controlPointPositions[90];
				ControlPointPositions_91 = controlPointPositions[91];
				ControlPointPositions_92 = controlPointPositions[92];
				ControlPointPositions_93 = controlPointPositions[93];
				ControlPointPositions_94 = controlPointPositions[94];
				ControlPointPositions_95 = controlPointPositions[95];
				ControlPointPositions_96 = controlPointPositions[96];
				ControlPointPositions_97 = controlPointPositions[97];
				ControlPointPositions_98 = controlPointPositions[98];
				ControlPointPositions_99 = controlPointPositions[99];
				ControlPointPositions_100 = controlPointPositions[100];
				ControlPointPositions_101 = controlPointPositions[101];
				ControlPointPositions_102 = controlPointPositions[102];
				ControlPointPositions_103 = controlPointPositions[103];
				ControlPointPositions_104 = controlPointPositions[104];
				ControlPointPositions_105 = controlPointPositions[105];
				ControlPointPositions_106 = controlPointPositions[106];
				ControlPointPositions_107 = controlPointPositions[107];
				ControlPointPositions_108 = controlPointPositions[108];
				ControlPointPositions_109 = controlPointPositions[109];
				ControlPointPositions_110 = controlPointPositions[110];
				ControlPointPositions_111 = controlPointPositions[111];
				ControlPointPositions_112 = controlPointPositions[112];
				ControlPointPositions_113 = controlPointPositions[113];
				ControlPointPositions_114 = controlPointPositions[114];
				ControlPointPositions_115 = controlPointPositions[115];
				ControlPointPositions_116 = controlPointPositions[116];
				ControlPointPositions_117 = controlPointPositions[117];
				ControlPointPositions_118 = controlPointPositions[118];
				ControlPointPositions_119 = controlPointPositions[119];
				ControlPointPositions_120 = controlPointPositions[120];
				ControlPointPositions_121 = controlPointPositions[121];
				ControlPointPositions_122 = controlPointPositions[122];
				ControlPointPositions_123 = controlPointPositions[123];
				ControlPointPositions_124 = controlPointPositions[124];
				ControlPointPositions_125 = controlPointPositions[125];
				ControlPointPositions_126 = controlPointPositions[126];
				ControlPointPositions_127 = controlPointPositions[127];
				ControlPointPositions_128 = controlPointPositions[128];
				ControlPointPositions_129 = controlPointPositions[129];
				ControlPointPositions_130 = controlPointPositions[130];
				ControlPointPositions_131 = controlPointPositions[131];
				ControlPointPositions_132 = controlPointPositions[132];
				ControlPointPositions_133 = controlPointPositions[133];
				ControlPointPositions_134 = controlPointPositions[134];
				ControlPointPositions_135 = controlPointPositions[135];
				ControlPointPositions_136 = controlPointPositions[136];
				ControlPointPositions_137 = controlPointPositions[137];
				ControlPointPositions_138 = controlPointPositions[138];
				ControlPointPositions_139 = controlPointPositions[139];
				ControlPointPositions_140 = controlPointPositions[140];
				ControlPointPositions_141 = controlPointPositions[141];
				ControlPointPositions_142 = controlPointPositions[142];
				ControlPointPositions_143 = controlPointPositions[143];
				ControlPointPositions_144 = controlPointPositions[144];
				ControlPointPositions_145 = controlPointPositions[145];
				ControlPointPositions_146 = controlPointPositions[146];
				ControlPointPositions_147 = controlPointPositions[147];
				ControlPointPositions_148 = controlPointPositions[148];
				ControlPointPositions_149 = controlPointPositions[149];
				ControlPointPositions_150 = controlPointPositions[150];
				ControlPointPositions_151 = controlPointPositions[151];
				ControlPointPositions_152 = controlPointPositions[152];
				ControlPointPositions_153 = controlPointPositions[153];
				ControlPointPositions_154 = controlPointPositions[154];
				ControlPointPositions_155 = controlPointPositions[155];
				ControlPointPositions_156 = controlPointPositions[156];
				ControlPointPositions_157 = controlPointPositions[157];
				ControlPointPositions_158 = controlPointPositions[158];
				ControlPointPositions_159 = controlPointPositions[159];
				ControlPointPositions_160 = controlPointPositions[160];
				ControlPointPositions_161 = controlPointPositions[161];
				ControlPointPositions_162 = controlPointPositions[162];
				ControlPointPositions_163 = controlPointPositions[163];
				ControlPointPositions_164 = controlPointPositions[164];
				ControlPointPositions_165 = controlPointPositions[165];
				ControlPointPositions_166 = controlPointPositions[166];
				ControlPointPositions_167 = controlPointPositions[167];
				ControlPointPositions_168 = controlPointPositions[168];
				ControlPointPositions_169 = controlPointPositions[169];
				ControlPointPositions_170 = controlPointPositions[170];
				ControlPointPositions_171 = controlPointPositions[171];
				ControlPointPositions_172 = controlPointPositions[172];
				ControlPointPositions_173 = controlPointPositions[173];
				ControlPointPositions_174 = controlPointPositions[174];
				ControlPointPositions_175 = controlPointPositions[175];
				ControlPointPositions_176 = controlPointPositions[176];
				ControlPointPositions_177 = controlPointPositions[177];
				ControlPointPositions_178 = controlPointPositions[178];
				ControlPointPositions_179 = controlPointPositions[179];
				ControlPointPositions_180 = controlPointPositions[180];
				ControlPointPositions_181 = controlPointPositions[181];
				ControlPointPositions_182 = controlPointPositions[182];
				ControlPointPositions_183 = controlPointPositions[183];
				ControlPointPositions_184 = controlPointPositions[184];
				ControlPointPositions_185 = controlPointPositions[185];
				ControlPointPositions_186 = controlPointPositions[186];
				ControlPointPositions_187 = controlPointPositions[187];
				ControlPointPositions_188 = controlPointPositions[188];
				ControlPointPositions_189 = controlPointPositions[189];
				ControlPointPositions_190 = controlPointPositions[190];
				ControlPointPositions_191 = controlPointPositions[191];
				ControlPointPositions_192 = controlPointPositions[192];
				ControlPointPositions_193 = controlPointPositions[193];
				ControlPointPositions_194 = controlPointPositions[194];
				ControlPointPositions_195 = controlPointPositions[195];
				ControlPointPositions_196 = controlPointPositions[196];
				ControlPointPositions_197 = controlPointPositions[197];
				ControlPointPositions_198 = controlPointPositions[198];
				ControlPointPositions_199 = controlPointPositions[199];
				ControlPointPositions_200 = controlPointPositions[200];
				ControlPointPositions_201 = controlPointPositions[201];
				ControlPointPositions_202 = controlPointPositions[202];
				ControlPointPositions_203 = controlPointPositions[203];
				ControlPointPositions_204 = controlPointPositions[204];
				ControlPointPositions_205 = controlPointPositions[205];
				ControlPointPositions_206 = controlPointPositions[206];
				ControlPointPositions_207 = controlPointPositions[207];
				ControlPointPositions_208 = controlPointPositions[208];
				ControlPointPositions_209 = controlPointPositions[209];
				ControlPointPositions_210 = controlPointPositions[210];
				ControlPointPositions_211 = controlPointPositions[211];
				ControlPointPositions_212 = controlPointPositions[212];
				ControlPointPositions_213 = controlPointPositions[213];
				ControlPointPositions_214 = controlPointPositions[214];
				ControlPointPositions_215 = controlPointPositions[215];
				ControlPointPositions_216 = controlPointPositions[216];
				ControlPointPositions_217 = controlPointPositions[217];
				ControlPointPositions_218 = controlPointPositions[218];
				ControlPointPositions_219 = controlPointPositions[219];
				ControlPointPositions_220 = controlPointPositions[220];
				ControlPointPositions_221 = controlPointPositions[221];
				ControlPointPositions_222 = controlPointPositions[222];
				ControlPointPositions_223 = controlPointPositions[223];
				ControlPointPositions_224 = controlPointPositions[224];
				ControlPointPositions_225 = controlPointPositions[225];
				ControlPointPositions_226 = controlPointPositions[226];
				ControlPointPositions_227 = controlPointPositions[227];
				ControlPointPositions_228 = controlPointPositions[228];
				ControlPointPositions_229 = controlPointPositions[229];
				ControlPointPositions_230 = controlPointPositions[230];
				ControlPointPositions_231 = controlPointPositions[231];
				ControlPointPositions_232 = controlPointPositions[232];
				ControlPointPositions_233 = controlPointPositions[233];
				ControlPointPositions_234 = controlPointPositions[234];
				ControlPointPositions_235 = controlPointPositions[235];
				ControlPointPositions_236 = controlPointPositions[236];
				ControlPointPositions_237 = controlPointPositions[237];
				ControlPointPositions_238 = controlPointPositions[238];
				ControlPointPositions_239 = controlPointPositions[239];
				ControlPointPositions_240 = controlPointPositions[240];
				ControlPointPositions_241 = controlPointPositions[241];
				ControlPointPositions_242 = controlPointPositions[242];
				ControlPointPositions_243 = controlPointPositions[243];
				ControlPointPositions_244 = controlPointPositions[244];
				ControlPointPositions_245 = controlPointPositions[245];
				ControlPointPositions_246 = controlPointPositions[246];
				ControlPointPositions_247 = controlPointPositions[247];
				ControlPointPositions_248 = controlPointPositions[248];
				ControlPointPositions_249 = controlPointPositions[249];
				ControlPointPositions_250 = controlPointPositions[250];
				ControlPointPositions_251 = controlPointPositions[251];
				ControlPointPositions_252 = controlPointPositions[252];
				ControlPointPositions_253 = controlPointPositions[253];
				ControlPointPositions_254 = controlPointPositions[254];
				ControlPointPositions_255 = controlPointPositions[255];
				ControlPointPositions_256 = controlPointPositions[256];
				ControlPointPositions_257 = controlPointPositions[257];
				ControlPointPositions_258 = controlPointPositions[258];
				ControlPointPositions_259 = controlPointPositions[259];
				ControlPointPositions_260 = controlPointPositions[260];
				ControlPointPositions_261 = controlPointPositions[261];
				ControlPointPositions_262 = controlPointPositions[262];
				ControlPointPositions_263 = controlPointPositions[263];
				ControlPointPositions_264 = controlPointPositions[264];
				ControlPointPositions_265 = controlPointPositions[265];
				ControlPointPositions_266 = controlPointPositions[266];
				ControlPointPositions_267 = controlPointPositions[267];
				ControlPointPositions_268 = controlPointPositions[268];
				ControlPointPositions_269 = controlPointPositions[269];
				ControlPointPositions_270 = controlPointPositions[270];
				ControlPointPositions_271 = controlPointPositions[271];
				ControlPointPositions_272 = controlPointPositions[272];
				ControlPointPositions_273 = controlPointPositions[273];
				ControlPointPositions_274 = controlPointPositions[274];
				ControlPointPositions_275 = controlPointPositions[275];
				ControlPointPositions_276 = controlPointPositions[276];
				ControlPointPositions_277 = controlPointPositions[277];
				ControlPointPositions_278 = controlPointPositions[278];
				ControlPointPositions_279 = controlPointPositions[279];
				ControlPointPositions_280 = controlPointPositions[280];
				ControlPointPositions_281 = controlPointPositions[281];
				ControlPointPositions_282 = controlPointPositions[282];
				ControlPointPositions_283 = controlPointPositions[283];
				ControlPointPositions_284 = controlPointPositions[284];
				ControlPointPositions_285 = controlPointPositions[285];
				ControlPointPositions_286 = controlPointPositions[286];
				ControlPointPositions_287 = controlPointPositions[287];
				ControlPointPositions_288 = controlPointPositions[288];
				ControlPointPositions_289 = controlPointPositions[289];
				ControlPointPositions_290 = controlPointPositions[290];
				ControlPointPositions_291 = controlPointPositions[291];
				ControlPointPositions_292 = controlPointPositions[292];
				ControlPointPositions_293 = controlPointPositions[293];
				ControlPointPositions_294 = controlPointPositions[294];
				ControlPointPositions_295 = controlPointPositions[295];
				ControlPointPositions_296 = controlPointPositions[296];
				ControlPointPositions_297 = controlPointPositions[297];
				ControlPointPositions_298 = controlPointPositions[298];
				ControlPointPositions_299 = controlPointPositions[299];
				ControlPointPositions_300 = controlPointPositions[300];
				ControlPointPositions_301 = controlPointPositions[301];
				ControlPointPositions_302 = controlPointPositions[302];
				ControlPointPositions_303 = controlPointPositions[303];
				ControlPointPositions_304 = controlPointPositions[304];
				ControlPointPositions_305 = controlPointPositions[305];
				ControlPointPositions_306 = controlPointPositions[306];
				ControlPointPositions_307 = controlPointPositions[307];
				ControlPointPositions_308 = controlPointPositions[308];
				ControlPointPositions_309 = controlPointPositions[309];
				ControlPointPositions_310 = controlPointPositions[310];
				ControlPointPositions_311 = controlPointPositions[311];
				ControlPointPositions_312 = controlPointPositions[312];
				ControlPointPositions_313 = controlPointPositions[313];
				ControlPointPositions_314 = controlPointPositions[314];
				ControlPointPositions_315 = controlPointPositions[315];
				ControlPointPositions_316 = controlPointPositions[316];
				ControlPointPositions_317 = controlPointPositions[317];
				ControlPointPositions_318 = controlPointPositions[318];
				ControlPointPositions_319 = controlPointPositions[319];
				ControlPointPositions_320 = controlPointPositions[320];
				ControlPointPositions_321 = controlPointPositions[321];
				ControlPointPositions_322 = controlPointPositions[322];
				ControlPointPositions_323 = controlPointPositions[323];
				ControlPointPositions_324 = controlPointPositions[324];
				ControlPointPositions_325 = controlPointPositions[325];
				ControlPointPositions_326 = controlPointPositions[326];
				ControlPointPositions_327 = controlPointPositions[327];
				ControlPointPositions_328 = controlPointPositions[328];
				ControlPointPositions_329 = controlPointPositions[329];
				ControlPointPositions_330 = controlPointPositions[330];
				ControlPointPositions_331 = controlPointPositions[331];
				ControlPointPositions_332 = controlPointPositions[332];
				ControlPointPositions_333 = controlPointPositions[333];
				ControlPointPositions_334 = controlPointPositions[334];
				ControlPointPositions_335 = controlPointPositions[335];
				ControlPointPositions_336 = controlPointPositions[336];
				ControlPointPositions_337 = controlPointPositions[337];
				ControlPointPositions_338 = controlPointPositions[338];
				ControlPointPositions_339 = controlPointPositions[339];
				ControlPointPositions_340 = controlPointPositions[340];
				ControlPointPositions_341 = controlPointPositions[341];
				ControlPointPositions_342 = controlPointPositions[342];
				ControlPointPositions_343 = controlPointPositions[343];
				ControlPointPositions_344 = controlPointPositions[344];
				ControlPointPositions_345 = controlPointPositions[345];
				ControlPointPositions_346 = controlPointPositions[346];
				ControlPointPositions_347 = controlPointPositions[347];
				ControlPointPositions_348 = controlPointPositions[348];
				ControlPointPositions_349 = controlPointPositions[349];
				ControlPointPositions_350 = controlPointPositions[350];
				ControlPointPositions_351 = controlPointPositions[351];
				ControlPointPositions_352 = controlPointPositions[352];
				ControlPointPositions_353 = controlPointPositions[353];
				ControlPointPositions_354 = controlPointPositions[354];
				ControlPointPositions_355 = controlPointPositions[355];
				ControlPointPositions_356 = controlPointPositions[356];
				ControlPointPositions_357 = controlPointPositions[357];
				ControlPointPositions_358 = controlPointPositions[358];
				ControlPointPositions_359 = controlPointPositions[359];
				ControlPointPositions_360 = controlPointPositions[360];
				ControlPointPositions_361 = controlPointPositions[361];
				ControlPointPositions_362 = controlPointPositions[362];
				ControlPointPositions_363 = controlPointPositions[363];
				ControlPointPositions_364 = controlPointPositions[364];
				ControlPointPositions_365 = controlPointPositions[365];
				ControlPointPositions_366 = controlPointPositions[366];
				ControlPointPositions_367 = controlPointPositions[367];
				ControlPointPositions_368 = controlPointPositions[368];
				ControlPointPositions_369 = controlPointPositions[369];
				ControlPointPositions_370 = controlPointPositions[370];
				ControlPointPositions_371 = controlPointPositions[371];
				ControlPointPositions_372 = controlPointPositions[372];
				ControlPointPositions_373 = controlPointPositions[373];
				ControlPointPositions_374 = controlPointPositions[374];
				ControlPointPositions_375 = controlPointPositions[375];
				ControlPointPositions_376 = controlPointPositions[376];
				ControlPointPositions_377 = controlPointPositions[377];
				ControlPointPositions_378 = controlPointPositions[378];
				ControlPointPositions_379 = controlPointPositions[379];
				ControlPointPositions_380 = controlPointPositions[380];
				ControlPointPositions_381 = controlPointPositions[381];
				ControlPointPositions_382 = controlPointPositions[382];
				ControlPointPositions_383 = controlPointPositions[383];
				ControlPointPositions_384 = controlPointPositions[384];
				ControlPointPositions_385 = controlPointPositions[385];
				ControlPointPositions_386 = controlPointPositions[386];
				ControlPointPositions_387 = controlPointPositions[387];
				ControlPointPositions_388 = controlPointPositions[388];
				ControlPointPositions_389 = controlPointPositions[389];
				ControlPointPositions_390 = controlPointPositions[390];
				ControlPointPositions_391 = controlPointPositions[391];
				ControlPointPositions_392 = controlPointPositions[392];
				ControlPointPositions_393 = controlPointPositions[393];
				ControlPointPositions_394 = controlPointPositions[394];
				ControlPointPositions_395 = controlPointPositions[395];
				ControlPointPositions_396 = controlPointPositions[396];
				ControlPointPositions_397 = controlPointPositions[397];
				ControlPointPositions_398 = controlPointPositions[398];
				ControlPointPositions_399 = controlPointPositions[399];
				ControlPointPositions_400 = controlPointPositions[400];
				ControlPointPositions_401 = controlPointPositions[401];
				ControlPointPositions_402 = controlPointPositions[402];
				ControlPointPositions_403 = controlPointPositions[403];
				ControlPointPositions_404 = controlPointPositions[404];
				ControlPointPositions_405 = controlPointPositions[405];
				ControlPointPositions_406 = controlPointPositions[406];
				ControlPointPositions_407 = controlPointPositions[407];
				ControlPointPositions_408 = controlPointPositions[408];
				ControlPointPositions_409 = controlPointPositions[409];
				ControlPointPositions_410 = controlPointPositions[410];
				ControlPointPositions_411 = controlPointPositions[411];
				ControlPointPositions_412 = controlPointPositions[412];
				ControlPointPositions_413 = controlPointPositions[413];
				ControlPointPositions_414 = controlPointPositions[414];
				ControlPointPositions_415 = controlPointPositions[415];
				ControlPointPositions_416 = controlPointPositions[416];
				ControlPointPositions_417 = controlPointPositions[417];
				ControlPointPositions_418 = controlPointPositions[418];
				ControlPointPositions_419 = controlPointPositions[419];
				ControlPointPositions_420 = controlPointPositions[420];
				ControlPointPositions_421 = controlPointPositions[421];
				ControlPointPositions_422 = controlPointPositions[422];
				ControlPointPositions_423 = controlPointPositions[423];
				ControlPointPositions_424 = controlPointPositions[424];
				ControlPointPositions_425 = controlPointPositions[425];
				ControlPointPositions_426 = controlPointPositions[426];
				ControlPointPositions_427 = controlPointPositions[427];
				ControlPointPositions_428 = controlPointPositions[428];
				ControlPointPositions_429 = controlPointPositions[429];
				ControlPointPositions_430 = controlPointPositions[430];
				ControlPointPositions_431 = controlPointPositions[431];
				ControlPointPositions_432 = controlPointPositions[432];
				ControlPointPositions_433 = controlPointPositions[433];
				ControlPointPositions_434 = controlPointPositions[434];
				ControlPointPositions_435 = controlPointPositions[435];
				ControlPointPositions_436 = controlPointPositions[436];
				ControlPointPositions_437 = controlPointPositions[437];
				ControlPointPositions_438 = controlPointPositions[438];
				ControlPointPositions_439 = controlPointPositions[439];
				ControlPointPositions_440 = controlPointPositions[440];
				ControlPointPositions_441 = controlPointPositions[441];
				ControlPointPositions_442 = controlPointPositions[442];
				ControlPointPositions_443 = controlPointPositions[443];
				ControlPointPositions_444 = controlPointPositions[444];
				ControlPointPositions_445 = controlPointPositions[445];
				ControlPointPositions_446 = controlPointPositions[446];
				ControlPointPositions_447 = controlPointPositions[447];
				ControlPointPositions_448 = controlPointPositions[448];
				ControlPointPositions_449 = controlPointPositions[449];
				ControlPointPositions_450 = controlPointPositions[450];
				ControlPointPositions_451 = controlPointPositions[451];
				ControlPointPositions_452 = controlPointPositions[452];
				ControlPointPositions_453 = controlPointPositions[453];
				ControlPointPositions_454 = controlPointPositions[454];
				ControlPointPositions_455 = controlPointPositions[455];
				ControlPointPositions_456 = controlPointPositions[456];
				ControlPointPositions_457 = controlPointPositions[457];
				ControlPointPositions_458 = controlPointPositions[458];
				ControlPointPositions_459 = controlPointPositions[459];
				ControlPointPositions_460 = controlPointPositions[460];
				ControlPointPositions_461 = controlPointPositions[461];
				ControlPointPositions_462 = controlPointPositions[462];
				ControlPointPositions_463 = controlPointPositions[463];
				ControlPointPositions_464 = controlPointPositions[464];
				ControlPointPositions_465 = controlPointPositions[465];
				ControlPointPositions_466 = controlPointPositions[466];
				ControlPointPositions_467 = controlPointPositions[467];
				ControlPointPositions_468 = controlPointPositions[468];
				ControlPointPositions_469 = controlPointPositions[469];
				ControlPointPositions_470 = controlPointPositions[470];
				ControlPointPositions_471 = controlPointPositions[471];
				ControlPointPositions_472 = controlPointPositions[472];
				ControlPointPositions_473 = controlPointPositions[473];
				ControlPointPositions_474 = controlPointPositions[474];
				ControlPointPositions_475 = controlPointPositions[475];
				ControlPointPositions_476 = controlPointPositions[476];
				ControlPointPositions_477 = controlPointPositions[477];
				ControlPointPositions_478 = controlPointPositions[478];
				ControlPointPositions_479 = controlPointPositions[479];
				ControlPointPositions_480 = controlPointPositions[480];
				ControlPointPositions_481 = controlPointPositions[481];
				ControlPointPositions_482 = controlPointPositions[482];
				ControlPointPositions_483 = controlPointPositions[483];
				ControlPointPositions_484 = controlPointPositions[484];
				ControlPointPositions_485 = controlPointPositions[485];
				ControlPointPositions_486 = controlPointPositions[486];
				ControlPointPositions_487 = controlPointPositions[487];
				ControlPointPositions_488 = controlPointPositions[488];
				ControlPointPositions_489 = controlPointPositions[489];
				ControlPointPositions_490 = controlPointPositions[490];
				ControlPointPositions_491 = controlPointPositions[491];
				ControlPointPositions_492 = controlPointPositions[492];
				ControlPointPositions_493 = controlPointPositions[493];
				ControlPointPositions_494 = controlPointPositions[494];
				ControlPointPositions_495 = controlPointPositions[495];
				ControlPointPositions_496 = controlPointPositions[496];
				ControlPointPositions_497 = controlPointPositions[497];
				ControlPointPositions_498 = controlPointPositions[498];
				ControlPointPositions_499 = controlPointPositions[499];
				ControlPointPositions_500 = controlPointPositions[500];
				ControlPointPositions_501 = controlPointPositions[501];
				ControlPointPositions_502 = controlPointPositions[502];
				ControlPointPositions_503 = controlPointPositions[503];
				ControlPointPositions_504 = controlPointPositions[504];
				ControlPointPositions_505 = controlPointPositions[505];
				ControlPointPositions_506 = controlPointPositions[506];
				ControlPointPositions_507 = controlPointPositions[507];
				ControlPointPositions_508 = controlPointPositions[508];
				ControlPointPositions_509 = controlPointPositions[509];
				ControlPointPositions_510 = controlPointPositions[510];
				ControlPointPositions_511 = controlPointPositions[511];
				ControlPointPositions_512 = controlPointPositions[512];
				ControlPointPositions_513 = controlPointPositions[513];
				ControlPointPositions_514 = controlPointPositions[514];
				ControlPointPositions_515 = controlPointPositions[515];
				ControlPointPositions_516 = controlPointPositions[516];
				ControlPointPositions_517 = controlPointPositions[517];
				ControlPointPositions_518 = controlPointPositions[518];
				ControlPointPositions_519 = controlPointPositions[519];
				ControlPointPositions_520 = controlPointPositions[520];
				ControlPointPositions_521 = controlPointPositions[521];
				ControlPointPositions_522 = controlPointPositions[522];
				ControlPointPositions_523 = controlPointPositions[523];
				ControlPointPositions_524 = controlPointPositions[524];
				ControlPointPositions_525 = controlPointPositions[525];
				ControlPointPositions_526 = controlPointPositions[526];
				ControlPointPositions_527 = controlPointPositions[527];
				ControlPointPositions_528 = controlPointPositions[528];
				ControlPointPositions_529 = controlPointPositions[529];
				ControlPointPositions_530 = controlPointPositions[530];
				ControlPointPositions_531 = controlPointPositions[531];
				ControlPointPositions_532 = controlPointPositions[532];
				ControlPointPositions_533 = controlPointPositions[533];
				ControlPointPositions_534 = controlPointPositions[534];
				ControlPointPositions_535 = controlPointPositions[535];
				ControlPointPositions_536 = controlPointPositions[536];
				ControlPointPositions_537 = controlPointPositions[537];
				ControlPointPositions_538 = controlPointPositions[538];
				ControlPointPositions_539 = controlPointPositions[539];
				ControlPointPositions_540 = controlPointPositions[540];
				ControlPointPositions_541 = controlPointPositions[541];
				ControlPointPositions_542 = controlPointPositions[542];
				ControlPointPositions_543 = controlPointPositions[543];
				ControlPointPositions_544 = controlPointPositions[544];
				ControlPointPositions_545 = controlPointPositions[545];
				ControlPointPositions_546 = controlPointPositions[546];
				ControlPointPositions_547 = controlPointPositions[547];
				ControlPointPositions_548 = controlPointPositions[548];
				ControlPointPositions_549 = controlPointPositions[549];
				ControlPointPositions_550 = controlPointPositions[550];
				ControlPointPositions_551 = controlPointPositions[551];
				ControlPointPositions_552 = controlPointPositions[552];
				ControlPointPositions_553 = controlPointPositions[553];
				ControlPointPositions_554 = controlPointPositions[554];
				ControlPointPositions_555 = controlPointPositions[555];
				ControlPointPositions_556 = controlPointPositions[556];
				ControlPointPositions_557 = controlPointPositions[557];
				ControlPointPositions_558 = controlPointPositions[558];
				ControlPointPositions_559 = controlPointPositions[559];
				ControlPointPositions_560 = controlPointPositions[560];
				ControlPointPositions_561 = controlPointPositions[561];
				ControlPointPositions_562 = controlPointPositions[562];
				ControlPointPositions_563 = controlPointPositions[563];
				ControlPointPositions_564 = controlPointPositions[564];
				ControlPointPositions_565 = controlPointPositions[565];
				ControlPointPositions_566 = controlPointPositions[566];
				ControlPointPositions_567 = controlPointPositions[567];
				ControlPointPositions_568 = controlPointPositions[568];
				ControlPointPositions_569 = controlPointPositions[569];
				ControlPointPositions_570 = controlPointPositions[570];
				ControlPointPositions_571 = controlPointPositions[571];
				ControlPointPositions_572 = controlPointPositions[572];
				ControlPointPositions_573 = controlPointPositions[573];
				ControlPointPositions_574 = controlPointPositions[574];
				ControlPointPositions_575 = controlPointPositions[575];
				ControlPointPositions_576 = controlPointPositions[576];
				ControlPointPositions_577 = controlPointPositions[577];
				ControlPointPositions_578 = controlPointPositions[578];
				ControlPointPositions_579 = controlPointPositions[579];
				ControlPointPositions_580 = controlPointPositions[580];
				ControlPointPositions_581 = controlPointPositions[581];
				ControlPointPositions_582 = controlPointPositions[582];
				ControlPointPositions_583 = controlPointPositions[583];
				ControlPointPositions_584 = controlPointPositions[584];
				ControlPointPositions_585 = controlPointPositions[585];
				ControlPointPositions_586 = controlPointPositions[586];
				ControlPointPositions_587 = controlPointPositions[587];
				ControlPointPositions_588 = controlPointPositions[588];
				ControlPointPositions_589 = controlPointPositions[589];
				ControlPointPositions_590 = controlPointPositions[590];
				ControlPointPositions_591 = controlPointPositions[591];
				ControlPointPositions_592 = controlPointPositions[592];
				ControlPointPositions_593 = controlPointPositions[593];
				ControlPointPositions_594 = controlPointPositions[594];
				ControlPointPositions_595 = controlPointPositions[595];
				ControlPointPositions_596 = controlPointPositions[596];
				ControlPointPositions_597 = controlPointPositions[597];
				ControlPointPositions_598 = controlPointPositions[598];
				ControlPointPositions_599 = controlPointPositions[599];
				ControlPointPositions_600 = controlPointPositions[600];
				ControlPointPositions_601 = controlPointPositions[601];
				ControlPointPositions_602 = controlPointPositions[602];
				ControlPointPositions_603 = controlPointPositions[603];
				ControlPointPositions_604 = controlPointPositions[604];
				ControlPointPositions_605 = controlPointPositions[605];
				ControlPointPositions_606 = controlPointPositions[606];
				ControlPointPositions_607 = controlPointPositions[607];
				ControlPointPositions_608 = controlPointPositions[608];
				ControlPointPositions_609 = controlPointPositions[609];
				ControlPointPositions_610 = controlPointPositions[610];
				ControlPointPositions_611 = controlPointPositions[611];
				ControlPointPositions_612 = controlPointPositions[612];
				ControlPointPositions_613 = controlPointPositions[613];
				ControlPointPositions_614 = controlPointPositions[614];
				ControlPointPositions_615 = controlPointPositions[615];
				ControlPointPositions_616 = controlPointPositions[616];
				ControlPointPositions_617 = controlPointPositions[617];
				ControlPointPositions_618 = controlPointPositions[618];
				ControlPointPositions_619 = controlPointPositions[619];
				ControlPointPositions_620 = controlPointPositions[620];
				ControlPointPositions_621 = controlPointPositions[621];
				ControlPointPositions_622 = controlPointPositions[622];
				ControlPointPositions_623 = controlPointPositions[623];
				ControlPointPositions_624 = controlPointPositions[624];
				ControlPointPositions_625 = controlPointPositions[625];
				ControlPointPositions_626 = controlPointPositions[626];
				ControlPointPositions_627 = controlPointPositions[627];
				ControlPointPositions_628 = controlPointPositions[628];
				ControlPointPositions_629 = controlPointPositions[629];
				ControlPointPositions_630 = controlPointPositions[630];
				ControlPointPositions_631 = controlPointPositions[631];
				ControlPointPositions_632 = controlPointPositions[632];
				ControlPointPositions_633 = controlPointPositions[633];
				ControlPointPositions_634 = controlPointPositions[634];
				ControlPointPositions_635 = controlPointPositions[635];
				ControlPointPositions_636 = controlPointPositions[636];
				ControlPointPositions_637 = controlPointPositions[637];
				ControlPointPositions_638 = controlPointPositions[638];
				ControlPointPositions_639 = controlPointPositions[639];
				ControlPointPositions_640 = controlPointPositions[640];
				ControlPointPositions_641 = controlPointPositions[641];
				ControlPointPositions_642 = controlPointPositions[642];
				ControlPointPositions_643 = controlPointPositions[643];
				ControlPointPositions_644 = controlPointPositions[644];
				ControlPointPositions_645 = controlPointPositions[645];
				ControlPointPositions_646 = controlPointPositions[646];
				ControlPointPositions_647 = controlPointPositions[647];
				ControlPointPositions_648 = controlPointPositions[648];
				ControlPointPositions_649 = controlPointPositions[649];
				ControlPointPositions_650 = controlPointPositions[650];
				ControlPointPositions_651 = controlPointPositions[651];
				ControlPointPositions_652 = controlPointPositions[652];
				ControlPointPositions_653 = controlPointPositions[653];
				ControlPointPositions_654 = controlPointPositions[654];
				ControlPointPositions_655 = controlPointPositions[655];
				ControlPointPositions_656 = controlPointPositions[656];
				ControlPointPositions_657 = controlPointPositions[657];
				ControlPointPositions_658 = controlPointPositions[658];
				ControlPointPositions_659 = controlPointPositions[659];
				ControlPointPositions_660 = controlPointPositions[660];
				ControlPointPositions_661 = controlPointPositions[661];
				ControlPointPositions_662 = controlPointPositions[662];
				ControlPointPositions_663 = controlPointPositions[663];
				ControlPointPositions_664 = controlPointPositions[664];
				ControlPointPositions_665 = controlPointPositions[665];
				ControlPointPositions_666 = controlPointPositions[666];
				ControlPointPositions_667 = controlPointPositions[667];
				ControlPointPositions_668 = controlPointPositions[668];
				ControlPointPositions_669 = controlPointPositions[669];
				ControlPointPositions_670 = controlPointPositions[670];
				ControlPointPositions_671 = controlPointPositions[671];
				ControlPointPositions_672 = controlPointPositions[672];
				ControlPointPositions_673 = controlPointPositions[673];
				ControlPointPositions_674 = controlPointPositions[674];
				ControlPointPositions_675 = controlPointPositions[675];
				ControlPointPositions_676 = controlPointPositions[676];
				ControlPointPositions_677 = controlPointPositions[677];
				ControlPointPositions_678 = controlPointPositions[678];
				ControlPointPositions_679 = controlPointPositions[679];
				ControlPointPositions_680 = controlPointPositions[680];
				ControlPointPositions_681 = controlPointPositions[681];
				ControlPointPositions_682 = controlPointPositions[682];
				ControlPointPositions_683 = controlPointPositions[683];
				ControlPointPositions_684 = controlPointPositions[684];
				ControlPointPositions_685 = controlPointPositions[685];
				ControlPointPositions_686 = controlPointPositions[686];
				ControlPointPositions_687 = controlPointPositions[687];
				ControlPointPositions_688 = controlPointPositions[688];
				ControlPointPositions_689 = controlPointPositions[689];
				ControlPointPositions_690 = controlPointPositions[690];
				ControlPointPositions_691 = controlPointPositions[691];
				ControlPointPositions_692 = controlPointPositions[692];
				ControlPointPositions_693 = controlPointPositions[693];
				ControlPointPositions_694 = controlPointPositions[694];
				ControlPointPositions_695 = controlPointPositions[695];
				ControlPointPositions_696 = controlPointPositions[696];
				ControlPointPositions_697 = controlPointPositions[697];
				ControlPointPositions_698 = controlPointPositions[698];
				ControlPointPositions_699 = controlPointPositions[699];
				ControlPointPositions_700 = controlPointPositions[700];
				ControlPointPositions_701 = controlPointPositions[701];
				ControlPointPositions_702 = controlPointPositions[702];
				ControlPointPositions_703 = controlPointPositions[703];
				ControlPointPositions_704 = controlPointPositions[704];
				ControlPointPositions_705 = controlPointPositions[705];
				ControlPointPositions_706 = controlPointPositions[706];
				ControlPointPositions_707 = controlPointPositions[707];
				ControlPointPositions_708 = controlPointPositions[708];
				ControlPointPositions_709 = controlPointPositions[709];
				ControlPointPositions_710 = controlPointPositions[710];
				ControlPointPositions_711 = controlPointPositions[711];
				ControlPointPositions_712 = controlPointPositions[712];
				ControlPointPositions_713 = controlPointPositions[713];
				ControlPointPositions_714 = controlPointPositions[714];
				ControlPointPositions_715 = controlPointPositions[715];
				ControlPointPositions_716 = controlPointPositions[716];
				ControlPointPositions_717 = controlPointPositions[717];
				ControlPointPositions_718 = controlPointPositions[718];
				ControlPointPositions_719 = controlPointPositions[719];
				ControlPointPositions_720 = controlPointPositions[720];
				ControlPointPositions_721 = controlPointPositions[721];
				ControlPointPositions_722 = controlPointPositions[722];
				ControlPointPositions_723 = controlPointPositions[723];
				ControlPointPositions_724 = controlPointPositions[724];
				ControlPointPositions_725 = controlPointPositions[725];
				ControlPointPositions_726 = controlPointPositions[726];
				ControlPointPositions_727 = controlPointPositions[727];
				ControlPointPositions_728 = controlPointPositions[728];
				ControlPointPositions_729 = controlPointPositions[729];
				ControlPointPositions_730 = controlPointPositions[730];
				ControlPointPositions_731 = controlPointPositions[731];
				ControlPointPositions_732 = controlPointPositions[732];
				ControlPointPositions_733 = controlPointPositions[733];
				ControlPointPositions_734 = controlPointPositions[734];
				ControlPointPositions_735 = controlPointPositions[735];
				ControlPointPositions_736 = controlPointPositions[736];
				ControlPointPositions_737 = controlPointPositions[737];
				ControlPointPositions_738 = controlPointPositions[738];
				ControlPointPositions_739 = controlPointPositions[739];
				ControlPointPositions_740 = controlPointPositions[740];
				ControlPointPositions_741 = controlPointPositions[741];
				ControlPointPositions_742 = controlPointPositions[742];
				ControlPointPositions_743 = controlPointPositions[743];
				ControlPointPositions_744 = controlPointPositions[744];
				ControlPointPositions_745 = controlPointPositions[745];
				ControlPointPositions_746 = controlPointPositions[746];
				ControlPointPositions_747 = controlPointPositions[747];
				ControlPointPositions_748 = controlPointPositions[748];
				ControlPointPositions_749 = controlPointPositions[749];
				ControlPointPositions_750 = controlPointPositions[750];
				ControlPointPositions_751 = controlPointPositions[751];
				ControlPointPositions_752 = controlPointPositions[752];
				ControlPointPositions_753 = controlPointPositions[753];
				ControlPointPositions_754 = controlPointPositions[754];
				ControlPointPositions_755 = controlPointPositions[755];
				ControlPointPositions_756 = controlPointPositions[756];
				ControlPointPositions_757 = controlPointPositions[757];
				ControlPointPositions_758 = controlPointPositions[758];
				ControlPointPositions_759 = controlPointPositions[759];
				ControlPointPositions_760 = controlPointPositions[760];
				ControlPointPositions_761 = controlPointPositions[761];
				ControlPointPositions_762 = controlPointPositions[762];
				ControlPointPositions_763 = controlPointPositions[763];
				ControlPointPositions_764 = controlPointPositions[764];
				ControlPointPositions_765 = controlPointPositions[765];
				ControlPointPositions_766 = controlPointPositions[766];
				ControlPointPositions_767 = controlPointPositions[767];
				ControlPointPositions_768 = controlPointPositions[768];
				ControlPointPositions_769 = controlPointPositions[769];
				ControlPointPositions_770 = controlPointPositions[770];
				ControlPointPositions_771 = controlPointPositions[771];
				ControlPointPositions_772 = controlPointPositions[772];
				ControlPointPositions_773 = controlPointPositions[773];
				ControlPointPositions_774 = controlPointPositions[774];
				ControlPointPositions_775 = controlPointPositions[775];
				ControlPointPositions_776 = controlPointPositions[776];
				ControlPointPositions_777 = controlPointPositions[777];
				ControlPointPositions_778 = controlPointPositions[778];
				ControlPointPositions_779 = controlPointPositions[779];
				ControlPointPositions_780 = controlPointPositions[780];
				ControlPointPositions_781 = controlPointPositions[781];
				ControlPointPositions_782 = controlPointPositions[782];
				ControlPointPositions_783 = controlPointPositions[783];
				ControlPointPositions_784 = controlPointPositions[784];
				ControlPointPositions_785 = controlPointPositions[785];
				ControlPointPositions_786 = controlPointPositions[786];
				ControlPointPositions_787 = controlPointPositions[787];
				ControlPointPositions_788 = controlPointPositions[788];
				ControlPointPositions_789 = controlPointPositions[789];
				ControlPointPositions_790 = controlPointPositions[790];
				ControlPointPositions_791 = controlPointPositions[791];
				ControlPointPositions_792 = controlPointPositions[792];
				ControlPointPositions_793 = controlPointPositions[793];
				ControlPointPositions_794 = controlPointPositions[794];
				ControlPointPositions_795 = controlPointPositions[795];
				ControlPointPositions_796 = controlPointPositions[796];
				ControlPointPositions_797 = controlPointPositions[797];
				ControlPointPositions_798 = controlPointPositions[798];
				ControlPointPositions_799 = controlPointPositions[799];
				ControlPointPositions_800 = controlPointPositions[800];
				ControlPointPositions_801 = controlPointPositions[801];
				ControlPointPositions_802 = controlPointPositions[802];
				ControlPointPositions_803 = controlPointPositions[803];
				ControlPointPositions_804 = controlPointPositions[804];
				ControlPointPositions_805 = controlPointPositions[805];
				ControlPointPositions_806 = controlPointPositions[806];
				ControlPointPositions_807 = controlPointPositions[807];
				ControlPointPositions_808 = controlPointPositions[808];
				ControlPointPositions_809 = controlPointPositions[809];
				ControlPointPositions_810 = controlPointPositions[810];
				ControlPointPositions_811 = controlPointPositions[811];
				ControlPointPositions_812 = controlPointPositions[812];
				ControlPointPositions_813 = controlPointPositions[813];
				ControlPointPositions_814 = controlPointPositions[814];
				ControlPointPositions_815 = controlPointPositions[815];
				ControlPointPositions_816 = controlPointPositions[816];
				ControlPointPositions_817 = controlPointPositions[817];
				ControlPointPositions_818 = controlPointPositions[818];
				ControlPointPositions_819 = controlPointPositions[819];
				ControlPointPositions_820 = controlPointPositions[820];
				ControlPointPositions_821 = controlPointPositions[821];
				ControlPointPositions_822 = controlPointPositions[822];
				ControlPointPositions_823 = controlPointPositions[823];
				ControlPointPositions_824 = controlPointPositions[824];
				ControlPointPositions_825 = controlPointPositions[825];
				ControlPointPositions_826 = controlPointPositions[826];
				ControlPointPositions_827 = controlPointPositions[827];
				ControlPointPositions_828 = controlPointPositions[828];
				ControlPointPositions_829 = controlPointPositions[829];
				ControlPointPositions_830 = controlPointPositions[830];
				ControlPointPositions_831 = controlPointPositions[831];
				ControlPointPositions_832 = controlPointPositions[832];
				ControlPointPositions_833 = controlPointPositions[833];
				ControlPointPositions_834 = controlPointPositions[834];
				ControlPointPositions_835 = controlPointPositions[835];
				ControlPointPositions_836 = controlPointPositions[836];
				ControlPointPositions_837 = controlPointPositions[837];
				ControlPointPositions_838 = controlPointPositions[838];
				ControlPointPositions_839 = controlPointPositions[839];
				ControlPointPositions_840 = controlPointPositions[840];
				ControlPointPositions_841 = controlPointPositions[841];
				ControlPointPositions_842 = controlPointPositions[842];
				ControlPointPositions_843 = controlPointPositions[843];
				ControlPointPositions_844 = controlPointPositions[844];
				ControlPointPositions_845 = controlPointPositions[845];
				ControlPointPositions_846 = controlPointPositions[846];
				ControlPointPositions_847 = controlPointPositions[847];
				ControlPointPositions_848 = controlPointPositions[848];
				ControlPointPositions_849 = controlPointPositions[849];
				ControlPointPositions_850 = controlPointPositions[850];
				ControlPointPositions_851 = controlPointPositions[851];
				ControlPointPositions_852 = controlPointPositions[852];
				ControlPointPositions_853 = controlPointPositions[853];
				ControlPointPositions_854 = controlPointPositions[854];
				ControlPointPositions_855 = controlPointPositions[855];
				ControlPointPositions_856 = controlPointPositions[856];
				ControlPointPositions_857 = controlPointPositions[857];
				ControlPointPositions_858 = controlPointPositions[858];
				ControlPointPositions_859 = controlPointPositions[859];
				ControlPointPositions_860 = controlPointPositions[860];
				ControlPointPositions_861 = controlPointPositions[861];
				ControlPointPositions_862 = controlPointPositions[862];
				ControlPointPositions_863 = controlPointPositions[863];
				ControlPointPositions_864 = controlPointPositions[864];
				ControlPointPositions_865 = controlPointPositions[865];
				ControlPointPositions_866 = controlPointPositions[866];
				ControlPointPositions_867 = controlPointPositions[867];
				ControlPointPositions_868 = controlPointPositions[868];
				ControlPointPositions_869 = controlPointPositions[869];
				ControlPointPositions_870 = controlPointPositions[870];
				ControlPointPositions_871 = controlPointPositions[871];
				ControlPointPositions_872 = controlPointPositions[872];
				ControlPointPositions_873 = controlPointPositions[873];
				ControlPointPositions_874 = controlPointPositions[874];
				ControlPointPositions_875 = controlPointPositions[875];
				ControlPointPositions_876 = controlPointPositions[876];
				ControlPointPositions_877 = controlPointPositions[877];
				ControlPointPositions_878 = controlPointPositions[878];
				ControlPointPositions_879 = controlPointPositions[879];
				ControlPointPositions_880 = controlPointPositions[880];
				ControlPointPositions_881 = controlPointPositions[881];
				ControlPointPositions_882 = controlPointPositions[882];
				ControlPointPositions_883 = controlPointPositions[883];
				ControlPointPositions_884 = controlPointPositions[884];
				ControlPointPositions_885 = controlPointPositions[885];
				ControlPointPositions_886 = controlPointPositions[886];
				ControlPointPositions_887 = controlPointPositions[887];
				ControlPointPositions_888 = controlPointPositions[888];
				ControlPointPositions_889 = controlPointPositions[889];
				ControlPointPositions_890 = controlPointPositions[890];
				ControlPointPositions_891 = controlPointPositions[891];
				ControlPointPositions_892 = controlPointPositions[892];
				ControlPointPositions_893 = controlPointPositions[893];
				ControlPointPositions_894 = controlPointPositions[894];
				ControlPointPositions_895 = controlPointPositions[895];
				ControlPointPositions_896 = controlPointPositions[896];
				ControlPointPositions_897 = controlPointPositions[897];
				ControlPointPositions_898 = controlPointPositions[898];
				ControlPointPositions_899 = controlPointPositions[899];
				ControlPointPositions_900 = controlPointPositions[900];
				ControlPointPositions_901 = controlPointPositions[901];
				ControlPointPositions_902 = controlPointPositions[902];
				ControlPointPositions_903 = controlPointPositions[903];
				ControlPointPositions_904 = controlPointPositions[904];
				ControlPointPositions_905 = controlPointPositions[905];
				ControlPointPositions_906 = controlPointPositions[906];
				ControlPointPositions_907 = controlPointPositions[907];
				ControlPointPositions_908 = controlPointPositions[908];
				ControlPointPositions_909 = controlPointPositions[909];
				ControlPointPositions_910 = controlPointPositions[910];
				ControlPointPositions_911 = controlPointPositions[911];
				ControlPointPositions_912 = controlPointPositions[912];
				ControlPointPositions_913 = controlPointPositions[913];
				ControlPointPositions_914 = controlPointPositions[914];
				ControlPointPositions_915 = controlPointPositions[915];
				ControlPointPositions_916 = controlPointPositions[916];
				ControlPointPositions_917 = controlPointPositions[917];
				ControlPointPositions_918 = controlPointPositions[918];
				ControlPointPositions_919 = controlPointPositions[919];
				ControlPointPositions_920 = controlPointPositions[920];
				ControlPointPositions_921 = controlPointPositions[921];
				ControlPointPositions_922 = controlPointPositions[922];
				ControlPointPositions_923 = controlPointPositions[923];
				ControlPointPositions_924 = controlPointPositions[924];
				ControlPointPositions_925 = controlPointPositions[925];
				ControlPointPositions_926 = controlPointPositions[926];
				ControlPointPositions_927 = controlPointPositions[927];
				ControlPointPositions_928 = controlPointPositions[928];
				ControlPointPositions_929 = controlPointPositions[929];
				ControlPointPositions_930 = controlPointPositions[930];
				ControlPointPositions_931 = controlPointPositions[931];
				ControlPointPositions_932 = controlPointPositions[932];
				ControlPointPositions_933 = controlPointPositions[933];
				ControlPointPositions_934 = controlPointPositions[934];
				ControlPointPositions_935 = controlPointPositions[935];
				ControlPointPositions_936 = controlPointPositions[936];
				ControlPointPositions_937 = controlPointPositions[937];
				ControlPointPositions_938 = controlPointPositions[938];
				ControlPointPositions_939 = controlPointPositions[939];
				ControlPointPositions_940 = controlPointPositions[940];
				ControlPointPositions_941 = controlPointPositions[941];
				ControlPointPositions_942 = controlPointPositions[942];
				ControlPointPositions_943 = controlPointPositions[943];
				ControlPointPositions_944 = controlPointPositions[944];
				ControlPointPositions_945 = controlPointPositions[945];
				ControlPointPositions_946 = controlPointPositions[946];
				ControlPointPositions_947 = controlPointPositions[947];
				ControlPointPositions_948 = controlPointPositions[948];
				ControlPointPositions_949 = controlPointPositions[949];
				ControlPointPositions_950 = controlPointPositions[950];
				ControlPointPositions_951 = controlPointPositions[951];
				ControlPointPositions_952 = controlPointPositions[952];
				ControlPointPositions_953 = controlPointPositions[953];
				ControlPointPositions_954 = controlPointPositions[954];
				ControlPointPositions_955 = controlPointPositions[955];
				ControlPointPositions_956 = controlPointPositions[956];
				ControlPointPositions_957 = controlPointPositions[957];
				ControlPointPositions_958 = controlPointPositions[958];
				ControlPointPositions_959 = controlPointPositions[959];
				ControlPointPositions_960 = controlPointPositions[960];
				ControlPointPositions_961 = controlPointPositions[961];
				ControlPointPositions_962 = controlPointPositions[962];
				ControlPointPositions_963 = controlPointPositions[963];
				ControlPointPositions_964 = controlPointPositions[964];
				ControlPointPositions_965 = controlPointPositions[965];
				ControlPointPositions_966 = controlPointPositions[966];
				ControlPointPositions_967 = controlPointPositions[967];
				ControlPointPositions_968 = controlPointPositions[968];
				ControlPointPositions_969 = controlPointPositions[969];
				ControlPointPositions_970 = controlPointPositions[970];
				ControlPointPositions_971 = controlPointPositions[971];
				ControlPointPositions_972 = controlPointPositions[972];
				ControlPointPositions_973 = controlPointPositions[973];
				ControlPointPositions_974 = controlPointPositions[974];
				ControlPointPositions_975 = controlPointPositions[975];
				ControlPointPositions_976 = controlPointPositions[976];
				ControlPointPositions_977 = controlPointPositions[977];
				ControlPointPositions_978 = controlPointPositions[978];
				ControlPointPositions_979 = controlPointPositions[979];
				ControlPointPositions_980 = controlPointPositions[980];
				ControlPointPositions_981 = controlPointPositions[981];
				ControlPointPositions_982 = controlPointPositions[982];
				ControlPointPositions_983 = controlPointPositions[983];
				ControlPointPositions_984 = controlPointPositions[984];
				ControlPointPositions_985 = controlPointPositions[985];
				ControlPointPositions_986 = controlPointPositions[986];
				ControlPointPositions_987 = controlPointPositions[987];
				ControlPointPositions_988 = controlPointPositions[988];
				ControlPointPositions_989 = controlPointPositions[989];
				ControlPointPositions_990 = controlPointPositions[990];
				ControlPointPositions_991 = controlPointPositions[991];
				ControlPointPositions_992 = controlPointPositions[992];
				ControlPointPositions_993 = controlPointPositions[993];
				ControlPointPositions_994 = controlPointPositions[994];
				ControlPointPositions_995 = controlPointPositions[995];
				ControlPointPositions_996 = controlPointPositions[996];
				ControlPointPositions_997 = controlPointPositions[997];
				ControlPointPositions_998 = controlPointPositions[998];
				ControlPointPositions_999 = controlPointPositions[999];
				ControlPointPositions_1000 = controlPointPositions[1000];
				ControlPointPositions_1001 = controlPointPositions[1001];
				ControlPointPositions_1002 = controlPointPositions[1002];
				ControlPointPositions_1003 = controlPointPositions[1003];
				ControlPointPositions_1004 = controlPointPositions[1004];
				ControlPointPositions_1005 = controlPointPositions[1005];
				ControlPointPositions_1006 = controlPointPositions[1006];
				ControlPointPositions_1007 = controlPointPositions[1007];
				ControlPointPositions_1008 = controlPointPositions[1008];
				ControlPointPositions_1009 = controlPointPositions[1009];
				ControlPointPositions_1010 = controlPointPositions[1010];
				ControlPointPositions_1011 = controlPointPositions[1011];
				ControlPointPositions_1012 = controlPointPositions[1012];
				ControlPointPositions_1013 = controlPointPositions[1013];
				ControlPointPositions_1014 = controlPointPositions[1014];
				ControlPointPositions_1015 = controlPointPositions[1015];
				ControlPointPositions_1016 = controlPointPositions[1016];
				ControlPointPositions_1017 = controlPointPositions[1017];
				ControlPointPositions_1018 = controlPointPositions[1018];
				ControlPointPositions_1019 = controlPointPositions[1019];
				ControlPointPositions_1020 = controlPointPositions[1020];
				ControlPointPositions_1021 = controlPointPositions[1021];
				ControlPointPositions_1022 = controlPointPositions[1022];
				ControlPointPositions_1023 = controlPointPositions[1023];
				ControlPointPositions_1024 = controlPointPositions[1024];
			}
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_GAMMA_CONTROL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiGammaControl
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Scale")]
		[NativeName(NativeNameType.Type, "DXGI_RGB")]
		public DxgiRgb Scale;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Offset")]
		[NativeName(NativeNameType.Type, "DXGI_RGB")]
		public DxgiRgb Offset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GammaCurve")]
		[NativeName(NativeNameType.Type, "DXGI_RGB[1025]")]
		public DxgiRgb GammaCurve_0;
		public DxgiRgb GammaCurve_1;
		public DxgiRgb GammaCurve_2;
		public DxgiRgb GammaCurve_3;
		public DxgiRgb GammaCurve_4;
		public DxgiRgb GammaCurve_5;
		public DxgiRgb GammaCurve_6;
		public DxgiRgb GammaCurve_7;
		public DxgiRgb GammaCurve_8;
		public DxgiRgb GammaCurve_9;
		public DxgiRgb GammaCurve_10;
		public DxgiRgb GammaCurve_11;
		public DxgiRgb GammaCurve_12;
		public DxgiRgb GammaCurve_13;
		public DxgiRgb GammaCurve_14;
		public DxgiRgb GammaCurve_15;
		public DxgiRgb GammaCurve_16;
		public DxgiRgb GammaCurve_17;
		public DxgiRgb GammaCurve_18;
		public DxgiRgb GammaCurve_19;
		public DxgiRgb GammaCurve_20;
		public DxgiRgb GammaCurve_21;
		public DxgiRgb GammaCurve_22;
		public DxgiRgb GammaCurve_23;
		public DxgiRgb GammaCurve_24;
		public DxgiRgb GammaCurve_25;
		public DxgiRgb GammaCurve_26;
		public DxgiRgb GammaCurve_27;
		public DxgiRgb GammaCurve_28;
		public DxgiRgb GammaCurve_29;
		public DxgiRgb GammaCurve_30;
		public DxgiRgb GammaCurve_31;
		public DxgiRgb GammaCurve_32;
		public DxgiRgb GammaCurve_33;
		public DxgiRgb GammaCurve_34;
		public DxgiRgb GammaCurve_35;
		public DxgiRgb GammaCurve_36;
		public DxgiRgb GammaCurve_37;
		public DxgiRgb GammaCurve_38;
		public DxgiRgb GammaCurve_39;
		public DxgiRgb GammaCurve_40;
		public DxgiRgb GammaCurve_41;
		public DxgiRgb GammaCurve_42;
		public DxgiRgb GammaCurve_43;
		public DxgiRgb GammaCurve_44;
		public DxgiRgb GammaCurve_45;
		public DxgiRgb GammaCurve_46;
		public DxgiRgb GammaCurve_47;
		public DxgiRgb GammaCurve_48;
		public DxgiRgb GammaCurve_49;
		public DxgiRgb GammaCurve_50;
		public DxgiRgb GammaCurve_51;
		public DxgiRgb GammaCurve_52;
		public DxgiRgb GammaCurve_53;
		public DxgiRgb GammaCurve_54;
		public DxgiRgb GammaCurve_55;
		public DxgiRgb GammaCurve_56;
		public DxgiRgb GammaCurve_57;
		public DxgiRgb GammaCurve_58;
		public DxgiRgb GammaCurve_59;
		public DxgiRgb GammaCurve_60;
		public DxgiRgb GammaCurve_61;
		public DxgiRgb GammaCurve_62;
		public DxgiRgb GammaCurve_63;
		public DxgiRgb GammaCurve_64;
		public DxgiRgb GammaCurve_65;
		public DxgiRgb GammaCurve_66;
		public DxgiRgb GammaCurve_67;
		public DxgiRgb GammaCurve_68;
		public DxgiRgb GammaCurve_69;
		public DxgiRgb GammaCurve_70;
		public DxgiRgb GammaCurve_71;
		public DxgiRgb GammaCurve_72;
		public DxgiRgb GammaCurve_73;
		public DxgiRgb GammaCurve_74;
		public DxgiRgb GammaCurve_75;
		public DxgiRgb GammaCurve_76;
		public DxgiRgb GammaCurve_77;
		public DxgiRgb GammaCurve_78;
		public DxgiRgb GammaCurve_79;
		public DxgiRgb GammaCurve_80;
		public DxgiRgb GammaCurve_81;
		public DxgiRgb GammaCurve_82;
		public DxgiRgb GammaCurve_83;
		public DxgiRgb GammaCurve_84;
		public DxgiRgb GammaCurve_85;
		public DxgiRgb GammaCurve_86;
		public DxgiRgb GammaCurve_87;
		public DxgiRgb GammaCurve_88;
		public DxgiRgb GammaCurve_89;
		public DxgiRgb GammaCurve_90;
		public DxgiRgb GammaCurve_91;
		public DxgiRgb GammaCurve_92;
		public DxgiRgb GammaCurve_93;
		public DxgiRgb GammaCurve_94;
		public DxgiRgb GammaCurve_95;
		public DxgiRgb GammaCurve_96;
		public DxgiRgb GammaCurve_97;
		public DxgiRgb GammaCurve_98;
		public DxgiRgb GammaCurve_99;
		public DxgiRgb GammaCurve_100;
		public DxgiRgb GammaCurve_101;
		public DxgiRgb GammaCurve_102;
		public DxgiRgb GammaCurve_103;
		public DxgiRgb GammaCurve_104;
		public DxgiRgb GammaCurve_105;
		public DxgiRgb GammaCurve_106;
		public DxgiRgb GammaCurve_107;
		public DxgiRgb GammaCurve_108;
		public DxgiRgb GammaCurve_109;
		public DxgiRgb GammaCurve_110;
		public DxgiRgb GammaCurve_111;
		public DxgiRgb GammaCurve_112;
		public DxgiRgb GammaCurve_113;
		public DxgiRgb GammaCurve_114;
		public DxgiRgb GammaCurve_115;
		public DxgiRgb GammaCurve_116;
		public DxgiRgb GammaCurve_117;
		public DxgiRgb GammaCurve_118;
		public DxgiRgb GammaCurve_119;
		public DxgiRgb GammaCurve_120;
		public DxgiRgb GammaCurve_121;
		public DxgiRgb GammaCurve_122;
		public DxgiRgb GammaCurve_123;
		public DxgiRgb GammaCurve_124;
		public DxgiRgb GammaCurve_125;
		public DxgiRgb GammaCurve_126;
		public DxgiRgb GammaCurve_127;
		public DxgiRgb GammaCurve_128;
		public DxgiRgb GammaCurve_129;
		public DxgiRgb GammaCurve_130;
		public DxgiRgb GammaCurve_131;
		public DxgiRgb GammaCurve_132;
		public DxgiRgb GammaCurve_133;
		public DxgiRgb GammaCurve_134;
		public DxgiRgb GammaCurve_135;
		public DxgiRgb GammaCurve_136;
		public DxgiRgb GammaCurve_137;
		public DxgiRgb GammaCurve_138;
		public DxgiRgb GammaCurve_139;
		public DxgiRgb GammaCurve_140;
		public DxgiRgb GammaCurve_141;
		public DxgiRgb GammaCurve_142;
		public DxgiRgb GammaCurve_143;
		public DxgiRgb GammaCurve_144;
		public DxgiRgb GammaCurve_145;
		public DxgiRgb GammaCurve_146;
		public DxgiRgb GammaCurve_147;
		public DxgiRgb GammaCurve_148;
		public DxgiRgb GammaCurve_149;
		public DxgiRgb GammaCurve_150;
		public DxgiRgb GammaCurve_151;
		public DxgiRgb GammaCurve_152;
		public DxgiRgb GammaCurve_153;
		public DxgiRgb GammaCurve_154;
		public DxgiRgb GammaCurve_155;
		public DxgiRgb GammaCurve_156;
		public DxgiRgb GammaCurve_157;
		public DxgiRgb GammaCurve_158;
		public DxgiRgb GammaCurve_159;
		public DxgiRgb GammaCurve_160;
		public DxgiRgb GammaCurve_161;
		public DxgiRgb GammaCurve_162;
		public DxgiRgb GammaCurve_163;
		public DxgiRgb GammaCurve_164;
		public DxgiRgb GammaCurve_165;
		public DxgiRgb GammaCurve_166;
		public DxgiRgb GammaCurve_167;
		public DxgiRgb GammaCurve_168;
		public DxgiRgb GammaCurve_169;
		public DxgiRgb GammaCurve_170;
		public DxgiRgb GammaCurve_171;
		public DxgiRgb GammaCurve_172;
		public DxgiRgb GammaCurve_173;
		public DxgiRgb GammaCurve_174;
		public DxgiRgb GammaCurve_175;
		public DxgiRgb GammaCurve_176;
		public DxgiRgb GammaCurve_177;
		public DxgiRgb GammaCurve_178;
		public DxgiRgb GammaCurve_179;
		public DxgiRgb GammaCurve_180;
		public DxgiRgb GammaCurve_181;
		public DxgiRgb GammaCurve_182;
		public DxgiRgb GammaCurve_183;
		public DxgiRgb GammaCurve_184;
		public DxgiRgb GammaCurve_185;
		public DxgiRgb GammaCurve_186;
		public DxgiRgb GammaCurve_187;
		public DxgiRgb GammaCurve_188;
		public DxgiRgb GammaCurve_189;
		public DxgiRgb GammaCurve_190;
		public DxgiRgb GammaCurve_191;
		public DxgiRgb GammaCurve_192;
		public DxgiRgb GammaCurve_193;
		public DxgiRgb GammaCurve_194;
		public DxgiRgb GammaCurve_195;
		public DxgiRgb GammaCurve_196;
		public DxgiRgb GammaCurve_197;
		public DxgiRgb GammaCurve_198;
		public DxgiRgb GammaCurve_199;
		public DxgiRgb GammaCurve_200;
		public DxgiRgb GammaCurve_201;
		public DxgiRgb GammaCurve_202;
		public DxgiRgb GammaCurve_203;
		public DxgiRgb GammaCurve_204;
		public DxgiRgb GammaCurve_205;
		public DxgiRgb GammaCurve_206;
		public DxgiRgb GammaCurve_207;
		public DxgiRgb GammaCurve_208;
		public DxgiRgb GammaCurve_209;
		public DxgiRgb GammaCurve_210;
		public DxgiRgb GammaCurve_211;
		public DxgiRgb GammaCurve_212;
		public DxgiRgb GammaCurve_213;
		public DxgiRgb GammaCurve_214;
		public DxgiRgb GammaCurve_215;
		public DxgiRgb GammaCurve_216;
		public DxgiRgb GammaCurve_217;
		public DxgiRgb GammaCurve_218;
		public DxgiRgb GammaCurve_219;
		public DxgiRgb GammaCurve_220;
		public DxgiRgb GammaCurve_221;
		public DxgiRgb GammaCurve_222;
		public DxgiRgb GammaCurve_223;
		public DxgiRgb GammaCurve_224;
		public DxgiRgb GammaCurve_225;
		public DxgiRgb GammaCurve_226;
		public DxgiRgb GammaCurve_227;
		public DxgiRgb GammaCurve_228;
		public DxgiRgb GammaCurve_229;
		public DxgiRgb GammaCurve_230;
		public DxgiRgb GammaCurve_231;
		public DxgiRgb GammaCurve_232;
		public DxgiRgb GammaCurve_233;
		public DxgiRgb GammaCurve_234;
		public DxgiRgb GammaCurve_235;
		public DxgiRgb GammaCurve_236;
		public DxgiRgb GammaCurve_237;
		public DxgiRgb GammaCurve_238;
		public DxgiRgb GammaCurve_239;
		public DxgiRgb GammaCurve_240;
		public DxgiRgb GammaCurve_241;
		public DxgiRgb GammaCurve_242;
		public DxgiRgb GammaCurve_243;
		public DxgiRgb GammaCurve_244;
		public DxgiRgb GammaCurve_245;
		public DxgiRgb GammaCurve_246;
		public DxgiRgb GammaCurve_247;
		public DxgiRgb GammaCurve_248;
		public DxgiRgb GammaCurve_249;
		public DxgiRgb GammaCurve_250;
		public DxgiRgb GammaCurve_251;
		public DxgiRgb GammaCurve_252;
		public DxgiRgb GammaCurve_253;
		public DxgiRgb GammaCurve_254;
		public DxgiRgb GammaCurve_255;
		public DxgiRgb GammaCurve_256;
		public DxgiRgb GammaCurve_257;
		public DxgiRgb GammaCurve_258;
		public DxgiRgb GammaCurve_259;
		public DxgiRgb GammaCurve_260;
		public DxgiRgb GammaCurve_261;
		public DxgiRgb GammaCurve_262;
		public DxgiRgb GammaCurve_263;
		public DxgiRgb GammaCurve_264;
		public DxgiRgb GammaCurve_265;
		public DxgiRgb GammaCurve_266;
		public DxgiRgb GammaCurve_267;
		public DxgiRgb GammaCurve_268;
		public DxgiRgb GammaCurve_269;
		public DxgiRgb GammaCurve_270;
		public DxgiRgb GammaCurve_271;
		public DxgiRgb GammaCurve_272;
		public DxgiRgb GammaCurve_273;
		public DxgiRgb GammaCurve_274;
		public DxgiRgb GammaCurve_275;
		public DxgiRgb GammaCurve_276;
		public DxgiRgb GammaCurve_277;
		public DxgiRgb GammaCurve_278;
		public DxgiRgb GammaCurve_279;
		public DxgiRgb GammaCurve_280;
		public DxgiRgb GammaCurve_281;
		public DxgiRgb GammaCurve_282;
		public DxgiRgb GammaCurve_283;
		public DxgiRgb GammaCurve_284;
		public DxgiRgb GammaCurve_285;
		public DxgiRgb GammaCurve_286;
		public DxgiRgb GammaCurve_287;
		public DxgiRgb GammaCurve_288;
		public DxgiRgb GammaCurve_289;
		public DxgiRgb GammaCurve_290;
		public DxgiRgb GammaCurve_291;
		public DxgiRgb GammaCurve_292;
		public DxgiRgb GammaCurve_293;
		public DxgiRgb GammaCurve_294;
		public DxgiRgb GammaCurve_295;
		public DxgiRgb GammaCurve_296;
		public DxgiRgb GammaCurve_297;
		public DxgiRgb GammaCurve_298;
		public DxgiRgb GammaCurve_299;
		public DxgiRgb GammaCurve_300;
		public DxgiRgb GammaCurve_301;
		public DxgiRgb GammaCurve_302;
		public DxgiRgb GammaCurve_303;
		public DxgiRgb GammaCurve_304;
		public DxgiRgb GammaCurve_305;
		public DxgiRgb GammaCurve_306;
		public DxgiRgb GammaCurve_307;
		public DxgiRgb GammaCurve_308;
		public DxgiRgb GammaCurve_309;
		public DxgiRgb GammaCurve_310;
		public DxgiRgb GammaCurve_311;
		public DxgiRgb GammaCurve_312;
		public DxgiRgb GammaCurve_313;
		public DxgiRgb GammaCurve_314;
		public DxgiRgb GammaCurve_315;
		public DxgiRgb GammaCurve_316;
		public DxgiRgb GammaCurve_317;
		public DxgiRgb GammaCurve_318;
		public DxgiRgb GammaCurve_319;
		public DxgiRgb GammaCurve_320;
		public DxgiRgb GammaCurve_321;
		public DxgiRgb GammaCurve_322;
		public DxgiRgb GammaCurve_323;
		public DxgiRgb GammaCurve_324;
		public DxgiRgb GammaCurve_325;
		public DxgiRgb GammaCurve_326;
		public DxgiRgb GammaCurve_327;
		public DxgiRgb GammaCurve_328;
		public DxgiRgb GammaCurve_329;
		public DxgiRgb GammaCurve_330;
		public DxgiRgb GammaCurve_331;
		public DxgiRgb GammaCurve_332;
		public DxgiRgb GammaCurve_333;
		public DxgiRgb GammaCurve_334;
		public DxgiRgb GammaCurve_335;
		public DxgiRgb GammaCurve_336;
		public DxgiRgb GammaCurve_337;
		public DxgiRgb GammaCurve_338;
		public DxgiRgb GammaCurve_339;
		public DxgiRgb GammaCurve_340;
		public DxgiRgb GammaCurve_341;
		public DxgiRgb GammaCurve_342;
		public DxgiRgb GammaCurve_343;
		public DxgiRgb GammaCurve_344;
		public DxgiRgb GammaCurve_345;
		public DxgiRgb GammaCurve_346;
		public DxgiRgb GammaCurve_347;
		public DxgiRgb GammaCurve_348;
		public DxgiRgb GammaCurve_349;
		public DxgiRgb GammaCurve_350;
		public DxgiRgb GammaCurve_351;
		public DxgiRgb GammaCurve_352;
		public DxgiRgb GammaCurve_353;
		public DxgiRgb GammaCurve_354;
		public DxgiRgb GammaCurve_355;
		public DxgiRgb GammaCurve_356;
		public DxgiRgb GammaCurve_357;
		public DxgiRgb GammaCurve_358;
		public DxgiRgb GammaCurve_359;
		public DxgiRgb GammaCurve_360;
		public DxgiRgb GammaCurve_361;
		public DxgiRgb GammaCurve_362;
		public DxgiRgb GammaCurve_363;
		public DxgiRgb GammaCurve_364;
		public DxgiRgb GammaCurve_365;
		public DxgiRgb GammaCurve_366;
		public DxgiRgb GammaCurve_367;
		public DxgiRgb GammaCurve_368;
		public DxgiRgb GammaCurve_369;
		public DxgiRgb GammaCurve_370;
		public DxgiRgb GammaCurve_371;
		public DxgiRgb GammaCurve_372;
		public DxgiRgb GammaCurve_373;
		public DxgiRgb GammaCurve_374;
		public DxgiRgb GammaCurve_375;
		public DxgiRgb GammaCurve_376;
		public DxgiRgb GammaCurve_377;
		public DxgiRgb GammaCurve_378;
		public DxgiRgb GammaCurve_379;
		public DxgiRgb GammaCurve_380;
		public DxgiRgb GammaCurve_381;
		public DxgiRgb GammaCurve_382;
		public DxgiRgb GammaCurve_383;
		public DxgiRgb GammaCurve_384;
		public DxgiRgb GammaCurve_385;
		public DxgiRgb GammaCurve_386;
		public DxgiRgb GammaCurve_387;
		public DxgiRgb GammaCurve_388;
		public DxgiRgb GammaCurve_389;
		public DxgiRgb GammaCurve_390;
		public DxgiRgb GammaCurve_391;
		public DxgiRgb GammaCurve_392;
		public DxgiRgb GammaCurve_393;
		public DxgiRgb GammaCurve_394;
		public DxgiRgb GammaCurve_395;
		public DxgiRgb GammaCurve_396;
		public DxgiRgb GammaCurve_397;
		public DxgiRgb GammaCurve_398;
		public DxgiRgb GammaCurve_399;
		public DxgiRgb GammaCurve_400;
		public DxgiRgb GammaCurve_401;
		public DxgiRgb GammaCurve_402;
		public DxgiRgb GammaCurve_403;
		public DxgiRgb GammaCurve_404;
		public DxgiRgb GammaCurve_405;
		public DxgiRgb GammaCurve_406;
		public DxgiRgb GammaCurve_407;
		public DxgiRgb GammaCurve_408;
		public DxgiRgb GammaCurve_409;
		public DxgiRgb GammaCurve_410;
		public DxgiRgb GammaCurve_411;
		public DxgiRgb GammaCurve_412;
		public DxgiRgb GammaCurve_413;
		public DxgiRgb GammaCurve_414;
		public DxgiRgb GammaCurve_415;
		public DxgiRgb GammaCurve_416;
		public DxgiRgb GammaCurve_417;
		public DxgiRgb GammaCurve_418;
		public DxgiRgb GammaCurve_419;
		public DxgiRgb GammaCurve_420;
		public DxgiRgb GammaCurve_421;
		public DxgiRgb GammaCurve_422;
		public DxgiRgb GammaCurve_423;
		public DxgiRgb GammaCurve_424;
		public DxgiRgb GammaCurve_425;
		public DxgiRgb GammaCurve_426;
		public DxgiRgb GammaCurve_427;
		public DxgiRgb GammaCurve_428;
		public DxgiRgb GammaCurve_429;
		public DxgiRgb GammaCurve_430;
		public DxgiRgb GammaCurve_431;
		public DxgiRgb GammaCurve_432;
		public DxgiRgb GammaCurve_433;
		public DxgiRgb GammaCurve_434;
		public DxgiRgb GammaCurve_435;
		public DxgiRgb GammaCurve_436;
		public DxgiRgb GammaCurve_437;
		public DxgiRgb GammaCurve_438;
		public DxgiRgb GammaCurve_439;
		public DxgiRgb GammaCurve_440;
		public DxgiRgb GammaCurve_441;
		public DxgiRgb GammaCurve_442;
		public DxgiRgb GammaCurve_443;
		public DxgiRgb GammaCurve_444;
		public DxgiRgb GammaCurve_445;
		public DxgiRgb GammaCurve_446;
		public DxgiRgb GammaCurve_447;
		public DxgiRgb GammaCurve_448;
		public DxgiRgb GammaCurve_449;
		public DxgiRgb GammaCurve_450;
		public DxgiRgb GammaCurve_451;
		public DxgiRgb GammaCurve_452;
		public DxgiRgb GammaCurve_453;
		public DxgiRgb GammaCurve_454;
		public DxgiRgb GammaCurve_455;
		public DxgiRgb GammaCurve_456;
		public DxgiRgb GammaCurve_457;
		public DxgiRgb GammaCurve_458;
		public DxgiRgb GammaCurve_459;
		public DxgiRgb GammaCurve_460;
		public DxgiRgb GammaCurve_461;
		public DxgiRgb GammaCurve_462;
		public DxgiRgb GammaCurve_463;
		public DxgiRgb GammaCurve_464;
		public DxgiRgb GammaCurve_465;
		public DxgiRgb GammaCurve_466;
		public DxgiRgb GammaCurve_467;
		public DxgiRgb GammaCurve_468;
		public DxgiRgb GammaCurve_469;
		public DxgiRgb GammaCurve_470;
		public DxgiRgb GammaCurve_471;
		public DxgiRgb GammaCurve_472;
		public DxgiRgb GammaCurve_473;
		public DxgiRgb GammaCurve_474;
		public DxgiRgb GammaCurve_475;
		public DxgiRgb GammaCurve_476;
		public DxgiRgb GammaCurve_477;
		public DxgiRgb GammaCurve_478;
		public DxgiRgb GammaCurve_479;
		public DxgiRgb GammaCurve_480;
		public DxgiRgb GammaCurve_481;
		public DxgiRgb GammaCurve_482;
		public DxgiRgb GammaCurve_483;
		public DxgiRgb GammaCurve_484;
		public DxgiRgb GammaCurve_485;
		public DxgiRgb GammaCurve_486;
		public DxgiRgb GammaCurve_487;
		public DxgiRgb GammaCurve_488;
		public DxgiRgb GammaCurve_489;
		public DxgiRgb GammaCurve_490;
		public DxgiRgb GammaCurve_491;
		public DxgiRgb GammaCurve_492;
		public DxgiRgb GammaCurve_493;
		public DxgiRgb GammaCurve_494;
		public DxgiRgb GammaCurve_495;
		public DxgiRgb GammaCurve_496;
		public DxgiRgb GammaCurve_497;
		public DxgiRgb GammaCurve_498;
		public DxgiRgb GammaCurve_499;
		public DxgiRgb GammaCurve_500;
		public DxgiRgb GammaCurve_501;
		public DxgiRgb GammaCurve_502;
		public DxgiRgb GammaCurve_503;
		public DxgiRgb GammaCurve_504;
		public DxgiRgb GammaCurve_505;
		public DxgiRgb GammaCurve_506;
		public DxgiRgb GammaCurve_507;
		public DxgiRgb GammaCurve_508;
		public DxgiRgb GammaCurve_509;
		public DxgiRgb GammaCurve_510;
		public DxgiRgb GammaCurve_511;
		public DxgiRgb GammaCurve_512;
		public DxgiRgb GammaCurve_513;
		public DxgiRgb GammaCurve_514;
		public DxgiRgb GammaCurve_515;
		public DxgiRgb GammaCurve_516;
		public DxgiRgb GammaCurve_517;
		public DxgiRgb GammaCurve_518;
		public DxgiRgb GammaCurve_519;
		public DxgiRgb GammaCurve_520;
		public DxgiRgb GammaCurve_521;
		public DxgiRgb GammaCurve_522;
		public DxgiRgb GammaCurve_523;
		public DxgiRgb GammaCurve_524;
		public DxgiRgb GammaCurve_525;
		public DxgiRgb GammaCurve_526;
		public DxgiRgb GammaCurve_527;
		public DxgiRgb GammaCurve_528;
		public DxgiRgb GammaCurve_529;
		public DxgiRgb GammaCurve_530;
		public DxgiRgb GammaCurve_531;
		public DxgiRgb GammaCurve_532;
		public DxgiRgb GammaCurve_533;
		public DxgiRgb GammaCurve_534;
		public DxgiRgb GammaCurve_535;
		public DxgiRgb GammaCurve_536;
		public DxgiRgb GammaCurve_537;
		public DxgiRgb GammaCurve_538;
		public DxgiRgb GammaCurve_539;
		public DxgiRgb GammaCurve_540;
		public DxgiRgb GammaCurve_541;
		public DxgiRgb GammaCurve_542;
		public DxgiRgb GammaCurve_543;
		public DxgiRgb GammaCurve_544;
		public DxgiRgb GammaCurve_545;
		public DxgiRgb GammaCurve_546;
		public DxgiRgb GammaCurve_547;
		public DxgiRgb GammaCurve_548;
		public DxgiRgb GammaCurve_549;
		public DxgiRgb GammaCurve_550;
		public DxgiRgb GammaCurve_551;
		public DxgiRgb GammaCurve_552;
		public DxgiRgb GammaCurve_553;
		public DxgiRgb GammaCurve_554;
		public DxgiRgb GammaCurve_555;
		public DxgiRgb GammaCurve_556;
		public DxgiRgb GammaCurve_557;
		public DxgiRgb GammaCurve_558;
		public DxgiRgb GammaCurve_559;
		public DxgiRgb GammaCurve_560;
		public DxgiRgb GammaCurve_561;
		public DxgiRgb GammaCurve_562;
		public DxgiRgb GammaCurve_563;
		public DxgiRgb GammaCurve_564;
		public DxgiRgb GammaCurve_565;
		public DxgiRgb GammaCurve_566;
		public DxgiRgb GammaCurve_567;
		public DxgiRgb GammaCurve_568;
		public DxgiRgb GammaCurve_569;
		public DxgiRgb GammaCurve_570;
		public DxgiRgb GammaCurve_571;
		public DxgiRgb GammaCurve_572;
		public DxgiRgb GammaCurve_573;
		public DxgiRgb GammaCurve_574;
		public DxgiRgb GammaCurve_575;
		public DxgiRgb GammaCurve_576;
		public DxgiRgb GammaCurve_577;
		public DxgiRgb GammaCurve_578;
		public DxgiRgb GammaCurve_579;
		public DxgiRgb GammaCurve_580;
		public DxgiRgb GammaCurve_581;
		public DxgiRgb GammaCurve_582;
		public DxgiRgb GammaCurve_583;
		public DxgiRgb GammaCurve_584;
		public DxgiRgb GammaCurve_585;
		public DxgiRgb GammaCurve_586;
		public DxgiRgb GammaCurve_587;
		public DxgiRgb GammaCurve_588;
		public DxgiRgb GammaCurve_589;
		public DxgiRgb GammaCurve_590;
		public DxgiRgb GammaCurve_591;
		public DxgiRgb GammaCurve_592;
		public DxgiRgb GammaCurve_593;
		public DxgiRgb GammaCurve_594;
		public DxgiRgb GammaCurve_595;
		public DxgiRgb GammaCurve_596;
		public DxgiRgb GammaCurve_597;
		public DxgiRgb GammaCurve_598;
		public DxgiRgb GammaCurve_599;
		public DxgiRgb GammaCurve_600;
		public DxgiRgb GammaCurve_601;
		public DxgiRgb GammaCurve_602;
		public DxgiRgb GammaCurve_603;
		public DxgiRgb GammaCurve_604;
		public DxgiRgb GammaCurve_605;
		public DxgiRgb GammaCurve_606;
		public DxgiRgb GammaCurve_607;
		public DxgiRgb GammaCurve_608;
		public DxgiRgb GammaCurve_609;
		public DxgiRgb GammaCurve_610;
		public DxgiRgb GammaCurve_611;
		public DxgiRgb GammaCurve_612;
		public DxgiRgb GammaCurve_613;
		public DxgiRgb GammaCurve_614;
		public DxgiRgb GammaCurve_615;
		public DxgiRgb GammaCurve_616;
		public DxgiRgb GammaCurve_617;
		public DxgiRgb GammaCurve_618;
		public DxgiRgb GammaCurve_619;
		public DxgiRgb GammaCurve_620;
		public DxgiRgb GammaCurve_621;
		public DxgiRgb GammaCurve_622;
		public DxgiRgb GammaCurve_623;
		public DxgiRgb GammaCurve_624;
		public DxgiRgb GammaCurve_625;
		public DxgiRgb GammaCurve_626;
		public DxgiRgb GammaCurve_627;
		public DxgiRgb GammaCurve_628;
		public DxgiRgb GammaCurve_629;
		public DxgiRgb GammaCurve_630;
		public DxgiRgb GammaCurve_631;
		public DxgiRgb GammaCurve_632;
		public DxgiRgb GammaCurve_633;
		public DxgiRgb GammaCurve_634;
		public DxgiRgb GammaCurve_635;
		public DxgiRgb GammaCurve_636;
		public DxgiRgb GammaCurve_637;
		public DxgiRgb GammaCurve_638;
		public DxgiRgb GammaCurve_639;
		public DxgiRgb GammaCurve_640;
		public DxgiRgb GammaCurve_641;
		public DxgiRgb GammaCurve_642;
		public DxgiRgb GammaCurve_643;
		public DxgiRgb GammaCurve_644;
		public DxgiRgb GammaCurve_645;
		public DxgiRgb GammaCurve_646;
		public DxgiRgb GammaCurve_647;
		public DxgiRgb GammaCurve_648;
		public DxgiRgb GammaCurve_649;
		public DxgiRgb GammaCurve_650;
		public DxgiRgb GammaCurve_651;
		public DxgiRgb GammaCurve_652;
		public DxgiRgb GammaCurve_653;
		public DxgiRgb GammaCurve_654;
		public DxgiRgb GammaCurve_655;
		public DxgiRgb GammaCurve_656;
		public DxgiRgb GammaCurve_657;
		public DxgiRgb GammaCurve_658;
		public DxgiRgb GammaCurve_659;
		public DxgiRgb GammaCurve_660;
		public DxgiRgb GammaCurve_661;
		public DxgiRgb GammaCurve_662;
		public DxgiRgb GammaCurve_663;
		public DxgiRgb GammaCurve_664;
		public DxgiRgb GammaCurve_665;
		public DxgiRgb GammaCurve_666;
		public DxgiRgb GammaCurve_667;
		public DxgiRgb GammaCurve_668;
		public DxgiRgb GammaCurve_669;
		public DxgiRgb GammaCurve_670;
		public DxgiRgb GammaCurve_671;
		public DxgiRgb GammaCurve_672;
		public DxgiRgb GammaCurve_673;
		public DxgiRgb GammaCurve_674;
		public DxgiRgb GammaCurve_675;
		public DxgiRgb GammaCurve_676;
		public DxgiRgb GammaCurve_677;
		public DxgiRgb GammaCurve_678;
		public DxgiRgb GammaCurve_679;
		public DxgiRgb GammaCurve_680;
		public DxgiRgb GammaCurve_681;
		public DxgiRgb GammaCurve_682;
		public DxgiRgb GammaCurve_683;
		public DxgiRgb GammaCurve_684;
		public DxgiRgb GammaCurve_685;
		public DxgiRgb GammaCurve_686;
		public DxgiRgb GammaCurve_687;
		public DxgiRgb GammaCurve_688;
		public DxgiRgb GammaCurve_689;
		public DxgiRgb GammaCurve_690;
		public DxgiRgb GammaCurve_691;
		public DxgiRgb GammaCurve_692;
		public DxgiRgb GammaCurve_693;
		public DxgiRgb GammaCurve_694;
		public DxgiRgb GammaCurve_695;
		public DxgiRgb GammaCurve_696;
		public DxgiRgb GammaCurve_697;
		public DxgiRgb GammaCurve_698;
		public DxgiRgb GammaCurve_699;
		public DxgiRgb GammaCurve_700;
		public DxgiRgb GammaCurve_701;
		public DxgiRgb GammaCurve_702;
		public DxgiRgb GammaCurve_703;
		public DxgiRgb GammaCurve_704;
		public DxgiRgb GammaCurve_705;
		public DxgiRgb GammaCurve_706;
		public DxgiRgb GammaCurve_707;
		public DxgiRgb GammaCurve_708;
		public DxgiRgb GammaCurve_709;
		public DxgiRgb GammaCurve_710;
		public DxgiRgb GammaCurve_711;
		public DxgiRgb GammaCurve_712;
		public DxgiRgb GammaCurve_713;
		public DxgiRgb GammaCurve_714;
		public DxgiRgb GammaCurve_715;
		public DxgiRgb GammaCurve_716;
		public DxgiRgb GammaCurve_717;
		public DxgiRgb GammaCurve_718;
		public DxgiRgb GammaCurve_719;
		public DxgiRgb GammaCurve_720;
		public DxgiRgb GammaCurve_721;
		public DxgiRgb GammaCurve_722;
		public DxgiRgb GammaCurve_723;
		public DxgiRgb GammaCurve_724;
		public DxgiRgb GammaCurve_725;
		public DxgiRgb GammaCurve_726;
		public DxgiRgb GammaCurve_727;
		public DxgiRgb GammaCurve_728;
		public DxgiRgb GammaCurve_729;
		public DxgiRgb GammaCurve_730;
		public DxgiRgb GammaCurve_731;
		public DxgiRgb GammaCurve_732;
		public DxgiRgb GammaCurve_733;
		public DxgiRgb GammaCurve_734;
		public DxgiRgb GammaCurve_735;
		public DxgiRgb GammaCurve_736;
		public DxgiRgb GammaCurve_737;
		public DxgiRgb GammaCurve_738;
		public DxgiRgb GammaCurve_739;
		public DxgiRgb GammaCurve_740;
		public DxgiRgb GammaCurve_741;
		public DxgiRgb GammaCurve_742;
		public DxgiRgb GammaCurve_743;
		public DxgiRgb GammaCurve_744;
		public DxgiRgb GammaCurve_745;
		public DxgiRgb GammaCurve_746;
		public DxgiRgb GammaCurve_747;
		public DxgiRgb GammaCurve_748;
		public DxgiRgb GammaCurve_749;
		public DxgiRgb GammaCurve_750;
		public DxgiRgb GammaCurve_751;
		public DxgiRgb GammaCurve_752;
		public DxgiRgb GammaCurve_753;
		public DxgiRgb GammaCurve_754;
		public DxgiRgb GammaCurve_755;
		public DxgiRgb GammaCurve_756;
		public DxgiRgb GammaCurve_757;
		public DxgiRgb GammaCurve_758;
		public DxgiRgb GammaCurve_759;
		public DxgiRgb GammaCurve_760;
		public DxgiRgb GammaCurve_761;
		public DxgiRgb GammaCurve_762;
		public DxgiRgb GammaCurve_763;
		public DxgiRgb GammaCurve_764;
		public DxgiRgb GammaCurve_765;
		public DxgiRgb GammaCurve_766;
		public DxgiRgb GammaCurve_767;
		public DxgiRgb GammaCurve_768;
		public DxgiRgb GammaCurve_769;
		public DxgiRgb GammaCurve_770;
		public DxgiRgb GammaCurve_771;
		public DxgiRgb GammaCurve_772;
		public DxgiRgb GammaCurve_773;
		public DxgiRgb GammaCurve_774;
		public DxgiRgb GammaCurve_775;
		public DxgiRgb GammaCurve_776;
		public DxgiRgb GammaCurve_777;
		public DxgiRgb GammaCurve_778;
		public DxgiRgb GammaCurve_779;
		public DxgiRgb GammaCurve_780;
		public DxgiRgb GammaCurve_781;
		public DxgiRgb GammaCurve_782;
		public DxgiRgb GammaCurve_783;
		public DxgiRgb GammaCurve_784;
		public DxgiRgb GammaCurve_785;
		public DxgiRgb GammaCurve_786;
		public DxgiRgb GammaCurve_787;
		public DxgiRgb GammaCurve_788;
		public DxgiRgb GammaCurve_789;
		public DxgiRgb GammaCurve_790;
		public DxgiRgb GammaCurve_791;
		public DxgiRgb GammaCurve_792;
		public DxgiRgb GammaCurve_793;
		public DxgiRgb GammaCurve_794;
		public DxgiRgb GammaCurve_795;
		public DxgiRgb GammaCurve_796;
		public DxgiRgb GammaCurve_797;
		public DxgiRgb GammaCurve_798;
		public DxgiRgb GammaCurve_799;
		public DxgiRgb GammaCurve_800;
		public DxgiRgb GammaCurve_801;
		public DxgiRgb GammaCurve_802;
		public DxgiRgb GammaCurve_803;
		public DxgiRgb GammaCurve_804;
		public DxgiRgb GammaCurve_805;
		public DxgiRgb GammaCurve_806;
		public DxgiRgb GammaCurve_807;
		public DxgiRgb GammaCurve_808;
		public DxgiRgb GammaCurve_809;
		public DxgiRgb GammaCurve_810;
		public DxgiRgb GammaCurve_811;
		public DxgiRgb GammaCurve_812;
		public DxgiRgb GammaCurve_813;
		public DxgiRgb GammaCurve_814;
		public DxgiRgb GammaCurve_815;
		public DxgiRgb GammaCurve_816;
		public DxgiRgb GammaCurve_817;
		public DxgiRgb GammaCurve_818;
		public DxgiRgb GammaCurve_819;
		public DxgiRgb GammaCurve_820;
		public DxgiRgb GammaCurve_821;
		public DxgiRgb GammaCurve_822;
		public DxgiRgb GammaCurve_823;
		public DxgiRgb GammaCurve_824;
		public DxgiRgb GammaCurve_825;
		public DxgiRgb GammaCurve_826;
		public DxgiRgb GammaCurve_827;
		public DxgiRgb GammaCurve_828;
		public DxgiRgb GammaCurve_829;
		public DxgiRgb GammaCurve_830;
		public DxgiRgb GammaCurve_831;
		public DxgiRgb GammaCurve_832;
		public DxgiRgb GammaCurve_833;
		public DxgiRgb GammaCurve_834;
		public DxgiRgb GammaCurve_835;
		public DxgiRgb GammaCurve_836;
		public DxgiRgb GammaCurve_837;
		public DxgiRgb GammaCurve_838;
		public DxgiRgb GammaCurve_839;
		public DxgiRgb GammaCurve_840;
		public DxgiRgb GammaCurve_841;
		public DxgiRgb GammaCurve_842;
		public DxgiRgb GammaCurve_843;
		public DxgiRgb GammaCurve_844;
		public DxgiRgb GammaCurve_845;
		public DxgiRgb GammaCurve_846;
		public DxgiRgb GammaCurve_847;
		public DxgiRgb GammaCurve_848;
		public DxgiRgb GammaCurve_849;
		public DxgiRgb GammaCurve_850;
		public DxgiRgb GammaCurve_851;
		public DxgiRgb GammaCurve_852;
		public DxgiRgb GammaCurve_853;
		public DxgiRgb GammaCurve_854;
		public DxgiRgb GammaCurve_855;
		public DxgiRgb GammaCurve_856;
		public DxgiRgb GammaCurve_857;
		public DxgiRgb GammaCurve_858;
		public DxgiRgb GammaCurve_859;
		public DxgiRgb GammaCurve_860;
		public DxgiRgb GammaCurve_861;
		public DxgiRgb GammaCurve_862;
		public DxgiRgb GammaCurve_863;
		public DxgiRgb GammaCurve_864;
		public DxgiRgb GammaCurve_865;
		public DxgiRgb GammaCurve_866;
		public DxgiRgb GammaCurve_867;
		public DxgiRgb GammaCurve_868;
		public DxgiRgb GammaCurve_869;
		public DxgiRgb GammaCurve_870;
		public DxgiRgb GammaCurve_871;
		public DxgiRgb GammaCurve_872;
		public DxgiRgb GammaCurve_873;
		public DxgiRgb GammaCurve_874;
		public DxgiRgb GammaCurve_875;
		public DxgiRgb GammaCurve_876;
		public DxgiRgb GammaCurve_877;
		public DxgiRgb GammaCurve_878;
		public DxgiRgb GammaCurve_879;
		public DxgiRgb GammaCurve_880;
		public DxgiRgb GammaCurve_881;
		public DxgiRgb GammaCurve_882;
		public DxgiRgb GammaCurve_883;
		public DxgiRgb GammaCurve_884;
		public DxgiRgb GammaCurve_885;
		public DxgiRgb GammaCurve_886;
		public DxgiRgb GammaCurve_887;
		public DxgiRgb GammaCurve_888;
		public DxgiRgb GammaCurve_889;
		public DxgiRgb GammaCurve_890;
		public DxgiRgb GammaCurve_891;
		public DxgiRgb GammaCurve_892;
		public DxgiRgb GammaCurve_893;
		public DxgiRgb GammaCurve_894;
		public DxgiRgb GammaCurve_895;
		public DxgiRgb GammaCurve_896;
		public DxgiRgb GammaCurve_897;
		public DxgiRgb GammaCurve_898;
		public DxgiRgb GammaCurve_899;
		public DxgiRgb GammaCurve_900;
		public DxgiRgb GammaCurve_901;
		public DxgiRgb GammaCurve_902;
		public DxgiRgb GammaCurve_903;
		public DxgiRgb GammaCurve_904;
		public DxgiRgb GammaCurve_905;
		public DxgiRgb GammaCurve_906;
		public DxgiRgb GammaCurve_907;
		public DxgiRgb GammaCurve_908;
		public DxgiRgb GammaCurve_909;
		public DxgiRgb GammaCurve_910;
		public DxgiRgb GammaCurve_911;
		public DxgiRgb GammaCurve_912;
		public DxgiRgb GammaCurve_913;
		public DxgiRgb GammaCurve_914;
		public DxgiRgb GammaCurve_915;
		public DxgiRgb GammaCurve_916;
		public DxgiRgb GammaCurve_917;
		public DxgiRgb GammaCurve_918;
		public DxgiRgb GammaCurve_919;
		public DxgiRgb GammaCurve_920;
		public DxgiRgb GammaCurve_921;
		public DxgiRgb GammaCurve_922;
		public DxgiRgb GammaCurve_923;
		public DxgiRgb GammaCurve_924;
		public DxgiRgb GammaCurve_925;
		public DxgiRgb GammaCurve_926;
		public DxgiRgb GammaCurve_927;
		public DxgiRgb GammaCurve_928;
		public DxgiRgb GammaCurve_929;
		public DxgiRgb GammaCurve_930;
		public DxgiRgb GammaCurve_931;
		public DxgiRgb GammaCurve_932;
		public DxgiRgb GammaCurve_933;
		public DxgiRgb GammaCurve_934;
		public DxgiRgb GammaCurve_935;
		public DxgiRgb GammaCurve_936;
		public DxgiRgb GammaCurve_937;
		public DxgiRgb GammaCurve_938;
		public DxgiRgb GammaCurve_939;
		public DxgiRgb GammaCurve_940;
		public DxgiRgb GammaCurve_941;
		public DxgiRgb GammaCurve_942;
		public DxgiRgb GammaCurve_943;
		public DxgiRgb GammaCurve_944;
		public DxgiRgb GammaCurve_945;
		public DxgiRgb GammaCurve_946;
		public DxgiRgb GammaCurve_947;
		public DxgiRgb GammaCurve_948;
		public DxgiRgb GammaCurve_949;
		public DxgiRgb GammaCurve_950;
		public DxgiRgb GammaCurve_951;
		public DxgiRgb GammaCurve_952;
		public DxgiRgb GammaCurve_953;
		public DxgiRgb GammaCurve_954;
		public DxgiRgb GammaCurve_955;
		public DxgiRgb GammaCurve_956;
		public DxgiRgb GammaCurve_957;
		public DxgiRgb GammaCurve_958;
		public DxgiRgb GammaCurve_959;
		public DxgiRgb GammaCurve_960;
		public DxgiRgb GammaCurve_961;
		public DxgiRgb GammaCurve_962;
		public DxgiRgb GammaCurve_963;
		public DxgiRgb GammaCurve_964;
		public DxgiRgb GammaCurve_965;
		public DxgiRgb GammaCurve_966;
		public DxgiRgb GammaCurve_967;
		public DxgiRgb GammaCurve_968;
		public DxgiRgb GammaCurve_969;
		public DxgiRgb GammaCurve_970;
		public DxgiRgb GammaCurve_971;
		public DxgiRgb GammaCurve_972;
		public DxgiRgb GammaCurve_973;
		public DxgiRgb GammaCurve_974;
		public DxgiRgb GammaCurve_975;
		public DxgiRgb GammaCurve_976;
		public DxgiRgb GammaCurve_977;
		public DxgiRgb GammaCurve_978;
		public DxgiRgb GammaCurve_979;
		public DxgiRgb GammaCurve_980;
		public DxgiRgb GammaCurve_981;
		public DxgiRgb GammaCurve_982;
		public DxgiRgb GammaCurve_983;
		public DxgiRgb GammaCurve_984;
		public DxgiRgb GammaCurve_985;
		public DxgiRgb GammaCurve_986;
		public DxgiRgb GammaCurve_987;
		public DxgiRgb GammaCurve_988;
		public DxgiRgb GammaCurve_989;
		public DxgiRgb GammaCurve_990;
		public DxgiRgb GammaCurve_991;
		public DxgiRgb GammaCurve_992;
		public DxgiRgb GammaCurve_993;
		public DxgiRgb GammaCurve_994;
		public DxgiRgb GammaCurve_995;
		public DxgiRgb GammaCurve_996;
		public DxgiRgb GammaCurve_997;
		public DxgiRgb GammaCurve_998;
		public DxgiRgb GammaCurve_999;
		public DxgiRgb GammaCurve_1000;
		public DxgiRgb GammaCurve_1001;
		public DxgiRgb GammaCurve_1002;
		public DxgiRgb GammaCurve_1003;
		public DxgiRgb GammaCurve_1004;
		public DxgiRgb GammaCurve_1005;
		public DxgiRgb GammaCurve_1006;
		public DxgiRgb GammaCurve_1007;
		public DxgiRgb GammaCurve_1008;
		public DxgiRgb GammaCurve_1009;
		public DxgiRgb GammaCurve_1010;
		public DxgiRgb GammaCurve_1011;
		public DxgiRgb GammaCurve_1012;
		public DxgiRgb GammaCurve_1013;
		public DxgiRgb GammaCurve_1014;
		public DxgiRgb GammaCurve_1015;
		public DxgiRgb GammaCurve_1016;
		public DxgiRgb GammaCurve_1017;
		public DxgiRgb GammaCurve_1018;
		public DxgiRgb GammaCurve_1019;
		public DxgiRgb GammaCurve_1020;
		public DxgiRgb GammaCurve_1021;
		public DxgiRgb GammaCurve_1022;
		public DxgiRgb GammaCurve_1023;
		public DxgiRgb GammaCurve_1024;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiGammaControl(DxgiRgb scale = default, DxgiRgb offset = default, DxgiRgb* gammaCurve = default)
		{
			Scale = scale;
			Offset = offset;
			if (gammaCurve != default)
			{
				GammaCurve_0 = gammaCurve[0];
				GammaCurve_1 = gammaCurve[1];
				GammaCurve_2 = gammaCurve[2];
				GammaCurve_3 = gammaCurve[3];
				GammaCurve_4 = gammaCurve[4];
				GammaCurve_5 = gammaCurve[5];
				GammaCurve_6 = gammaCurve[6];
				GammaCurve_7 = gammaCurve[7];
				GammaCurve_8 = gammaCurve[8];
				GammaCurve_9 = gammaCurve[9];
				GammaCurve_10 = gammaCurve[10];
				GammaCurve_11 = gammaCurve[11];
				GammaCurve_12 = gammaCurve[12];
				GammaCurve_13 = gammaCurve[13];
				GammaCurve_14 = gammaCurve[14];
				GammaCurve_15 = gammaCurve[15];
				GammaCurve_16 = gammaCurve[16];
				GammaCurve_17 = gammaCurve[17];
				GammaCurve_18 = gammaCurve[18];
				GammaCurve_19 = gammaCurve[19];
				GammaCurve_20 = gammaCurve[20];
				GammaCurve_21 = gammaCurve[21];
				GammaCurve_22 = gammaCurve[22];
				GammaCurve_23 = gammaCurve[23];
				GammaCurve_24 = gammaCurve[24];
				GammaCurve_25 = gammaCurve[25];
				GammaCurve_26 = gammaCurve[26];
				GammaCurve_27 = gammaCurve[27];
				GammaCurve_28 = gammaCurve[28];
				GammaCurve_29 = gammaCurve[29];
				GammaCurve_30 = gammaCurve[30];
				GammaCurve_31 = gammaCurve[31];
				GammaCurve_32 = gammaCurve[32];
				GammaCurve_33 = gammaCurve[33];
				GammaCurve_34 = gammaCurve[34];
				GammaCurve_35 = gammaCurve[35];
				GammaCurve_36 = gammaCurve[36];
				GammaCurve_37 = gammaCurve[37];
				GammaCurve_38 = gammaCurve[38];
				GammaCurve_39 = gammaCurve[39];
				GammaCurve_40 = gammaCurve[40];
				GammaCurve_41 = gammaCurve[41];
				GammaCurve_42 = gammaCurve[42];
				GammaCurve_43 = gammaCurve[43];
				GammaCurve_44 = gammaCurve[44];
				GammaCurve_45 = gammaCurve[45];
				GammaCurve_46 = gammaCurve[46];
				GammaCurve_47 = gammaCurve[47];
				GammaCurve_48 = gammaCurve[48];
				GammaCurve_49 = gammaCurve[49];
				GammaCurve_50 = gammaCurve[50];
				GammaCurve_51 = gammaCurve[51];
				GammaCurve_52 = gammaCurve[52];
				GammaCurve_53 = gammaCurve[53];
				GammaCurve_54 = gammaCurve[54];
				GammaCurve_55 = gammaCurve[55];
				GammaCurve_56 = gammaCurve[56];
				GammaCurve_57 = gammaCurve[57];
				GammaCurve_58 = gammaCurve[58];
				GammaCurve_59 = gammaCurve[59];
				GammaCurve_60 = gammaCurve[60];
				GammaCurve_61 = gammaCurve[61];
				GammaCurve_62 = gammaCurve[62];
				GammaCurve_63 = gammaCurve[63];
				GammaCurve_64 = gammaCurve[64];
				GammaCurve_65 = gammaCurve[65];
				GammaCurve_66 = gammaCurve[66];
				GammaCurve_67 = gammaCurve[67];
				GammaCurve_68 = gammaCurve[68];
				GammaCurve_69 = gammaCurve[69];
				GammaCurve_70 = gammaCurve[70];
				GammaCurve_71 = gammaCurve[71];
				GammaCurve_72 = gammaCurve[72];
				GammaCurve_73 = gammaCurve[73];
				GammaCurve_74 = gammaCurve[74];
				GammaCurve_75 = gammaCurve[75];
				GammaCurve_76 = gammaCurve[76];
				GammaCurve_77 = gammaCurve[77];
				GammaCurve_78 = gammaCurve[78];
				GammaCurve_79 = gammaCurve[79];
				GammaCurve_80 = gammaCurve[80];
				GammaCurve_81 = gammaCurve[81];
				GammaCurve_82 = gammaCurve[82];
				GammaCurve_83 = gammaCurve[83];
				GammaCurve_84 = gammaCurve[84];
				GammaCurve_85 = gammaCurve[85];
				GammaCurve_86 = gammaCurve[86];
				GammaCurve_87 = gammaCurve[87];
				GammaCurve_88 = gammaCurve[88];
				GammaCurve_89 = gammaCurve[89];
				GammaCurve_90 = gammaCurve[90];
				GammaCurve_91 = gammaCurve[91];
				GammaCurve_92 = gammaCurve[92];
				GammaCurve_93 = gammaCurve[93];
				GammaCurve_94 = gammaCurve[94];
				GammaCurve_95 = gammaCurve[95];
				GammaCurve_96 = gammaCurve[96];
				GammaCurve_97 = gammaCurve[97];
				GammaCurve_98 = gammaCurve[98];
				GammaCurve_99 = gammaCurve[99];
				GammaCurve_100 = gammaCurve[100];
				GammaCurve_101 = gammaCurve[101];
				GammaCurve_102 = gammaCurve[102];
				GammaCurve_103 = gammaCurve[103];
				GammaCurve_104 = gammaCurve[104];
				GammaCurve_105 = gammaCurve[105];
				GammaCurve_106 = gammaCurve[106];
				GammaCurve_107 = gammaCurve[107];
				GammaCurve_108 = gammaCurve[108];
				GammaCurve_109 = gammaCurve[109];
				GammaCurve_110 = gammaCurve[110];
				GammaCurve_111 = gammaCurve[111];
				GammaCurve_112 = gammaCurve[112];
				GammaCurve_113 = gammaCurve[113];
				GammaCurve_114 = gammaCurve[114];
				GammaCurve_115 = gammaCurve[115];
				GammaCurve_116 = gammaCurve[116];
				GammaCurve_117 = gammaCurve[117];
				GammaCurve_118 = gammaCurve[118];
				GammaCurve_119 = gammaCurve[119];
				GammaCurve_120 = gammaCurve[120];
				GammaCurve_121 = gammaCurve[121];
				GammaCurve_122 = gammaCurve[122];
				GammaCurve_123 = gammaCurve[123];
				GammaCurve_124 = gammaCurve[124];
				GammaCurve_125 = gammaCurve[125];
				GammaCurve_126 = gammaCurve[126];
				GammaCurve_127 = gammaCurve[127];
				GammaCurve_128 = gammaCurve[128];
				GammaCurve_129 = gammaCurve[129];
				GammaCurve_130 = gammaCurve[130];
				GammaCurve_131 = gammaCurve[131];
				GammaCurve_132 = gammaCurve[132];
				GammaCurve_133 = gammaCurve[133];
				GammaCurve_134 = gammaCurve[134];
				GammaCurve_135 = gammaCurve[135];
				GammaCurve_136 = gammaCurve[136];
				GammaCurve_137 = gammaCurve[137];
				GammaCurve_138 = gammaCurve[138];
				GammaCurve_139 = gammaCurve[139];
				GammaCurve_140 = gammaCurve[140];
				GammaCurve_141 = gammaCurve[141];
				GammaCurve_142 = gammaCurve[142];
				GammaCurve_143 = gammaCurve[143];
				GammaCurve_144 = gammaCurve[144];
				GammaCurve_145 = gammaCurve[145];
				GammaCurve_146 = gammaCurve[146];
				GammaCurve_147 = gammaCurve[147];
				GammaCurve_148 = gammaCurve[148];
				GammaCurve_149 = gammaCurve[149];
				GammaCurve_150 = gammaCurve[150];
				GammaCurve_151 = gammaCurve[151];
				GammaCurve_152 = gammaCurve[152];
				GammaCurve_153 = gammaCurve[153];
				GammaCurve_154 = gammaCurve[154];
				GammaCurve_155 = gammaCurve[155];
				GammaCurve_156 = gammaCurve[156];
				GammaCurve_157 = gammaCurve[157];
				GammaCurve_158 = gammaCurve[158];
				GammaCurve_159 = gammaCurve[159];
				GammaCurve_160 = gammaCurve[160];
				GammaCurve_161 = gammaCurve[161];
				GammaCurve_162 = gammaCurve[162];
				GammaCurve_163 = gammaCurve[163];
				GammaCurve_164 = gammaCurve[164];
				GammaCurve_165 = gammaCurve[165];
				GammaCurve_166 = gammaCurve[166];
				GammaCurve_167 = gammaCurve[167];
				GammaCurve_168 = gammaCurve[168];
				GammaCurve_169 = gammaCurve[169];
				GammaCurve_170 = gammaCurve[170];
				GammaCurve_171 = gammaCurve[171];
				GammaCurve_172 = gammaCurve[172];
				GammaCurve_173 = gammaCurve[173];
				GammaCurve_174 = gammaCurve[174];
				GammaCurve_175 = gammaCurve[175];
				GammaCurve_176 = gammaCurve[176];
				GammaCurve_177 = gammaCurve[177];
				GammaCurve_178 = gammaCurve[178];
				GammaCurve_179 = gammaCurve[179];
				GammaCurve_180 = gammaCurve[180];
				GammaCurve_181 = gammaCurve[181];
				GammaCurve_182 = gammaCurve[182];
				GammaCurve_183 = gammaCurve[183];
				GammaCurve_184 = gammaCurve[184];
				GammaCurve_185 = gammaCurve[185];
				GammaCurve_186 = gammaCurve[186];
				GammaCurve_187 = gammaCurve[187];
				GammaCurve_188 = gammaCurve[188];
				GammaCurve_189 = gammaCurve[189];
				GammaCurve_190 = gammaCurve[190];
				GammaCurve_191 = gammaCurve[191];
				GammaCurve_192 = gammaCurve[192];
				GammaCurve_193 = gammaCurve[193];
				GammaCurve_194 = gammaCurve[194];
				GammaCurve_195 = gammaCurve[195];
				GammaCurve_196 = gammaCurve[196];
				GammaCurve_197 = gammaCurve[197];
				GammaCurve_198 = gammaCurve[198];
				GammaCurve_199 = gammaCurve[199];
				GammaCurve_200 = gammaCurve[200];
				GammaCurve_201 = gammaCurve[201];
				GammaCurve_202 = gammaCurve[202];
				GammaCurve_203 = gammaCurve[203];
				GammaCurve_204 = gammaCurve[204];
				GammaCurve_205 = gammaCurve[205];
				GammaCurve_206 = gammaCurve[206];
				GammaCurve_207 = gammaCurve[207];
				GammaCurve_208 = gammaCurve[208];
				GammaCurve_209 = gammaCurve[209];
				GammaCurve_210 = gammaCurve[210];
				GammaCurve_211 = gammaCurve[211];
				GammaCurve_212 = gammaCurve[212];
				GammaCurve_213 = gammaCurve[213];
				GammaCurve_214 = gammaCurve[214];
				GammaCurve_215 = gammaCurve[215];
				GammaCurve_216 = gammaCurve[216];
				GammaCurve_217 = gammaCurve[217];
				GammaCurve_218 = gammaCurve[218];
				GammaCurve_219 = gammaCurve[219];
				GammaCurve_220 = gammaCurve[220];
				GammaCurve_221 = gammaCurve[221];
				GammaCurve_222 = gammaCurve[222];
				GammaCurve_223 = gammaCurve[223];
				GammaCurve_224 = gammaCurve[224];
				GammaCurve_225 = gammaCurve[225];
				GammaCurve_226 = gammaCurve[226];
				GammaCurve_227 = gammaCurve[227];
				GammaCurve_228 = gammaCurve[228];
				GammaCurve_229 = gammaCurve[229];
				GammaCurve_230 = gammaCurve[230];
				GammaCurve_231 = gammaCurve[231];
				GammaCurve_232 = gammaCurve[232];
				GammaCurve_233 = gammaCurve[233];
				GammaCurve_234 = gammaCurve[234];
				GammaCurve_235 = gammaCurve[235];
				GammaCurve_236 = gammaCurve[236];
				GammaCurve_237 = gammaCurve[237];
				GammaCurve_238 = gammaCurve[238];
				GammaCurve_239 = gammaCurve[239];
				GammaCurve_240 = gammaCurve[240];
				GammaCurve_241 = gammaCurve[241];
				GammaCurve_242 = gammaCurve[242];
				GammaCurve_243 = gammaCurve[243];
				GammaCurve_244 = gammaCurve[244];
				GammaCurve_245 = gammaCurve[245];
				GammaCurve_246 = gammaCurve[246];
				GammaCurve_247 = gammaCurve[247];
				GammaCurve_248 = gammaCurve[248];
				GammaCurve_249 = gammaCurve[249];
				GammaCurve_250 = gammaCurve[250];
				GammaCurve_251 = gammaCurve[251];
				GammaCurve_252 = gammaCurve[252];
				GammaCurve_253 = gammaCurve[253];
				GammaCurve_254 = gammaCurve[254];
				GammaCurve_255 = gammaCurve[255];
				GammaCurve_256 = gammaCurve[256];
				GammaCurve_257 = gammaCurve[257];
				GammaCurve_258 = gammaCurve[258];
				GammaCurve_259 = gammaCurve[259];
				GammaCurve_260 = gammaCurve[260];
				GammaCurve_261 = gammaCurve[261];
				GammaCurve_262 = gammaCurve[262];
				GammaCurve_263 = gammaCurve[263];
				GammaCurve_264 = gammaCurve[264];
				GammaCurve_265 = gammaCurve[265];
				GammaCurve_266 = gammaCurve[266];
				GammaCurve_267 = gammaCurve[267];
				GammaCurve_268 = gammaCurve[268];
				GammaCurve_269 = gammaCurve[269];
				GammaCurve_270 = gammaCurve[270];
				GammaCurve_271 = gammaCurve[271];
				GammaCurve_272 = gammaCurve[272];
				GammaCurve_273 = gammaCurve[273];
				GammaCurve_274 = gammaCurve[274];
				GammaCurve_275 = gammaCurve[275];
				GammaCurve_276 = gammaCurve[276];
				GammaCurve_277 = gammaCurve[277];
				GammaCurve_278 = gammaCurve[278];
				GammaCurve_279 = gammaCurve[279];
				GammaCurve_280 = gammaCurve[280];
				GammaCurve_281 = gammaCurve[281];
				GammaCurve_282 = gammaCurve[282];
				GammaCurve_283 = gammaCurve[283];
				GammaCurve_284 = gammaCurve[284];
				GammaCurve_285 = gammaCurve[285];
				GammaCurve_286 = gammaCurve[286];
				GammaCurve_287 = gammaCurve[287];
				GammaCurve_288 = gammaCurve[288];
				GammaCurve_289 = gammaCurve[289];
				GammaCurve_290 = gammaCurve[290];
				GammaCurve_291 = gammaCurve[291];
				GammaCurve_292 = gammaCurve[292];
				GammaCurve_293 = gammaCurve[293];
				GammaCurve_294 = gammaCurve[294];
				GammaCurve_295 = gammaCurve[295];
				GammaCurve_296 = gammaCurve[296];
				GammaCurve_297 = gammaCurve[297];
				GammaCurve_298 = gammaCurve[298];
				GammaCurve_299 = gammaCurve[299];
				GammaCurve_300 = gammaCurve[300];
				GammaCurve_301 = gammaCurve[301];
				GammaCurve_302 = gammaCurve[302];
				GammaCurve_303 = gammaCurve[303];
				GammaCurve_304 = gammaCurve[304];
				GammaCurve_305 = gammaCurve[305];
				GammaCurve_306 = gammaCurve[306];
				GammaCurve_307 = gammaCurve[307];
				GammaCurve_308 = gammaCurve[308];
				GammaCurve_309 = gammaCurve[309];
				GammaCurve_310 = gammaCurve[310];
				GammaCurve_311 = gammaCurve[311];
				GammaCurve_312 = gammaCurve[312];
				GammaCurve_313 = gammaCurve[313];
				GammaCurve_314 = gammaCurve[314];
				GammaCurve_315 = gammaCurve[315];
				GammaCurve_316 = gammaCurve[316];
				GammaCurve_317 = gammaCurve[317];
				GammaCurve_318 = gammaCurve[318];
				GammaCurve_319 = gammaCurve[319];
				GammaCurve_320 = gammaCurve[320];
				GammaCurve_321 = gammaCurve[321];
				GammaCurve_322 = gammaCurve[322];
				GammaCurve_323 = gammaCurve[323];
				GammaCurve_324 = gammaCurve[324];
				GammaCurve_325 = gammaCurve[325];
				GammaCurve_326 = gammaCurve[326];
				GammaCurve_327 = gammaCurve[327];
				GammaCurve_328 = gammaCurve[328];
				GammaCurve_329 = gammaCurve[329];
				GammaCurve_330 = gammaCurve[330];
				GammaCurve_331 = gammaCurve[331];
				GammaCurve_332 = gammaCurve[332];
				GammaCurve_333 = gammaCurve[333];
				GammaCurve_334 = gammaCurve[334];
				GammaCurve_335 = gammaCurve[335];
				GammaCurve_336 = gammaCurve[336];
				GammaCurve_337 = gammaCurve[337];
				GammaCurve_338 = gammaCurve[338];
				GammaCurve_339 = gammaCurve[339];
				GammaCurve_340 = gammaCurve[340];
				GammaCurve_341 = gammaCurve[341];
				GammaCurve_342 = gammaCurve[342];
				GammaCurve_343 = gammaCurve[343];
				GammaCurve_344 = gammaCurve[344];
				GammaCurve_345 = gammaCurve[345];
				GammaCurve_346 = gammaCurve[346];
				GammaCurve_347 = gammaCurve[347];
				GammaCurve_348 = gammaCurve[348];
				GammaCurve_349 = gammaCurve[349];
				GammaCurve_350 = gammaCurve[350];
				GammaCurve_351 = gammaCurve[351];
				GammaCurve_352 = gammaCurve[352];
				GammaCurve_353 = gammaCurve[353];
				GammaCurve_354 = gammaCurve[354];
				GammaCurve_355 = gammaCurve[355];
				GammaCurve_356 = gammaCurve[356];
				GammaCurve_357 = gammaCurve[357];
				GammaCurve_358 = gammaCurve[358];
				GammaCurve_359 = gammaCurve[359];
				GammaCurve_360 = gammaCurve[360];
				GammaCurve_361 = gammaCurve[361];
				GammaCurve_362 = gammaCurve[362];
				GammaCurve_363 = gammaCurve[363];
				GammaCurve_364 = gammaCurve[364];
				GammaCurve_365 = gammaCurve[365];
				GammaCurve_366 = gammaCurve[366];
				GammaCurve_367 = gammaCurve[367];
				GammaCurve_368 = gammaCurve[368];
				GammaCurve_369 = gammaCurve[369];
				GammaCurve_370 = gammaCurve[370];
				GammaCurve_371 = gammaCurve[371];
				GammaCurve_372 = gammaCurve[372];
				GammaCurve_373 = gammaCurve[373];
				GammaCurve_374 = gammaCurve[374];
				GammaCurve_375 = gammaCurve[375];
				GammaCurve_376 = gammaCurve[376];
				GammaCurve_377 = gammaCurve[377];
				GammaCurve_378 = gammaCurve[378];
				GammaCurve_379 = gammaCurve[379];
				GammaCurve_380 = gammaCurve[380];
				GammaCurve_381 = gammaCurve[381];
				GammaCurve_382 = gammaCurve[382];
				GammaCurve_383 = gammaCurve[383];
				GammaCurve_384 = gammaCurve[384];
				GammaCurve_385 = gammaCurve[385];
				GammaCurve_386 = gammaCurve[386];
				GammaCurve_387 = gammaCurve[387];
				GammaCurve_388 = gammaCurve[388];
				GammaCurve_389 = gammaCurve[389];
				GammaCurve_390 = gammaCurve[390];
				GammaCurve_391 = gammaCurve[391];
				GammaCurve_392 = gammaCurve[392];
				GammaCurve_393 = gammaCurve[393];
				GammaCurve_394 = gammaCurve[394];
				GammaCurve_395 = gammaCurve[395];
				GammaCurve_396 = gammaCurve[396];
				GammaCurve_397 = gammaCurve[397];
				GammaCurve_398 = gammaCurve[398];
				GammaCurve_399 = gammaCurve[399];
				GammaCurve_400 = gammaCurve[400];
				GammaCurve_401 = gammaCurve[401];
				GammaCurve_402 = gammaCurve[402];
				GammaCurve_403 = gammaCurve[403];
				GammaCurve_404 = gammaCurve[404];
				GammaCurve_405 = gammaCurve[405];
				GammaCurve_406 = gammaCurve[406];
				GammaCurve_407 = gammaCurve[407];
				GammaCurve_408 = gammaCurve[408];
				GammaCurve_409 = gammaCurve[409];
				GammaCurve_410 = gammaCurve[410];
				GammaCurve_411 = gammaCurve[411];
				GammaCurve_412 = gammaCurve[412];
				GammaCurve_413 = gammaCurve[413];
				GammaCurve_414 = gammaCurve[414];
				GammaCurve_415 = gammaCurve[415];
				GammaCurve_416 = gammaCurve[416];
				GammaCurve_417 = gammaCurve[417];
				GammaCurve_418 = gammaCurve[418];
				GammaCurve_419 = gammaCurve[419];
				GammaCurve_420 = gammaCurve[420];
				GammaCurve_421 = gammaCurve[421];
				GammaCurve_422 = gammaCurve[422];
				GammaCurve_423 = gammaCurve[423];
				GammaCurve_424 = gammaCurve[424];
				GammaCurve_425 = gammaCurve[425];
				GammaCurve_426 = gammaCurve[426];
				GammaCurve_427 = gammaCurve[427];
				GammaCurve_428 = gammaCurve[428];
				GammaCurve_429 = gammaCurve[429];
				GammaCurve_430 = gammaCurve[430];
				GammaCurve_431 = gammaCurve[431];
				GammaCurve_432 = gammaCurve[432];
				GammaCurve_433 = gammaCurve[433];
				GammaCurve_434 = gammaCurve[434];
				GammaCurve_435 = gammaCurve[435];
				GammaCurve_436 = gammaCurve[436];
				GammaCurve_437 = gammaCurve[437];
				GammaCurve_438 = gammaCurve[438];
				GammaCurve_439 = gammaCurve[439];
				GammaCurve_440 = gammaCurve[440];
				GammaCurve_441 = gammaCurve[441];
				GammaCurve_442 = gammaCurve[442];
				GammaCurve_443 = gammaCurve[443];
				GammaCurve_444 = gammaCurve[444];
				GammaCurve_445 = gammaCurve[445];
				GammaCurve_446 = gammaCurve[446];
				GammaCurve_447 = gammaCurve[447];
				GammaCurve_448 = gammaCurve[448];
				GammaCurve_449 = gammaCurve[449];
				GammaCurve_450 = gammaCurve[450];
				GammaCurve_451 = gammaCurve[451];
				GammaCurve_452 = gammaCurve[452];
				GammaCurve_453 = gammaCurve[453];
				GammaCurve_454 = gammaCurve[454];
				GammaCurve_455 = gammaCurve[455];
				GammaCurve_456 = gammaCurve[456];
				GammaCurve_457 = gammaCurve[457];
				GammaCurve_458 = gammaCurve[458];
				GammaCurve_459 = gammaCurve[459];
				GammaCurve_460 = gammaCurve[460];
				GammaCurve_461 = gammaCurve[461];
				GammaCurve_462 = gammaCurve[462];
				GammaCurve_463 = gammaCurve[463];
				GammaCurve_464 = gammaCurve[464];
				GammaCurve_465 = gammaCurve[465];
				GammaCurve_466 = gammaCurve[466];
				GammaCurve_467 = gammaCurve[467];
				GammaCurve_468 = gammaCurve[468];
				GammaCurve_469 = gammaCurve[469];
				GammaCurve_470 = gammaCurve[470];
				GammaCurve_471 = gammaCurve[471];
				GammaCurve_472 = gammaCurve[472];
				GammaCurve_473 = gammaCurve[473];
				GammaCurve_474 = gammaCurve[474];
				GammaCurve_475 = gammaCurve[475];
				GammaCurve_476 = gammaCurve[476];
				GammaCurve_477 = gammaCurve[477];
				GammaCurve_478 = gammaCurve[478];
				GammaCurve_479 = gammaCurve[479];
				GammaCurve_480 = gammaCurve[480];
				GammaCurve_481 = gammaCurve[481];
				GammaCurve_482 = gammaCurve[482];
				GammaCurve_483 = gammaCurve[483];
				GammaCurve_484 = gammaCurve[484];
				GammaCurve_485 = gammaCurve[485];
				GammaCurve_486 = gammaCurve[486];
				GammaCurve_487 = gammaCurve[487];
				GammaCurve_488 = gammaCurve[488];
				GammaCurve_489 = gammaCurve[489];
				GammaCurve_490 = gammaCurve[490];
				GammaCurve_491 = gammaCurve[491];
				GammaCurve_492 = gammaCurve[492];
				GammaCurve_493 = gammaCurve[493];
				GammaCurve_494 = gammaCurve[494];
				GammaCurve_495 = gammaCurve[495];
				GammaCurve_496 = gammaCurve[496];
				GammaCurve_497 = gammaCurve[497];
				GammaCurve_498 = gammaCurve[498];
				GammaCurve_499 = gammaCurve[499];
				GammaCurve_500 = gammaCurve[500];
				GammaCurve_501 = gammaCurve[501];
				GammaCurve_502 = gammaCurve[502];
				GammaCurve_503 = gammaCurve[503];
				GammaCurve_504 = gammaCurve[504];
				GammaCurve_505 = gammaCurve[505];
				GammaCurve_506 = gammaCurve[506];
				GammaCurve_507 = gammaCurve[507];
				GammaCurve_508 = gammaCurve[508];
				GammaCurve_509 = gammaCurve[509];
				GammaCurve_510 = gammaCurve[510];
				GammaCurve_511 = gammaCurve[511];
				GammaCurve_512 = gammaCurve[512];
				GammaCurve_513 = gammaCurve[513];
				GammaCurve_514 = gammaCurve[514];
				GammaCurve_515 = gammaCurve[515];
				GammaCurve_516 = gammaCurve[516];
				GammaCurve_517 = gammaCurve[517];
				GammaCurve_518 = gammaCurve[518];
				GammaCurve_519 = gammaCurve[519];
				GammaCurve_520 = gammaCurve[520];
				GammaCurve_521 = gammaCurve[521];
				GammaCurve_522 = gammaCurve[522];
				GammaCurve_523 = gammaCurve[523];
				GammaCurve_524 = gammaCurve[524];
				GammaCurve_525 = gammaCurve[525];
				GammaCurve_526 = gammaCurve[526];
				GammaCurve_527 = gammaCurve[527];
				GammaCurve_528 = gammaCurve[528];
				GammaCurve_529 = gammaCurve[529];
				GammaCurve_530 = gammaCurve[530];
				GammaCurve_531 = gammaCurve[531];
				GammaCurve_532 = gammaCurve[532];
				GammaCurve_533 = gammaCurve[533];
				GammaCurve_534 = gammaCurve[534];
				GammaCurve_535 = gammaCurve[535];
				GammaCurve_536 = gammaCurve[536];
				GammaCurve_537 = gammaCurve[537];
				GammaCurve_538 = gammaCurve[538];
				GammaCurve_539 = gammaCurve[539];
				GammaCurve_540 = gammaCurve[540];
				GammaCurve_541 = gammaCurve[541];
				GammaCurve_542 = gammaCurve[542];
				GammaCurve_543 = gammaCurve[543];
				GammaCurve_544 = gammaCurve[544];
				GammaCurve_545 = gammaCurve[545];
				GammaCurve_546 = gammaCurve[546];
				GammaCurve_547 = gammaCurve[547];
				GammaCurve_548 = gammaCurve[548];
				GammaCurve_549 = gammaCurve[549];
				GammaCurve_550 = gammaCurve[550];
				GammaCurve_551 = gammaCurve[551];
				GammaCurve_552 = gammaCurve[552];
				GammaCurve_553 = gammaCurve[553];
				GammaCurve_554 = gammaCurve[554];
				GammaCurve_555 = gammaCurve[555];
				GammaCurve_556 = gammaCurve[556];
				GammaCurve_557 = gammaCurve[557];
				GammaCurve_558 = gammaCurve[558];
				GammaCurve_559 = gammaCurve[559];
				GammaCurve_560 = gammaCurve[560];
				GammaCurve_561 = gammaCurve[561];
				GammaCurve_562 = gammaCurve[562];
				GammaCurve_563 = gammaCurve[563];
				GammaCurve_564 = gammaCurve[564];
				GammaCurve_565 = gammaCurve[565];
				GammaCurve_566 = gammaCurve[566];
				GammaCurve_567 = gammaCurve[567];
				GammaCurve_568 = gammaCurve[568];
				GammaCurve_569 = gammaCurve[569];
				GammaCurve_570 = gammaCurve[570];
				GammaCurve_571 = gammaCurve[571];
				GammaCurve_572 = gammaCurve[572];
				GammaCurve_573 = gammaCurve[573];
				GammaCurve_574 = gammaCurve[574];
				GammaCurve_575 = gammaCurve[575];
				GammaCurve_576 = gammaCurve[576];
				GammaCurve_577 = gammaCurve[577];
				GammaCurve_578 = gammaCurve[578];
				GammaCurve_579 = gammaCurve[579];
				GammaCurve_580 = gammaCurve[580];
				GammaCurve_581 = gammaCurve[581];
				GammaCurve_582 = gammaCurve[582];
				GammaCurve_583 = gammaCurve[583];
				GammaCurve_584 = gammaCurve[584];
				GammaCurve_585 = gammaCurve[585];
				GammaCurve_586 = gammaCurve[586];
				GammaCurve_587 = gammaCurve[587];
				GammaCurve_588 = gammaCurve[588];
				GammaCurve_589 = gammaCurve[589];
				GammaCurve_590 = gammaCurve[590];
				GammaCurve_591 = gammaCurve[591];
				GammaCurve_592 = gammaCurve[592];
				GammaCurve_593 = gammaCurve[593];
				GammaCurve_594 = gammaCurve[594];
				GammaCurve_595 = gammaCurve[595];
				GammaCurve_596 = gammaCurve[596];
				GammaCurve_597 = gammaCurve[597];
				GammaCurve_598 = gammaCurve[598];
				GammaCurve_599 = gammaCurve[599];
				GammaCurve_600 = gammaCurve[600];
				GammaCurve_601 = gammaCurve[601];
				GammaCurve_602 = gammaCurve[602];
				GammaCurve_603 = gammaCurve[603];
				GammaCurve_604 = gammaCurve[604];
				GammaCurve_605 = gammaCurve[605];
				GammaCurve_606 = gammaCurve[606];
				GammaCurve_607 = gammaCurve[607];
				GammaCurve_608 = gammaCurve[608];
				GammaCurve_609 = gammaCurve[609];
				GammaCurve_610 = gammaCurve[610];
				GammaCurve_611 = gammaCurve[611];
				GammaCurve_612 = gammaCurve[612];
				GammaCurve_613 = gammaCurve[613];
				GammaCurve_614 = gammaCurve[614];
				GammaCurve_615 = gammaCurve[615];
				GammaCurve_616 = gammaCurve[616];
				GammaCurve_617 = gammaCurve[617];
				GammaCurve_618 = gammaCurve[618];
				GammaCurve_619 = gammaCurve[619];
				GammaCurve_620 = gammaCurve[620];
				GammaCurve_621 = gammaCurve[621];
				GammaCurve_622 = gammaCurve[622];
				GammaCurve_623 = gammaCurve[623];
				GammaCurve_624 = gammaCurve[624];
				GammaCurve_625 = gammaCurve[625];
				GammaCurve_626 = gammaCurve[626];
				GammaCurve_627 = gammaCurve[627];
				GammaCurve_628 = gammaCurve[628];
				GammaCurve_629 = gammaCurve[629];
				GammaCurve_630 = gammaCurve[630];
				GammaCurve_631 = gammaCurve[631];
				GammaCurve_632 = gammaCurve[632];
				GammaCurve_633 = gammaCurve[633];
				GammaCurve_634 = gammaCurve[634];
				GammaCurve_635 = gammaCurve[635];
				GammaCurve_636 = gammaCurve[636];
				GammaCurve_637 = gammaCurve[637];
				GammaCurve_638 = gammaCurve[638];
				GammaCurve_639 = gammaCurve[639];
				GammaCurve_640 = gammaCurve[640];
				GammaCurve_641 = gammaCurve[641];
				GammaCurve_642 = gammaCurve[642];
				GammaCurve_643 = gammaCurve[643];
				GammaCurve_644 = gammaCurve[644];
				GammaCurve_645 = gammaCurve[645];
				GammaCurve_646 = gammaCurve[646];
				GammaCurve_647 = gammaCurve[647];
				GammaCurve_648 = gammaCurve[648];
				GammaCurve_649 = gammaCurve[649];
				GammaCurve_650 = gammaCurve[650];
				GammaCurve_651 = gammaCurve[651];
				GammaCurve_652 = gammaCurve[652];
				GammaCurve_653 = gammaCurve[653];
				GammaCurve_654 = gammaCurve[654];
				GammaCurve_655 = gammaCurve[655];
				GammaCurve_656 = gammaCurve[656];
				GammaCurve_657 = gammaCurve[657];
				GammaCurve_658 = gammaCurve[658];
				GammaCurve_659 = gammaCurve[659];
				GammaCurve_660 = gammaCurve[660];
				GammaCurve_661 = gammaCurve[661];
				GammaCurve_662 = gammaCurve[662];
				GammaCurve_663 = gammaCurve[663];
				GammaCurve_664 = gammaCurve[664];
				GammaCurve_665 = gammaCurve[665];
				GammaCurve_666 = gammaCurve[666];
				GammaCurve_667 = gammaCurve[667];
				GammaCurve_668 = gammaCurve[668];
				GammaCurve_669 = gammaCurve[669];
				GammaCurve_670 = gammaCurve[670];
				GammaCurve_671 = gammaCurve[671];
				GammaCurve_672 = gammaCurve[672];
				GammaCurve_673 = gammaCurve[673];
				GammaCurve_674 = gammaCurve[674];
				GammaCurve_675 = gammaCurve[675];
				GammaCurve_676 = gammaCurve[676];
				GammaCurve_677 = gammaCurve[677];
				GammaCurve_678 = gammaCurve[678];
				GammaCurve_679 = gammaCurve[679];
				GammaCurve_680 = gammaCurve[680];
				GammaCurve_681 = gammaCurve[681];
				GammaCurve_682 = gammaCurve[682];
				GammaCurve_683 = gammaCurve[683];
				GammaCurve_684 = gammaCurve[684];
				GammaCurve_685 = gammaCurve[685];
				GammaCurve_686 = gammaCurve[686];
				GammaCurve_687 = gammaCurve[687];
				GammaCurve_688 = gammaCurve[688];
				GammaCurve_689 = gammaCurve[689];
				GammaCurve_690 = gammaCurve[690];
				GammaCurve_691 = gammaCurve[691];
				GammaCurve_692 = gammaCurve[692];
				GammaCurve_693 = gammaCurve[693];
				GammaCurve_694 = gammaCurve[694];
				GammaCurve_695 = gammaCurve[695];
				GammaCurve_696 = gammaCurve[696];
				GammaCurve_697 = gammaCurve[697];
				GammaCurve_698 = gammaCurve[698];
				GammaCurve_699 = gammaCurve[699];
				GammaCurve_700 = gammaCurve[700];
				GammaCurve_701 = gammaCurve[701];
				GammaCurve_702 = gammaCurve[702];
				GammaCurve_703 = gammaCurve[703];
				GammaCurve_704 = gammaCurve[704];
				GammaCurve_705 = gammaCurve[705];
				GammaCurve_706 = gammaCurve[706];
				GammaCurve_707 = gammaCurve[707];
				GammaCurve_708 = gammaCurve[708];
				GammaCurve_709 = gammaCurve[709];
				GammaCurve_710 = gammaCurve[710];
				GammaCurve_711 = gammaCurve[711];
				GammaCurve_712 = gammaCurve[712];
				GammaCurve_713 = gammaCurve[713];
				GammaCurve_714 = gammaCurve[714];
				GammaCurve_715 = gammaCurve[715];
				GammaCurve_716 = gammaCurve[716];
				GammaCurve_717 = gammaCurve[717];
				GammaCurve_718 = gammaCurve[718];
				GammaCurve_719 = gammaCurve[719];
				GammaCurve_720 = gammaCurve[720];
				GammaCurve_721 = gammaCurve[721];
				GammaCurve_722 = gammaCurve[722];
				GammaCurve_723 = gammaCurve[723];
				GammaCurve_724 = gammaCurve[724];
				GammaCurve_725 = gammaCurve[725];
				GammaCurve_726 = gammaCurve[726];
				GammaCurve_727 = gammaCurve[727];
				GammaCurve_728 = gammaCurve[728];
				GammaCurve_729 = gammaCurve[729];
				GammaCurve_730 = gammaCurve[730];
				GammaCurve_731 = gammaCurve[731];
				GammaCurve_732 = gammaCurve[732];
				GammaCurve_733 = gammaCurve[733];
				GammaCurve_734 = gammaCurve[734];
				GammaCurve_735 = gammaCurve[735];
				GammaCurve_736 = gammaCurve[736];
				GammaCurve_737 = gammaCurve[737];
				GammaCurve_738 = gammaCurve[738];
				GammaCurve_739 = gammaCurve[739];
				GammaCurve_740 = gammaCurve[740];
				GammaCurve_741 = gammaCurve[741];
				GammaCurve_742 = gammaCurve[742];
				GammaCurve_743 = gammaCurve[743];
				GammaCurve_744 = gammaCurve[744];
				GammaCurve_745 = gammaCurve[745];
				GammaCurve_746 = gammaCurve[746];
				GammaCurve_747 = gammaCurve[747];
				GammaCurve_748 = gammaCurve[748];
				GammaCurve_749 = gammaCurve[749];
				GammaCurve_750 = gammaCurve[750];
				GammaCurve_751 = gammaCurve[751];
				GammaCurve_752 = gammaCurve[752];
				GammaCurve_753 = gammaCurve[753];
				GammaCurve_754 = gammaCurve[754];
				GammaCurve_755 = gammaCurve[755];
				GammaCurve_756 = gammaCurve[756];
				GammaCurve_757 = gammaCurve[757];
				GammaCurve_758 = gammaCurve[758];
				GammaCurve_759 = gammaCurve[759];
				GammaCurve_760 = gammaCurve[760];
				GammaCurve_761 = gammaCurve[761];
				GammaCurve_762 = gammaCurve[762];
				GammaCurve_763 = gammaCurve[763];
				GammaCurve_764 = gammaCurve[764];
				GammaCurve_765 = gammaCurve[765];
				GammaCurve_766 = gammaCurve[766];
				GammaCurve_767 = gammaCurve[767];
				GammaCurve_768 = gammaCurve[768];
				GammaCurve_769 = gammaCurve[769];
				GammaCurve_770 = gammaCurve[770];
				GammaCurve_771 = gammaCurve[771];
				GammaCurve_772 = gammaCurve[772];
				GammaCurve_773 = gammaCurve[773];
				GammaCurve_774 = gammaCurve[774];
				GammaCurve_775 = gammaCurve[775];
				GammaCurve_776 = gammaCurve[776];
				GammaCurve_777 = gammaCurve[777];
				GammaCurve_778 = gammaCurve[778];
				GammaCurve_779 = gammaCurve[779];
				GammaCurve_780 = gammaCurve[780];
				GammaCurve_781 = gammaCurve[781];
				GammaCurve_782 = gammaCurve[782];
				GammaCurve_783 = gammaCurve[783];
				GammaCurve_784 = gammaCurve[784];
				GammaCurve_785 = gammaCurve[785];
				GammaCurve_786 = gammaCurve[786];
				GammaCurve_787 = gammaCurve[787];
				GammaCurve_788 = gammaCurve[788];
				GammaCurve_789 = gammaCurve[789];
				GammaCurve_790 = gammaCurve[790];
				GammaCurve_791 = gammaCurve[791];
				GammaCurve_792 = gammaCurve[792];
				GammaCurve_793 = gammaCurve[793];
				GammaCurve_794 = gammaCurve[794];
				GammaCurve_795 = gammaCurve[795];
				GammaCurve_796 = gammaCurve[796];
				GammaCurve_797 = gammaCurve[797];
				GammaCurve_798 = gammaCurve[798];
				GammaCurve_799 = gammaCurve[799];
				GammaCurve_800 = gammaCurve[800];
				GammaCurve_801 = gammaCurve[801];
				GammaCurve_802 = gammaCurve[802];
				GammaCurve_803 = gammaCurve[803];
				GammaCurve_804 = gammaCurve[804];
				GammaCurve_805 = gammaCurve[805];
				GammaCurve_806 = gammaCurve[806];
				GammaCurve_807 = gammaCurve[807];
				GammaCurve_808 = gammaCurve[808];
				GammaCurve_809 = gammaCurve[809];
				GammaCurve_810 = gammaCurve[810];
				GammaCurve_811 = gammaCurve[811];
				GammaCurve_812 = gammaCurve[812];
				GammaCurve_813 = gammaCurve[813];
				GammaCurve_814 = gammaCurve[814];
				GammaCurve_815 = gammaCurve[815];
				GammaCurve_816 = gammaCurve[816];
				GammaCurve_817 = gammaCurve[817];
				GammaCurve_818 = gammaCurve[818];
				GammaCurve_819 = gammaCurve[819];
				GammaCurve_820 = gammaCurve[820];
				GammaCurve_821 = gammaCurve[821];
				GammaCurve_822 = gammaCurve[822];
				GammaCurve_823 = gammaCurve[823];
				GammaCurve_824 = gammaCurve[824];
				GammaCurve_825 = gammaCurve[825];
				GammaCurve_826 = gammaCurve[826];
				GammaCurve_827 = gammaCurve[827];
				GammaCurve_828 = gammaCurve[828];
				GammaCurve_829 = gammaCurve[829];
				GammaCurve_830 = gammaCurve[830];
				GammaCurve_831 = gammaCurve[831];
				GammaCurve_832 = gammaCurve[832];
				GammaCurve_833 = gammaCurve[833];
				GammaCurve_834 = gammaCurve[834];
				GammaCurve_835 = gammaCurve[835];
				GammaCurve_836 = gammaCurve[836];
				GammaCurve_837 = gammaCurve[837];
				GammaCurve_838 = gammaCurve[838];
				GammaCurve_839 = gammaCurve[839];
				GammaCurve_840 = gammaCurve[840];
				GammaCurve_841 = gammaCurve[841];
				GammaCurve_842 = gammaCurve[842];
				GammaCurve_843 = gammaCurve[843];
				GammaCurve_844 = gammaCurve[844];
				GammaCurve_845 = gammaCurve[845];
				GammaCurve_846 = gammaCurve[846];
				GammaCurve_847 = gammaCurve[847];
				GammaCurve_848 = gammaCurve[848];
				GammaCurve_849 = gammaCurve[849];
				GammaCurve_850 = gammaCurve[850];
				GammaCurve_851 = gammaCurve[851];
				GammaCurve_852 = gammaCurve[852];
				GammaCurve_853 = gammaCurve[853];
				GammaCurve_854 = gammaCurve[854];
				GammaCurve_855 = gammaCurve[855];
				GammaCurve_856 = gammaCurve[856];
				GammaCurve_857 = gammaCurve[857];
				GammaCurve_858 = gammaCurve[858];
				GammaCurve_859 = gammaCurve[859];
				GammaCurve_860 = gammaCurve[860];
				GammaCurve_861 = gammaCurve[861];
				GammaCurve_862 = gammaCurve[862];
				GammaCurve_863 = gammaCurve[863];
				GammaCurve_864 = gammaCurve[864];
				GammaCurve_865 = gammaCurve[865];
				GammaCurve_866 = gammaCurve[866];
				GammaCurve_867 = gammaCurve[867];
				GammaCurve_868 = gammaCurve[868];
				GammaCurve_869 = gammaCurve[869];
				GammaCurve_870 = gammaCurve[870];
				GammaCurve_871 = gammaCurve[871];
				GammaCurve_872 = gammaCurve[872];
				GammaCurve_873 = gammaCurve[873];
				GammaCurve_874 = gammaCurve[874];
				GammaCurve_875 = gammaCurve[875];
				GammaCurve_876 = gammaCurve[876];
				GammaCurve_877 = gammaCurve[877];
				GammaCurve_878 = gammaCurve[878];
				GammaCurve_879 = gammaCurve[879];
				GammaCurve_880 = gammaCurve[880];
				GammaCurve_881 = gammaCurve[881];
				GammaCurve_882 = gammaCurve[882];
				GammaCurve_883 = gammaCurve[883];
				GammaCurve_884 = gammaCurve[884];
				GammaCurve_885 = gammaCurve[885];
				GammaCurve_886 = gammaCurve[886];
				GammaCurve_887 = gammaCurve[887];
				GammaCurve_888 = gammaCurve[888];
				GammaCurve_889 = gammaCurve[889];
				GammaCurve_890 = gammaCurve[890];
				GammaCurve_891 = gammaCurve[891];
				GammaCurve_892 = gammaCurve[892];
				GammaCurve_893 = gammaCurve[893];
				GammaCurve_894 = gammaCurve[894];
				GammaCurve_895 = gammaCurve[895];
				GammaCurve_896 = gammaCurve[896];
				GammaCurve_897 = gammaCurve[897];
				GammaCurve_898 = gammaCurve[898];
				GammaCurve_899 = gammaCurve[899];
				GammaCurve_900 = gammaCurve[900];
				GammaCurve_901 = gammaCurve[901];
				GammaCurve_902 = gammaCurve[902];
				GammaCurve_903 = gammaCurve[903];
				GammaCurve_904 = gammaCurve[904];
				GammaCurve_905 = gammaCurve[905];
				GammaCurve_906 = gammaCurve[906];
				GammaCurve_907 = gammaCurve[907];
				GammaCurve_908 = gammaCurve[908];
				GammaCurve_909 = gammaCurve[909];
				GammaCurve_910 = gammaCurve[910];
				GammaCurve_911 = gammaCurve[911];
				GammaCurve_912 = gammaCurve[912];
				GammaCurve_913 = gammaCurve[913];
				GammaCurve_914 = gammaCurve[914];
				GammaCurve_915 = gammaCurve[915];
				GammaCurve_916 = gammaCurve[916];
				GammaCurve_917 = gammaCurve[917];
				GammaCurve_918 = gammaCurve[918];
				GammaCurve_919 = gammaCurve[919];
				GammaCurve_920 = gammaCurve[920];
				GammaCurve_921 = gammaCurve[921];
				GammaCurve_922 = gammaCurve[922];
				GammaCurve_923 = gammaCurve[923];
				GammaCurve_924 = gammaCurve[924];
				GammaCurve_925 = gammaCurve[925];
				GammaCurve_926 = gammaCurve[926];
				GammaCurve_927 = gammaCurve[927];
				GammaCurve_928 = gammaCurve[928];
				GammaCurve_929 = gammaCurve[929];
				GammaCurve_930 = gammaCurve[930];
				GammaCurve_931 = gammaCurve[931];
				GammaCurve_932 = gammaCurve[932];
				GammaCurve_933 = gammaCurve[933];
				GammaCurve_934 = gammaCurve[934];
				GammaCurve_935 = gammaCurve[935];
				GammaCurve_936 = gammaCurve[936];
				GammaCurve_937 = gammaCurve[937];
				GammaCurve_938 = gammaCurve[938];
				GammaCurve_939 = gammaCurve[939];
				GammaCurve_940 = gammaCurve[940];
				GammaCurve_941 = gammaCurve[941];
				GammaCurve_942 = gammaCurve[942];
				GammaCurve_943 = gammaCurve[943];
				GammaCurve_944 = gammaCurve[944];
				GammaCurve_945 = gammaCurve[945];
				GammaCurve_946 = gammaCurve[946];
				GammaCurve_947 = gammaCurve[947];
				GammaCurve_948 = gammaCurve[948];
				GammaCurve_949 = gammaCurve[949];
				GammaCurve_950 = gammaCurve[950];
				GammaCurve_951 = gammaCurve[951];
				GammaCurve_952 = gammaCurve[952];
				GammaCurve_953 = gammaCurve[953];
				GammaCurve_954 = gammaCurve[954];
				GammaCurve_955 = gammaCurve[955];
				GammaCurve_956 = gammaCurve[956];
				GammaCurve_957 = gammaCurve[957];
				GammaCurve_958 = gammaCurve[958];
				GammaCurve_959 = gammaCurve[959];
				GammaCurve_960 = gammaCurve[960];
				GammaCurve_961 = gammaCurve[961];
				GammaCurve_962 = gammaCurve[962];
				GammaCurve_963 = gammaCurve[963];
				GammaCurve_964 = gammaCurve[964];
				GammaCurve_965 = gammaCurve[965];
				GammaCurve_966 = gammaCurve[966];
				GammaCurve_967 = gammaCurve[967];
				GammaCurve_968 = gammaCurve[968];
				GammaCurve_969 = gammaCurve[969];
				GammaCurve_970 = gammaCurve[970];
				GammaCurve_971 = gammaCurve[971];
				GammaCurve_972 = gammaCurve[972];
				GammaCurve_973 = gammaCurve[973];
				GammaCurve_974 = gammaCurve[974];
				GammaCurve_975 = gammaCurve[975];
				GammaCurve_976 = gammaCurve[976];
				GammaCurve_977 = gammaCurve[977];
				GammaCurve_978 = gammaCurve[978];
				GammaCurve_979 = gammaCurve[979];
				GammaCurve_980 = gammaCurve[980];
				GammaCurve_981 = gammaCurve[981];
				GammaCurve_982 = gammaCurve[982];
				GammaCurve_983 = gammaCurve[983];
				GammaCurve_984 = gammaCurve[984];
				GammaCurve_985 = gammaCurve[985];
				GammaCurve_986 = gammaCurve[986];
				GammaCurve_987 = gammaCurve[987];
				GammaCurve_988 = gammaCurve[988];
				GammaCurve_989 = gammaCurve[989];
				GammaCurve_990 = gammaCurve[990];
				GammaCurve_991 = gammaCurve[991];
				GammaCurve_992 = gammaCurve[992];
				GammaCurve_993 = gammaCurve[993];
				GammaCurve_994 = gammaCurve[994];
				GammaCurve_995 = gammaCurve[995];
				GammaCurve_996 = gammaCurve[996];
				GammaCurve_997 = gammaCurve[997];
				GammaCurve_998 = gammaCurve[998];
				GammaCurve_999 = gammaCurve[999];
				GammaCurve_1000 = gammaCurve[1000];
				GammaCurve_1001 = gammaCurve[1001];
				GammaCurve_1002 = gammaCurve[1002];
				GammaCurve_1003 = gammaCurve[1003];
				GammaCurve_1004 = gammaCurve[1004];
				GammaCurve_1005 = gammaCurve[1005];
				GammaCurve_1006 = gammaCurve[1006];
				GammaCurve_1007 = gammaCurve[1007];
				GammaCurve_1008 = gammaCurve[1008];
				GammaCurve_1009 = gammaCurve[1009];
				GammaCurve_1010 = gammaCurve[1010];
				GammaCurve_1011 = gammaCurve[1011];
				GammaCurve_1012 = gammaCurve[1012];
				GammaCurve_1013 = gammaCurve[1013];
				GammaCurve_1014 = gammaCurve[1014];
				GammaCurve_1015 = gammaCurve[1015];
				GammaCurve_1016 = gammaCurve[1016];
				GammaCurve_1017 = gammaCurve[1017];
				GammaCurve_1018 = gammaCurve[1018];
				GammaCurve_1019 = gammaCurve[1019];
				GammaCurve_1020 = gammaCurve[1020];
				GammaCurve_1021 = gammaCurve[1021];
				GammaCurve_1022 = gammaCurve[1022];
				GammaCurve_1023 = gammaCurve[1023];
				GammaCurve_1024 = gammaCurve[1024];
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiGammaControl(DxgiRgb scale = default, DxgiRgb offset = default, Span<DxgiRgb> gammaCurve = default)
		{
			Scale = scale;
			Offset = offset;
			if (gammaCurve != default)
			{
				GammaCurve_0 = gammaCurve[0];
				GammaCurve_1 = gammaCurve[1];
				GammaCurve_2 = gammaCurve[2];
				GammaCurve_3 = gammaCurve[3];
				GammaCurve_4 = gammaCurve[4];
				GammaCurve_5 = gammaCurve[5];
				GammaCurve_6 = gammaCurve[6];
				GammaCurve_7 = gammaCurve[7];
				GammaCurve_8 = gammaCurve[8];
				GammaCurve_9 = gammaCurve[9];
				GammaCurve_10 = gammaCurve[10];
				GammaCurve_11 = gammaCurve[11];
				GammaCurve_12 = gammaCurve[12];
				GammaCurve_13 = gammaCurve[13];
				GammaCurve_14 = gammaCurve[14];
				GammaCurve_15 = gammaCurve[15];
				GammaCurve_16 = gammaCurve[16];
				GammaCurve_17 = gammaCurve[17];
				GammaCurve_18 = gammaCurve[18];
				GammaCurve_19 = gammaCurve[19];
				GammaCurve_20 = gammaCurve[20];
				GammaCurve_21 = gammaCurve[21];
				GammaCurve_22 = gammaCurve[22];
				GammaCurve_23 = gammaCurve[23];
				GammaCurve_24 = gammaCurve[24];
				GammaCurve_25 = gammaCurve[25];
				GammaCurve_26 = gammaCurve[26];
				GammaCurve_27 = gammaCurve[27];
				GammaCurve_28 = gammaCurve[28];
				GammaCurve_29 = gammaCurve[29];
				GammaCurve_30 = gammaCurve[30];
				GammaCurve_31 = gammaCurve[31];
				GammaCurve_32 = gammaCurve[32];
				GammaCurve_33 = gammaCurve[33];
				GammaCurve_34 = gammaCurve[34];
				GammaCurve_35 = gammaCurve[35];
				GammaCurve_36 = gammaCurve[36];
				GammaCurve_37 = gammaCurve[37];
				GammaCurve_38 = gammaCurve[38];
				GammaCurve_39 = gammaCurve[39];
				GammaCurve_40 = gammaCurve[40];
				GammaCurve_41 = gammaCurve[41];
				GammaCurve_42 = gammaCurve[42];
				GammaCurve_43 = gammaCurve[43];
				GammaCurve_44 = gammaCurve[44];
				GammaCurve_45 = gammaCurve[45];
				GammaCurve_46 = gammaCurve[46];
				GammaCurve_47 = gammaCurve[47];
				GammaCurve_48 = gammaCurve[48];
				GammaCurve_49 = gammaCurve[49];
				GammaCurve_50 = gammaCurve[50];
				GammaCurve_51 = gammaCurve[51];
				GammaCurve_52 = gammaCurve[52];
				GammaCurve_53 = gammaCurve[53];
				GammaCurve_54 = gammaCurve[54];
				GammaCurve_55 = gammaCurve[55];
				GammaCurve_56 = gammaCurve[56];
				GammaCurve_57 = gammaCurve[57];
				GammaCurve_58 = gammaCurve[58];
				GammaCurve_59 = gammaCurve[59];
				GammaCurve_60 = gammaCurve[60];
				GammaCurve_61 = gammaCurve[61];
				GammaCurve_62 = gammaCurve[62];
				GammaCurve_63 = gammaCurve[63];
				GammaCurve_64 = gammaCurve[64];
				GammaCurve_65 = gammaCurve[65];
				GammaCurve_66 = gammaCurve[66];
				GammaCurve_67 = gammaCurve[67];
				GammaCurve_68 = gammaCurve[68];
				GammaCurve_69 = gammaCurve[69];
				GammaCurve_70 = gammaCurve[70];
				GammaCurve_71 = gammaCurve[71];
				GammaCurve_72 = gammaCurve[72];
				GammaCurve_73 = gammaCurve[73];
				GammaCurve_74 = gammaCurve[74];
				GammaCurve_75 = gammaCurve[75];
				GammaCurve_76 = gammaCurve[76];
				GammaCurve_77 = gammaCurve[77];
				GammaCurve_78 = gammaCurve[78];
				GammaCurve_79 = gammaCurve[79];
				GammaCurve_80 = gammaCurve[80];
				GammaCurve_81 = gammaCurve[81];
				GammaCurve_82 = gammaCurve[82];
				GammaCurve_83 = gammaCurve[83];
				GammaCurve_84 = gammaCurve[84];
				GammaCurve_85 = gammaCurve[85];
				GammaCurve_86 = gammaCurve[86];
				GammaCurve_87 = gammaCurve[87];
				GammaCurve_88 = gammaCurve[88];
				GammaCurve_89 = gammaCurve[89];
				GammaCurve_90 = gammaCurve[90];
				GammaCurve_91 = gammaCurve[91];
				GammaCurve_92 = gammaCurve[92];
				GammaCurve_93 = gammaCurve[93];
				GammaCurve_94 = gammaCurve[94];
				GammaCurve_95 = gammaCurve[95];
				GammaCurve_96 = gammaCurve[96];
				GammaCurve_97 = gammaCurve[97];
				GammaCurve_98 = gammaCurve[98];
				GammaCurve_99 = gammaCurve[99];
				GammaCurve_100 = gammaCurve[100];
				GammaCurve_101 = gammaCurve[101];
				GammaCurve_102 = gammaCurve[102];
				GammaCurve_103 = gammaCurve[103];
				GammaCurve_104 = gammaCurve[104];
				GammaCurve_105 = gammaCurve[105];
				GammaCurve_106 = gammaCurve[106];
				GammaCurve_107 = gammaCurve[107];
				GammaCurve_108 = gammaCurve[108];
				GammaCurve_109 = gammaCurve[109];
				GammaCurve_110 = gammaCurve[110];
				GammaCurve_111 = gammaCurve[111];
				GammaCurve_112 = gammaCurve[112];
				GammaCurve_113 = gammaCurve[113];
				GammaCurve_114 = gammaCurve[114];
				GammaCurve_115 = gammaCurve[115];
				GammaCurve_116 = gammaCurve[116];
				GammaCurve_117 = gammaCurve[117];
				GammaCurve_118 = gammaCurve[118];
				GammaCurve_119 = gammaCurve[119];
				GammaCurve_120 = gammaCurve[120];
				GammaCurve_121 = gammaCurve[121];
				GammaCurve_122 = gammaCurve[122];
				GammaCurve_123 = gammaCurve[123];
				GammaCurve_124 = gammaCurve[124];
				GammaCurve_125 = gammaCurve[125];
				GammaCurve_126 = gammaCurve[126];
				GammaCurve_127 = gammaCurve[127];
				GammaCurve_128 = gammaCurve[128];
				GammaCurve_129 = gammaCurve[129];
				GammaCurve_130 = gammaCurve[130];
				GammaCurve_131 = gammaCurve[131];
				GammaCurve_132 = gammaCurve[132];
				GammaCurve_133 = gammaCurve[133];
				GammaCurve_134 = gammaCurve[134];
				GammaCurve_135 = gammaCurve[135];
				GammaCurve_136 = gammaCurve[136];
				GammaCurve_137 = gammaCurve[137];
				GammaCurve_138 = gammaCurve[138];
				GammaCurve_139 = gammaCurve[139];
				GammaCurve_140 = gammaCurve[140];
				GammaCurve_141 = gammaCurve[141];
				GammaCurve_142 = gammaCurve[142];
				GammaCurve_143 = gammaCurve[143];
				GammaCurve_144 = gammaCurve[144];
				GammaCurve_145 = gammaCurve[145];
				GammaCurve_146 = gammaCurve[146];
				GammaCurve_147 = gammaCurve[147];
				GammaCurve_148 = gammaCurve[148];
				GammaCurve_149 = gammaCurve[149];
				GammaCurve_150 = gammaCurve[150];
				GammaCurve_151 = gammaCurve[151];
				GammaCurve_152 = gammaCurve[152];
				GammaCurve_153 = gammaCurve[153];
				GammaCurve_154 = gammaCurve[154];
				GammaCurve_155 = gammaCurve[155];
				GammaCurve_156 = gammaCurve[156];
				GammaCurve_157 = gammaCurve[157];
				GammaCurve_158 = gammaCurve[158];
				GammaCurve_159 = gammaCurve[159];
				GammaCurve_160 = gammaCurve[160];
				GammaCurve_161 = gammaCurve[161];
				GammaCurve_162 = gammaCurve[162];
				GammaCurve_163 = gammaCurve[163];
				GammaCurve_164 = gammaCurve[164];
				GammaCurve_165 = gammaCurve[165];
				GammaCurve_166 = gammaCurve[166];
				GammaCurve_167 = gammaCurve[167];
				GammaCurve_168 = gammaCurve[168];
				GammaCurve_169 = gammaCurve[169];
				GammaCurve_170 = gammaCurve[170];
				GammaCurve_171 = gammaCurve[171];
				GammaCurve_172 = gammaCurve[172];
				GammaCurve_173 = gammaCurve[173];
				GammaCurve_174 = gammaCurve[174];
				GammaCurve_175 = gammaCurve[175];
				GammaCurve_176 = gammaCurve[176];
				GammaCurve_177 = gammaCurve[177];
				GammaCurve_178 = gammaCurve[178];
				GammaCurve_179 = gammaCurve[179];
				GammaCurve_180 = gammaCurve[180];
				GammaCurve_181 = gammaCurve[181];
				GammaCurve_182 = gammaCurve[182];
				GammaCurve_183 = gammaCurve[183];
				GammaCurve_184 = gammaCurve[184];
				GammaCurve_185 = gammaCurve[185];
				GammaCurve_186 = gammaCurve[186];
				GammaCurve_187 = gammaCurve[187];
				GammaCurve_188 = gammaCurve[188];
				GammaCurve_189 = gammaCurve[189];
				GammaCurve_190 = gammaCurve[190];
				GammaCurve_191 = gammaCurve[191];
				GammaCurve_192 = gammaCurve[192];
				GammaCurve_193 = gammaCurve[193];
				GammaCurve_194 = gammaCurve[194];
				GammaCurve_195 = gammaCurve[195];
				GammaCurve_196 = gammaCurve[196];
				GammaCurve_197 = gammaCurve[197];
				GammaCurve_198 = gammaCurve[198];
				GammaCurve_199 = gammaCurve[199];
				GammaCurve_200 = gammaCurve[200];
				GammaCurve_201 = gammaCurve[201];
				GammaCurve_202 = gammaCurve[202];
				GammaCurve_203 = gammaCurve[203];
				GammaCurve_204 = gammaCurve[204];
				GammaCurve_205 = gammaCurve[205];
				GammaCurve_206 = gammaCurve[206];
				GammaCurve_207 = gammaCurve[207];
				GammaCurve_208 = gammaCurve[208];
				GammaCurve_209 = gammaCurve[209];
				GammaCurve_210 = gammaCurve[210];
				GammaCurve_211 = gammaCurve[211];
				GammaCurve_212 = gammaCurve[212];
				GammaCurve_213 = gammaCurve[213];
				GammaCurve_214 = gammaCurve[214];
				GammaCurve_215 = gammaCurve[215];
				GammaCurve_216 = gammaCurve[216];
				GammaCurve_217 = gammaCurve[217];
				GammaCurve_218 = gammaCurve[218];
				GammaCurve_219 = gammaCurve[219];
				GammaCurve_220 = gammaCurve[220];
				GammaCurve_221 = gammaCurve[221];
				GammaCurve_222 = gammaCurve[222];
				GammaCurve_223 = gammaCurve[223];
				GammaCurve_224 = gammaCurve[224];
				GammaCurve_225 = gammaCurve[225];
				GammaCurve_226 = gammaCurve[226];
				GammaCurve_227 = gammaCurve[227];
				GammaCurve_228 = gammaCurve[228];
				GammaCurve_229 = gammaCurve[229];
				GammaCurve_230 = gammaCurve[230];
				GammaCurve_231 = gammaCurve[231];
				GammaCurve_232 = gammaCurve[232];
				GammaCurve_233 = gammaCurve[233];
				GammaCurve_234 = gammaCurve[234];
				GammaCurve_235 = gammaCurve[235];
				GammaCurve_236 = gammaCurve[236];
				GammaCurve_237 = gammaCurve[237];
				GammaCurve_238 = gammaCurve[238];
				GammaCurve_239 = gammaCurve[239];
				GammaCurve_240 = gammaCurve[240];
				GammaCurve_241 = gammaCurve[241];
				GammaCurve_242 = gammaCurve[242];
				GammaCurve_243 = gammaCurve[243];
				GammaCurve_244 = gammaCurve[244];
				GammaCurve_245 = gammaCurve[245];
				GammaCurve_246 = gammaCurve[246];
				GammaCurve_247 = gammaCurve[247];
				GammaCurve_248 = gammaCurve[248];
				GammaCurve_249 = gammaCurve[249];
				GammaCurve_250 = gammaCurve[250];
				GammaCurve_251 = gammaCurve[251];
				GammaCurve_252 = gammaCurve[252];
				GammaCurve_253 = gammaCurve[253];
				GammaCurve_254 = gammaCurve[254];
				GammaCurve_255 = gammaCurve[255];
				GammaCurve_256 = gammaCurve[256];
				GammaCurve_257 = gammaCurve[257];
				GammaCurve_258 = gammaCurve[258];
				GammaCurve_259 = gammaCurve[259];
				GammaCurve_260 = gammaCurve[260];
				GammaCurve_261 = gammaCurve[261];
				GammaCurve_262 = gammaCurve[262];
				GammaCurve_263 = gammaCurve[263];
				GammaCurve_264 = gammaCurve[264];
				GammaCurve_265 = gammaCurve[265];
				GammaCurve_266 = gammaCurve[266];
				GammaCurve_267 = gammaCurve[267];
				GammaCurve_268 = gammaCurve[268];
				GammaCurve_269 = gammaCurve[269];
				GammaCurve_270 = gammaCurve[270];
				GammaCurve_271 = gammaCurve[271];
				GammaCurve_272 = gammaCurve[272];
				GammaCurve_273 = gammaCurve[273];
				GammaCurve_274 = gammaCurve[274];
				GammaCurve_275 = gammaCurve[275];
				GammaCurve_276 = gammaCurve[276];
				GammaCurve_277 = gammaCurve[277];
				GammaCurve_278 = gammaCurve[278];
				GammaCurve_279 = gammaCurve[279];
				GammaCurve_280 = gammaCurve[280];
				GammaCurve_281 = gammaCurve[281];
				GammaCurve_282 = gammaCurve[282];
				GammaCurve_283 = gammaCurve[283];
				GammaCurve_284 = gammaCurve[284];
				GammaCurve_285 = gammaCurve[285];
				GammaCurve_286 = gammaCurve[286];
				GammaCurve_287 = gammaCurve[287];
				GammaCurve_288 = gammaCurve[288];
				GammaCurve_289 = gammaCurve[289];
				GammaCurve_290 = gammaCurve[290];
				GammaCurve_291 = gammaCurve[291];
				GammaCurve_292 = gammaCurve[292];
				GammaCurve_293 = gammaCurve[293];
				GammaCurve_294 = gammaCurve[294];
				GammaCurve_295 = gammaCurve[295];
				GammaCurve_296 = gammaCurve[296];
				GammaCurve_297 = gammaCurve[297];
				GammaCurve_298 = gammaCurve[298];
				GammaCurve_299 = gammaCurve[299];
				GammaCurve_300 = gammaCurve[300];
				GammaCurve_301 = gammaCurve[301];
				GammaCurve_302 = gammaCurve[302];
				GammaCurve_303 = gammaCurve[303];
				GammaCurve_304 = gammaCurve[304];
				GammaCurve_305 = gammaCurve[305];
				GammaCurve_306 = gammaCurve[306];
				GammaCurve_307 = gammaCurve[307];
				GammaCurve_308 = gammaCurve[308];
				GammaCurve_309 = gammaCurve[309];
				GammaCurve_310 = gammaCurve[310];
				GammaCurve_311 = gammaCurve[311];
				GammaCurve_312 = gammaCurve[312];
				GammaCurve_313 = gammaCurve[313];
				GammaCurve_314 = gammaCurve[314];
				GammaCurve_315 = gammaCurve[315];
				GammaCurve_316 = gammaCurve[316];
				GammaCurve_317 = gammaCurve[317];
				GammaCurve_318 = gammaCurve[318];
				GammaCurve_319 = gammaCurve[319];
				GammaCurve_320 = gammaCurve[320];
				GammaCurve_321 = gammaCurve[321];
				GammaCurve_322 = gammaCurve[322];
				GammaCurve_323 = gammaCurve[323];
				GammaCurve_324 = gammaCurve[324];
				GammaCurve_325 = gammaCurve[325];
				GammaCurve_326 = gammaCurve[326];
				GammaCurve_327 = gammaCurve[327];
				GammaCurve_328 = gammaCurve[328];
				GammaCurve_329 = gammaCurve[329];
				GammaCurve_330 = gammaCurve[330];
				GammaCurve_331 = gammaCurve[331];
				GammaCurve_332 = gammaCurve[332];
				GammaCurve_333 = gammaCurve[333];
				GammaCurve_334 = gammaCurve[334];
				GammaCurve_335 = gammaCurve[335];
				GammaCurve_336 = gammaCurve[336];
				GammaCurve_337 = gammaCurve[337];
				GammaCurve_338 = gammaCurve[338];
				GammaCurve_339 = gammaCurve[339];
				GammaCurve_340 = gammaCurve[340];
				GammaCurve_341 = gammaCurve[341];
				GammaCurve_342 = gammaCurve[342];
				GammaCurve_343 = gammaCurve[343];
				GammaCurve_344 = gammaCurve[344];
				GammaCurve_345 = gammaCurve[345];
				GammaCurve_346 = gammaCurve[346];
				GammaCurve_347 = gammaCurve[347];
				GammaCurve_348 = gammaCurve[348];
				GammaCurve_349 = gammaCurve[349];
				GammaCurve_350 = gammaCurve[350];
				GammaCurve_351 = gammaCurve[351];
				GammaCurve_352 = gammaCurve[352];
				GammaCurve_353 = gammaCurve[353];
				GammaCurve_354 = gammaCurve[354];
				GammaCurve_355 = gammaCurve[355];
				GammaCurve_356 = gammaCurve[356];
				GammaCurve_357 = gammaCurve[357];
				GammaCurve_358 = gammaCurve[358];
				GammaCurve_359 = gammaCurve[359];
				GammaCurve_360 = gammaCurve[360];
				GammaCurve_361 = gammaCurve[361];
				GammaCurve_362 = gammaCurve[362];
				GammaCurve_363 = gammaCurve[363];
				GammaCurve_364 = gammaCurve[364];
				GammaCurve_365 = gammaCurve[365];
				GammaCurve_366 = gammaCurve[366];
				GammaCurve_367 = gammaCurve[367];
				GammaCurve_368 = gammaCurve[368];
				GammaCurve_369 = gammaCurve[369];
				GammaCurve_370 = gammaCurve[370];
				GammaCurve_371 = gammaCurve[371];
				GammaCurve_372 = gammaCurve[372];
				GammaCurve_373 = gammaCurve[373];
				GammaCurve_374 = gammaCurve[374];
				GammaCurve_375 = gammaCurve[375];
				GammaCurve_376 = gammaCurve[376];
				GammaCurve_377 = gammaCurve[377];
				GammaCurve_378 = gammaCurve[378];
				GammaCurve_379 = gammaCurve[379];
				GammaCurve_380 = gammaCurve[380];
				GammaCurve_381 = gammaCurve[381];
				GammaCurve_382 = gammaCurve[382];
				GammaCurve_383 = gammaCurve[383];
				GammaCurve_384 = gammaCurve[384];
				GammaCurve_385 = gammaCurve[385];
				GammaCurve_386 = gammaCurve[386];
				GammaCurve_387 = gammaCurve[387];
				GammaCurve_388 = gammaCurve[388];
				GammaCurve_389 = gammaCurve[389];
				GammaCurve_390 = gammaCurve[390];
				GammaCurve_391 = gammaCurve[391];
				GammaCurve_392 = gammaCurve[392];
				GammaCurve_393 = gammaCurve[393];
				GammaCurve_394 = gammaCurve[394];
				GammaCurve_395 = gammaCurve[395];
				GammaCurve_396 = gammaCurve[396];
				GammaCurve_397 = gammaCurve[397];
				GammaCurve_398 = gammaCurve[398];
				GammaCurve_399 = gammaCurve[399];
				GammaCurve_400 = gammaCurve[400];
				GammaCurve_401 = gammaCurve[401];
				GammaCurve_402 = gammaCurve[402];
				GammaCurve_403 = gammaCurve[403];
				GammaCurve_404 = gammaCurve[404];
				GammaCurve_405 = gammaCurve[405];
				GammaCurve_406 = gammaCurve[406];
				GammaCurve_407 = gammaCurve[407];
				GammaCurve_408 = gammaCurve[408];
				GammaCurve_409 = gammaCurve[409];
				GammaCurve_410 = gammaCurve[410];
				GammaCurve_411 = gammaCurve[411];
				GammaCurve_412 = gammaCurve[412];
				GammaCurve_413 = gammaCurve[413];
				GammaCurve_414 = gammaCurve[414];
				GammaCurve_415 = gammaCurve[415];
				GammaCurve_416 = gammaCurve[416];
				GammaCurve_417 = gammaCurve[417];
				GammaCurve_418 = gammaCurve[418];
				GammaCurve_419 = gammaCurve[419];
				GammaCurve_420 = gammaCurve[420];
				GammaCurve_421 = gammaCurve[421];
				GammaCurve_422 = gammaCurve[422];
				GammaCurve_423 = gammaCurve[423];
				GammaCurve_424 = gammaCurve[424];
				GammaCurve_425 = gammaCurve[425];
				GammaCurve_426 = gammaCurve[426];
				GammaCurve_427 = gammaCurve[427];
				GammaCurve_428 = gammaCurve[428];
				GammaCurve_429 = gammaCurve[429];
				GammaCurve_430 = gammaCurve[430];
				GammaCurve_431 = gammaCurve[431];
				GammaCurve_432 = gammaCurve[432];
				GammaCurve_433 = gammaCurve[433];
				GammaCurve_434 = gammaCurve[434];
				GammaCurve_435 = gammaCurve[435];
				GammaCurve_436 = gammaCurve[436];
				GammaCurve_437 = gammaCurve[437];
				GammaCurve_438 = gammaCurve[438];
				GammaCurve_439 = gammaCurve[439];
				GammaCurve_440 = gammaCurve[440];
				GammaCurve_441 = gammaCurve[441];
				GammaCurve_442 = gammaCurve[442];
				GammaCurve_443 = gammaCurve[443];
				GammaCurve_444 = gammaCurve[444];
				GammaCurve_445 = gammaCurve[445];
				GammaCurve_446 = gammaCurve[446];
				GammaCurve_447 = gammaCurve[447];
				GammaCurve_448 = gammaCurve[448];
				GammaCurve_449 = gammaCurve[449];
				GammaCurve_450 = gammaCurve[450];
				GammaCurve_451 = gammaCurve[451];
				GammaCurve_452 = gammaCurve[452];
				GammaCurve_453 = gammaCurve[453];
				GammaCurve_454 = gammaCurve[454];
				GammaCurve_455 = gammaCurve[455];
				GammaCurve_456 = gammaCurve[456];
				GammaCurve_457 = gammaCurve[457];
				GammaCurve_458 = gammaCurve[458];
				GammaCurve_459 = gammaCurve[459];
				GammaCurve_460 = gammaCurve[460];
				GammaCurve_461 = gammaCurve[461];
				GammaCurve_462 = gammaCurve[462];
				GammaCurve_463 = gammaCurve[463];
				GammaCurve_464 = gammaCurve[464];
				GammaCurve_465 = gammaCurve[465];
				GammaCurve_466 = gammaCurve[466];
				GammaCurve_467 = gammaCurve[467];
				GammaCurve_468 = gammaCurve[468];
				GammaCurve_469 = gammaCurve[469];
				GammaCurve_470 = gammaCurve[470];
				GammaCurve_471 = gammaCurve[471];
				GammaCurve_472 = gammaCurve[472];
				GammaCurve_473 = gammaCurve[473];
				GammaCurve_474 = gammaCurve[474];
				GammaCurve_475 = gammaCurve[475];
				GammaCurve_476 = gammaCurve[476];
				GammaCurve_477 = gammaCurve[477];
				GammaCurve_478 = gammaCurve[478];
				GammaCurve_479 = gammaCurve[479];
				GammaCurve_480 = gammaCurve[480];
				GammaCurve_481 = gammaCurve[481];
				GammaCurve_482 = gammaCurve[482];
				GammaCurve_483 = gammaCurve[483];
				GammaCurve_484 = gammaCurve[484];
				GammaCurve_485 = gammaCurve[485];
				GammaCurve_486 = gammaCurve[486];
				GammaCurve_487 = gammaCurve[487];
				GammaCurve_488 = gammaCurve[488];
				GammaCurve_489 = gammaCurve[489];
				GammaCurve_490 = gammaCurve[490];
				GammaCurve_491 = gammaCurve[491];
				GammaCurve_492 = gammaCurve[492];
				GammaCurve_493 = gammaCurve[493];
				GammaCurve_494 = gammaCurve[494];
				GammaCurve_495 = gammaCurve[495];
				GammaCurve_496 = gammaCurve[496];
				GammaCurve_497 = gammaCurve[497];
				GammaCurve_498 = gammaCurve[498];
				GammaCurve_499 = gammaCurve[499];
				GammaCurve_500 = gammaCurve[500];
				GammaCurve_501 = gammaCurve[501];
				GammaCurve_502 = gammaCurve[502];
				GammaCurve_503 = gammaCurve[503];
				GammaCurve_504 = gammaCurve[504];
				GammaCurve_505 = gammaCurve[505];
				GammaCurve_506 = gammaCurve[506];
				GammaCurve_507 = gammaCurve[507];
				GammaCurve_508 = gammaCurve[508];
				GammaCurve_509 = gammaCurve[509];
				GammaCurve_510 = gammaCurve[510];
				GammaCurve_511 = gammaCurve[511];
				GammaCurve_512 = gammaCurve[512];
				GammaCurve_513 = gammaCurve[513];
				GammaCurve_514 = gammaCurve[514];
				GammaCurve_515 = gammaCurve[515];
				GammaCurve_516 = gammaCurve[516];
				GammaCurve_517 = gammaCurve[517];
				GammaCurve_518 = gammaCurve[518];
				GammaCurve_519 = gammaCurve[519];
				GammaCurve_520 = gammaCurve[520];
				GammaCurve_521 = gammaCurve[521];
				GammaCurve_522 = gammaCurve[522];
				GammaCurve_523 = gammaCurve[523];
				GammaCurve_524 = gammaCurve[524];
				GammaCurve_525 = gammaCurve[525];
				GammaCurve_526 = gammaCurve[526];
				GammaCurve_527 = gammaCurve[527];
				GammaCurve_528 = gammaCurve[528];
				GammaCurve_529 = gammaCurve[529];
				GammaCurve_530 = gammaCurve[530];
				GammaCurve_531 = gammaCurve[531];
				GammaCurve_532 = gammaCurve[532];
				GammaCurve_533 = gammaCurve[533];
				GammaCurve_534 = gammaCurve[534];
				GammaCurve_535 = gammaCurve[535];
				GammaCurve_536 = gammaCurve[536];
				GammaCurve_537 = gammaCurve[537];
				GammaCurve_538 = gammaCurve[538];
				GammaCurve_539 = gammaCurve[539];
				GammaCurve_540 = gammaCurve[540];
				GammaCurve_541 = gammaCurve[541];
				GammaCurve_542 = gammaCurve[542];
				GammaCurve_543 = gammaCurve[543];
				GammaCurve_544 = gammaCurve[544];
				GammaCurve_545 = gammaCurve[545];
				GammaCurve_546 = gammaCurve[546];
				GammaCurve_547 = gammaCurve[547];
				GammaCurve_548 = gammaCurve[548];
				GammaCurve_549 = gammaCurve[549];
				GammaCurve_550 = gammaCurve[550];
				GammaCurve_551 = gammaCurve[551];
				GammaCurve_552 = gammaCurve[552];
				GammaCurve_553 = gammaCurve[553];
				GammaCurve_554 = gammaCurve[554];
				GammaCurve_555 = gammaCurve[555];
				GammaCurve_556 = gammaCurve[556];
				GammaCurve_557 = gammaCurve[557];
				GammaCurve_558 = gammaCurve[558];
				GammaCurve_559 = gammaCurve[559];
				GammaCurve_560 = gammaCurve[560];
				GammaCurve_561 = gammaCurve[561];
				GammaCurve_562 = gammaCurve[562];
				GammaCurve_563 = gammaCurve[563];
				GammaCurve_564 = gammaCurve[564];
				GammaCurve_565 = gammaCurve[565];
				GammaCurve_566 = gammaCurve[566];
				GammaCurve_567 = gammaCurve[567];
				GammaCurve_568 = gammaCurve[568];
				GammaCurve_569 = gammaCurve[569];
				GammaCurve_570 = gammaCurve[570];
				GammaCurve_571 = gammaCurve[571];
				GammaCurve_572 = gammaCurve[572];
				GammaCurve_573 = gammaCurve[573];
				GammaCurve_574 = gammaCurve[574];
				GammaCurve_575 = gammaCurve[575];
				GammaCurve_576 = gammaCurve[576];
				GammaCurve_577 = gammaCurve[577];
				GammaCurve_578 = gammaCurve[578];
				GammaCurve_579 = gammaCurve[579];
				GammaCurve_580 = gammaCurve[580];
				GammaCurve_581 = gammaCurve[581];
				GammaCurve_582 = gammaCurve[582];
				GammaCurve_583 = gammaCurve[583];
				GammaCurve_584 = gammaCurve[584];
				GammaCurve_585 = gammaCurve[585];
				GammaCurve_586 = gammaCurve[586];
				GammaCurve_587 = gammaCurve[587];
				GammaCurve_588 = gammaCurve[588];
				GammaCurve_589 = gammaCurve[589];
				GammaCurve_590 = gammaCurve[590];
				GammaCurve_591 = gammaCurve[591];
				GammaCurve_592 = gammaCurve[592];
				GammaCurve_593 = gammaCurve[593];
				GammaCurve_594 = gammaCurve[594];
				GammaCurve_595 = gammaCurve[595];
				GammaCurve_596 = gammaCurve[596];
				GammaCurve_597 = gammaCurve[597];
				GammaCurve_598 = gammaCurve[598];
				GammaCurve_599 = gammaCurve[599];
				GammaCurve_600 = gammaCurve[600];
				GammaCurve_601 = gammaCurve[601];
				GammaCurve_602 = gammaCurve[602];
				GammaCurve_603 = gammaCurve[603];
				GammaCurve_604 = gammaCurve[604];
				GammaCurve_605 = gammaCurve[605];
				GammaCurve_606 = gammaCurve[606];
				GammaCurve_607 = gammaCurve[607];
				GammaCurve_608 = gammaCurve[608];
				GammaCurve_609 = gammaCurve[609];
				GammaCurve_610 = gammaCurve[610];
				GammaCurve_611 = gammaCurve[611];
				GammaCurve_612 = gammaCurve[612];
				GammaCurve_613 = gammaCurve[613];
				GammaCurve_614 = gammaCurve[614];
				GammaCurve_615 = gammaCurve[615];
				GammaCurve_616 = gammaCurve[616];
				GammaCurve_617 = gammaCurve[617];
				GammaCurve_618 = gammaCurve[618];
				GammaCurve_619 = gammaCurve[619];
				GammaCurve_620 = gammaCurve[620];
				GammaCurve_621 = gammaCurve[621];
				GammaCurve_622 = gammaCurve[622];
				GammaCurve_623 = gammaCurve[623];
				GammaCurve_624 = gammaCurve[624];
				GammaCurve_625 = gammaCurve[625];
				GammaCurve_626 = gammaCurve[626];
				GammaCurve_627 = gammaCurve[627];
				GammaCurve_628 = gammaCurve[628];
				GammaCurve_629 = gammaCurve[629];
				GammaCurve_630 = gammaCurve[630];
				GammaCurve_631 = gammaCurve[631];
				GammaCurve_632 = gammaCurve[632];
				GammaCurve_633 = gammaCurve[633];
				GammaCurve_634 = gammaCurve[634];
				GammaCurve_635 = gammaCurve[635];
				GammaCurve_636 = gammaCurve[636];
				GammaCurve_637 = gammaCurve[637];
				GammaCurve_638 = gammaCurve[638];
				GammaCurve_639 = gammaCurve[639];
				GammaCurve_640 = gammaCurve[640];
				GammaCurve_641 = gammaCurve[641];
				GammaCurve_642 = gammaCurve[642];
				GammaCurve_643 = gammaCurve[643];
				GammaCurve_644 = gammaCurve[644];
				GammaCurve_645 = gammaCurve[645];
				GammaCurve_646 = gammaCurve[646];
				GammaCurve_647 = gammaCurve[647];
				GammaCurve_648 = gammaCurve[648];
				GammaCurve_649 = gammaCurve[649];
				GammaCurve_650 = gammaCurve[650];
				GammaCurve_651 = gammaCurve[651];
				GammaCurve_652 = gammaCurve[652];
				GammaCurve_653 = gammaCurve[653];
				GammaCurve_654 = gammaCurve[654];
				GammaCurve_655 = gammaCurve[655];
				GammaCurve_656 = gammaCurve[656];
				GammaCurve_657 = gammaCurve[657];
				GammaCurve_658 = gammaCurve[658];
				GammaCurve_659 = gammaCurve[659];
				GammaCurve_660 = gammaCurve[660];
				GammaCurve_661 = gammaCurve[661];
				GammaCurve_662 = gammaCurve[662];
				GammaCurve_663 = gammaCurve[663];
				GammaCurve_664 = gammaCurve[664];
				GammaCurve_665 = gammaCurve[665];
				GammaCurve_666 = gammaCurve[666];
				GammaCurve_667 = gammaCurve[667];
				GammaCurve_668 = gammaCurve[668];
				GammaCurve_669 = gammaCurve[669];
				GammaCurve_670 = gammaCurve[670];
				GammaCurve_671 = gammaCurve[671];
				GammaCurve_672 = gammaCurve[672];
				GammaCurve_673 = gammaCurve[673];
				GammaCurve_674 = gammaCurve[674];
				GammaCurve_675 = gammaCurve[675];
				GammaCurve_676 = gammaCurve[676];
				GammaCurve_677 = gammaCurve[677];
				GammaCurve_678 = gammaCurve[678];
				GammaCurve_679 = gammaCurve[679];
				GammaCurve_680 = gammaCurve[680];
				GammaCurve_681 = gammaCurve[681];
				GammaCurve_682 = gammaCurve[682];
				GammaCurve_683 = gammaCurve[683];
				GammaCurve_684 = gammaCurve[684];
				GammaCurve_685 = gammaCurve[685];
				GammaCurve_686 = gammaCurve[686];
				GammaCurve_687 = gammaCurve[687];
				GammaCurve_688 = gammaCurve[688];
				GammaCurve_689 = gammaCurve[689];
				GammaCurve_690 = gammaCurve[690];
				GammaCurve_691 = gammaCurve[691];
				GammaCurve_692 = gammaCurve[692];
				GammaCurve_693 = gammaCurve[693];
				GammaCurve_694 = gammaCurve[694];
				GammaCurve_695 = gammaCurve[695];
				GammaCurve_696 = gammaCurve[696];
				GammaCurve_697 = gammaCurve[697];
				GammaCurve_698 = gammaCurve[698];
				GammaCurve_699 = gammaCurve[699];
				GammaCurve_700 = gammaCurve[700];
				GammaCurve_701 = gammaCurve[701];
				GammaCurve_702 = gammaCurve[702];
				GammaCurve_703 = gammaCurve[703];
				GammaCurve_704 = gammaCurve[704];
				GammaCurve_705 = gammaCurve[705];
				GammaCurve_706 = gammaCurve[706];
				GammaCurve_707 = gammaCurve[707];
				GammaCurve_708 = gammaCurve[708];
				GammaCurve_709 = gammaCurve[709];
				GammaCurve_710 = gammaCurve[710];
				GammaCurve_711 = gammaCurve[711];
				GammaCurve_712 = gammaCurve[712];
				GammaCurve_713 = gammaCurve[713];
				GammaCurve_714 = gammaCurve[714];
				GammaCurve_715 = gammaCurve[715];
				GammaCurve_716 = gammaCurve[716];
				GammaCurve_717 = gammaCurve[717];
				GammaCurve_718 = gammaCurve[718];
				GammaCurve_719 = gammaCurve[719];
				GammaCurve_720 = gammaCurve[720];
				GammaCurve_721 = gammaCurve[721];
				GammaCurve_722 = gammaCurve[722];
				GammaCurve_723 = gammaCurve[723];
				GammaCurve_724 = gammaCurve[724];
				GammaCurve_725 = gammaCurve[725];
				GammaCurve_726 = gammaCurve[726];
				GammaCurve_727 = gammaCurve[727];
				GammaCurve_728 = gammaCurve[728];
				GammaCurve_729 = gammaCurve[729];
				GammaCurve_730 = gammaCurve[730];
				GammaCurve_731 = gammaCurve[731];
				GammaCurve_732 = gammaCurve[732];
				GammaCurve_733 = gammaCurve[733];
				GammaCurve_734 = gammaCurve[734];
				GammaCurve_735 = gammaCurve[735];
				GammaCurve_736 = gammaCurve[736];
				GammaCurve_737 = gammaCurve[737];
				GammaCurve_738 = gammaCurve[738];
				GammaCurve_739 = gammaCurve[739];
				GammaCurve_740 = gammaCurve[740];
				GammaCurve_741 = gammaCurve[741];
				GammaCurve_742 = gammaCurve[742];
				GammaCurve_743 = gammaCurve[743];
				GammaCurve_744 = gammaCurve[744];
				GammaCurve_745 = gammaCurve[745];
				GammaCurve_746 = gammaCurve[746];
				GammaCurve_747 = gammaCurve[747];
				GammaCurve_748 = gammaCurve[748];
				GammaCurve_749 = gammaCurve[749];
				GammaCurve_750 = gammaCurve[750];
				GammaCurve_751 = gammaCurve[751];
				GammaCurve_752 = gammaCurve[752];
				GammaCurve_753 = gammaCurve[753];
				GammaCurve_754 = gammaCurve[754];
				GammaCurve_755 = gammaCurve[755];
				GammaCurve_756 = gammaCurve[756];
				GammaCurve_757 = gammaCurve[757];
				GammaCurve_758 = gammaCurve[758];
				GammaCurve_759 = gammaCurve[759];
				GammaCurve_760 = gammaCurve[760];
				GammaCurve_761 = gammaCurve[761];
				GammaCurve_762 = gammaCurve[762];
				GammaCurve_763 = gammaCurve[763];
				GammaCurve_764 = gammaCurve[764];
				GammaCurve_765 = gammaCurve[765];
				GammaCurve_766 = gammaCurve[766];
				GammaCurve_767 = gammaCurve[767];
				GammaCurve_768 = gammaCurve[768];
				GammaCurve_769 = gammaCurve[769];
				GammaCurve_770 = gammaCurve[770];
				GammaCurve_771 = gammaCurve[771];
				GammaCurve_772 = gammaCurve[772];
				GammaCurve_773 = gammaCurve[773];
				GammaCurve_774 = gammaCurve[774];
				GammaCurve_775 = gammaCurve[775];
				GammaCurve_776 = gammaCurve[776];
				GammaCurve_777 = gammaCurve[777];
				GammaCurve_778 = gammaCurve[778];
				GammaCurve_779 = gammaCurve[779];
				GammaCurve_780 = gammaCurve[780];
				GammaCurve_781 = gammaCurve[781];
				GammaCurve_782 = gammaCurve[782];
				GammaCurve_783 = gammaCurve[783];
				GammaCurve_784 = gammaCurve[784];
				GammaCurve_785 = gammaCurve[785];
				GammaCurve_786 = gammaCurve[786];
				GammaCurve_787 = gammaCurve[787];
				GammaCurve_788 = gammaCurve[788];
				GammaCurve_789 = gammaCurve[789];
				GammaCurve_790 = gammaCurve[790];
				GammaCurve_791 = gammaCurve[791];
				GammaCurve_792 = gammaCurve[792];
				GammaCurve_793 = gammaCurve[793];
				GammaCurve_794 = gammaCurve[794];
				GammaCurve_795 = gammaCurve[795];
				GammaCurve_796 = gammaCurve[796];
				GammaCurve_797 = gammaCurve[797];
				GammaCurve_798 = gammaCurve[798];
				GammaCurve_799 = gammaCurve[799];
				GammaCurve_800 = gammaCurve[800];
				GammaCurve_801 = gammaCurve[801];
				GammaCurve_802 = gammaCurve[802];
				GammaCurve_803 = gammaCurve[803];
				GammaCurve_804 = gammaCurve[804];
				GammaCurve_805 = gammaCurve[805];
				GammaCurve_806 = gammaCurve[806];
				GammaCurve_807 = gammaCurve[807];
				GammaCurve_808 = gammaCurve[808];
				GammaCurve_809 = gammaCurve[809];
				GammaCurve_810 = gammaCurve[810];
				GammaCurve_811 = gammaCurve[811];
				GammaCurve_812 = gammaCurve[812];
				GammaCurve_813 = gammaCurve[813];
				GammaCurve_814 = gammaCurve[814];
				GammaCurve_815 = gammaCurve[815];
				GammaCurve_816 = gammaCurve[816];
				GammaCurve_817 = gammaCurve[817];
				GammaCurve_818 = gammaCurve[818];
				GammaCurve_819 = gammaCurve[819];
				GammaCurve_820 = gammaCurve[820];
				GammaCurve_821 = gammaCurve[821];
				GammaCurve_822 = gammaCurve[822];
				GammaCurve_823 = gammaCurve[823];
				GammaCurve_824 = gammaCurve[824];
				GammaCurve_825 = gammaCurve[825];
				GammaCurve_826 = gammaCurve[826];
				GammaCurve_827 = gammaCurve[827];
				GammaCurve_828 = gammaCurve[828];
				GammaCurve_829 = gammaCurve[829];
				GammaCurve_830 = gammaCurve[830];
				GammaCurve_831 = gammaCurve[831];
				GammaCurve_832 = gammaCurve[832];
				GammaCurve_833 = gammaCurve[833];
				GammaCurve_834 = gammaCurve[834];
				GammaCurve_835 = gammaCurve[835];
				GammaCurve_836 = gammaCurve[836];
				GammaCurve_837 = gammaCurve[837];
				GammaCurve_838 = gammaCurve[838];
				GammaCurve_839 = gammaCurve[839];
				GammaCurve_840 = gammaCurve[840];
				GammaCurve_841 = gammaCurve[841];
				GammaCurve_842 = gammaCurve[842];
				GammaCurve_843 = gammaCurve[843];
				GammaCurve_844 = gammaCurve[844];
				GammaCurve_845 = gammaCurve[845];
				GammaCurve_846 = gammaCurve[846];
				GammaCurve_847 = gammaCurve[847];
				GammaCurve_848 = gammaCurve[848];
				GammaCurve_849 = gammaCurve[849];
				GammaCurve_850 = gammaCurve[850];
				GammaCurve_851 = gammaCurve[851];
				GammaCurve_852 = gammaCurve[852];
				GammaCurve_853 = gammaCurve[853];
				GammaCurve_854 = gammaCurve[854];
				GammaCurve_855 = gammaCurve[855];
				GammaCurve_856 = gammaCurve[856];
				GammaCurve_857 = gammaCurve[857];
				GammaCurve_858 = gammaCurve[858];
				GammaCurve_859 = gammaCurve[859];
				GammaCurve_860 = gammaCurve[860];
				GammaCurve_861 = gammaCurve[861];
				GammaCurve_862 = gammaCurve[862];
				GammaCurve_863 = gammaCurve[863];
				GammaCurve_864 = gammaCurve[864];
				GammaCurve_865 = gammaCurve[865];
				GammaCurve_866 = gammaCurve[866];
				GammaCurve_867 = gammaCurve[867];
				GammaCurve_868 = gammaCurve[868];
				GammaCurve_869 = gammaCurve[869];
				GammaCurve_870 = gammaCurve[870];
				GammaCurve_871 = gammaCurve[871];
				GammaCurve_872 = gammaCurve[872];
				GammaCurve_873 = gammaCurve[873];
				GammaCurve_874 = gammaCurve[874];
				GammaCurve_875 = gammaCurve[875];
				GammaCurve_876 = gammaCurve[876];
				GammaCurve_877 = gammaCurve[877];
				GammaCurve_878 = gammaCurve[878];
				GammaCurve_879 = gammaCurve[879];
				GammaCurve_880 = gammaCurve[880];
				GammaCurve_881 = gammaCurve[881];
				GammaCurve_882 = gammaCurve[882];
				GammaCurve_883 = gammaCurve[883];
				GammaCurve_884 = gammaCurve[884];
				GammaCurve_885 = gammaCurve[885];
				GammaCurve_886 = gammaCurve[886];
				GammaCurve_887 = gammaCurve[887];
				GammaCurve_888 = gammaCurve[888];
				GammaCurve_889 = gammaCurve[889];
				GammaCurve_890 = gammaCurve[890];
				GammaCurve_891 = gammaCurve[891];
				GammaCurve_892 = gammaCurve[892];
				GammaCurve_893 = gammaCurve[893];
				GammaCurve_894 = gammaCurve[894];
				GammaCurve_895 = gammaCurve[895];
				GammaCurve_896 = gammaCurve[896];
				GammaCurve_897 = gammaCurve[897];
				GammaCurve_898 = gammaCurve[898];
				GammaCurve_899 = gammaCurve[899];
				GammaCurve_900 = gammaCurve[900];
				GammaCurve_901 = gammaCurve[901];
				GammaCurve_902 = gammaCurve[902];
				GammaCurve_903 = gammaCurve[903];
				GammaCurve_904 = gammaCurve[904];
				GammaCurve_905 = gammaCurve[905];
				GammaCurve_906 = gammaCurve[906];
				GammaCurve_907 = gammaCurve[907];
				GammaCurve_908 = gammaCurve[908];
				GammaCurve_909 = gammaCurve[909];
				GammaCurve_910 = gammaCurve[910];
				GammaCurve_911 = gammaCurve[911];
				GammaCurve_912 = gammaCurve[912];
				GammaCurve_913 = gammaCurve[913];
				GammaCurve_914 = gammaCurve[914];
				GammaCurve_915 = gammaCurve[915];
				GammaCurve_916 = gammaCurve[916];
				GammaCurve_917 = gammaCurve[917];
				GammaCurve_918 = gammaCurve[918];
				GammaCurve_919 = gammaCurve[919];
				GammaCurve_920 = gammaCurve[920];
				GammaCurve_921 = gammaCurve[921];
				GammaCurve_922 = gammaCurve[922];
				GammaCurve_923 = gammaCurve[923];
				GammaCurve_924 = gammaCurve[924];
				GammaCurve_925 = gammaCurve[925];
				GammaCurve_926 = gammaCurve[926];
				GammaCurve_927 = gammaCurve[927];
				GammaCurve_928 = gammaCurve[928];
				GammaCurve_929 = gammaCurve[929];
				GammaCurve_930 = gammaCurve[930];
				GammaCurve_931 = gammaCurve[931];
				GammaCurve_932 = gammaCurve[932];
				GammaCurve_933 = gammaCurve[933];
				GammaCurve_934 = gammaCurve[934];
				GammaCurve_935 = gammaCurve[935];
				GammaCurve_936 = gammaCurve[936];
				GammaCurve_937 = gammaCurve[937];
				GammaCurve_938 = gammaCurve[938];
				GammaCurve_939 = gammaCurve[939];
				GammaCurve_940 = gammaCurve[940];
				GammaCurve_941 = gammaCurve[941];
				GammaCurve_942 = gammaCurve[942];
				GammaCurve_943 = gammaCurve[943];
				GammaCurve_944 = gammaCurve[944];
				GammaCurve_945 = gammaCurve[945];
				GammaCurve_946 = gammaCurve[946];
				GammaCurve_947 = gammaCurve[947];
				GammaCurve_948 = gammaCurve[948];
				GammaCurve_949 = gammaCurve[949];
				GammaCurve_950 = gammaCurve[950];
				GammaCurve_951 = gammaCurve[951];
				GammaCurve_952 = gammaCurve[952];
				GammaCurve_953 = gammaCurve[953];
				GammaCurve_954 = gammaCurve[954];
				GammaCurve_955 = gammaCurve[955];
				GammaCurve_956 = gammaCurve[956];
				GammaCurve_957 = gammaCurve[957];
				GammaCurve_958 = gammaCurve[958];
				GammaCurve_959 = gammaCurve[959];
				GammaCurve_960 = gammaCurve[960];
				GammaCurve_961 = gammaCurve[961];
				GammaCurve_962 = gammaCurve[962];
				GammaCurve_963 = gammaCurve[963];
				GammaCurve_964 = gammaCurve[964];
				GammaCurve_965 = gammaCurve[965];
				GammaCurve_966 = gammaCurve[966];
				GammaCurve_967 = gammaCurve[967];
				GammaCurve_968 = gammaCurve[968];
				GammaCurve_969 = gammaCurve[969];
				GammaCurve_970 = gammaCurve[970];
				GammaCurve_971 = gammaCurve[971];
				GammaCurve_972 = gammaCurve[972];
				GammaCurve_973 = gammaCurve[973];
				GammaCurve_974 = gammaCurve[974];
				GammaCurve_975 = gammaCurve[975];
				GammaCurve_976 = gammaCurve[976];
				GammaCurve_977 = gammaCurve[977];
				GammaCurve_978 = gammaCurve[978];
				GammaCurve_979 = gammaCurve[979];
				GammaCurve_980 = gammaCurve[980];
				GammaCurve_981 = gammaCurve[981];
				GammaCurve_982 = gammaCurve[982];
				GammaCurve_983 = gammaCurve[983];
				GammaCurve_984 = gammaCurve[984];
				GammaCurve_985 = gammaCurve[985];
				GammaCurve_986 = gammaCurve[986];
				GammaCurve_987 = gammaCurve[987];
				GammaCurve_988 = gammaCurve[988];
				GammaCurve_989 = gammaCurve[989];
				GammaCurve_990 = gammaCurve[990];
				GammaCurve_991 = gammaCurve[991];
				GammaCurve_992 = gammaCurve[992];
				GammaCurve_993 = gammaCurve[993];
				GammaCurve_994 = gammaCurve[994];
				GammaCurve_995 = gammaCurve[995];
				GammaCurve_996 = gammaCurve[996];
				GammaCurve_997 = gammaCurve[997];
				GammaCurve_998 = gammaCurve[998];
				GammaCurve_999 = gammaCurve[999];
				GammaCurve_1000 = gammaCurve[1000];
				GammaCurve_1001 = gammaCurve[1001];
				GammaCurve_1002 = gammaCurve[1002];
				GammaCurve_1003 = gammaCurve[1003];
				GammaCurve_1004 = gammaCurve[1004];
				GammaCurve_1005 = gammaCurve[1005];
				GammaCurve_1006 = gammaCurve[1006];
				GammaCurve_1007 = gammaCurve[1007];
				GammaCurve_1008 = gammaCurve[1008];
				GammaCurve_1009 = gammaCurve[1009];
				GammaCurve_1010 = gammaCurve[1010];
				GammaCurve_1011 = gammaCurve[1011];
				GammaCurve_1012 = gammaCurve[1012];
				GammaCurve_1013 = gammaCurve[1013];
				GammaCurve_1014 = gammaCurve[1014];
				GammaCurve_1015 = gammaCurve[1015];
				GammaCurve_1016 = gammaCurve[1016];
				GammaCurve_1017 = gammaCurve[1017];
				GammaCurve_1018 = gammaCurve[1018];
				GammaCurve_1019 = gammaCurve[1019];
				GammaCurve_1020 = gammaCurve[1020];
				GammaCurve_1021 = gammaCurve[1021];
				GammaCurve_1022 = gammaCurve[1022];
				GammaCurve_1023 = gammaCurve[1023];
				GammaCurve_1024 = gammaCurve[1024];
			}
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<DxgiRgb> GammaCurve
		
		{
			get
			{
				fixed (DxgiRgb* p = &this.GammaCurve_0)
				{
					return new Span<DxgiRgb>(p, 1025);
				}
			}
		}
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_RGB")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiRgb
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Red")]
		[NativeName(NativeNameType.Type, "float")]
		public float Red;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Green")]
		[NativeName(NativeNameType.Type, "float")]
		public float Green;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Blue")]
		[NativeName(NativeNameType.Type, "float")]
		public float Blue;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiRgb(float red = default, float green = default, float blue = default)
		{
			Red = red;
			Green = green;
			Blue = blue;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_FRAME_STATISTICS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiFrameStatistics
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PresentCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint PresentCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PresentRefreshCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint PresentRefreshCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SyncRefreshCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SyncRefreshCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SyncQPCTime")]
		[NativeName(NativeNameType.Type, "LARGE_INTEGER")]
		public long SyncQPCTime;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SyncGPUTime")]
		[NativeName(NativeNameType.Type, "LARGE_INTEGER")]
		public long SyncGPUTime;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiFrameStatistics(uint presentCount = default, uint presentRefreshCount = default, uint syncRefreshCount = default, long syncQpcTime = default, long syncGpuTime = default)
		{
			PresentCount = presentCount;
			PresentRefreshCount = presentRefreshCount;
			SyncRefreshCount = syncRefreshCount;
			SyncQPCTime = syncQpcTime;
			SyncGPUTime = syncGpuTime;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_ADAPTER_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiAdapterDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Description")]
		[NativeName(NativeNameType.Type, "WCHAR[128]")]
		public char Description_0;
		public char Description_1;
		public char Description_2;
		public char Description_3;
		public char Description_4;
		public char Description_5;
		public char Description_6;
		public char Description_7;
		public char Description_8;
		public char Description_9;
		public char Description_10;
		public char Description_11;
		public char Description_12;
		public char Description_13;
		public char Description_14;
		public char Description_15;
		public char Description_16;
		public char Description_17;
		public char Description_18;
		public char Description_19;
		public char Description_20;
		public char Description_21;
		public char Description_22;
		public char Description_23;
		public char Description_24;
		public char Description_25;
		public char Description_26;
		public char Description_27;
		public char Description_28;
		public char Description_29;
		public char Description_30;
		public char Description_31;
		public char Description_32;
		public char Description_33;
		public char Description_34;
		public char Description_35;
		public char Description_36;
		public char Description_37;
		public char Description_38;
		public char Description_39;
		public char Description_40;
		public char Description_41;
		public char Description_42;
		public char Description_43;
		public char Description_44;
		public char Description_45;
		public char Description_46;
		public char Description_47;
		public char Description_48;
		public char Description_49;
		public char Description_50;
		public char Description_51;
		public char Description_52;
		public char Description_53;
		public char Description_54;
		public char Description_55;
		public char Description_56;
		public char Description_57;
		public char Description_58;
		public char Description_59;
		public char Description_60;
		public char Description_61;
		public char Description_62;
		public char Description_63;
		public char Description_64;
		public char Description_65;
		public char Description_66;
		public char Description_67;
		public char Description_68;
		public char Description_69;
		public char Description_70;
		public char Description_71;
		public char Description_72;
		public char Description_73;
		public char Description_74;
		public char Description_75;
		public char Description_76;
		public char Description_77;
		public char Description_78;
		public char Description_79;
		public char Description_80;
		public char Description_81;
		public char Description_82;
		public char Description_83;
		public char Description_84;
		public char Description_85;
		public char Description_86;
		public char Description_87;
		public char Description_88;
		public char Description_89;
		public char Description_90;
		public char Description_91;
		public char Description_92;
		public char Description_93;
		public char Description_94;
		public char Description_95;
		public char Description_96;
		public char Description_97;
		public char Description_98;
		public char Description_99;
		public char Description_100;
		public char Description_101;
		public char Description_102;
		public char Description_103;
		public char Description_104;
		public char Description_105;
		public char Description_106;
		public char Description_107;
		public char Description_108;
		public char Description_109;
		public char Description_110;
		public char Description_111;
		public char Description_112;
		public char Description_113;
		public char Description_114;
		public char Description_115;
		public char Description_116;
		public char Description_117;
		public char Description_118;
		public char Description_119;
		public char Description_120;
		public char Description_121;
		public char Description_122;
		public char Description_123;
		public char Description_124;
		public char Description_125;
		public char Description_126;
		public char Description_127;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "VendorId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint VendorId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DeviceId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint DeviceId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SubSysId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SubSysId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Revision")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Revision;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedVideoMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedVideoMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SharedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint SharedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AdapterLuid")]
		[NativeName(NativeNameType.Type, "LUID")]
		public Luid AdapterLuid;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc(char* description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc(Span<char> description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("310d36a0-d2e7-4c0a-aa04-6a9d23b8886a")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISwapChain")]
	public partial struct IDXGISwapChain : IComObject, IComObject<IDXGISwapChain>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("310d36a0-d2e7-4c0a-aa04-6a9d23b8886a");

		public unsafe IDXGISwapChain (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, uint, HResult>)(LpVtbl[8]))(ptr, syncInterval, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, riid, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, (void**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, pTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)pTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, ppTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "NewFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat newFormat, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, uint, uint, DxgiFormat, uint, HResult>)(LpVtbl[13]))(ptr, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, pNewTargetParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] uint* pLastPresentCount) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint*, HResult>)(LpVtbl[17]))(ptr, pLastPresentCount);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pLastPresentCount) 
		{
			IDXGISwapChain* ptr = (IDXGISwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint*, HResult>)(LpVtbl[17]))(ptr, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISwapChain value)
		{
			return Unsafe.As<IDXGISwapChain, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISwapChain value)
		{
			return Unsafe.As<IDXGISwapChain, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISwapChain value)
		{
			return Unsafe.As<IDXGISwapChain, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_SWAP_CHAIN_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSwapChainDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BufferDesc")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_DESC")]
		public DxgiModeDesc BufferDesc;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SampleDesc")]
		[NativeName(NativeNameType.Type, "DXGI_SAMPLE_DESC")]
		public DxgiSampleDesc SampleDesc;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BufferUsage")]
		[NativeName(NativeNameType.Type, "DXGI_USAGE")]
		public uint BufferUsage;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BufferCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint BufferCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "OutputWindow")]
		[NativeName(NativeNameType.Type, "HWND")]
		public nint OutputWindow;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Windowed")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 Windowed;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SwapEffect")]
		[NativeName(NativeNameType.Type, "DXGI_SWAP_EFFECT")]
		public DxgiSwapEffect SwapEffect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Flags;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiSwapChainDesc(DxgiModeDesc bufferDesc = default, DxgiSampleDesc sampleDesc = default, uint bufferUsage = default, uint bufferCount = default, nint outputWindow = default, Bool32 windowed = default, DxgiSwapEffect swapEffect = default, uint flags = default)
		{
			BufferDesc = bufferDesc;
			SampleDesc = sampleDesc;
			BufferUsage = bufferUsage;
			BufferCount = bufferCount;
			OutputWindow = outputWindow;
			Windowed = windowed;
			SwapEffect = swapEffect;
			Flags = flags;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("7b7166ec-21c7-44ae-b21a-c9ae321ae369")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory")]
	public partial struct IDXGIFactory : IComObject, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("7b7166ec-21c7-44ae-b21a-c9ae321ae369");

		public unsafe IDXGIFactory (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory* ptr = (IDXGIFactory*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory value)
		{
			return Unsafe.As<IDXGIFactory, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory value)
		{
			return Unsafe.As<IDXGIFactory, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("54ec77fa-1377-44e6-8c32-88fd5f44c84c")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDevice")]
	public partial struct IDXGIDevice : IComObject, IComObject<IDXGIDevice>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("54ec77fa-1377-44e6-8c32-88fd5f44c84c");

		public unsafe IDXGIDevice (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, pAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGPUThreadPriority([NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "INT")] int priority) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, int, HResult>)(LpVtbl[10]))(ptr, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] int* pPriority) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, int*, HResult>)(LpVtbl[11]))(ptr, pPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] ref int pPriority) 
		{
			IDXGIDevice* ptr = (IDXGIDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, int*, HResult>)(LpVtbl[11]))(ptr, (int*)ppPriority);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDevice value)
		{
			return Unsafe.As<IDXGIDevice, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDevice value)
		{
			return Unsafe.As<IDXGIDevice, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_SHARED_RESOURCE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSharedResource
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Handle")]
		[NativeName(NativeNameType.Type, "HANDLE")]
		public nint Handle;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiSharedResource(nint handle = default)
		{
			Handle = handle;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("770aae78-f26f-4dba-a829-253c83d1b387")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory1")]
	public partial struct IDXGIFactory1 : IComObject, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("770aae78-f26f-4dba-a829-253c83d1b387");

		public unsafe IDXGIFactory1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsCurrent")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsCurrent() 
		{
			IDXGIFactory1* ptr = (IDXGIFactory1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Bool32>)(LpVtbl[13]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory1 value)
		{
			return Unsafe.As<IDXGIFactory1, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory1 value)
		{
			return Unsafe.As<IDXGIFactory1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory1 value)
		{
			return Unsafe.As<IDXGIFactory1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("29038f61-3839-4626-91fd-086879011a05")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIAdapter1")]
	public partial struct IDXGIAdapter1 : IComObject, IComObject<IDXGIAdapter1>, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("29038f61-3839-4626-91fd-086879011a05");

		public unsafe IDXGIAdapter1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter1* ptr = (IDXGIAdapter1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIAdapter (IDXGIAdapter1 value)
		{
			return Unsafe.As<IDXGIAdapter1, IDXGIAdapter>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter1 value)
		{
			return Unsafe.As<IDXGIAdapter1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter1 value)
		{
			return Unsafe.As<IDXGIAdapter1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_ADAPTER_DESC1")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiAdapterDesc1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Description")]
		[NativeName(NativeNameType.Type, "WCHAR[128]")]
		public char Description_0;
		public char Description_1;
		public char Description_2;
		public char Description_3;
		public char Description_4;
		public char Description_5;
		public char Description_6;
		public char Description_7;
		public char Description_8;
		public char Description_9;
		public char Description_10;
		public char Description_11;
		public char Description_12;
		public char Description_13;
		public char Description_14;
		public char Description_15;
		public char Description_16;
		public char Description_17;
		public char Description_18;
		public char Description_19;
		public char Description_20;
		public char Description_21;
		public char Description_22;
		public char Description_23;
		public char Description_24;
		public char Description_25;
		public char Description_26;
		public char Description_27;
		public char Description_28;
		public char Description_29;
		public char Description_30;
		public char Description_31;
		public char Description_32;
		public char Description_33;
		public char Description_34;
		public char Description_35;
		public char Description_36;
		public char Description_37;
		public char Description_38;
		public char Description_39;
		public char Description_40;
		public char Description_41;
		public char Description_42;
		public char Description_43;
		public char Description_44;
		public char Description_45;
		public char Description_46;
		public char Description_47;
		public char Description_48;
		public char Description_49;
		public char Description_50;
		public char Description_51;
		public char Description_52;
		public char Description_53;
		public char Description_54;
		public char Description_55;
		public char Description_56;
		public char Description_57;
		public char Description_58;
		public char Description_59;
		public char Description_60;
		public char Description_61;
		public char Description_62;
		public char Description_63;
		public char Description_64;
		public char Description_65;
		public char Description_66;
		public char Description_67;
		public char Description_68;
		public char Description_69;
		public char Description_70;
		public char Description_71;
		public char Description_72;
		public char Description_73;
		public char Description_74;
		public char Description_75;
		public char Description_76;
		public char Description_77;
		public char Description_78;
		public char Description_79;
		public char Description_80;
		public char Description_81;
		public char Description_82;
		public char Description_83;
		public char Description_84;
		public char Description_85;
		public char Description_86;
		public char Description_87;
		public char Description_88;
		public char Description_89;
		public char Description_90;
		public char Description_91;
		public char Description_92;
		public char Description_93;
		public char Description_94;
		public char Description_95;
		public char Description_96;
		public char Description_97;
		public char Description_98;
		public char Description_99;
		public char Description_100;
		public char Description_101;
		public char Description_102;
		public char Description_103;
		public char Description_104;
		public char Description_105;
		public char Description_106;
		public char Description_107;
		public char Description_108;
		public char Description_109;
		public char Description_110;
		public char Description_111;
		public char Description_112;
		public char Description_113;
		public char Description_114;
		public char Description_115;
		public char Description_116;
		public char Description_117;
		public char Description_118;
		public char Description_119;
		public char Description_120;
		public char Description_121;
		public char Description_122;
		public char Description_123;
		public char Description_124;
		public char Description_125;
		public char Description_126;
		public char Description_127;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "VendorId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint VendorId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DeviceId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint DeviceId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SubSysId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SubSysId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Revision")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Revision;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedVideoMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedVideoMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SharedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint SharedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AdapterLuid")]
		[NativeName(NativeNameType.Type, "LUID")]
		public Luid AdapterLuid;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Flags;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc1(char* description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, uint flags = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc1(Span<char> description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, uint flags = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("77db970f-6276-48ba-ba28-070143b4392c")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDevice1")]
	public partial struct IDXGIDevice1 : IComObject, IComObject<IDXGIDevice1>, IComObject<IDXGIDevice>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("77db970f-6276-48ba-ba28-070143b4392c");

		public unsafe IDXGIDevice1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, pAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGPUThreadPriority([NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "INT")] int priority) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, int, HResult>)(LpVtbl[10]))(ptr, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] int* pPriority) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, int*, HResult>)(LpVtbl[11]))(ptr, pPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] ref int pPriority) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, int*, HResult>)(LpVtbl[11]))(ptr, (int*)ppPriority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMaximumFrameLatency([NativeName(NativeNameType.Param, "MaxLatency")] [NativeName(NativeNameType.Type, "UINT")] uint maxLatency) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint, HResult>)(LpVtbl[12]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMaxLatency) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint*, HResult>)(LpVtbl[13]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMaxLatency) 
		{
			IDXGIDevice1* ptr = (IDXGIDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint*, HResult>)(LpVtbl[13]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDevice (IDXGIDevice1 value)
		{
			return Unsafe.As<IDXGIDevice1, IDXGIDevice>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDevice1 value)
		{
			return Unsafe.As<IDXGIDevice1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDevice1 value)
		{
			return Unsafe.As<IDXGIDevice1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "_D3DCOLORVALUE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3Dcolorvalue
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "r")]
		[NativeName(NativeNameType.Type, "float")]
		public float R;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "g")]
		[NativeName(NativeNameType.Type, "float")]
		public float G;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "b")]
		[NativeName(NativeNameType.Type, "float")]
		public float B;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "a")]
		[NativeName(NativeNameType.Type, "float")]
		public float A;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe D3Dcolorvalue(float r = default, float g = default, float b = default, float a = default)
		{
			R = r;
			G = g;
			B = b;
			A = a;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_JPEG_DC_HUFFMAN_TABLE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiJpegDcHuffmanTable
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CodeCounts")]
		[NativeName(NativeNameType.Type, "BYTE[12]")]
		public byte CodeCounts_0;
		public byte CodeCounts_1;
		public byte CodeCounts_2;
		public byte CodeCounts_3;
		public byte CodeCounts_4;
		public byte CodeCounts_5;
		public byte CodeCounts_6;
		public byte CodeCounts_7;
		public byte CodeCounts_8;
		public byte CodeCounts_9;
		public byte CodeCounts_10;
		public byte CodeCounts_11;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CodeValues")]
		[NativeName(NativeNameType.Type, "BYTE[12]")]
		public byte CodeValues_0;
		public byte CodeValues_1;
		public byte CodeValues_2;
		public byte CodeValues_3;
		public byte CodeValues_4;
		public byte CodeValues_5;
		public byte CodeValues_6;
		public byte CodeValues_7;
		public byte CodeValues_8;
		public byte CodeValues_9;
		public byte CodeValues_10;
		public byte CodeValues_11;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiJpegDcHuffmanTable(byte* codeCounts = default, byte* codeValues = default)
		{
			if (codeCounts != default)
			{
				CodeCounts_0 = codeCounts[0];
				CodeCounts_1 = codeCounts[1];
				CodeCounts_2 = codeCounts[2];
				CodeCounts_3 = codeCounts[3];
				CodeCounts_4 = codeCounts[4];
				CodeCounts_5 = codeCounts[5];
				CodeCounts_6 = codeCounts[6];
				CodeCounts_7 = codeCounts[7];
				CodeCounts_8 = codeCounts[8];
				CodeCounts_9 = codeCounts[9];
				CodeCounts_10 = codeCounts[10];
				CodeCounts_11 = codeCounts[11];
			}
			if (codeValues != default)
			{
				CodeValues_0 = codeValues[0];
				CodeValues_1 = codeValues[1];
				CodeValues_2 = codeValues[2];
				CodeValues_3 = codeValues[3];
				CodeValues_4 = codeValues[4];
				CodeValues_5 = codeValues[5];
				CodeValues_6 = codeValues[6];
				CodeValues_7 = codeValues[7];
				CodeValues_8 = codeValues[8];
				CodeValues_9 = codeValues[9];
				CodeValues_10 = codeValues[10];
				CodeValues_11 = codeValues[11];
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiJpegDcHuffmanTable(Span<byte> codeCounts = default, Span<byte> codeValues = default)
		{
			if (codeCounts != default)
			{
				CodeCounts_0 = codeCounts[0];
				CodeCounts_1 = codeCounts[1];
				CodeCounts_2 = codeCounts[2];
				CodeCounts_3 = codeCounts[3];
				CodeCounts_4 = codeCounts[4];
				CodeCounts_5 = codeCounts[5];
				CodeCounts_6 = codeCounts[6];
				CodeCounts_7 = codeCounts[7];
				CodeCounts_8 = codeCounts[8];
				CodeCounts_9 = codeCounts[9];
				CodeCounts_10 = codeCounts[10];
				CodeCounts_11 = codeCounts[11];
			}
			if (codeValues != default)
			{
				CodeValues_0 = codeValues[0];
				CodeValues_1 = codeValues[1];
				CodeValues_2 = codeValues[2];
				CodeValues_3 = codeValues[3];
				CodeValues_4 = codeValues[4];
				CodeValues_5 = codeValues[5];
				CodeValues_6 = codeValues[6];
				CodeValues_7 = codeValues[7];
				CodeValues_8 = codeValues[8];
				CodeValues_9 = codeValues[9];
				CodeValues_10 = codeValues[10];
				CodeValues_11 = codeValues[11];
			}
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_JPEG_AC_HUFFMAN_TABLE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiJpegAcHuffmanTable
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CodeCounts")]
		[NativeName(NativeNameType.Type, "BYTE[16]")]
		public byte CodeCounts_0;
		public byte CodeCounts_1;
		public byte CodeCounts_2;
		public byte CodeCounts_3;
		public byte CodeCounts_4;
		public byte CodeCounts_5;
		public byte CodeCounts_6;
		public byte CodeCounts_7;
		public byte CodeCounts_8;
		public byte CodeCounts_9;
		public byte CodeCounts_10;
		public byte CodeCounts_11;
		public byte CodeCounts_12;
		public byte CodeCounts_13;
		public byte CodeCounts_14;
		public byte CodeCounts_15;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CodeValues")]
		[NativeName(NativeNameType.Type, "BYTE[162]")]
		public byte CodeValues_0;
		public byte CodeValues_1;
		public byte CodeValues_2;
		public byte CodeValues_3;
		public byte CodeValues_4;
		public byte CodeValues_5;
		public byte CodeValues_6;
		public byte CodeValues_7;
		public byte CodeValues_8;
		public byte CodeValues_9;
		public byte CodeValues_10;
		public byte CodeValues_11;
		public byte CodeValues_12;
		public byte CodeValues_13;
		public byte CodeValues_14;
		public byte CodeValues_15;
		public byte CodeValues_16;
		public byte CodeValues_17;
		public byte CodeValues_18;
		public byte CodeValues_19;
		public byte CodeValues_20;
		public byte CodeValues_21;
		public byte CodeValues_22;
		public byte CodeValues_23;
		public byte CodeValues_24;
		public byte CodeValues_25;
		public byte CodeValues_26;
		public byte CodeValues_27;
		public byte CodeValues_28;
		public byte CodeValues_29;
		public byte CodeValues_30;
		public byte CodeValues_31;
		public byte CodeValues_32;
		public byte CodeValues_33;
		public byte CodeValues_34;
		public byte CodeValues_35;
		public byte CodeValues_36;
		public byte CodeValues_37;
		public byte CodeValues_38;
		public byte CodeValues_39;
		public byte CodeValues_40;
		public byte CodeValues_41;
		public byte CodeValues_42;
		public byte CodeValues_43;
		public byte CodeValues_44;
		public byte CodeValues_45;
		public byte CodeValues_46;
		public byte CodeValues_47;
		public byte CodeValues_48;
		public byte CodeValues_49;
		public byte CodeValues_50;
		public byte CodeValues_51;
		public byte CodeValues_52;
		public byte CodeValues_53;
		public byte CodeValues_54;
		public byte CodeValues_55;
		public byte CodeValues_56;
		public byte CodeValues_57;
		public byte CodeValues_58;
		public byte CodeValues_59;
		public byte CodeValues_60;
		public byte CodeValues_61;
		public byte CodeValues_62;
		public byte CodeValues_63;
		public byte CodeValues_64;
		public byte CodeValues_65;
		public byte CodeValues_66;
		public byte CodeValues_67;
		public byte CodeValues_68;
		public byte CodeValues_69;
		public byte CodeValues_70;
		public byte CodeValues_71;
		public byte CodeValues_72;
		public byte CodeValues_73;
		public byte CodeValues_74;
		public byte CodeValues_75;
		public byte CodeValues_76;
		public byte CodeValues_77;
		public byte CodeValues_78;
		public byte CodeValues_79;
		public byte CodeValues_80;
		public byte CodeValues_81;
		public byte CodeValues_82;
		public byte CodeValues_83;
		public byte CodeValues_84;
		public byte CodeValues_85;
		public byte CodeValues_86;
		public byte CodeValues_87;
		public byte CodeValues_88;
		public byte CodeValues_89;
		public byte CodeValues_90;
		public byte CodeValues_91;
		public byte CodeValues_92;
		public byte CodeValues_93;
		public byte CodeValues_94;
		public byte CodeValues_95;
		public byte CodeValues_96;
		public byte CodeValues_97;
		public byte CodeValues_98;
		public byte CodeValues_99;
		public byte CodeValues_100;
		public byte CodeValues_101;
		public byte CodeValues_102;
		public byte CodeValues_103;
		public byte CodeValues_104;
		public byte CodeValues_105;
		public byte CodeValues_106;
		public byte CodeValues_107;
		public byte CodeValues_108;
		public byte CodeValues_109;
		public byte CodeValues_110;
		public byte CodeValues_111;
		public byte CodeValues_112;
		public byte CodeValues_113;
		public byte CodeValues_114;
		public byte CodeValues_115;
		public byte CodeValues_116;
		public byte CodeValues_117;
		public byte CodeValues_118;
		public byte CodeValues_119;
		public byte CodeValues_120;
		public byte CodeValues_121;
		public byte CodeValues_122;
		public byte CodeValues_123;
		public byte CodeValues_124;
		public byte CodeValues_125;
		public byte CodeValues_126;
		public byte CodeValues_127;
		public byte CodeValues_128;
		public byte CodeValues_129;
		public byte CodeValues_130;
		public byte CodeValues_131;
		public byte CodeValues_132;
		public byte CodeValues_133;
		public byte CodeValues_134;
		public byte CodeValues_135;
		public byte CodeValues_136;
		public byte CodeValues_137;
		public byte CodeValues_138;
		public byte CodeValues_139;
		public byte CodeValues_140;
		public byte CodeValues_141;
		public byte CodeValues_142;
		public byte CodeValues_143;
		public byte CodeValues_144;
		public byte CodeValues_145;
		public byte CodeValues_146;
		public byte CodeValues_147;
		public byte CodeValues_148;
		public byte CodeValues_149;
		public byte CodeValues_150;
		public byte CodeValues_151;
		public byte CodeValues_152;
		public byte CodeValues_153;
		public byte CodeValues_154;
		public byte CodeValues_155;
		public byte CodeValues_156;
		public byte CodeValues_157;
		public byte CodeValues_158;
		public byte CodeValues_159;
		public byte CodeValues_160;
		public byte CodeValues_161;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiJpegAcHuffmanTable(byte* codeCounts = default, byte* codeValues = default)
		{
			if (codeCounts != default)
			{
				CodeCounts_0 = codeCounts[0];
				CodeCounts_1 = codeCounts[1];
				CodeCounts_2 = codeCounts[2];
				CodeCounts_3 = codeCounts[3];
				CodeCounts_4 = codeCounts[4];
				CodeCounts_5 = codeCounts[5];
				CodeCounts_6 = codeCounts[6];
				CodeCounts_7 = codeCounts[7];
				CodeCounts_8 = codeCounts[8];
				CodeCounts_9 = codeCounts[9];
				CodeCounts_10 = codeCounts[10];
				CodeCounts_11 = codeCounts[11];
				CodeCounts_12 = codeCounts[12];
				CodeCounts_13 = codeCounts[13];
				CodeCounts_14 = codeCounts[14];
				CodeCounts_15 = codeCounts[15];
			}
			if (codeValues != default)
			{
				CodeValues_0 = codeValues[0];
				CodeValues_1 = codeValues[1];
				CodeValues_2 = codeValues[2];
				CodeValues_3 = codeValues[3];
				CodeValues_4 = codeValues[4];
				CodeValues_5 = codeValues[5];
				CodeValues_6 = codeValues[6];
				CodeValues_7 = codeValues[7];
				CodeValues_8 = codeValues[8];
				CodeValues_9 = codeValues[9];
				CodeValues_10 = codeValues[10];
				CodeValues_11 = codeValues[11];
				CodeValues_12 = codeValues[12];
				CodeValues_13 = codeValues[13];
				CodeValues_14 = codeValues[14];
				CodeValues_15 = codeValues[15];
				CodeValues_16 = codeValues[16];
				CodeValues_17 = codeValues[17];
				CodeValues_18 = codeValues[18];
				CodeValues_19 = codeValues[19];
				CodeValues_20 = codeValues[20];
				CodeValues_21 = codeValues[21];
				CodeValues_22 = codeValues[22];
				CodeValues_23 = codeValues[23];
				CodeValues_24 = codeValues[24];
				CodeValues_25 = codeValues[25];
				CodeValues_26 = codeValues[26];
				CodeValues_27 = codeValues[27];
				CodeValues_28 = codeValues[28];
				CodeValues_29 = codeValues[29];
				CodeValues_30 = codeValues[30];
				CodeValues_31 = codeValues[31];
				CodeValues_32 = codeValues[32];
				CodeValues_33 = codeValues[33];
				CodeValues_34 = codeValues[34];
				CodeValues_35 = codeValues[35];
				CodeValues_36 = codeValues[36];
				CodeValues_37 = codeValues[37];
				CodeValues_38 = codeValues[38];
				CodeValues_39 = codeValues[39];
				CodeValues_40 = codeValues[40];
				CodeValues_41 = codeValues[41];
				CodeValues_42 = codeValues[42];
				CodeValues_43 = codeValues[43];
				CodeValues_44 = codeValues[44];
				CodeValues_45 = codeValues[45];
				CodeValues_46 = codeValues[46];
				CodeValues_47 = codeValues[47];
				CodeValues_48 = codeValues[48];
				CodeValues_49 = codeValues[49];
				CodeValues_50 = codeValues[50];
				CodeValues_51 = codeValues[51];
				CodeValues_52 = codeValues[52];
				CodeValues_53 = codeValues[53];
				CodeValues_54 = codeValues[54];
				CodeValues_55 = codeValues[55];
				CodeValues_56 = codeValues[56];
				CodeValues_57 = codeValues[57];
				CodeValues_58 = codeValues[58];
				CodeValues_59 = codeValues[59];
				CodeValues_60 = codeValues[60];
				CodeValues_61 = codeValues[61];
				CodeValues_62 = codeValues[62];
				CodeValues_63 = codeValues[63];
				CodeValues_64 = codeValues[64];
				CodeValues_65 = codeValues[65];
				CodeValues_66 = codeValues[66];
				CodeValues_67 = codeValues[67];
				CodeValues_68 = codeValues[68];
				CodeValues_69 = codeValues[69];
				CodeValues_70 = codeValues[70];
				CodeValues_71 = codeValues[71];
				CodeValues_72 = codeValues[72];
				CodeValues_73 = codeValues[73];
				CodeValues_74 = codeValues[74];
				CodeValues_75 = codeValues[75];
				CodeValues_76 = codeValues[76];
				CodeValues_77 = codeValues[77];
				CodeValues_78 = codeValues[78];
				CodeValues_79 = codeValues[79];
				CodeValues_80 = codeValues[80];
				CodeValues_81 = codeValues[81];
				CodeValues_82 = codeValues[82];
				CodeValues_83 = codeValues[83];
				CodeValues_84 = codeValues[84];
				CodeValues_85 = codeValues[85];
				CodeValues_86 = codeValues[86];
				CodeValues_87 = codeValues[87];
				CodeValues_88 = codeValues[88];
				CodeValues_89 = codeValues[89];
				CodeValues_90 = codeValues[90];
				CodeValues_91 = codeValues[91];
				CodeValues_92 = codeValues[92];
				CodeValues_93 = codeValues[93];
				CodeValues_94 = codeValues[94];
				CodeValues_95 = codeValues[95];
				CodeValues_96 = codeValues[96];
				CodeValues_97 = codeValues[97];
				CodeValues_98 = codeValues[98];
				CodeValues_99 = codeValues[99];
				CodeValues_100 = codeValues[100];
				CodeValues_101 = codeValues[101];
				CodeValues_102 = codeValues[102];
				CodeValues_103 = codeValues[103];
				CodeValues_104 = codeValues[104];
				CodeValues_105 = codeValues[105];
				CodeValues_106 = codeValues[106];
				CodeValues_107 = codeValues[107];
				CodeValues_108 = codeValues[108];
				CodeValues_109 = codeValues[109];
				CodeValues_110 = codeValues[110];
				CodeValues_111 = codeValues[111];
				CodeValues_112 = codeValues[112];
				CodeValues_113 = codeValues[113];
				CodeValues_114 = codeValues[114];
				CodeValues_115 = codeValues[115];
				CodeValues_116 = codeValues[116];
				CodeValues_117 = codeValues[117];
				CodeValues_118 = codeValues[118];
				CodeValues_119 = codeValues[119];
				CodeValues_120 = codeValues[120];
				CodeValues_121 = codeValues[121];
				CodeValues_122 = codeValues[122];
				CodeValues_123 = codeValues[123];
				CodeValues_124 = codeValues[124];
				CodeValues_125 = codeValues[125];
				CodeValues_126 = codeValues[126];
				CodeValues_127 = codeValues[127];
				CodeValues_128 = codeValues[128];
				CodeValues_129 = codeValues[129];
				CodeValues_130 = codeValues[130];
				CodeValues_131 = codeValues[131];
				CodeValues_132 = codeValues[132];
				CodeValues_133 = codeValues[133];
				CodeValues_134 = codeValues[134];
				CodeValues_135 = codeValues[135];
				CodeValues_136 = codeValues[136];
				CodeValues_137 = codeValues[137];
				CodeValues_138 = codeValues[138];
				CodeValues_139 = codeValues[139];
				CodeValues_140 = codeValues[140];
				CodeValues_141 = codeValues[141];
				CodeValues_142 = codeValues[142];
				CodeValues_143 = codeValues[143];
				CodeValues_144 = codeValues[144];
				CodeValues_145 = codeValues[145];
				CodeValues_146 = codeValues[146];
				CodeValues_147 = codeValues[147];
				CodeValues_148 = codeValues[148];
				CodeValues_149 = codeValues[149];
				CodeValues_150 = codeValues[150];
				CodeValues_151 = codeValues[151];
				CodeValues_152 = codeValues[152];
				CodeValues_153 = codeValues[153];
				CodeValues_154 = codeValues[154];
				CodeValues_155 = codeValues[155];
				CodeValues_156 = codeValues[156];
				CodeValues_157 = codeValues[157];
				CodeValues_158 = codeValues[158];
				CodeValues_159 = codeValues[159];
				CodeValues_160 = codeValues[160];
				CodeValues_161 = codeValues[161];
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiJpegAcHuffmanTable(Span<byte> codeCounts = default, Span<byte> codeValues = default)
		{
			if (codeCounts != default)
			{
				CodeCounts_0 = codeCounts[0];
				CodeCounts_1 = codeCounts[1];
				CodeCounts_2 = codeCounts[2];
				CodeCounts_3 = codeCounts[3];
				CodeCounts_4 = codeCounts[4];
				CodeCounts_5 = codeCounts[5];
				CodeCounts_6 = codeCounts[6];
				CodeCounts_7 = codeCounts[7];
				CodeCounts_8 = codeCounts[8];
				CodeCounts_9 = codeCounts[9];
				CodeCounts_10 = codeCounts[10];
				CodeCounts_11 = codeCounts[11];
				CodeCounts_12 = codeCounts[12];
				CodeCounts_13 = codeCounts[13];
				CodeCounts_14 = codeCounts[14];
				CodeCounts_15 = codeCounts[15];
			}
			if (codeValues != default)
			{
				CodeValues_0 = codeValues[0];
				CodeValues_1 = codeValues[1];
				CodeValues_2 = codeValues[2];
				CodeValues_3 = codeValues[3];
				CodeValues_4 = codeValues[4];
				CodeValues_5 = codeValues[5];
				CodeValues_6 = codeValues[6];
				CodeValues_7 = codeValues[7];
				CodeValues_8 = codeValues[8];
				CodeValues_9 = codeValues[9];
				CodeValues_10 = codeValues[10];
				CodeValues_11 = codeValues[11];
				CodeValues_12 = codeValues[12];
				CodeValues_13 = codeValues[13];
				CodeValues_14 = codeValues[14];
				CodeValues_15 = codeValues[15];
				CodeValues_16 = codeValues[16];
				CodeValues_17 = codeValues[17];
				CodeValues_18 = codeValues[18];
				CodeValues_19 = codeValues[19];
				CodeValues_20 = codeValues[20];
				CodeValues_21 = codeValues[21];
				CodeValues_22 = codeValues[22];
				CodeValues_23 = codeValues[23];
				CodeValues_24 = codeValues[24];
				CodeValues_25 = codeValues[25];
				CodeValues_26 = codeValues[26];
				CodeValues_27 = codeValues[27];
				CodeValues_28 = codeValues[28];
				CodeValues_29 = codeValues[29];
				CodeValues_30 = codeValues[30];
				CodeValues_31 = codeValues[31];
				CodeValues_32 = codeValues[32];
				CodeValues_33 = codeValues[33];
				CodeValues_34 = codeValues[34];
				CodeValues_35 = codeValues[35];
				CodeValues_36 = codeValues[36];
				CodeValues_37 = codeValues[37];
				CodeValues_38 = codeValues[38];
				CodeValues_39 = codeValues[39];
				CodeValues_40 = codeValues[40];
				CodeValues_41 = codeValues[41];
				CodeValues_42 = codeValues[42];
				CodeValues_43 = codeValues[43];
				CodeValues_44 = codeValues[44];
				CodeValues_45 = codeValues[45];
				CodeValues_46 = codeValues[46];
				CodeValues_47 = codeValues[47];
				CodeValues_48 = codeValues[48];
				CodeValues_49 = codeValues[49];
				CodeValues_50 = codeValues[50];
				CodeValues_51 = codeValues[51];
				CodeValues_52 = codeValues[52];
				CodeValues_53 = codeValues[53];
				CodeValues_54 = codeValues[54];
				CodeValues_55 = codeValues[55];
				CodeValues_56 = codeValues[56];
				CodeValues_57 = codeValues[57];
				CodeValues_58 = codeValues[58];
				CodeValues_59 = codeValues[59];
				CodeValues_60 = codeValues[60];
				CodeValues_61 = codeValues[61];
				CodeValues_62 = codeValues[62];
				CodeValues_63 = codeValues[63];
				CodeValues_64 = codeValues[64];
				CodeValues_65 = codeValues[65];
				CodeValues_66 = codeValues[66];
				CodeValues_67 = codeValues[67];
				CodeValues_68 = codeValues[68];
				CodeValues_69 = codeValues[69];
				CodeValues_70 = codeValues[70];
				CodeValues_71 = codeValues[71];
				CodeValues_72 = codeValues[72];
				CodeValues_73 = codeValues[73];
				CodeValues_74 = codeValues[74];
				CodeValues_75 = codeValues[75];
				CodeValues_76 = codeValues[76];
				CodeValues_77 = codeValues[77];
				CodeValues_78 = codeValues[78];
				CodeValues_79 = codeValues[79];
				CodeValues_80 = codeValues[80];
				CodeValues_81 = codeValues[81];
				CodeValues_82 = codeValues[82];
				CodeValues_83 = codeValues[83];
				CodeValues_84 = codeValues[84];
				CodeValues_85 = codeValues[85];
				CodeValues_86 = codeValues[86];
				CodeValues_87 = codeValues[87];
				CodeValues_88 = codeValues[88];
				CodeValues_89 = codeValues[89];
				CodeValues_90 = codeValues[90];
				CodeValues_91 = codeValues[91];
				CodeValues_92 = codeValues[92];
				CodeValues_93 = codeValues[93];
				CodeValues_94 = codeValues[94];
				CodeValues_95 = codeValues[95];
				CodeValues_96 = codeValues[96];
				CodeValues_97 = codeValues[97];
				CodeValues_98 = codeValues[98];
				CodeValues_99 = codeValues[99];
				CodeValues_100 = codeValues[100];
				CodeValues_101 = codeValues[101];
				CodeValues_102 = codeValues[102];
				CodeValues_103 = codeValues[103];
				CodeValues_104 = codeValues[104];
				CodeValues_105 = codeValues[105];
				CodeValues_106 = codeValues[106];
				CodeValues_107 = codeValues[107];
				CodeValues_108 = codeValues[108];
				CodeValues_109 = codeValues[109];
				CodeValues_110 = codeValues[110];
				CodeValues_111 = codeValues[111];
				CodeValues_112 = codeValues[112];
				CodeValues_113 = codeValues[113];
				CodeValues_114 = codeValues[114];
				CodeValues_115 = codeValues[115];
				CodeValues_116 = codeValues[116];
				CodeValues_117 = codeValues[117];
				CodeValues_118 = codeValues[118];
				CodeValues_119 = codeValues[119];
				CodeValues_120 = codeValues[120];
				CodeValues_121 = codeValues[121];
				CodeValues_122 = codeValues[122];
				CodeValues_123 = codeValues[123];
				CodeValues_124 = codeValues[124];
				CodeValues_125 = codeValues[125];
				CodeValues_126 = codeValues[126];
				CodeValues_127 = codeValues[127];
				CodeValues_128 = codeValues[128];
				CodeValues_129 = codeValues[129];
				CodeValues_130 = codeValues[130];
				CodeValues_131 = codeValues[131];
				CodeValues_132 = codeValues[132];
				CodeValues_133 = codeValues[133];
				CodeValues_134 = codeValues[134];
				CodeValues_135 = codeValues[135];
				CodeValues_136 = codeValues[136];
				CodeValues_137 = codeValues[137];
				CodeValues_138 = codeValues[138];
				CodeValues_139 = codeValues[139];
				CodeValues_140 = codeValues[140];
				CodeValues_141 = codeValues[141];
				CodeValues_142 = codeValues[142];
				CodeValues_143 = codeValues[143];
				CodeValues_144 = codeValues[144];
				CodeValues_145 = codeValues[145];
				CodeValues_146 = codeValues[146];
				CodeValues_147 = codeValues[147];
				CodeValues_148 = codeValues[148];
				CodeValues_149 = codeValues[149];
				CodeValues_150 = codeValues[150];
				CodeValues_151 = codeValues[151];
				CodeValues_152 = codeValues[152];
				CodeValues_153 = codeValues[153];
				CodeValues_154 = codeValues[154];
				CodeValues_155 = codeValues[155];
				CodeValues_156 = codeValues[156];
				CodeValues_157 = codeValues[157];
				CodeValues_158 = codeValues[158];
				CodeValues_159 = codeValues[159];
				CodeValues_160 = codeValues[160];
				CodeValues_161 = codeValues[161];
			}
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_JPEG_QUANTIZATION_TABLE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiJpegQuantizationTable
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Elements")]
		[NativeName(NativeNameType.Type, "BYTE[64]")]
		public byte Elements_0;
		public byte Elements_1;
		public byte Elements_2;
		public byte Elements_3;
		public byte Elements_4;
		public byte Elements_5;
		public byte Elements_6;
		public byte Elements_7;
		public byte Elements_8;
		public byte Elements_9;
		public byte Elements_10;
		public byte Elements_11;
		public byte Elements_12;
		public byte Elements_13;
		public byte Elements_14;
		public byte Elements_15;
		public byte Elements_16;
		public byte Elements_17;
		public byte Elements_18;
		public byte Elements_19;
		public byte Elements_20;
		public byte Elements_21;
		public byte Elements_22;
		public byte Elements_23;
		public byte Elements_24;
		public byte Elements_25;
		public byte Elements_26;
		public byte Elements_27;
		public byte Elements_28;
		public byte Elements_29;
		public byte Elements_30;
		public byte Elements_31;
		public byte Elements_32;
		public byte Elements_33;
		public byte Elements_34;
		public byte Elements_35;
		public byte Elements_36;
		public byte Elements_37;
		public byte Elements_38;
		public byte Elements_39;
		public byte Elements_40;
		public byte Elements_41;
		public byte Elements_42;
		public byte Elements_43;
		public byte Elements_44;
		public byte Elements_45;
		public byte Elements_46;
		public byte Elements_47;
		public byte Elements_48;
		public byte Elements_49;
		public byte Elements_50;
		public byte Elements_51;
		public byte Elements_52;
		public byte Elements_53;
		public byte Elements_54;
		public byte Elements_55;
		public byte Elements_56;
		public byte Elements_57;
		public byte Elements_58;
		public byte Elements_59;
		public byte Elements_60;
		public byte Elements_61;
		public byte Elements_62;
		public byte Elements_63;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiJpegQuantizationTable(byte* elements = default)
		{
			if (elements != default)
			{
				Elements_0 = elements[0];
				Elements_1 = elements[1];
				Elements_2 = elements[2];
				Elements_3 = elements[3];
				Elements_4 = elements[4];
				Elements_5 = elements[5];
				Elements_6 = elements[6];
				Elements_7 = elements[7];
				Elements_8 = elements[8];
				Elements_9 = elements[9];
				Elements_10 = elements[10];
				Elements_11 = elements[11];
				Elements_12 = elements[12];
				Elements_13 = elements[13];
				Elements_14 = elements[14];
				Elements_15 = elements[15];
				Elements_16 = elements[16];
				Elements_17 = elements[17];
				Elements_18 = elements[18];
				Elements_19 = elements[19];
				Elements_20 = elements[20];
				Elements_21 = elements[21];
				Elements_22 = elements[22];
				Elements_23 = elements[23];
				Elements_24 = elements[24];
				Elements_25 = elements[25];
				Elements_26 = elements[26];
				Elements_27 = elements[27];
				Elements_28 = elements[28];
				Elements_29 = elements[29];
				Elements_30 = elements[30];
				Elements_31 = elements[31];
				Elements_32 = elements[32];
				Elements_33 = elements[33];
				Elements_34 = elements[34];
				Elements_35 = elements[35];
				Elements_36 = elements[36];
				Elements_37 = elements[37];
				Elements_38 = elements[38];
				Elements_39 = elements[39];
				Elements_40 = elements[40];
				Elements_41 = elements[41];
				Elements_42 = elements[42];
				Elements_43 = elements[43];
				Elements_44 = elements[44];
				Elements_45 = elements[45];
				Elements_46 = elements[46];
				Elements_47 = elements[47];
				Elements_48 = elements[48];
				Elements_49 = elements[49];
				Elements_50 = elements[50];
				Elements_51 = elements[51];
				Elements_52 = elements[52];
				Elements_53 = elements[53];
				Elements_54 = elements[54];
				Elements_55 = elements[55];
				Elements_56 = elements[56];
				Elements_57 = elements[57];
				Elements_58 = elements[58];
				Elements_59 = elements[59];
				Elements_60 = elements[60];
				Elements_61 = elements[61];
				Elements_62 = elements[62];
				Elements_63 = elements[63];
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiJpegQuantizationTable(Span<byte> elements = default)
		{
			if (elements != default)
			{
				Elements_0 = elements[0];
				Elements_1 = elements[1];
				Elements_2 = elements[2];
				Elements_3 = elements[3];
				Elements_4 = elements[4];
				Elements_5 = elements[5];
				Elements_6 = elements[6];
				Elements_7 = elements[7];
				Elements_8 = elements[8];
				Elements_9 = elements[9];
				Elements_10 = elements[10];
				Elements_11 = elements[11];
				Elements_12 = elements[12];
				Elements_13 = elements[13];
				Elements_14 = elements[14];
				Elements_15 = elements[15];
				Elements_16 = elements[16];
				Elements_17 = elements[17];
				Elements_18 = elements[18];
				Elements_19 = elements[19];
				Elements_20 = elements[20];
				Elements_21 = elements[21];
				Elements_22 = elements[22];
				Elements_23 = elements[23];
				Elements_24 = elements[24];
				Elements_25 = elements[25];
				Elements_26 = elements[26];
				Elements_27 = elements[27];
				Elements_28 = elements[28];
				Elements_29 = elements[29];
				Elements_30 = elements[30];
				Elements_31 = elements[31];
				Elements_32 = elements[32];
				Elements_33 = elements[33];
				Elements_34 = elements[34];
				Elements_35 = elements[35];
				Elements_36 = elements[36];
				Elements_37 = elements[37];
				Elements_38 = elements[38];
				Elements_39 = elements[39];
				Elements_40 = elements[40];
				Elements_41 = elements[41];
				Elements_42 = elements[42];
				Elements_43 = elements[43];
				Elements_44 = elements[44];
				Elements_45 = elements[45];
				Elements_46 = elements[46];
				Elements_47 = elements[47];
				Elements_48 = elements[48];
				Elements_49 = elements[49];
				Elements_50 = elements[50];
				Elements_51 = elements[51];
				Elements_52 = elements[52];
				Elements_53 = elements[53];
				Elements_54 = elements[54];
				Elements_55 = elements[55];
				Elements_56 = elements[56];
				Elements_57 = elements[57];
				Elements_58 = elements[58];
				Elements_59 = elements[59];
				Elements_60 = elements[60];
				Elements_61 = elements[61];
				Elements_62 = elements[62];
				Elements_63 = elements[63];
			}
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_DISPLAY_COLOR_SPACE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiDisplayColorSpace
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PrimaryCoordinates")]
		[NativeName(NativeNameType.Type, "FLOAT[2][8]")]
		public unsafe float* PrimaryCoordinates_0;
		public unsafe float* PrimaryCoordinates_1;
		public unsafe float* PrimaryCoordinates_2;
		public unsafe float* PrimaryCoordinates_3;
		public unsafe float* PrimaryCoordinates_4;
		public unsafe float* PrimaryCoordinates_5;
		public unsafe float* PrimaryCoordinates_6;
		public unsafe float* PrimaryCoordinates_7;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WhitePoints")]
		[NativeName(NativeNameType.Type, "FLOAT[2][16]")]
		public unsafe float* WhitePoints_0;
		public unsafe float* WhitePoints_1;
		public unsafe float* WhitePoints_2;
		public unsafe float* WhitePoints_3;
		public unsafe float* WhitePoints_4;
		public unsafe float* WhitePoints_5;
		public unsafe float* WhitePoints_6;
		public unsafe float* WhitePoints_7;
		public unsafe float* WhitePoints_8;
		public unsafe float* WhitePoints_9;
		public unsafe float* WhitePoints_10;
		public unsafe float* WhitePoints_11;
		public unsafe float* WhitePoints_12;
		public unsafe float* WhitePoints_13;
		public unsafe float* WhitePoints_14;
		public unsafe float* WhitePoints_15;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiDisplayColorSpace(float** primaryCoordinates = default, float** whitePoints = default)
		{
			if (primaryCoordinates != default)
			{
				PrimaryCoordinates_0 = primaryCoordinates[0];
				PrimaryCoordinates_1 = primaryCoordinates[1];
				PrimaryCoordinates_2 = primaryCoordinates[2];
				PrimaryCoordinates_3 = primaryCoordinates[3];
				PrimaryCoordinates_4 = primaryCoordinates[4];
				PrimaryCoordinates_5 = primaryCoordinates[5];
				PrimaryCoordinates_6 = primaryCoordinates[6];
				PrimaryCoordinates_7 = primaryCoordinates[7];
			}
			if (whitePoints != default)
			{
				WhitePoints_0 = whitePoints[0];
				WhitePoints_1 = whitePoints[1];
				WhitePoints_2 = whitePoints[2];
				WhitePoints_3 = whitePoints[3];
				WhitePoints_4 = whitePoints[4];
				WhitePoints_5 = whitePoints[5];
				WhitePoints_6 = whitePoints[6];
				WhitePoints_7 = whitePoints[7];
				WhitePoints_8 = whitePoints[8];
				WhitePoints_9 = whitePoints[9];
				WhitePoints_10 = whitePoints[10];
				WhitePoints_11 = whitePoints[11];
				WhitePoints_12 = whitePoints[12];
				WhitePoints_13 = whitePoints[13];
				WhitePoints_14 = whitePoints[14];
				WhitePoints_15 = whitePoints[15];
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiDisplayColorSpace(Span<Pointer<float>> primaryCoordinates = default, Span<Pointer<float>> whitePoints = default)
		{
			if (primaryCoordinates != default)
			{
				PrimaryCoordinates_0 = primaryCoordinates[0];
				PrimaryCoordinates_1 = primaryCoordinates[1];
				PrimaryCoordinates_2 = primaryCoordinates[2];
				PrimaryCoordinates_3 = primaryCoordinates[3];
				PrimaryCoordinates_4 = primaryCoordinates[4];
				PrimaryCoordinates_5 = primaryCoordinates[5];
				PrimaryCoordinates_6 = primaryCoordinates[6];
				PrimaryCoordinates_7 = primaryCoordinates[7];
			}
			if (whitePoints != default)
			{
				WhitePoints_0 = whitePoints[0];
				WhitePoints_1 = whitePoints[1];
				WhitePoints_2 = whitePoints[2];
				WhitePoints_3 = whitePoints[3];
				WhitePoints_4 = whitePoints[4];
				WhitePoints_5 = whitePoints[5];
				WhitePoints_6 = whitePoints[6];
				WhitePoints_7 = whitePoints[7];
				WhitePoints_8 = whitePoints[8];
				WhitePoints_9 = whitePoints[9];
				WhitePoints_10 = whitePoints[10];
				WhitePoints_11 = whitePoints[11];
				WhitePoints_12 = whitePoints[12];
				WhitePoints_13 = whitePoints[13];
				WhitePoints_14 = whitePoints[14];
				WhitePoints_15 = whitePoints[15];
			}
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("ea9dbf1a-c88e-4486-854a-98aa0138f30c")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDisplayControl")]
	public partial struct IDXGIDisplayControl : IComObject, IComObject<IDXGIDisplayControl>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("ea9dbf1a-c88e-4486-854a-98aa0138f30c");

		public unsafe IDXGIDisplayControl (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsStereoEnabled() 
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Bool32>)(LpVtbl[3]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetStereoEnabled([NativeName(NativeNameType.Param, "enabled")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 enabled) 
		{
			IDXGIDisplayControl* ptr = (IDXGIDisplayControl*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Bool32, void>)(LpVtbl[4]))(ptr, enabled);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGIDisplayControl value)
		{
			return Unsafe.As<IDXGIDisplayControl, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("191cfac3-a341-470d-b26e-a864f428319c")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutputDuplication")]
	public partial struct IDXGIOutputDuplication : IComObject, IComObject<IDXGIOutputDuplication>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("191cfac3-a341-470d-b26e-a864f428319c");

		public unsafe IDXGIOutputDuplication (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_DESC*")] DxgiOutduplDesc* pDesc) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiOutduplDesc*, void>)(LpVtbl[7]))(ptr, pDesc);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_DESC*")] ref DxgiOutduplDesc pDesc) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiOutduplDesc*, void>)(LpVtbl[7]))(ptr, (DxgiOutduplDesc*)ppDesc);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AcquireNextFrame")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AcquireNextFrame([NativeName(NativeNameType.Param, "TimeoutInMilliseconds")] [NativeName(NativeNameType.Type, "UINT")] uint timeoutInMilliseconds, [NativeName(NativeNameType.Param, "pFrameInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_FRAME_INFO*")] DxgiOutduplFrameInfo* pFrameInfo, [NativeName(NativeNameType.Param, "ppDesktopResource")] [NativeName(NativeNameType.Type, "IDXGIResource**")] IDXGIResource** ppDesktopResource) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(LpVtbl[8]))(ptr, timeoutInMilliseconds, pFrameInfo, ppDesktopResource);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AcquireNextFrame")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AcquireNextFrame([NativeName(NativeNameType.Param, "TimeoutInMilliseconds")] [NativeName(NativeNameType.Type, "UINT")] uint timeoutInMilliseconds, [NativeName(NativeNameType.Param, "pFrameInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_FRAME_INFO*")] ref DxgiOutduplFrameInfo pFrameInfo, [NativeName(NativeNameType.Param, "ppDesktopResource")] [NativeName(NativeNameType.Type, "IDXGIResource**")] IDXGIResource** ppDesktopResource) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplFrameInfo* ppFrameInfo = &pFrameInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(LpVtbl[8]))(ptr, timeoutInMilliseconds, (DxgiOutduplFrameInfo*)ppFrameInfo, ppDesktopResource);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AcquireNextFrame")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AcquireNextFrame([NativeName(NativeNameType.Param, "TimeoutInMilliseconds")] [NativeName(NativeNameType.Type, "UINT")] uint timeoutInMilliseconds, [NativeName(NativeNameType.Param, "pFrameInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_FRAME_INFO*")] DxgiOutduplFrameInfo* pFrameInfo, [NativeName(NativeNameType.Param, "ppDesktopResource")] [NativeName(NativeNameType.Type, "IDXGIResource**")] ref IDXGIResource* ppDesktopResource) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppDesktopResource = &ppDesktopResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(LpVtbl[8]))(ptr, timeoutInMilliseconds, pFrameInfo, (IDXGIResource**)pppDesktopResource);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AcquireNextFrame")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AcquireNextFrame([NativeName(NativeNameType.Param, "TimeoutInMilliseconds")] [NativeName(NativeNameType.Type, "UINT")] uint timeoutInMilliseconds, [NativeName(NativeNameType.Param, "pFrameInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_FRAME_INFO*")] DxgiOutduplFrameInfo* pFrameInfo, [NativeName(NativeNameType.Param, "ppDesktopResource")] [NativeName(NativeNameType.Type, "IDXGIResource**")] out ComPtr<IDXGIResource> ppDesktopResource) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDesktopResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(LpVtbl[8]))(ptr, timeoutInMilliseconds, pFrameInfo, (IDXGIResource**)ppDesktopResource.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AcquireNextFrame")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AcquireNextFrame([NativeName(NativeNameType.Param, "TimeoutInMilliseconds")] [NativeName(NativeNameType.Type, "UINT")] uint timeoutInMilliseconds, [NativeName(NativeNameType.Param, "pFrameInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_FRAME_INFO*")] ref DxgiOutduplFrameInfo pFrameInfo, [NativeName(NativeNameType.Param, "ppDesktopResource")] [NativeName(NativeNameType.Type, "IDXGIResource**")] ref IDXGIResource* ppDesktopResource) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplFrameInfo* ppFrameInfo = &pFrameInfo)
			{
				fixed (IDXGIResource** pppDesktopResource = &ppDesktopResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(LpVtbl[8]))(ptr, timeoutInMilliseconds, (DxgiOutduplFrameInfo*)ppFrameInfo, (IDXGIResource**)pppDesktopResource);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AcquireNextFrame")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AcquireNextFrame([NativeName(NativeNameType.Param, "TimeoutInMilliseconds")] [NativeName(NativeNameType.Type, "UINT")] uint timeoutInMilliseconds, [NativeName(NativeNameType.Param, "pFrameInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_FRAME_INFO*")] ref DxgiOutduplFrameInfo pFrameInfo, [NativeName(NativeNameType.Param, "ppDesktopResource")] [NativeName(NativeNameType.Type, "IDXGIResource**")] out ComPtr<IDXGIResource> ppDesktopResource) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplFrameInfo* ppFrameInfo = &pFrameInfo)
			{
				ppDesktopResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(LpVtbl[8]))(ptr, timeoutInMilliseconds, (DxgiOutduplFrameInfo*)ppFrameInfo, (IDXGIResource**)ppDesktopResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameDirtyRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameDirtyRects([NativeName(NativeNameType.Param, "DirtyRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint dirtyRectsBufferSize, [NativeName(NativeNameType.Param, "pDirtyRectsBuffer")] [NativeName(NativeNameType.Type, "RECT*")] Rect32* pDirtyRectsBuffer, [NativeName(NativeNameType.Param, "pDirtyRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(LpVtbl[9]))(ptr, dirtyRectsBufferSize, pDirtyRectsBuffer, pDirtyRectsBufferSizeRequired);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameDirtyRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameDirtyRects([NativeName(NativeNameType.Param, "DirtyRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint dirtyRectsBufferSize, [NativeName(NativeNameType.Param, "pDirtyRectsBuffer")] [NativeName(NativeNameType.Type, "RECT*")] ref Rect32 pDirtyRectsBuffer, [NativeName(NativeNameType.Param, "pDirtyRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppDirtyRectsBuffer = &pDirtyRectsBuffer)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(LpVtbl[9]))(ptr, dirtyRectsBufferSize, (Rect32*)ppDirtyRectsBuffer, pDirtyRectsBufferSizeRequired);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameDirtyRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameDirtyRects([NativeName(NativeNameType.Param, "DirtyRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint dirtyRectsBufferSize, [NativeName(NativeNameType.Param, "pDirtyRectsBuffer")] [NativeName(NativeNameType.Type, "RECT*")] Rect32* pDirtyRectsBuffer, [NativeName(NativeNameType.Param, "pDirtyRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDirtyRectsBufferSizeRequired = &pDirtyRectsBufferSizeRequired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(LpVtbl[9]))(ptr, dirtyRectsBufferSize, pDirtyRectsBuffer, (uint*)ppDirtyRectsBufferSizeRequired);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameDirtyRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameDirtyRects([NativeName(NativeNameType.Param, "DirtyRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint dirtyRectsBufferSize, [NativeName(NativeNameType.Param, "pDirtyRectsBuffer")] [NativeName(NativeNameType.Type, "RECT*")] ref Rect32 pDirtyRectsBuffer, [NativeName(NativeNameType.Param, "pDirtyRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppDirtyRectsBuffer = &pDirtyRectsBuffer)
			{
				fixed (uint* ppDirtyRectsBufferSizeRequired = &pDirtyRectsBufferSizeRequired)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(LpVtbl[9]))(ptr, dirtyRectsBufferSize, (Rect32*)ppDirtyRectsBuffer, (uint*)ppDirtyRectsBufferSizeRequired);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameMoveRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameMoveRects([NativeName(NativeNameType.Param, "MoveRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint moveRectsBufferSize, [NativeName(NativeNameType.Param, "pMoveRectBuffer")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_MOVE_RECT*")] DxgiOutduplMoveRect* pMoveRectBuffer, [NativeName(NativeNameType.Param, "pMoveRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(LpVtbl[10]))(ptr, moveRectsBufferSize, pMoveRectBuffer, pMoveRectsBufferSizeRequired);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameMoveRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameMoveRects([NativeName(NativeNameType.Param, "MoveRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint moveRectsBufferSize, [NativeName(NativeNameType.Param, "pMoveRectBuffer")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_MOVE_RECT*")] ref DxgiOutduplMoveRect pMoveRectBuffer, [NativeName(NativeNameType.Param, "pMoveRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplMoveRect* ppMoveRectBuffer = &pMoveRectBuffer)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(LpVtbl[10]))(ptr, moveRectsBufferSize, (DxgiOutduplMoveRect*)ppMoveRectBuffer, pMoveRectsBufferSizeRequired);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameMoveRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameMoveRects([NativeName(NativeNameType.Param, "MoveRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint moveRectsBufferSize, [NativeName(NativeNameType.Param, "pMoveRectBuffer")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_MOVE_RECT*")] DxgiOutduplMoveRect* pMoveRectBuffer, [NativeName(NativeNameType.Param, "pMoveRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMoveRectsBufferSizeRequired = &pMoveRectsBufferSizeRequired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(LpVtbl[10]))(ptr, moveRectsBufferSize, pMoveRectBuffer, (uint*)ppMoveRectsBufferSizeRequired);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameMoveRects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameMoveRects([NativeName(NativeNameType.Param, "MoveRectsBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint moveRectsBufferSize, [NativeName(NativeNameType.Param, "pMoveRectBuffer")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_MOVE_RECT*")] ref DxgiOutduplMoveRect pMoveRectBuffer, [NativeName(NativeNameType.Param, "pMoveRectsBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplMoveRect* ppMoveRectBuffer = &pMoveRectBuffer)
			{
				fixed (uint* ppMoveRectsBufferSizeRequired = &pMoveRectsBufferSizeRequired)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(LpVtbl[10]))(ptr, moveRectsBufferSize, (DxgiOutduplMoveRect*)ppMoveRectBuffer, (uint*)ppMoveRectsBufferSizeRequired);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] void* pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] DxgiOutduplPointerShapeInfo* pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, pPointerShapeBuffer, pPointerShapeBufferSizeRequired, pPointerShapeInfo);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape<T>([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] DxgiOutduplPointerShapeInfo* pPointerShapeInfo) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, (void*)pPointerShapeBuffer.GetAddressOf(), pPointerShapeBufferSizeRequired, pPointerShapeInfo);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] void* pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] DxgiOutduplPointerShapeInfo* pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppPointerShapeBufferSizeRequired = &pPointerShapeBufferSizeRequired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, pPointerShapeBuffer, (uint*)ppPointerShapeBufferSizeRequired, pPointerShapeInfo);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape<T>([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] DxgiOutduplPointerShapeInfo* pPointerShapeInfo) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppPointerShapeBufferSizeRequired = &pPointerShapeBufferSizeRequired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, (void*)pPointerShapeBuffer.GetAddressOf(), (uint*)ppPointerShapeBufferSizeRequired, pPointerShapeInfo);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] void* pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] ref DxgiOutduplPointerShapeInfo pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplPointerShapeInfo* ppPointerShapeInfo = &pPointerShapeInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, pPointerShapeBuffer, pPointerShapeBufferSizeRequired, (DxgiOutduplPointerShapeInfo*)ppPointerShapeInfo);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape<T>([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] ref DxgiOutduplPointerShapeInfo pPointerShapeInfo) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutduplPointerShapeInfo* ppPointerShapeInfo = &pPointerShapeInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, (void*)pPointerShapeBuffer.GetAddressOf(), pPointerShapeBufferSizeRequired, (DxgiOutduplPointerShapeInfo*)ppPointerShapeInfo);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] void* pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] ref DxgiOutduplPointerShapeInfo pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppPointerShapeBufferSizeRequired = &pPointerShapeBufferSizeRequired)
			{
				fixed (DxgiOutduplPointerShapeInfo* ppPointerShapeInfo = &pPointerShapeInfo)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, pPointerShapeBuffer, (uint*)ppPointerShapeBufferSizeRequired, (DxgiOutduplPointerShapeInfo*)ppPointerShapeInfo);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFramePointerShape")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFramePointerShape<T>([NativeName(NativeNameType.Param, "PointerShapeBufferSize")] [NativeName(NativeNameType.Type, "UINT")] uint pointerShapeBufferSize, [NativeName(NativeNameType.Param, "pPointerShapeBuffer")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pPointerShapeBuffer, [NativeName(NativeNameType.Param, "pPointerShapeBufferSizeRequired")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPointerShapeBufferSizeRequired, [NativeName(NativeNameType.Param, "pPointerShapeInfo")] [NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_SHAPE_INFO*")] ref DxgiOutduplPointerShapeInfo pPointerShapeInfo) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppPointerShapeBufferSizeRequired = &pPointerShapeBufferSizeRequired)
			{
				fixed (DxgiOutduplPointerShapeInfo* ppPointerShapeInfo = &pPointerShapeInfo)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(LpVtbl[11]))(ptr, pointerShapeBufferSize, (void*)pPointerShapeBuffer.GetAddressOf(), (uint*)ppPointerShapeBufferSizeRequired, (DxgiOutduplPointerShapeInfo*)ppPointerShapeInfo);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MapDesktopSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MapDesktopSurface([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] DxgiMappedRect* pLockedRect) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiMappedRect*, HResult>)(LpVtbl[12]))(ptr, pLockedRect);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MapDesktopSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MapDesktopSurface([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] ref DxgiMappedRect pLockedRect) 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiMappedRect*, HResult>)(LpVtbl[12]))(ptr, (DxgiMappedRect*)ppLockedRect);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnMapDesktopSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult UnMapDesktopSurface() 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, HResult>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseFrame")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReleaseFrame() 
		{
			IDXGIOutputDuplication* ptr = (IDXGIOutputDuplication*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, HResult>)(LpVtbl[14]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutputDuplication value)
		{
			return Unsafe.As<IDXGIOutputDuplication, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutputDuplication value)
		{
			return Unsafe.As<IDXGIOutputDuplication, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_OUTDUPL_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutduplDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ModeDesc")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_DESC")]
		public DxgiModeDesc ModeDesc;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Rotation")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION")]
		public DxgiModeRotation Rotation;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DesktopImageInSystemMemory")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 DesktopImageInSystemMemory;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutduplDesc(DxgiModeDesc modeDesc = default, DxgiModeRotation rotation = default, Bool32 desktopImageInSystemMemory = default)
		{
			ModeDesc = modeDesc;
			Rotation = rotation;
			DesktopImageInSystemMemory = desktopImageInSystemMemory;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_OUTDUPL_FRAME_INFO")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutduplFrameInfo
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastPresentTime")]
		[NativeName(NativeNameType.Type, "LARGE_INTEGER")]
		public long LastPresentTime;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "LastMouseUpdateTime")]
		[NativeName(NativeNameType.Type, "LARGE_INTEGER")]
		public long LastMouseUpdateTime;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AccumulatedFrames")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint AccumulatedFrames;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RectsCoalesced")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 RectsCoalesced;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ProtectedContentMaskedOut")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 ProtectedContentMaskedOut;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PointerPosition")]
		[NativeName(NativeNameType.Type, "DXGI_OUTDUPL_POINTER_POSITION")]
		public DxgiOutduplPointerPosition PointerPosition;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "TotalMetadataBufferSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint TotalMetadataBufferSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PointerShapeBufferSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint PointerShapeBufferSize;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutduplFrameInfo(long lastPresentTime = default, long lastMouseUpdateTime = default, uint accumulatedFrames = default, Bool32 rectsCoalesced = default, Bool32 protectedContentMaskedOut = default, DxgiOutduplPointerPosition pointerPosition = default, uint totalMetadataBufferSize = default, uint pointerShapeBufferSize = default)
		{
			LastPresentTime = lastPresentTime;
			LastMouseUpdateTime = lastMouseUpdateTime;
			AccumulatedFrames = accumulatedFrames;
			RectsCoalesced = rectsCoalesced;
			ProtectedContentMaskedOut = protectedContentMaskedOut;
			PointerPosition = pointerPosition;
			TotalMetadataBufferSize = totalMetadataBufferSize;
			PointerShapeBufferSize = pointerShapeBufferSize;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_OUTDUPL_POINTER_POSITION")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutduplPointerPosition
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Position")]
		[NativeName(NativeNameType.Type, "POINT")]
		public Point32 Position;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Visible")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 Visible;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutduplPointerPosition(Point32 position = default, Bool32 visible = default)
		{
			Position = position;
			Visible = visible;
		}


	}

	/// <summary>
	/// interface __MIDL_itf_dxgi1_2_0000_0001 <br/>
	/// [local] <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_OUTDUPL_MOVE_RECT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutduplMoveRect
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SourcePoint")]
		[NativeName(NativeNameType.Type, "POINT")]
		public Point32 SourcePoint;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DestinationRect")]
		[NativeName(NativeNameType.Type, "RECT")]
		public Rect32 DestinationRect;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutduplMoveRect(Point32 sourcePoint = default, Rect32 destinationRect = default)
		{
			SourcePoint = sourcePoint;
			DestinationRect = destinationRect;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_OUTDUPL_POINTER_SHAPE_INFO")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutduplPointerShapeInfo
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Type")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Type;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Width")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Height")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Pitch")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Pitch;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HotSpot")]
		[NativeName(NativeNameType.Type, "POINT")]
		public Point32 HotSpot;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutduplPointerShapeInfo(uint type = default, uint width = default, uint height = default, uint pitch = default, Point32 hotSpot = default)
		{
			Type = type;
			Width = width;
			Height = height;
			Pitch = pitch;
			HotSpot = hotSpot;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("aba496dd-b617-4cb8-a866-bc44d7eb1fa2")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISurface2")]
	public partial struct IDXGISurface2 : IComObject, IComObject<IDXGISurface2>, IComObject<IDXGISurface1>, IComObject<IDXGISurface>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("aba496dd-b617-4cb8-a866-bc44d7eb1fa2");

		public unsafe IDXGISurface2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiSurfaceDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiSurfaceDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Map")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Map([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] DxgiMappedRect* pLockedRect, [NativeName(NativeNameType.Param, "MapFlags")] [NativeName(NativeNameType.Type, "UINT")] uint mapFlags) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiMappedRect*, uint, HResult>)(LpVtbl[9]))(ptr, pLockedRect, mapFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Map")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Map([NativeName(NativeNameType.Param, "pLockedRect")] [NativeName(NativeNameType.Type, "DXGI_MAPPED_RECT*")] ref DxgiMappedRect pLockedRect, [NativeName(NativeNameType.Param, "MapFlags")] [NativeName(NativeNameType.Type, "UINT")] uint mapFlags) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiMappedRect*, uint, HResult>)(LpVtbl[9]))(ptr, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Unmap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Unmap() 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDC([NativeName(NativeNameType.Param, "Discard")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 discard, [NativeName(NativeNameType.Param, "phdc")] [NativeName(NativeNameType.Type, "HDC*")] nint* phdc) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Bool32, nint*, HResult>)(LpVtbl[11]))(ptr, discard, phdc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDC([NativeName(NativeNameType.Param, "Discard")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 discard, [NativeName(NativeNameType.Param, "phdc")] [NativeName(NativeNameType.Type, "HDC*")] ref nint phdc) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* pphdc = &phdc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Bool32, nint*, HResult>)(LpVtbl[11]))(ptr, discard, (nint*)pphdc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReleaseDC([NativeName(NativeNameType.Param, "pDirtyRect")] [NativeName(NativeNameType.Type, "RECT*")] Rect32* pDirtyRect) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Rect32*, HResult>)(LpVtbl[12]))(ptr, pDirtyRect);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseDC")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReleaseDC([NativeName(NativeNameType.Param, "pDirtyRect")] [NativeName(NativeNameType.Type, "RECT*")] ref Rect32 pDirtyRect) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppDirtyRect = &pDirtyRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Rect32*, HResult>)(LpVtbl[12]))(ptr, (Rect32*)ppDirtyRect);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] void** ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSubresourceIndex) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, riid, ppParentResource, pSubresourceIndex);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] void** ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSubresourceIndex) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, (Guid*)priid, ppParentResource, pSubresourceIndex);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource<T>([NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSubresourceIndex) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<T>* pppParentResource = &ppParentResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppParentResource, pSubresourceIndex);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSubresourceIndex) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				fixed (ComPtr<T>* pppParentResource = &ppParentResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, (Guid*)priid, (void**)pppParentResource, pSubresourceIndex);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] void** ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSubresourceIndex) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppSubresourceIndex = &pSubresourceIndex)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, riid, ppParentResource, (uint*)ppSubresourceIndex);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] void** ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSubresourceIndex) 
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				fixed (uint* ppSubresourceIndex = &pSubresourceIndex)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, (Guid*)priid, ppParentResource, (uint*)ppSubresourceIndex);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource<T>([NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSubresourceIndex) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<T>* pppParentResource = &ppParentResource)
			{
				fixed (uint* ppSubresourceIndex = &pSubresourceIndex)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppParentResource, (uint*)ppSubresourceIndex);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetResource<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParentResource")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppParentResource, [NativeName(NativeNameType.Param, "pSubresourceIndex")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSubresourceIndex) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface2* ptr = (IDXGISurface2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				fixed (ComPtr<T>* pppParentResource = &ppParentResource)
				{
					fixed (uint* ppSubresourceIndex = &pSubresourceIndex)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(LpVtbl[13]))(ptr, (Guid*)priid, (void**)pppParentResource, (uint*)ppSubresourceIndex);
						return ret;
					}
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISurface1 (IDXGISurface2 value)
		{
			return Unsafe.As<IDXGISurface2, IDXGISurface1>(ref value);
		}

		public unsafe static implicit operator IDXGISurface (IDXGISurface2 value)
		{
			return Unsafe.As<IDXGISurface2, IDXGISurface>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISurface2 value)
		{
			return Unsafe.As<IDXGISurface2, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISurface2 value)
		{
			return Unsafe.As<IDXGISurface2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISurface2 value)
		{
			return Unsafe.As<IDXGISurface2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("30961379-4609-4a41-998e-54fe567ee0c1")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIResource1")]
	public partial struct IDXGIResource1 : IComObject, IComObject<IDXGIResource1>, IComObject<IDXGIResource>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("30961379-4609-4a41-998e-54fe567ee0c1");

		public unsafe IDXGIResource1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedHandle([NativeName(NativeNameType.Param, "pSharedHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] nint* pSharedHandle) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, nint*, HResult>)(LpVtbl[8]))(ptr, pSharedHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedHandle([NativeName(NativeNameType.Param, "pSharedHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] ref nint pSharedHandle) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppSharedHandle = &pSharedHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, nint*, HResult>)(LpVtbl[8]))(ptr, (nint*)ppSharedHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetUsage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetUsage([NativeName(NativeNameType.Param, "pUsage")] [NativeName(NativeNameType.Type, "DXGI_USAGE*")] uint* pUsage) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(LpVtbl[9]))(ptr, pUsage);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetUsage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetUsage([NativeName(NativeNameType.Param, "pUsage")] [NativeName(NativeNameType.Type, "DXGI_USAGE*")] ref uint pUsage) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUsage = &pUsage)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(LpVtbl[9]))(ptr, (uint*)ppUsage);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetEvictionPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetEvictionPriority([NativeName(NativeNameType.Param, "EvictionPriority")] [NativeName(NativeNameType.Type, "UINT")] uint evictionPriority) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, HResult>)(LpVtbl[10]))(ptr, evictionPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetEvictionPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetEvictionPriority([NativeName(NativeNameType.Param, "pEvictionPriority")] [NativeName(NativeNameType.Type, "UINT*")] uint* pEvictionPriority) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(LpVtbl[11]))(ptr, pEvictionPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetEvictionPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetEvictionPriority([NativeName(NativeNameType.Param, "pEvictionPriority")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pEvictionPriority) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppEvictionPriority = &pEvictionPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(LpVtbl[11]))(ptr, (uint*)ppEvictionPriority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSubresourceSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubresourceSurface([NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface2**")] IDXGISurface2** ppSurface) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, IDXGISurface2**, HResult>)(LpVtbl[12]))(ptr, index, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSubresourceSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubresourceSurface([NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface2**")] ref IDXGISurface2* ppSurface) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface2** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, IDXGISurface2**, HResult>)(LpVtbl[12]))(ptr, index, (IDXGISurface2**)pppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSubresourceSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubresourceSurface([NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface2**")] out ComPtr<IDXGISurface2> ppSurface) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, IDXGISurface2**, HResult>)(LpVtbl[12]))(ptr, index, (IDXGISurface2**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSharedHandle([NativeName(NativeNameType.Param, "pAttributes")] [NativeName(NativeNameType.Type, "const SECURITY_ATTRIBUTES*")] SecurityAttributes* pAttributes, [NativeName(NativeNameType.Param, "dwAccess")] [NativeName(NativeNameType.Type, "DWORD")] uint dwAccess, [NativeName(NativeNameType.Param, "lpName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* lpName, [NativeName(NativeNameType.Param, "pHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] nint* pHandle) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[13]))(ptr, pAttributes, dwAccess, lpName, pHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSharedHandle([NativeName(NativeNameType.Param, "pAttributes")] [NativeName(NativeNameType.Type, "const SECURITY_ATTRIBUTES*")] ref SecurityAttributes pAttributes, [NativeName(NativeNameType.Param, "dwAccess")] [NativeName(NativeNameType.Type, "DWORD")] uint dwAccess, [NativeName(NativeNameType.Param, "lpName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* lpName, [NativeName(NativeNameType.Param, "pHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] nint* pHandle) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[13]))(ptr, (SecurityAttributes*)ppAttributes, dwAccess, lpName, pHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSharedHandle([NativeName(NativeNameType.Param, "pAttributes")] [NativeName(NativeNameType.Type, "const SECURITY_ATTRIBUTES*")] SecurityAttributes* pAttributes, [NativeName(NativeNameType.Param, "dwAccess")] [NativeName(NativeNameType.Type, "DWORD")] uint dwAccess, [NativeName(NativeNameType.Param, "lpName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* lpName, [NativeName(NativeNameType.Param, "pHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] ref nint pHandle) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHandle = &pHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[13]))(ptr, pAttributes, dwAccess, lpName, (nint*)ppHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSharedHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSharedHandle([NativeName(NativeNameType.Param, "pAttributes")] [NativeName(NativeNameType.Type, "const SECURITY_ATTRIBUTES*")] ref SecurityAttributes pAttributes, [NativeName(NativeNameType.Param, "dwAccess")] [NativeName(NativeNameType.Type, "DWORD")] uint dwAccess, [NativeName(NativeNameType.Param, "lpName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* lpName, [NativeName(NativeNameType.Param, "pHandle")] [NativeName(NativeNameType.Type, "HANDLE*")] ref nint pHandle) 
		{
			IDXGIResource1* ptr = (IDXGIResource1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[13]))(ptr, (SecurityAttributes*)ppAttributes, dwAccess, lpName, (nint*)ppHandle);
					return ret;
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIResource (IDXGIResource1 value)
		{
			return Unsafe.As<IDXGIResource1, IDXGIResource>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGIResource1 value)
		{
			return Unsafe.As<IDXGIResource1, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIResource1 value)
		{
			return Unsafe.As<IDXGIResource1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIResource1 value)
		{
			return Unsafe.As<IDXGIResource1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("05008617-fbfd-4051-a790-144884b4f6a9")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDevice2")]
	public partial struct IDXGIDevice2 : IComObject, IComObject<IDXGIDevice2>, IComObject<IDXGIDevice1>, IComObject<IDXGIDevice>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("05008617-fbfd-4051-a790-144884b4f6a9");

		public unsafe IDXGIDevice2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, pAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGPUThreadPriority([NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "INT")] int priority) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, int, HResult>)(LpVtbl[10]))(ptr, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] int* pPriority) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, int*, HResult>)(LpVtbl[11]))(ptr, pPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] ref int pPriority) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, int*, HResult>)(LpVtbl[11]))(ptr, (int*)ppPriority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMaximumFrameLatency([NativeName(NativeNameType.Param, "MaxLatency")] [NativeName(NativeNameType.Type, "UINT")] uint maxLatency) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, HResult>)(LpVtbl[12]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMaxLatency) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint*, HResult>)(LpVtbl[13]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMaxLatency) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint*, HResult>)(LpVtbl[13]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, ppResources, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)pppResources, priority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, ppResources, pDiscarded);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, pDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), pDiscarded);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (Bool32* ppDiscarded = &pDiscarded)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, (Bool32*)ppDiscarded);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), (Bool32*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnqueueSetEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnqueueSetEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent) 
		{
			IDXGIDevice2* ptr = (IDXGIDevice2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, nint, HResult>)(LpVtbl[16]))(ptr, hEvent);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDevice1 (IDXGIDevice2 value)
		{
			return Unsafe.As<IDXGIDevice2, IDXGIDevice1>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice (IDXGIDevice2 value)
		{
			return Unsafe.As<IDXGIDevice2, IDXGIDevice>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDevice2 value)
		{
			return Unsafe.As<IDXGIDevice2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDevice2 value)
		{
			return Unsafe.As<IDXGIDevice2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("790a45f7-0d42-4876-983a-0a55cfe6f4aa")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISwapChain1")]
	public partial struct IDXGISwapChain1 : IComObject, IComObject<IDXGISwapChain1>, IComObject<IDXGISwapChain>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("790a45f7-0d42-4876-983a-0a55cfe6f4aa");

		public unsafe IDXGISwapChain1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, HResult>)(LpVtbl[8]))(ptr, syncInterval, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, riid, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, (void**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, pTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)pTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, ppTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "NewFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat newFormat, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, uint, DxgiFormat, uint, HResult>)(LpVtbl[13]))(ptr, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, pNewTargetParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] uint* pLastPresentCount) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint*, HResult>)(LpVtbl[17]))(ptr, pLastPresentCount);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pLastPresentCount) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint*, HResult>)(LpVtbl[17]))(ptr, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] nint* pHwnd) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, nint*, HResult>)(LpVtbl[20]))(ptr, pHwnd);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pHwnd) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, nint*, HResult>)(LpVtbl[20]))(ptr, (nint*)ppHwnd);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, refiid, ppUnk);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppUnk = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppUnk.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				ppUnk = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, (void**)ppUnk.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsTemporaryMonoSupported")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsTemporaryMonoSupported() 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, ppRestrictToOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(LpVtbl[25]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(LpVtbl[25]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(LpVtbl[26]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(LpVtbl[26]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetRotation([NativeName(NativeNameType.Param, "Rotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION")] DxgiModeRotation rotation) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeRotation, HResult>)(LpVtbl[27]))(ptr, rotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, pRotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain1* ptr = (IDXGISwapChain1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISwapChain (IDXGISwapChain1 value)
		{
			return Unsafe.As<IDXGISwapChain1, IDXGISwapChain>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISwapChain1 value)
		{
			return Unsafe.As<IDXGISwapChain1, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISwapChain1 value)
		{
			return Unsafe.As<IDXGISwapChain1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISwapChain1 value)
		{
			return Unsafe.As<IDXGISwapChain1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_SWAP_CHAIN_DESC1")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSwapChainDesc1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Width")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Height")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Format")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT")]
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Stereo")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 Stereo;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SampleDesc")]
		[NativeName(NativeNameType.Type, "DXGI_SAMPLE_DESC")]
		public DxgiSampleDesc SampleDesc;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BufferUsage")]
		[NativeName(NativeNameType.Type, "DXGI_USAGE")]
		public uint BufferUsage;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BufferCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint BufferCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Scaling")]
		[NativeName(NativeNameType.Type, "DXGI_SCALING")]
		public DxgiScaling Scaling;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SwapEffect")]
		[NativeName(NativeNameType.Type, "DXGI_SWAP_EFFECT")]
		public DxgiSwapEffect SwapEffect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AlphaMode")]
		[NativeName(NativeNameType.Type, "DXGI_ALPHA_MODE")]
		public DxgiAlphaMode AlphaMode;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Flags;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiSwapChainDesc1(uint width = default, uint height = default, DxgiFormat format = default, Bool32 stereo = default, DxgiSampleDesc sampleDesc = default, uint bufferUsage = default, uint bufferCount = default, DxgiScaling scaling = default, DxgiSwapEffect swapEffect = default, DxgiAlphaMode alphaMode = default, uint flags = default)
		{
			Width = width;
			Height = height;
			Format = format;
			Stereo = stereo;
			SampleDesc = sampleDesc;
			BufferUsage = bufferUsage;
			BufferCount = bufferCount;
			Scaling = scaling;
			SwapEffect = swapEffect;
			AlphaMode = alphaMode;
			Flags = flags;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSwapChainFullscreenDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RefreshRate")]
		[NativeName(NativeNameType.Type, "DXGI_RATIONAL")]
		public DxgiRational RefreshRate;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScanlineOrdering")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_SCANLINE_ORDER")]
		public DxgiModeScanlineOrder ScanlineOrdering;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Scaling")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_SCALING")]
		public DxgiModeScaling Scaling;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Windowed")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 Windowed;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiSwapChainFullscreenDesc(DxgiRational refreshRate = default, DxgiModeScanlineOrder scanlineOrdering = default, DxgiModeScaling scaling = default, Bool32 windowed = default)
		{
			RefreshRate = refreshRate;
			ScanlineOrdering = scanlineOrdering;
			Scaling = scaling;
			Windowed = windowed;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_PRESENT_PARAMETERS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiPresentParameters
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DirtyRectsCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint DirtyRectsCount;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pDirtyRects")]
		[NativeName(NativeNameType.Type, "RECT*")]
		public unsafe Rect32* PDirtyRects;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pScrollRect")]
		[NativeName(NativeNameType.Type, "RECT*")]
		public unsafe Rect32* PScrollRect;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pScrollOffset")]
		[NativeName(NativeNameType.Type, "POINT*")]
		public unsafe Point32* PScrollOffset;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiPresentParameters(uint dirtyRectsCount = default, Rect32* pDirtyRects = default, Rect32* pScrollRect = default, Point32* pScrollOffset = default)
		{
			DirtyRectsCount = dirtyRectsCount;
			PDirtyRects = pDirtyRects;
			PScrollRect = pScrollRect;
			PScrollOffset = pScrollOffset;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("50c83a1c-e072-4c48-87b0-3630fa36a6d0")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory2")]
	public partial struct IDXGIFactory2 : IComObject, IComObject<IDXGIFactory2>, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("50c83a1c-e072-4c48-87b0-3630fa36a6d0");

		public unsafe IDXGIFactory2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsCurrent")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsCurrent() 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Bool32>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsWindowedStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsWindowedStereoEnabled() 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Bool32>)(LpVtbl[14]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] Luid* pLuid) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, pLuid);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] ref Luid pLuid) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterStereoStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterStereoStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, void>)(LpVtbl[20]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterOcclusionStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterOcclusionStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, void>)(LpVtbl[23]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* ptr = (IDXGIFactory2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory1 (IDXGIFactory2 value)
		{
			return Unsafe.As<IDXGIFactory2, IDXGIFactory1>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory2 value)
		{
			return Unsafe.As<IDXGIFactory2, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory2 value)
		{
			return Unsafe.As<IDXGIFactory2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory2 value)
		{
			return Unsafe.As<IDXGIFactory2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("0aa1ae0a-fa0e-4b84-8644-e05ff8e5acb5")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIAdapter2")]
	public partial struct IDXGIAdapter2 : IComObject, IComObject<IDXGIAdapter2>, IComObject<IDXGIAdapter1>, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("0aa1ae0a-fa0e-4b84-8644-e05ff8e5acb5");

		public unsafe IDXGIAdapter2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc2([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC2*")] DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc2*, HResult>)(LpVtbl[11]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc2([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC2*")] ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc2*, HResult>)(LpVtbl[11]))(ptr, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIAdapter1 (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IDXGIAdapter1>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IDXGIAdapter>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_ADAPTER_DESC2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiAdapterDesc2
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Description")]
		[NativeName(NativeNameType.Type, "WCHAR[128]")]
		public char Description_0;
		public char Description_1;
		public char Description_2;
		public char Description_3;
		public char Description_4;
		public char Description_5;
		public char Description_6;
		public char Description_7;
		public char Description_8;
		public char Description_9;
		public char Description_10;
		public char Description_11;
		public char Description_12;
		public char Description_13;
		public char Description_14;
		public char Description_15;
		public char Description_16;
		public char Description_17;
		public char Description_18;
		public char Description_19;
		public char Description_20;
		public char Description_21;
		public char Description_22;
		public char Description_23;
		public char Description_24;
		public char Description_25;
		public char Description_26;
		public char Description_27;
		public char Description_28;
		public char Description_29;
		public char Description_30;
		public char Description_31;
		public char Description_32;
		public char Description_33;
		public char Description_34;
		public char Description_35;
		public char Description_36;
		public char Description_37;
		public char Description_38;
		public char Description_39;
		public char Description_40;
		public char Description_41;
		public char Description_42;
		public char Description_43;
		public char Description_44;
		public char Description_45;
		public char Description_46;
		public char Description_47;
		public char Description_48;
		public char Description_49;
		public char Description_50;
		public char Description_51;
		public char Description_52;
		public char Description_53;
		public char Description_54;
		public char Description_55;
		public char Description_56;
		public char Description_57;
		public char Description_58;
		public char Description_59;
		public char Description_60;
		public char Description_61;
		public char Description_62;
		public char Description_63;
		public char Description_64;
		public char Description_65;
		public char Description_66;
		public char Description_67;
		public char Description_68;
		public char Description_69;
		public char Description_70;
		public char Description_71;
		public char Description_72;
		public char Description_73;
		public char Description_74;
		public char Description_75;
		public char Description_76;
		public char Description_77;
		public char Description_78;
		public char Description_79;
		public char Description_80;
		public char Description_81;
		public char Description_82;
		public char Description_83;
		public char Description_84;
		public char Description_85;
		public char Description_86;
		public char Description_87;
		public char Description_88;
		public char Description_89;
		public char Description_90;
		public char Description_91;
		public char Description_92;
		public char Description_93;
		public char Description_94;
		public char Description_95;
		public char Description_96;
		public char Description_97;
		public char Description_98;
		public char Description_99;
		public char Description_100;
		public char Description_101;
		public char Description_102;
		public char Description_103;
		public char Description_104;
		public char Description_105;
		public char Description_106;
		public char Description_107;
		public char Description_108;
		public char Description_109;
		public char Description_110;
		public char Description_111;
		public char Description_112;
		public char Description_113;
		public char Description_114;
		public char Description_115;
		public char Description_116;
		public char Description_117;
		public char Description_118;
		public char Description_119;
		public char Description_120;
		public char Description_121;
		public char Description_122;
		public char Description_123;
		public char Description_124;
		public char Description_125;
		public char Description_126;
		public char Description_127;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "VendorId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint VendorId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DeviceId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint DeviceId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SubSysId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SubSysId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Revision")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Revision;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedVideoMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedVideoMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SharedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint SharedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AdapterLuid")]
		[NativeName(NativeNameType.Type, "LUID")]
		public Luid AdapterLuid;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GraphicsPreemptionGranularity")]
		[NativeName(NativeNameType.Type, "DXGI_GRAPHICS_PREEMPTION_GRANULARITY")]
		public DxgiGraphicsPreemptionGranularity GraphicsPreemptionGranularity;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ComputePreemptionGranularity")]
		[NativeName(NativeNameType.Type, "DXGI_COMPUTE_PREEMPTION_GRANULARITY")]
		public DxgiComputePreemptionGranularity ComputePreemptionGranularity;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc2(char* description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, uint flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc2(Span<char> description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, uint flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("00cddea8-939b-4b83-a340-a685226666cc")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutput1")]
	public partial struct IDXGIOutput1 : IComObject, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("00cddea8-939b-4b83-a340-a685226666cc");

		public unsafe IDXGIOutput1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "WaitForVBlank")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.GetAddressOf(), exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseOwnership")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput1*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput1 value)
		{
			return Unsafe.As<IDXGIOutput1, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput1 value)
		{
			return Unsafe.As<IDXGIOutput1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput1 value)
		{
			return Unsafe.As<IDXGIOutput1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_MODE_DESC1")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiModeDesc1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Width")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Height")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RefreshRate")]
		[NativeName(NativeNameType.Type, "DXGI_RATIONAL")]
		public DxgiRational RefreshRate;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Format")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT")]
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ScanlineOrdering")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_SCANLINE_ORDER")]
		public DxgiModeScanlineOrder ScanlineOrdering;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Scaling")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_SCALING")]
		public DxgiModeScaling Scaling;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Stereo")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 Stereo;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiModeDesc1(uint width = default, uint height = default, DxgiRational refreshRate = default, DxgiFormat format = default, DxgiModeScanlineOrder scanlineOrdering = default, DxgiModeScaling scaling = default, Bool32 stereo = default)
		{
			Width = width;
			Height = height;
			RefreshRate = refreshRate;
			Format = format;
			ScanlineOrdering = scanlineOrdering;
			Scaling = scaling;
			Stereo = stereo;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("6007896c-3244-4afd-bf18-a6d3beda5023")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDevice3")]
	public partial struct IDXGIDevice3 : IComObject, IComObject<IDXGIDevice3>, IComObject<IDXGIDevice2>, IComObject<IDXGIDevice1>, IComObject<IDXGIDevice>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("6007896c-3244-4afd-bf18-a6d3beda5023");

		public unsafe IDXGIDevice3 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, pAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGPUThreadPriority([NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "INT")] int priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int, HResult>)(LpVtbl[10]))(ptr, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] int* pPriority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int*, HResult>)(LpVtbl[11]))(ptr, pPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] ref int pPriority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int*, HResult>)(LpVtbl[11]))(ptr, (int*)ppPriority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMaximumFrameLatency([NativeName(NativeNameType.Param, "MaxLatency")] [NativeName(NativeNameType.Type, "UINT")] uint maxLatency) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, HResult>)(LpVtbl[12]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMaxLatency) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint*, HResult>)(LpVtbl[13]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMaxLatency) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint*, HResult>)(LpVtbl[13]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, ppResources, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)pppResources, priority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, ppResources, pDiscarded);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, pDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), pDiscarded);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (Bool32* ppDiscarded = &pDiscarded)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, (Bool32*)ppDiscarded);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), (Bool32*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnqueueSetEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnqueueSetEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, nint, HResult>)(LpVtbl[16]))(ptr, hEvent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Trim")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void Trim() 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIDevice3*, void>)(LpVtbl[17]))(ptr);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDevice2 (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIDevice2>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice1 (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIDevice1>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIDevice>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("a8be2ac4-199f-4946-b331-79599fb98de7")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISwapChain2")]
	public partial struct IDXGISwapChain2 : IComObject, IComObject<IDXGISwapChain2>, IComObject<IDXGISwapChain1>, IComObject<IDXGISwapChain>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("a8be2ac4-199f-4946-b331-79599fb98de7");

		public unsafe IDXGISwapChain2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, HResult>)(LpVtbl[8]))(ptr, syncInterval, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, riid, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, (void**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, pTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)pTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, ppTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "NewFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat newFormat, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, uint, DxgiFormat, uint, HResult>)(LpVtbl[13]))(ptr, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, pNewTargetParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] uint* pLastPresentCount) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(LpVtbl[17]))(ptr, pLastPresentCount);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pLastPresentCount) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(LpVtbl[17]))(ptr, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] nint* pHwnd) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint*, HResult>)(LpVtbl[20]))(ptr, pHwnd);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pHwnd) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint*, HResult>)(LpVtbl[20]))(ptr, (nint*)ppHwnd);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, refiid, ppUnk);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppUnk = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppUnk.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				ppUnk = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, (void**)ppUnk.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsTemporaryMonoSupported")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsTemporaryMonoSupported() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, ppRestrictToOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(LpVtbl[25]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(LpVtbl[25]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(LpVtbl[26]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(LpVtbl[26]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetRotation([NativeName(NativeNameType.Param, "Rotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION")] DxgiModeRotation rotation) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation, HResult>)(LpVtbl[27]))(ptr, rotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, pRotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetSourceSize([NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, HResult>)(LpVtbl[29]))(ptr, width, height);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, pWidth, pHeight);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMaximumFrameLatency([NativeName(NativeNameType.Param, "MaxLatency")] [NativeName(NativeNameType.Type, "UINT")] uint maxLatency) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, HResult>)(LpVtbl[31]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMaxLatency) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(LpVtbl[32]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMaxLatency) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(LpVtbl[32]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameLatencyWaitableObject")]
		[return: NativeName(NativeNameType.Type, "HANDLE")]
		public readonly unsafe nint GetFrameLatencyWaitableObject() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			nint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint>)(LpVtbl[33]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "const DXGI_MATRIX_3X2_F*")] DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(LpVtbl[34]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "const DXGI_MATRIX_3X2_F*")] ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(LpVtbl[34]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "DXGI_MATRIX_3X2_F*")] DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(LpVtbl[35]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "DXGI_MATRIX_3X2_F*")] ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(LpVtbl[35]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISwapChain1 (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGISwapChain1>(ref value);
		}

		public unsafe static implicit operator IDXGISwapChain (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGISwapChain>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// interface __MIDL_itf_dxgi1_3_0000_0001 <br/>
	/// [local] <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_MATRIX_3X2_F")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiMatrix3X2F
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "_11")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float _11;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "_12")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float _12;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "_21")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float _21;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "_22")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float _22;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "_31")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float _31;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "_32")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float _32;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiMatrix3X2F(float _11 = default, float _12 = default, float _21 = default, float _22 = default, float _31 = default, float _32 = default)
		{
			this._11 = _11;
			this._12 = _12;
			this._21 = _21;
			this._22 = _22;
			this._31 = _31;
			this._32 = _32;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("595e39d1-2724-4663-99b1-da969de28364")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutput2")]
	public partial struct IDXGIOutput2 : IComObject, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("595e39d1-2724-4663-99b1-da969de28364");

		public unsafe IDXGIOutput2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "WaitForVBlank")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.GetAddressOf(), exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseOwnership")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput2*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SupportsOverlays")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 SupportsOverlays() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("25483823-cd46-4c7d-86ca-47aa95b837bd")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory3")]
	public partial struct IDXGIFactory3 : IComObject, IComObject<IDXGIFactory3>, IComObject<IDXGIFactory2>, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("25483823-cd46-4c7d-86ca-47aa95b837bd");

		public unsafe IDXGIFactory3 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsCurrent")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsCurrent() 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Bool32>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsWindowedStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsWindowedStereoEnabled() 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Bool32>)(LpVtbl[14]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] Luid* pLuid) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, pLuid);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] ref Luid pLuid) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterStereoStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterStereoStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, void>)(LpVtbl[20]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterOcclusionStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterOcclusionStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, void>)(LpVtbl[23]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCreationFlags")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetCreationFlags() 
		{
			IDXGIFactory3* ptr = (IDXGIFactory3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint>)(LpVtbl[25]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory2 (IDXGIFactory3 value)
		{
			return Unsafe.As<IDXGIFactory3, IDXGIFactory2>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory1 (IDXGIFactory3 value)
		{
			return Unsafe.As<IDXGIFactory3, IDXGIFactory1>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory3 value)
		{
			return Unsafe.As<IDXGIFactory3, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory3 value)
		{
			return Unsafe.As<IDXGIFactory3, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory3 value)
		{
			return Unsafe.As<IDXGIFactory3, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("2633066b-4514-4c7a-8fd8-12ea98059d18")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDecodeSwapChain")]
	public partial struct IDXGIDecodeSwapChain : IComObject, IComObject<IDXGIDecodeSwapChain>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("2633066b-4514-4c7a-8fd8-12ea98059d18");

		public unsafe IDXGIDecodeSwapChain (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PresentBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PresentBuffer([NativeName(NativeNameType.Param, "BufferToPresent")] [NativeName(NativeNameType.Type, "UINT")] uint bufferToPresent, [NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint, uint, uint, HResult>)(LpVtbl[3]))(ptr, bufferToPresent, syncInterval, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetSourceRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetSourceRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "const RECT*")] Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[4]))(ptr, pRect);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetSourceRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetSourceRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "const RECT*")] ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[4]))(ptr, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetTargetRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetTargetRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "const RECT*")] Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[5]))(ptr, pRect);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetTargetRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetTargetRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "const RECT*")] ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[5]))(ptr, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDestSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDestSize([NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint, uint, HResult>)(LpVtbl[6]))(ptr, width, height);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "RECT*")] Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[7]))(ptr, pRect);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "RECT*")] ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[7]))(ptr, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetTargetRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetTargetRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "RECT*")] Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[8]))(ptr, pRect);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetTargetRect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetTargetRect([NativeName(NativeNameType.Param, "pRect")] [NativeName(NativeNameType.Type, "RECT*")] ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(LpVtbl[8]))(ptr, (Rect32*)ppRect);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDestSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDestSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(LpVtbl[9]))(ptr, pWidth, pHeight);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDestSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDestSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(LpVtbl[9]))(ptr, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDestSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDestSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(LpVtbl[9]))(ptr, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDestSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDestSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(LpVtbl[9]))(ptr, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetColorSpace")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetColorSpace([NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS")] DXGIMULTIPLANEOVERLAYYCbCrFLAGS colorSpace) 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, DXGIMULTIPLANEOVERLAYYCbCrFLAGS, HResult>)(LpVtbl[10]))(ptr, colorSpace);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetColorSpace")]
		[return: NativeName(NativeNameType.Type, "DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS")]
		public readonly unsafe DXGIMULTIPLANEOVERLAYYCbCrFLAGS GetColorSpace() 
		{
			IDXGIDecodeSwapChain* ptr = (IDXGIDecodeSwapChain*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			DXGIMULTIPLANEOVERLAYYCbCrFLAGS ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, DXGIMULTIPLANEOVERLAYYCbCrFLAGS>)(LpVtbl[11]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGIDecodeSwapChain value)
		{
			return Unsafe.As<IDXGIDecodeSwapChain, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("41e7d1f2-a591-4f7b-a2e5-fa9c843e1c12")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactoryMedia")]
	public partial struct IDXGIFactoryMedia : IComObject, IComObject<IDXGIFactoryMedia>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("41e7d1f2-a591-4f7b-a2e5-fa9c843e1c12");

		public unsafe IDXGIFactoryMedia (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[3]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] DxgiDecodeSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, pDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateDecodeSwapChainForCompositionSurfaceHandle")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateDecodeSwapChainForCompositionSurfaceHandle([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hSurface")] [NativeName(NativeNameType.Type, "HANDLE")] nint hSurface, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_DECODE_SWAP_CHAIN_DESC*")] ref DxgiDecodeSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "pYuvDecodeBuffers")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pYuvDecodeBuffers, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGIDecodeSwapChain**")] out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* ptr = (IDXGIFactoryMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(LpVtbl[4]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)pYuvDecodeBuffers.GetAddressOf(), (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGIFactoryMedia value)
		{
			return Unsafe.As<IDXGIFactoryMedia, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_DECODE_SWAP_CHAIN_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiDecodeSwapChainDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Flags;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiDecodeSwapChainDesc(uint flags = default)
		{
			Flags = flags;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("dd95b90b-f05f-4f6a-bd65-25bfb264bd84")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISwapChainMedia")]
	public partial struct IDXGISwapChainMedia : IComObject, IComObject<IDXGISwapChainMedia>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("dd95b90b-f05f-4f6a-bd65-25bfb264bd84");

		public unsafe IDXGISwapChainMedia (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatisticsMedia")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatisticsMedia([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS_MEDIA*")] DxgiFrameStatisticsMedia* pStats) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, DxgiFrameStatisticsMedia*, HResult>)(LpVtbl[3]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatisticsMedia")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatisticsMedia([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS_MEDIA*")] ref DxgiFrameStatisticsMedia pStats) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatisticsMedia* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, DxgiFrameStatisticsMedia*, HResult>)(LpVtbl[3]))(ptr, (DxgiFrameStatisticsMedia*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPresentDuration")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPresentDuration([NativeName(NativeNameType.Param, "Duration")] [NativeName(NativeNameType.Type, "UINT")] uint duration) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, HResult>)(LpVtbl[4]))(ptr, duration);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckPresentDurationSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckPresentDurationSupport([NativeName(NativeNameType.Param, "DesiredPresentDuration")] [NativeName(NativeNameType.Type, "UINT")] uint desiredPresentDuration, [NativeName(NativeNameType.Param, "pClosestSmallerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] uint* pClosestSmallerPresentDuration, [NativeName(NativeNameType.Param, "pClosestLargerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] uint* pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(LpVtbl[5]))(ptr, desiredPresentDuration, pClosestSmallerPresentDuration, pClosestLargerPresentDuration);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckPresentDurationSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckPresentDurationSupport([NativeName(NativeNameType.Param, "DesiredPresentDuration")] [NativeName(NativeNameType.Type, "UINT")] uint desiredPresentDuration, [NativeName(NativeNameType.Param, "pClosestSmallerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pClosestSmallerPresentDuration, [NativeName(NativeNameType.Param, "pClosestLargerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] uint* pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppClosestSmallerPresentDuration = &pClosestSmallerPresentDuration)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(LpVtbl[5]))(ptr, desiredPresentDuration, (uint*)ppClosestSmallerPresentDuration, pClosestLargerPresentDuration);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckPresentDurationSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckPresentDurationSupport([NativeName(NativeNameType.Param, "DesiredPresentDuration")] [NativeName(NativeNameType.Type, "UINT")] uint desiredPresentDuration, [NativeName(NativeNameType.Param, "pClosestSmallerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] uint* pClosestSmallerPresentDuration, [NativeName(NativeNameType.Param, "pClosestLargerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppClosestLargerPresentDuration = &pClosestLargerPresentDuration)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(LpVtbl[5]))(ptr, desiredPresentDuration, pClosestSmallerPresentDuration, (uint*)ppClosestLargerPresentDuration);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckPresentDurationSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckPresentDurationSupport([NativeName(NativeNameType.Param, "DesiredPresentDuration")] [NativeName(NativeNameType.Type, "UINT")] uint desiredPresentDuration, [NativeName(NativeNameType.Param, "pClosestSmallerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pClosestSmallerPresentDuration, [NativeName(NativeNameType.Param, "pClosestLargerPresentDuration")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* ptr = (IDXGISwapChainMedia*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppClosestSmallerPresentDuration = &pClosestSmallerPresentDuration)
			{
				fixed (uint* ppClosestLargerPresentDuration = &pClosestLargerPresentDuration)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(LpVtbl[5]))(ptr, desiredPresentDuration, (uint*)ppClosestSmallerPresentDuration, (uint*)ppClosestLargerPresentDuration);
					return ret;
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGISwapChainMedia value)
		{
			return Unsafe.As<IDXGISwapChainMedia, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_FRAME_STATISTICS_MEDIA")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiFrameStatisticsMedia
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PresentCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint PresentCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PresentRefreshCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint PresentRefreshCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SyncRefreshCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SyncRefreshCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SyncQPCTime")]
		[NativeName(NativeNameType.Type, "LARGE_INTEGER")]
		public long SyncQPCTime;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SyncGPUTime")]
		[NativeName(NativeNameType.Type, "LARGE_INTEGER")]
		public long SyncGPUTime;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CompositionMode")]
		[NativeName(NativeNameType.Type, "DXGI_FRAME_PRESENTATION_MODE")]
		public DxgiFramePresentationMode CompositionMode;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ApprovedPresentDuration")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint ApprovedPresentDuration;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiFrameStatisticsMedia(uint presentCount = default, uint presentRefreshCount = default, uint syncRefreshCount = default, long syncQpcTime = default, long syncGpuTime = default, DxgiFramePresentationMode compositionMode = default, uint approvedPresentDuration = default)
		{
			PresentCount = presentCount;
			PresentRefreshCount = presentRefreshCount;
			SyncRefreshCount = syncRefreshCount;
			SyncQPCTime = syncQpcTime;
			SyncGPUTime = syncGpuTime;
			CompositionMode = compositionMode;
			ApprovedPresentDuration = approvedPresentDuration;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("8a6bb301-7e7e-41f4-a8e0-5b32f7f99b18")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutput3")]
	public partial struct IDXGIOutput3 : IComObject, IComObject<IDXGIOutput3>, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("8a6bb301-7e7e-41f4-a8e0-5b32f7f99b18");

		public unsafe IDXGIOutput3 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "WaitForVBlank")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.GetAddressOf(), exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseOwnership")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput3*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pDestination) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pDestination) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pDestination) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pDestination) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SupportsOverlays")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 SupportsOverlays() 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput3* ptr = (IDXGIOutput3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), (uint*)ppFlags);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput2 (IDXGIOutput3 value)
		{
			return Unsafe.As<IDXGIOutput3, IDXGIOutput2>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput3 value)
		{
			return Unsafe.As<IDXGIOutput3, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput3 value)
		{
			return Unsafe.As<IDXGIOutput3, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput3 value)
		{
			return Unsafe.As<IDXGIOutput3, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput3 value)
		{
			return Unsafe.As<IDXGIOutput3, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("94d99bdb-f1f8-4ab0-b236-7da0170edab1")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISwapChain3")]
	public partial struct IDXGISwapChain3 : IComObject, IComObject<IDXGISwapChain3>, IComObject<IDXGISwapChain2>, IComObject<IDXGISwapChain1>, IComObject<IDXGISwapChain>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("94d99bdb-f1f8-4ab0-b236-7da0170edab1");

		public unsafe IDXGISwapChain3 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, HResult>)(LpVtbl[8]))(ptr, syncInterval, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, riid, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, (void**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, pTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)pTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, ppTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "NewFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat newFormat, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, HResult>)(LpVtbl[13]))(ptr, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, pNewTargetParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] uint* pLastPresentCount) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(LpVtbl[17]))(ptr, pLastPresentCount);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pLastPresentCount) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(LpVtbl[17]))(ptr, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] nint* pHwnd) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, nint*, HResult>)(LpVtbl[20]))(ptr, pHwnd);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pHwnd) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, nint*, HResult>)(LpVtbl[20]))(ptr, (nint*)ppHwnd);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, refiid, ppUnk);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppUnk = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppUnk.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				ppUnk = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, (void**)ppUnk.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsTemporaryMonoSupported")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsTemporaryMonoSupported() 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, ppRestrictToOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(LpVtbl[25]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(LpVtbl[25]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(LpVtbl[26]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(LpVtbl[26]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetRotation([NativeName(NativeNameType.Param, "Rotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION")] DxgiModeRotation rotation) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeRotation, HResult>)(LpVtbl[27]))(ptr, rotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, pRotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetSourceSize([NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, HResult>)(LpVtbl[29]))(ptr, width, height);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, pWidth, pHeight);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMaximumFrameLatency([NativeName(NativeNameType.Param, "MaxLatency")] [NativeName(NativeNameType.Type, "UINT")] uint maxLatency) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, HResult>)(LpVtbl[31]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMaxLatency) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(LpVtbl[32]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMaxLatency) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(LpVtbl[32]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameLatencyWaitableObject")]
		[return: NativeName(NativeNameType.Type, "HANDLE")]
		public readonly unsafe nint GetFrameLatencyWaitableObject() 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			nint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, nint>)(LpVtbl[33]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "const DXGI_MATRIX_3X2_F*")] DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(LpVtbl[34]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "const DXGI_MATRIX_3X2_F*")] ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(LpVtbl[34]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "DXGI_MATRIX_3X2_F*")] DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(LpVtbl[35]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "DXGI_MATRIX_3X2_F*")] ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(LpVtbl[35]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCurrentBackBufferIndex")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetCurrentBackBufferIndex() 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint>)(LpVtbl[36]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckColorSpaceSupport([NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pColorSpaceSupport")] [NativeName(NativeNameType.Type, "UINT*")] uint* pColorSpaceSupport) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiColorSpaceType, uint*, HResult>)(LpVtbl[37]))(ptr, colorSpace, pColorSpaceSupport);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckColorSpaceSupport([NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pColorSpaceSupport")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pColorSpaceSupport) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppColorSpaceSupport = &pColorSpaceSupport)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiColorSpaceType, uint*, HResult>)(LpVtbl[37]))(ptr, colorSpace, (uint*)ppColorSpaceSupport);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetColorSpace1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetColorSpace1([NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiColorSpaceType, HResult>)(LpVtbl[38]))(ptr, colorSpace);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppPresentQueue) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, ppPresentQueue);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppPresentQueue) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, ppPresentQueue);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, (IUnknown**)pppPresentQueue);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, (IUnknown**)ppPresentQueue.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, (IUnknown**)pppPresentQueue);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain3* ptr = (IDXGISwapChain3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, (IUnknown**)ppPresentQueue.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISwapChain2 (IDXGISwapChain3 value)
		{
			return Unsafe.As<IDXGISwapChain3, IDXGISwapChain2>(ref value);
		}

		public unsafe static implicit operator IDXGISwapChain1 (IDXGISwapChain3 value)
		{
			return Unsafe.As<IDXGISwapChain3, IDXGISwapChain1>(ref value);
		}

		public unsafe static implicit operator IDXGISwapChain (IDXGISwapChain3 value)
		{
			return Unsafe.As<IDXGISwapChain3, IDXGISwapChain>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISwapChain3 value)
		{
			return Unsafe.As<IDXGISwapChain3, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISwapChain3 value)
		{
			return Unsafe.As<IDXGISwapChain3, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISwapChain3 value)
		{
			return Unsafe.As<IDXGISwapChain3, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("dc7dca35-2196-414d-9f53-617884032a60")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutput4")]
	public partial struct IDXGIOutput4 : IComObject, IComObject<IDXGIOutput4>, IComObject<IDXGIOutput3>, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("dc7dca35-2196-414d-9f53-617884032a60");

		public unsafe IDXGIOutput4 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "WaitForVBlank")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.GetAddressOf(), exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseOwnership")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput4*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pDestination) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pDestination) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pDestination) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pDestination) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SupportsOverlays")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 SupportsOverlays() 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.GetAddressOf(), pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput4* ptr = (IDXGIOutput4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.GetAddressOf(), (uint*)ppFlags);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput3 (IDXGIOutput4 value)
		{
			return Unsafe.As<IDXGIOutput4, IDXGIOutput3>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput2 (IDXGIOutput4 value)
		{
			return Unsafe.As<IDXGIOutput4, IDXGIOutput2>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput4 value)
		{
			return Unsafe.As<IDXGIOutput4, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput4 value)
		{
			return Unsafe.As<IDXGIOutput4, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput4 value)
		{
			return Unsafe.As<IDXGIOutput4, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput4 value)
		{
			return Unsafe.As<IDXGIOutput4, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("1bc6ea02-ef36-464f-bf0c-21ca39e5168a")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory4")]
	public partial struct IDXGIFactory4 : IComObject, IComObject<IDXGIFactory4>, IComObject<IDXGIFactory3>, IComObject<IDXGIFactory2>, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("1bc6ea02-ef36-464f-bf0c-21ca39e5168a");

		public unsafe IDXGIFactory4 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsCurrent")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsCurrent() 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Bool32>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsWindowedStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsWindowedStereoEnabled() 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Bool32>)(LpVtbl[14]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] Luid* pLuid) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, pLuid);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] ref Luid pLuid) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterStereoStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterStereoStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, void>)(LpVtbl[20]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterOcclusionStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterOcclusionStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, void>)(LpVtbl[23]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCreationFlags")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetCreationFlags() 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint>)(LpVtbl[25]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory4* ptr = (IDXGIFactory4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory3 (IDXGIFactory4 value)
		{
			return Unsafe.As<IDXGIFactory4, IDXGIFactory3>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory2 (IDXGIFactory4 value)
		{
			return Unsafe.As<IDXGIFactory4, IDXGIFactory2>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory1 (IDXGIFactory4 value)
		{
			return Unsafe.As<IDXGIFactory4, IDXGIFactory1>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory4 value)
		{
			return Unsafe.As<IDXGIFactory4, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory4 value)
		{
			return Unsafe.As<IDXGIFactory4, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory4 value)
		{
			return Unsafe.As<IDXGIFactory4, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("645967a4-1392-4310-a798-8053ce3e93fd")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIAdapter3")]
	public partial struct IDXGIAdapter3 : IComObject, IComObject<IDXGIAdapter3>, IComObject<IDXGIAdapter2>, IComObject<IDXGIAdapter1>, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("645967a4-1392-4310-a798-8053ce3e93fd");

		public unsafe IDXGIAdapter3 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc2([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC2*")] DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc2*, HResult>)(LpVtbl[11]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc2([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC2*")] ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc2*, HResult>)(LpVtbl[11]))(ptr, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterHardwareContentProtectionTeardownStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterHardwareContentProtectionTeardownStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(LpVtbl[12]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterHardwareContentProtectionTeardownStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterHardwareContentProtectionTeardownStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(LpVtbl[12]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterHardwareContentProtectionTeardownStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterHardwareContentProtectionTeardownStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, void>)(LpVtbl[13]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryVideoMemoryInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryVideoMemoryInfo([NativeName(NativeNameType.Param, "NodeIndex")] [NativeName(NativeNameType.Type, "UINT")] uint nodeIndex, [NativeName(NativeNameType.Param, "MemorySegmentGroup")] [NativeName(NativeNameType.Type, "DXGI_MEMORY_SEGMENT_GROUP")] DxgiMemorySegmentGroup memorySegmentGroup, [NativeName(NativeNameType.Param, "pVideoMemoryInfo")] [NativeName(NativeNameType.Type, "DXGI_QUERY_VIDEO_MEMORY_INFO*")] DxgiQueryVideoMemoryInfo* pVideoMemoryInfo) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(LpVtbl[14]))(ptr, nodeIndex, memorySegmentGroup, pVideoMemoryInfo);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryVideoMemoryInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryVideoMemoryInfo([NativeName(NativeNameType.Param, "NodeIndex")] [NativeName(NativeNameType.Type, "UINT")] uint nodeIndex, [NativeName(NativeNameType.Param, "MemorySegmentGroup")] [NativeName(NativeNameType.Type, "DXGI_MEMORY_SEGMENT_GROUP")] DxgiMemorySegmentGroup memorySegmentGroup, [NativeName(NativeNameType.Param, "pVideoMemoryInfo")] [NativeName(NativeNameType.Type, "DXGI_QUERY_VIDEO_MEMORY_INFO*")] ref DxgiQueryVideoMemoryInfo pVideoMemoryInfo) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiQueryVideoMemoryInfo* ppVideoMemoryInfo = &pVideoMemoryInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(LpVtbl[14]))(ptr, nodeIndex, memorySegmentGroup, (DxgiQueryVideoMemoryInfo*)ppVideoMemoryInfo);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetVideoMemoryReservation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetVideoMemoryReservation([NativeName(NativeNameType.Param, "NodeIndex")] [NativeName(NativeNameType.Type, "UINT")] uint nodeIndex, [NativeName(NativeNameType.Param, "MemorySegmentGroup")] [NativeName(NativeNameType.Type, "DXGI_MEMORY_SEGMENT_GROUP")] DxgiMemorySegmentGroup memorySegmentGroup, [NativeName(NativeNameType.Param, "Reservation")] [NativeName(NativeNameType.Type, "UINT64")] ulong reservation) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, DxgiMemorySegmentGroup, ulong, HResult>)(LpVtbl[15]))(ptr, nodeIndex, memorySegmentGroup, reservation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterVideoMemoryBudgetChangeNotificationEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterVideoMemoryBudgetChangeNotificationEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(LpVtbl[16]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterVideoMemoryBudgetChangeNotificationEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterVideoMemoryBudgetChangeNotificationEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(LpVtbl[16]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterVideoMemoryBudgetChangeNotification")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterVideoMemoryBudgetChangeNotification([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIAdapter3* ptr = (IDXGIAdapter3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, void>)(LpVtbl[17]))(ptr, dwCookie);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIAdapter2 (IDXGIAdapter3 value)
		{
			return Unsafe.As<IDXGIAdapter3, IDXGIAdapter2>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter1 (IDXGIAdapter3 value)
		{
			return Unsafe.As<IDXGIAdapter3, IDXGIAdapter1>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter (IDXGIAdapter3 value)
		{
			return Unsafe.As<IDXGIAdapter3, IDXGIAdapter>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter3 value)
		{
			return Unsafe.As<IDXGIAdapter3, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter3 value)
		{
			return Unsafe.As<IDXGIAdapter3, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_QUERY_VIDEO_MEMORY_INFO")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiQueryVideoMemoryInfo
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Budget")]
		[NativeName(NativeNameType.Type, "UINT64")]
		public ulong Budget;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrentUsage")]
		[NativeName(NativeNameType.Type, "UINT64")]
		public ulong CurrentUsage;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AvailableForReservation")]
		[NativeName(NativeNameType.Type, "UINT64")]
		public ulong AvailableForReservation;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrentReservation")]
		[NativeName(NativeNameType.Type, "UINT64")]
		public ulong CurrentReservation;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiQueryVideoMemoryInfo(ulong budget = default, ulong currentUsage = default, ulong availableForReservation = default, ulong currentReservation = default)
		{
			Budget = budget;
			CurrentUsage = currentUsage;
			AvailableForReservation = availableForReservation;
			CurrentReservation = currentReservation;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("80a07424-ab52-42eb-833c-0c42fd282d98")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutput5")]
	public partial struct IDXGIOutput5 : IComObject, IComObject<IDXGIOutput5>, IComObject<IDXGIOutput4>, IComObject<IDXGIOutput3>, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("80a07424-ab52-42eb-833c-0c42fd282d98");

		public unsafe IDXGIOutput5 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "WaitForVBlank")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.GetAddressOf(), exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseOwnership")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput5*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pDestination) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pDestination) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pDestination) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pDestination) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SupportsOverlays")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 SupportsOverlays() 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.GetAddressOf(), pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.GetAddressOf(), (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* ptr = (IDXGIOutput5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput4 (IDXGIOutput5 value)
		{
			return Unsafe.As<IDXGIOutput5, IDXGIOutput4>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput3 (IDXGIOutput5 value)
		{
			return Unsafe.As<IDXGIOutput5, IDXGIOutput3>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput2 (IDXGIOutput5 value)
		{
			return Unsafe.As<IDXGIOutput5, IDXGIOutput2>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput5 value)
		{
			return Unsafe.As<IDXGIOutput5, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput5 value)
		{
			return Unsafe.As<IDXGIOutput5, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput5 value)
		{
			return Unsafe.As<IDXGIOutput5, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput5 value)
		{
			return Unsafe.As<IDXGIOutput5, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("3d585d5a-bd4a-489e-b1f4-3dbcb6452ffb")]
	[NativeName(NativeNameType.StructOrClass, "IDXGISwapChain4")]
	public partial struct IDXGISwapChain4 : IComObject, IComObject<IDXGISwapChain4>, IComObject<IDXGISwapChain3>, IComObject<IDXGISwapChain2>, IComObject<IDXGISwapChain1>, IComObject<IDXGISwapChain>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("3d585d5a-bd4a-489e-b1f4-3dbcb6452ffb");

		public unsafe IDXGISwapChain4 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppDevice) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, HResult>)(LpVtbl[8]))(ptr, syncInterval, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, riid, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] void** ppSurface) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBuffer<T>([NativeName(NativeNameType.Param, "Buffer")] [NativeName(NativeNameType.Type, "UINT")] uint buffer, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, (void**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, pTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFullscreenState([NativeName(NativeNameType.Param, "Fullscreen")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 fullscreen, [NativeName(NativeNameType.Param, "pTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32, IDXGIOutput*, HResult>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)pTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, ppTarget);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenState")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenState([NativeName(NativeNameType.Param, "pFullscreen")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pFullscreen, [NativeName(NativeNameType.Param, "ppTarget")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(LpVtbl[11]))(ptr, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc*, HResult>)(LpVtbl[12]))(ptr, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "NewFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat newFormat, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, HResult>)(LpVtbl[13]))(ptr, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, pNewTargetParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeTarget")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeTarget([NativeName(NativeNameType.Param, "pNewTargetParameters")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeDesc*, HResult>)(LpVtbl[14]))(ptr, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetContainingOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetContainingOutput([NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(LpVtbl[15]))(ptr, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiFrameStatistics*, HResult>)(LpVtbl[16]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] uint* pLastPresentCount) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(LpVtbl[17]))(ptr, pLastPresentCount);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetLastPresentCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetLastPresentCount([NativeName(NativeNameType.Param, "pLastPresentCount")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pLastPresentCount) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(LpVtbl[17]))(ptr, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc1*, HResult>)(LpVtbl[18]))(ptr, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFullscreenDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFullscreenDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainFullscreenDesc*, HResult>)(LpVtbl[19]))(ptr, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] nint* pHwnd) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, nint*, HResult>)(LpVtbl[20]))(ptr, pHwnd);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetHwnd([NativeName(NativeNameType.Param, "pHwnd")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pHwnd) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, nint*, HResult>)(LpVtbl[20]))(ptr, (nint*)ppHwnd);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, refiid, ppUnk);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] void** ppUnk) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppUnk = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppUnk.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetCoreWindow<T>([NativeName(NativeNameType.Param, "refiid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid refiid, [NativeName(NativeNameType.Param, "ppUnk")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				ppUnk = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(LpVtbl[21]))(ptr, (Guid*)prefiid, (void**)ppUnk.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Present1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Present1([NativeName(NativeNameType.Param, "SyncInterval")] [NativeName(NativeNameType.Type, "UINT")] uint syncInterval, [NativeName(NativeNameType.Param, "PresentFlags")] [NativeName(NativeNameType.Type, "UINT")] uint presentFlags, [NativeName(NativeNameType.Param, "pPresentParameters")] [NativeName(NativeNameType.Type, "const DXGI_PRESENT_PARAMETERS*")] ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, DxgiPresentParameters*, HResult>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsTemporaryMonoSupported")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsTemporaryMonoSupported() 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, ppRestrictToOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRestrictToOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRestrictToOutput([NativeName(NativeNameType.Param, "ppRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(LpVtbl[24]))(ptr, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(LpVtbl[25]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "const DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(LpVtbl[25]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] Vector4* pColor) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(LpVtbl[26]))(ptr, pColor);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBackgroundColor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetBackgroundColor([NativeName(NativeNameType.Param, "pColor")] [NativeName(NativeNameType.Type, "DXGI_RGBA*")] ref Vector4 pColor) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(LpVtbl[26]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetRotation([NativeName(NativeNameType.Param, "Rotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION")] DxgiModeRotation rotation) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeRotation, HResult>)(LpVtbl[27]))(ptr, rotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, pRotation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRotation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRotation([NativeName(NativeNameType.Param, "pRotation")] [NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION*")] ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeRotation*, HResult>)(LpVtbl[28]))(ptr, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetSourceSize([NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, HResult>)(LpVtbl[29]))(ptr, width, height);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, pWidth, pHeight);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] uint* pHeight) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] uint* pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSourceSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSourceSize([NativeName(NativeNameType.Param, "pWidth")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pWidth, [NativeName(NativeNameType.Param, "pHeight")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pHeight) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(LpVtbl[30]))(ptr, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMaximumFrameLatency([NativeName(NativeNameType.Param, "MaxLatency")] [NativeName(NativeNameType.Type, "UINT")] uint maxLatency) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, HResult>)(LpVtbl[31]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMaxLatency) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(LpVtbl[32]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMaxLatency) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(LpVtbl[32]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameLatencyWaitableObject")]
		[return: NativeName(NativeNameType.Type, "HANDLE")]
		public readonly unsafe nint GetFrameLatencyWaitableObject() 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			nint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, nint>)(LpVtbl[33]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "const DXGI_MATRIX_3X2_F*")] DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(LpVtbl[34]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "const DXGI_MATRIX_3X2_F*")] ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(LpVtbl[34]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "DXGI_MATRIX_3X2_F*")] DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(LpVtbl[35]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMatrixTransform")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMatrixTransform([NativeName(NativeNameType.Param, "pMatrix")] [NativeName(NativeNameType.Type, "DXGI_MATRIX_3X2_F*")] ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(LpVtbl[35]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCurrentBackBufferIndex")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetCurrentBackBufferIndex() 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint>)(LpVtbl[36]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckColorSpaceSupport([NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pColorSpaceSupport")] [NativeName(NativeNameType.Type, "UINT*")] uint* pColorSpaceSupport) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiColorSpaceType, uint*, HResult>)(LpVtbl[37]))(ptr, colorSpace, pColorSpaceSupport);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckColorSpaceSupport([NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pColorSpaceSupport")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pColorSpaceSupport) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppColorSpaceSupport = &pColorSpaceSupport)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiColorSpaceType, uint*, HResult>)(LpVtbl[37]))(ptr, colorSpace, (uint*)ppColorSpaceSupport);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetColorSpace1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetColorSpace1([NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiColorSpaceType, HResult>)(LpVtbl[38]))(ptr, colorSpace);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppPresentQueue) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, ppPresentQueue);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppPresentQueue) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, ppPresentQueue);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, (IUnknown**)pppPresentQueue);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, (IUnknown**)ppPresentQueue.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, (IUnknown**)pppPresentQueue);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ResizeBuffers1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ResizeBuffers1([NativeName(NativeNameType.Param, "BufferCount")] [NativeName(NativeNameType.Type, "UINT")] uint bufferCount, [NativeName(NativeNameType.Param, "Width")] [NativeName(NativeNameType.Type, "UINT")] uint width, [NativeName(NativeNameType.Param, "Height")] [NativeName(NativeNameType.Type, "UINT")] uint height, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "SwapChainFlags")] [NativeName(NativeNameType.Type, "UINT")] uint swapChainFlags, [NativeName(NativeNameType.Param, "pCreationNodeMask")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pCreationNodeMask, [NativeName(NativeNameType.Param, "ppPresentQueue")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown**, HResult>)(LpVtbl[39]))(ptr, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, (IUnknown**)ppPresentQueue.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetHDRMetaData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetHDRMetaData([NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "DXGI_HDR_METADATA_TYPE")] DxgiHdrMetadataType type, [NativeName(NativeNameType.Param, "Size")] [NativeName(NativeNameType.Type, "UINT")] uint size, [NativeName(NativeNameType.Param, "pMetaData")] [NativeName(NativeNameType.Type, "void*")] void* pMetaData) 
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiHdrMetadataType, uint, void*, HResult>)(LpVtbl[40]))(ptr, type, size, pMetaData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetHDRMetaData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetHDRMetaData<T>([NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "DXGI_HDR_METADATA_TYPE")] DxgiHdrMetadataType type, [NativeName(NativeNameType.Param, "Size")] [NativeName(NativeNameType.Type, "UINT")] uint size, [NativeName(NativeNameType.Param, "pMetaData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain4* ptr = (IDXGISwapChain4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiHdrMetadataType, uint, void*, HResult>)(LpVtbl[40]))(ptr, type, size, (void*)pMetaData.GetAddressOf());
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISwapChain3 (IDXGISwapChain4 value)
		{
			return Unsafe.As<IDXGISwapChain4, IDXGISwapChain3>(ref value);
		}

		public unsafe static implicit operator IDXGISwapChain2 (IDXGISwapChain4 value)
		{
			return Unsafe.As<IDXGISwapChain4, IDXGISwapChain2>(ref value);
		}

		public unsafe static implicit operator IDXGISwapChain1 (IDXGISwapChain4 value)
		{
			return Unsafe.As<IDXGISwapChain4, IDXGISwapChain1>(ref value);
		}

		public unsafe static implicit operator IDXGISwapChain (IDXGISwapChain4 value)
		{
			return Unsafe.As<IDXGISwapChain4, IDXGISwapChain>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISwapChain4 value)
		{
			return Unsafe.As<IDXGISwapChain4, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISwapChain4 value)
		{
			return Unsafe.As<IDXGISwapChain4, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISwapChain4 value)
		{
			return Unsafe.As<IDXGISwapChain4, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("95b4f95f-d8da-4ca4-9ee6-3b76d5968a10")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDevice4")]
	public partial struct IDXGIDevice4 : IComObject, IComObject<IDXGIDevice4>, IComObject<IDXGIDevice3>, IComObject<IDXGIDevice2>, IComObject<IDXGIDevice1>, IComObject<IDXGIDevice>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("95b4f95f-d8da-4ca4-9ee6-3b76d5968a10");

		public unsafe IDXGIDevice4 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, pAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetAdapter([NativeName(NativeNameType.Param, "pAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] DxgiSharedResource* pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] DxgiSurfaceDesc* pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSurface([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SURFACE_DESC*")] ref DxgiSurfaceDesc pDesc, [NativeName(NativeNameType.Param, "NumSurfaces")] [NativeName(NativeNameType.Type, "UINT")] uint numSurfaces, [NativeName(NativeNameType.Param, "Usage")] [NativeName(NativeNameType.Type, "DXGI_USAGE")] uint usage, [NativeName(NativeNameType.Param, "pSharedResource")] [NativeName(NativeNameType.Type, "const DXGI_SHARED_RESOURCE*")] ref DxgiSharedResource pSharedResource, [NativeName(NativeNameType.Param, "ppSurface")] [NativeName(NativeNameType.Type, "IDXGISurface**")] out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] DxgiResidency* pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] IUnknown** ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ref IUnknown* ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryResourceResidency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryResourceResidency([NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IUnknown**")] ComPtr<IUnknown> ppResources, [NativeName(NativeNameType.Param, "pResidencyStatus")] [NativeName(NativeNameType.Type, "DXGI_RESIDENCY*")] ref DxgiResidency pResidencyStatus, [NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown**, DxgiResidency*, uint, HResult>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.GetAddressOf(), (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGPUThreadPriority([NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "INT")] int priority) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, int, HResult>)(LpVtbl[10]))(ptr, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] int* pPriority) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, int*, HResult>)(LpVtbl[11]))(ptr, pPriority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGPUThreadPriority")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGPUThreadPriority([NativeName(NativeNameType.Param, "pPriority")] [NativeName(NativeNameType.Type, "INT*")] ref int pPriority) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, int*, HResult>)(LpVtbl[11]))(ptr, (int*)ppPriority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMaximumFrameLatency([NativeName(NativeNameType.Param, "MaxLatency")] [NativeName(NativeNameType.Type, "UINT")] uint maxLatency) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, HResult>)(LpVtbl[12]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] uint* pMaxLatency) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint*, HResult>)(LpVtbl[13]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMaximumFrameLatency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMaximumFrameLatency([NativeName(NativeNameType.Param, "pMaxLatency")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pMaxLatency) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint*, HResult>)(LpVtbl[13]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, ppResources, priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)pppResources, priority);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiOfferResourcePriority, HResult>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), priority);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, ppResources, pDiscarded);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, pDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] Bool32* pDiscarded) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), pDiscarded);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (Bool32* ppDiscarded = &pDiscarded)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, (Bool32*)ppDiscarded);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pDiscarded")] [NativeName(NativeNameType.Type, "BOOL*")] ref Bool32 pDiscarded) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, Bool32*, HResult>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), (Bool32*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnqueueSetEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnqueueSetEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, nint, HResult>)(LpVtbl[16]))(ptr, hEvent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Trim")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void Trim() 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIDevice4*, void>)(LpVtbl[17]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiOfferResourcePriority, uint, HResult>)(LpVtbl[18]))(ptr, numResources, ppResources, priority, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiOfferResourcePriority, uint, HResult>)(LpVtbl[18]))(ptr, numResources, (IDXGIResource**)pppResources, priority, flags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "OfferResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult OfferResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "Priority")] [NativeName(NativeNameType.Type, "DXGI_OFFER_RESOURCE_PRIORITY")] DxgiOfferResourcePriority priority, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiOfferResourcePriority, uint, HResult>)(LpVtbl[18]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), priority, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pResults")] [NativeName(NativeNameType.Type, "DXGI_RECLAIM_RESOURCE_RESULTS*")] DxgiReclaimResourceResults* pResults) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiReclaimResourceResults*, HResult>)(LpVtbl[19]))(ptr, numResources, ppResources, pResults);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pResults")] [NativeName(NativeNameType.Type, "DXGI_RECLAIM_RESOURCE_RESULTS*")] DxgiReclaimResourceResults* pResults) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiReclaimResourceResults*, HResult>)(LpVtbl[19]))(ptr, numResources, (IDXGIResource**)pppResources, pResults);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pResults")] [NativeName(NativeNameType.Type, "DXGI_RECLAIM_RESOURCE_RESULTS*")] DxgiReclaimResourceResults* pResults) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiReclaimResourceResults*, HResult>)(LpVtbl[19]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), pResults);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] IDXGIResource** ppResources, [NativeName(NativeNameType.Param, "pResults")] [NativeName(NativeNameType.Type, "DXGI_RECLAIM_RESOURCE_RESULTS*")] ref DxgiReclaimResourceResults pResults) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiReclaimResourceResults* ppResults = &pResults)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiReclaimResourceResults*, HResult>)(LpVtbl[19]))(ptr, numResources, ppResources, (DxgiReclaimResourceResults*)ppResults);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ref IDXGIResource* ppResources, [NativeName(NativeNameType.Param, "pResults")] [NativeName(NativeNameType.Type, "DXGI_RECLAIM_RESOURCE_RESULTS*")] ref DxgiReclaimResourceResults pResults) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (DxgiReclaimResourceResults* ppResults = &pResults)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiReclaimResourceResults*, HResult>)(LpVtbl[19]))(ptr, numResources, (IDXGIResource**)pppResources, (DxgiReclaimResourceResults*)ppResults);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReclaimResources1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReclaimResources1([NativeName(NativeNameType.Param, "NumResources")] [NativeName(NativeNameType.Type, "UINT")] uint numResources, [NativeName(NativeNameType.Param, "ppResources")] [NativeName(NativeNameType.Type, "const IDXGIResource**")] ComPtr<IDXGIResource> ppResources, [NativeName(NativeNameType.Param, "pResults")] [NativeName(NativeNameType.Type, "DXGI_RECLAIM_RESOURCE_RESULTS*")] ref DxgiReclaimResourceResults pResults) 
		{
			IDXGIDevice4* ptr = (IDXGIDevice4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiReclaimResourceResults* ppResults = &pResults)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource**, DxgiReclaimResourceResults*, HResult>)(LpVtbl[19]))(ptr, numResources, (IDXGIResource**)ppResources.GetAddressOf(), (DxgiReclaimResourceResults*)ppResults);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDevice3 (IDXGIDevice4 value)
		{
			return Unsafe.As<IDXGIDevice4, IDXGIDevice3>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice2 (IDXGIDevice4 value)
		{
			return Unsafe.As<IDXGIDevice4, IDXGIDevice2>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice1 (IDXGIDevice4 value)
		{
			return Unsafe.As<IDXGIDevice4, IDXGIDevice1>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice (IDXGIDevice4 value)
		{
			return Unsafe.As<IDXGIDevice4, IDXGIDevice>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDevice4 value)
		{
			return Unsafe.As<IDXGIDevice4, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDevice4 value)
		{
			return Unsafe.As<IDXGIDevice4, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("7632e1f5-ee65-4dca-87fd-84cd75f8838d")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory5")]
	public partial struct IDXGIFactory5 : IComObject, IComObject<IDXGIFactory5>, IComObject<IDXGIFactory4>, IComObject<IDXGIFactory3>, IComObject<IDXGIFactory2>, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("7632e1f5-ee65-4dca-87fd-84cd75f8838d");

		public unsafe IDXGIFactory5 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsCurrent")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsCurrent() 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Bool32>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsWindowedStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsWindowedStereoEnabled() 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Bool32>)(LpVtbl[14]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] Luid* pLuid) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, pLuid);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] ref Luid pLuid) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterStereoStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterStereoStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, void>)(LpVtbl[20]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterOcclusionStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterOcclusionStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, void>)(LpVtbl[23]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCreationFlags")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetCreationFlags() 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint>)(LpVtbl[25]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckFeatureSupport([NativeName(NativeNameType.Param, "Feature")] [NativeName(NativeNameType.Type, "DXGI_FEATURE")] DxgiFeature feature, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] void* pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) 
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, DxgiFeature, void*, uint, HResult>)(LpVtbl[28]))(ptr, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckFeatureSupport<T>([NativeName(NativeNameType.Param, "Feature")] [NativeName(NativeNameType.Type, "DXGI_FEATURE")] DxgiFeature feature, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory5* ptr = (IDXGIFactory5*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, DxgiFeature, void*, uint, HResult>)(LpVtbl[28]))(ptr, feature, (void*)pFeatureSupportData.GetAddressOf(), featureSupportDataSize);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory4 (IDXGIFactory5 value)
		{
			return Unsafe.As<IDXGIFactory5, IDXGIFactory4>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory3 (IDXGIFactory5 value)
		{
			return Unsafe.As<IDXGIFactory5, IDXGIFactory3>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory2 (IDXGIFactory5 value)
		{
			return Unsafe.As<IDXGIFactory5, IDXGIFactory2>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory1 (IDXGIFactory5 value)
		{
			return Unsafe.As<IDXGIFactory5, IDXGIFactory1>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory5 value)
		{
			return Unsafe.As<IDXGIFactory5, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory5 value)
		{
			return Unsafe.As<IDXGIFactory5, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory5 value)
		{
			return Unsafe.As<IDXGIFactory5, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_HDR_METADATA_HDR10")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiHdrMetadataHdr10
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RedPrimary")]
		[NativeName(NativeNameType.Type, "UINT16[2]")]
		public ushort RedPrimary_0;
		public ushort RedPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GreenPrimary")]
		[NativeName(NativeNameType.Type, "UINT16[2]")]
		public ushort GreenPrimary_0;
		public ushort GreenPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BluePrimary")]
		[NativeName(NativeNameType.Type, "UINT16[2]")]
		public ushort BluePrimary_0;
		public ushort BluePrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WhitePoint")]
		[NativeName(NativeNameType.Type, "UINT16[2]")]
		public ushort WhitePoint_0;
		public ushort WhitePoint_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxMasteringLuminance")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint MaxMasteringLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MinMasteringLuminance")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint MinMasteringLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxContentLightLevel")]
		[NativeName(NativeNameType.Type, "UINT16")]
		public ushort MaxContentLightLevel;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxFrameAverageLightLevel")]
		[NativeName(NativeNameType.Type, "UINT16")]
		public ushort MaxFrameAverageLightLevel;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiHdrMetadataHdr10(ushort* redPrimary = default, ushort* greenPrimary = default, ushort* bluePrimary = default, ushort* whitePoint = default, uint maxMasteringLuminance = default, uint minMasteringLuminance = default, ushort maxContentLightLevel = default, ushort maxFrameAverageLightLevel = default)
		{
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MaxMasteringLuminance = maxMasteringLuminance;
			MinMasteringLuminance = minMasteringLuminance;
			MaxContentLightLevel = maxContentLightLevel;
			MaxFrameAverageLightLevel = maxFrameAverageLightLevel;
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiHdrMetadataHdr10(Span<ushort> redPrimary = default, Span<ushort> greenPrimary = default, Span<ushort> bluePrimary = default, Span<ushort> whitePoint = default, uint maxMasteringLuminance = default, uint minMasteringLuminance = default, ushort maxContentLightLevel = default, ushort maxFrameAverageLightLevel = default)
		{
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MaxMasteringLuminance = maxMasteringLuminance;
			MinMasteringLuminance = minMasteringLuminance;
			MaxContentLightLevel = maxContentLightLevel;
			MaxFrameAverageLightLevel = maxFrameAverageLightLevel;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_HDR_METADATA_HDR10PLUS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiHdrMetadataHdr10Plus
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Data")]
		[NativeName(NativeNameType.Type, "BYTE[72]")]
		public byte Data_0;
		public byte Data_1;
		public byte Data_2;
		public byte Data_3;
		public byte Data_4;
		public byte Data_5;
		public byte Data_6;
		public byte Data_7;
		public byte Data_8;
		public byte Data_9;
		public byte Data_10;
		public byte Data_11;
		public byte Data_12;
		public byte Data_13;
		public byte Data_14;
		public byte Data_15;
		public byte Data_16;
		public byte Data_17;
		public byte Data_18;
		public byte Data_19;
		public byte Data_20;
		public byte Data_21;
		public byte Data_22;
		public byte Data_23;
		public byte Data_24;
		public byte Data_25;
		public byte Data_26;
		public byte Data_27;
		public byte Data_28;
		public byte Data_29;
		public byte Data_30;
		public byte Data_31;
		public byte Data_32;
		public byte Data_33;
		public byte Data_34;
		public byte Data_35;
		public byte Data_36;
		public byte Data_37;
		public byte Data_38;
		public byte Data_39;
		public byte Data_40;
		public byte Data_41;
		public byte Data_42;
		public byte Data_43;
		public byte Data_44;
		public byte Data_45;
		public byte Data_46;
		public byte Data_47;
		public byte Data_48;
		public byte Data_49;
		public byte Data_50;
		public byte Data_51;
		public byte Data_52;
		public byte Data_53;
		public byte Data_54;
		public byte Data_55;
		public byte Data_56;
		public byte Data_57;
		public byte Data_58;
		public byte Data_59;
		public byte Data_60;
		public byte Data_61;
		public byte Data_62;
		public byte Data_63;
		public byte Data_64;
		public byte Data_65;
		public byte Data_66;
		public byte Data_67;
		public byte Data_68;
		public byte Data_69;
		public byte Data_70;
		public byte Data_71;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiHdrMetadataHdr10Plus(byte* data = default)
		{
			if (data != default)
			{
				Data_0 = data[0];
				Data_1 = data[1];
				Data_2 = data[2];
				Data_3 = data[3];
				Data_4 = data[4];
				Data_5 = data[5];
				Data_6 = data[6];
				Data_7 = data[7];
				Data_8 = data[8];
				Data_9 = data[9];
				Data_10 = data[10];
				Data_11 = data[11];
				Data_12 = data[12];
				Data_13 = data[13];
				Data_14 = data[14];
				Data_15 = data[15];
				Data_16 = data[16];
				Data_17 = data[17];
				Data_18 = data[18];
				Data_19 = data[19];
				Data_20 = data[20];
				Data_21 = data[21];
				Data_22 = data[22];
				Data_23 = data[23];
				Data_24 = data[24];
				Data_25 = data[25];
				Data_26 = data[26];
				Data_27 = data[27];
				Data_28 = data[28];
				Data_29 = data[29];
				Data_30 = data[30];
				Data_31 = data[31];
				Data_32 = data[32];
				Data_33 = data[33];
				Data_34 = data[34];
				Data_35 = data[35];
				Data_36 = data[36];
				Data_37 = data[37];
				Data_38 = data[38];
				Data_39 = data[39];
				Data_40 = data[40];
				Data_41 = data[41];
				Data_42 = data[42];
				Data_43 = data[43];
				Data_44 = data[44];
				Data_45 = data[45];
				Data_46 = data[46];
				Data_47 = data[47];
				Data_48 = data[48];
				Data_49 = data[49];
				Data_50 = data[50];
				Data_51 = data[51];
				Data_52 = data[52];
				Data_53 = data[53];
				Data_54 = data[54];
				Data_55 = data[55];
				Data_56 = data[56];
				Data_57 = data[57];
				Data_58 = data[58];
				Data_59 = data[59];
				Data_60 = data[60];
				Data_61 = data[61];
				Data_62 = data[62];
				Data_63 = data[63];
				Data_64 = data[64];
				Data_65 = data[65];
				Data_66 = data[66];
				Data_67 = data[67];
				Data_68 = data[68];
				Data_69 = data[69];
				Data_70 = data[70];
				Data_71 = data[71];
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiHdrMetadataHdr10Plus(Span<byte> data = default)
		{
			if (data != default)
			{
				Data_0 = data[0];
				Data_1 = data[1];
				Data_2 = data[2];
				Data_3 = data[3];
				Data_4 = data[4];
				Data_5 = data[5];
				Data_6 = data[6];
				Data_7 = data[7];
				Data_8 = data[8];
				Data_9 = data[9];
				Data_10 = data[10];
				Data_11 = data[11];
				Data_12 = data[12];
				Data_13 = data[13];
				Data_14 = data[14];
				Data_15 = data[15];
				Data_16 = data[16];
				Data_17 = data[17];
				Data_18 = data[18];
				Data_19 = data[19];
				Data_20 = data[20];
				Data_21 = data[21];
				Data_22 = data[22];
				Data_23 = data[23];
				Data_24 = data[24];
				Data_25 = data[25];
				Data_26 = data[26];
				Data_27 = data[27];
				Data_28 = data[28];
				Data_29 = data[29];
				Data_30 = data[30];
				Data_31 = data[31];
				Data_32 = data[32];
				Data_33 = data[33];
				Data_34 = data[34];
				Data_35 = data[35];
				Data_36 = data[36];
				Data_37 = data[37];
				Data_38 = data[38];
				Data_39 = data[39];
				Data_40 = data[40];
				Data_41 = data[41];
				Data_42 = data[42];
				Data_43 = data[43];
				Data_44 = data[44];
				Data_45 = data[45];
				Data_46 = data[46];
				Data_47 = data[47];
				Data_48 = data[48];
				Data_49 = data[49];
				Data_50 = data[50];
				Data_51 = data[51];
				Data_52 = data[52];
				Data_53 = data[53];
				Data_54 = data[54];
				Data_55 = data[55];
				Data_56 = data[56];
				Data_57 = data[57];
				Data_58 = data[58];
				Data_59 = data[59];
				Data_60 = data[60];
				Data_61 = data[61];
				Data_62 = data[62];
				Data_63 = data[63];
				Data_64 = data[64];
				Data_65 = data[65];
				Data_66 = data[66];
				Data_67 = data[67];
				Data_68 = data[68];
				Data_69 = data[69];
				Data_70 = data[70];
				Data_71 = data[71];
			}
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("3c8d99d1-4fbf-4181-a82c-af66bf7bd24e")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIAdapter4")]
	public partial struct IDXGIAdapter4 : IComObject, IComObject<IDXGIAdapter4>, IComObject<IDXGIAdapter3>, IComObject<IDXGIAdapter2>, IComObject<IDXGIAdapter1>, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("3c8d99d1-4fbf-4181-a82c-af66bf7bd24e");

		public unsafe IDXGIAdapter4 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumOutputs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumOutputs([NativeName(NativeNameType.Param, "Output")] [NativeName(NativeNameType.Type, "UINT")] uint output, [NativeName(NativeNameType.Param, "ppOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput**")] out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, HResult>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC*")] ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc*, HResult>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] long* pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckInterfaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckInterfaceSupport([NativeName(NativeNameType.Param, "InterfaceName")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid interfaceName, [NativeName(NativeNameType.Param, "pUMDVersion")] [NativeName(NativeNameType.Type, "LARGE_INTEGER*")] ref long pUMDVersion) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC1*")] ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc1*, HResult>)(LpVtbl[10]))(ptr, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc2([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC2*")] DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc2*, HResult>)(LpVtbl[11]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc2([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC2*")] ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc2*, HResult>)(LpVtbl[11]))(ptr, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterHardwareContentProtectionTeardownStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterHardwareContentProtectionTeardownStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(LpVtbl[12]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterHardwareContentProtectionTeardownStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterHardwareContentProtectionTeardownStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(LpVtbl[12]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterHardwareContentProtectionTeardownStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterHardwareContentProtectionTeardownStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, void>)(LpVtbl[13]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryVideoMemoryInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryVideoMemoryInfo([NativeName(NativeNameType.Param, "NodeIndex")] [NativeName(NativeNameType.Type, "UINT")] uint nodeIndex, [NativeName(NativeNameType.Param, "MemorySegmentGroup")] [NativeName(NativeNameType.Type, "DXGI_MEMORY_SEGMENT_GROUP")] DxgiMemorySegmentGroup memorySegmentGroup, [NativeName(NativeNameType.Param, "pVideoMemoryInfo")] [NativeName(NativeNameType.Type, "DXGI_QUERY_VIDEO_MEMORY_INFO*")] DxgiQueryVideoMemoryInfo* pVideoMemoryInfo) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(LpVtbl[14]))(ptr, nodeIndex, memorySegmentGroup, pVideoMemoryInfo);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryVideoMemoryInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryVideoMemoryInfo([NativeName(NativeNameType.Param, "NodeIndex")] [NativeName(NativeNameType.Type, "UINT")] uint nodeIndex, [NativeName(NativeNameType.Param, "MemorySegmentGroup")] [NativeName(NativeNameType.Type, "DXGI_MEMORY_SEGMENT_GROUP")] DxgiMemorySegmentGroup memorySegmentGroup, [NativeName(NativeNameType.Param, "pVideoMemoryInfo")] [NativeName(NativeNameType.Type, "DXGI_QUERY_VIDEO_MEMORY_INFO*")] ref DxgiQueryVideoMemoryInfo pVideoMemoryInfo) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiQueryVideoMemoryInfo* ppVideoMemoryInfo = &pVideoMemoryInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(LpVtbl[14]))(ptr, nodeIndex, memorySegmentGroup, (DxgiQueryVideoMemoryInfo*)ppVideoMemoryInfo);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetVideoMemoryReservation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetVideoMemoryReservation([NativeName(NativeNameType.Param, "NodeIndex")] [NativeName(NativeNameType.Type, "UINT")] uint nodeIndex, [NativeName(NativeNameType.Param, "MemorySegmentGroup")] [NativeName(NativeNameType.Type, "DXGI_MEMORY_SEGMENT_GROUP")] DxgiMemorySegmentGroup memorySegmentGroup, [NativeName(NativeNameType.Param, "Reservation")] [NativeName(NativeNameType.Type, "UINT64")] ulong reservation) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, ulong, HResult>)(LpVtbl[15]))(ptr, nodeIndex, memorySegmentGroup, reservation);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterVideoMemoryBudgetChangeNotificationEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterVideoMemoryBudgetChangeNotificationEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(LpVtbl[16]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterVideoMemoryBudgetChangeNotificationEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterVideoMemoryBudgetChangeNotificationEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(LpVtbl[16]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterVideoMemoryBudgetChangeNotification")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterVideoMemoryBudgetChangeNotification([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, void>)(LpVtbl[17]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc3")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc3([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC3*")] DxgiAdapterDesc3* pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc3*, HResult>)(LpVtbl[18]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc3")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc3([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_ADAPTER_DESC3*")] ref DxgiAdapterDesc3 pDesc) 
		{
			IDXGIAdapter4* ptr = (IDXGIAdapter4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc3* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc3*, HResult>)(LpVtbl[18]))(ptr, (DxgiAdapterDesc3*)ppDesc);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIAdapter3 (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter3>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter2 (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter2>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter1 (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter1>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIAdapter>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter4 value)
		{
			return Unsafe.As<IDXGIAdapter4, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_ADAPTER_DESC3")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiAdapterDesc3
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Description")]
		[NativeName(NativeNameType.Type, "WCHAR[128]")]
		public char Description_0;
		public char Description_1;
		public char Description_2;
		public char Description_3;
		public char Description_4;
		public char Description_5;
		public char Description_6;
		public char Description_7;
		public char Description_8;
		public char Description_9;
		public char Description_10;
		public char Description_11;
		public char Description_12;
		public char Description_13;
		public char Description_14;
		public char Description_15;
		public char Description_16;
		public char Description_17;
		public char Description_18;
		public char Description_19;
		public char Description_20;
		public char Description_21;
		public char Description_22;
		public char Description_23;
		public char Description_24;
		public char Description_25;
		public char Description_26;
		public char Description_27;
		public char Description_28;
		public char Description_29;
		public char Description_30;
		public char Description_31;
		public char Description_32;
		public char Description_33;
		public char Description_34;
		public char Description_35;
		public char Description_36;
		public char Description_37;
		public char Description_38;
		public char Description_39;
		public char Description_40;
		public char Description_41;
		public char Description_42;
		public char Description_43;
		public char Description_44;
		public char Description_45;
		public char Description_46;
		public char Description_47;
		public char Description_48;
		public char Description_49;
		public char Description_50;
		public char Description_51;
		public char Description_52;
		public char Description_53;
		public char Description_54;
		public char Description_55;
		public char Description_56;
		public char Description_57;
		public char Description_58;
		public char Description_59;
		public char Description_60;
		public char Description_61;
		public char Description_62;
		public char Description_63;
		public char Description_64;
		public char Description_65;
		public char Description_66;
		public char Description_67;
		public char Description_68;
		public char Description_69;
		public char Description_70;
		public char Description_71;
		public char Description_72;
		public char Description_73;
		public char Description_74;
		public char Description_75;
		public char Description_76;
		public char Description_77;
		public char Description_78;
		public char Description_79;
		public char Description_80;
		public char Description_81;
		public char Description_82;
		public char Description_83;
		public char Description_84;
		public char Description_85;
		public char Description_86;
		public char Description_87;
		public char Description_88;
		public char Description_89;
		public char Description_90;
		public char Description_91;
		public char Description_92;
		public char Description_93;
		public char Description_94;
		public char Description_95;
		public char Description_96;
		public char Description_97;
		public char Description_98;
		public char Description_99;
		public char Description_100;
		public char Description_101;
		public char Description_102;
		public char Description_103;
		public char Description_104;
		public char Description_105;
		public char Description_106;
		public char Description_107;
		public char Description_108;
		public char Description_109;
		public char Description_110;
		public char Description_111;
		public char Description_112;
		public char Description_113;
		public char Description_114;
		public char Description_115;
		public char Description_116;
		public char Description_117;
		public char Description_118;
		public char Description_119;
		public char Description_120;
		public char Description_121;
		public char Description_122;
		public char Description_123;
		public char Description_124;
		public char Description_125;
		public char Description_126;
		public char Description_127;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "VendorId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint VendorId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DeviceId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint DeviceId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SubSysId")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SubSysId;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Revision")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Revision;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedVideoMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedVideoMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DedicatedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DedicatedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SharedSystemMemory")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint SharedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AdapterLuid")]
		[NativeName(NativeNameType.Type, "LUID")]
		public Luid AdapterLuid;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "DXGI_ADAPTER_FLAG3")]
		public DxgiAdapterFlag3 Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GraphicsPreemptionGranularity")]
		[NativeName(NativeNameType.Type, "DXGI_GRAPHICS_PREEMPTION_GRANULARITY")]
		public DxgiGraphicsPreemptionGranularity GraphicsPreemptionGranularity;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ComputePreemptionGranularity")]
		[NativeName(NativeNameType.Type, "DXGI_COMPUTE_PREEMPTION_GRANULARITY")]
		public DxgiComputePreemptionGranularity ComputePreemptionGranularity;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc3(char* description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, DxgiAdapterFlag3 flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiAdapterDesc3(Span<char> description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, DxgiAdapterFlag3 flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("068346e8-aaec-4b84-add7-137f513f77a1")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIOutput6")]
	public partial struct IDXGIOutput6 : IComObject, IComObject<IDXGIOutput6>, IComObject<IDXGIOutput5>, IComObject<IDXGIOutput4>, IComObject<IDXGIOutput3>, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("068346e8-aaec-4b84-add7-137f513f77a1");

		public unsafe IDXGIOutput6 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC*")] ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc*, HResult>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] DxgiModeDesc* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] DxgiModeDesc* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC*")] ref DxgiModeDesc pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC*")] ref DxgiModeDesc pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "WaitForVBlank")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "TakeOwnership")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult TakeOwnership([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Exclusive")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.GetAddressOf(), exclusive);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReleaseOwnership")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput6*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControlCapabilities")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControlCapabilities([NativeName(NativeNameType.Param, "pGammaCaps")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL_CAPABILITIES*")] ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "const DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] DxgiGammaControl* pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetGammaControl")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetGammaControl([NativeName(NativeNameType.Param, "pArray")] [NativeName(NativeNameType.Type, "DXGI_GAMMA_CONTROL*")] ref DxgiGammaControl pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetDisplaySurface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetDisplaySurface([NativeName(NativeNameType.Param, "pScanoutSurface")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] IDXGISurface* pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ref IDXGISurface pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGISurface*")] ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetFrameStatistics")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetFrameStatistics([NativeName(NativeNameType.Param, "pStats")] [NativeName(NativeNameType.Type, "DXGI_FRAME_STATISTICS*")] ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] uint* pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplayModeList1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplayModeList1([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pNumModes")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pNumModes, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] DxgiModeDesc1* pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] DxgiModeDesc1* pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "FindClosestMatchingMode1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FindClosestMatchingMode1([NativeName(NativeNameType.Param, "pModeToMatch")] [NativeName(NativeNameType.Type, "const DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pModeToMatch, [NativeName(NativeNameType.Param, "pClosestMatch")] [NativeName(NativeNameType.Type, "DXGI_MODE_DESC1*")] ref DxgiModeDesc1 pClosestMatch, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] IDXGIResource* pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ref IDXGIResource pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDisplaySurfaceData1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDisplaySurfaceData1([NativeName(NativeNameType.Param, "pDestination")] [NativeName(NativeNameType.Type, "IDXGIResource*")] ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SupportsOverlays")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 SupportsOverlays() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlaySupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlaySupport([NativeName(NativeNameType.Param, "EnumFormat")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat enumFormat, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.GetAddressOf(), (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.GetAddressOf(), pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckOverlayColorSpaceSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckOverlayColorSpaceSupport([NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "ColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType colorSpace, [NativeName(NativeNameType.Param, "pConcernedDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pConcernedDevice, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.GetAddressOf(), (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] DxgiFormat* pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DuplicateOutput1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DuplicateOutput1([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "SupportedFormatsCount")] [NativeName(NativeNameType.Type, "UINT")] uint supportedFormatsCount, [NativeName(NativeNameType.Param, "pSupportedFormats")] [NativeName(NativeNameType.Type, "const DXGI_FORMAT*")] ref DxgiFormat pSupportedFormats, [NativeName(NativeNameType.Param, "ppOutputDuplication")] [NativeName(NativeNameType.Type, "IDXGIOutputDuplication**")] out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.GetAddressOf(), flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC1*")] DxgiOutputDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc1*, HResult>)(LpVtbl[27]))(ptr, pDesc);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetDesc1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetDesc1([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_OUTPUT_DESC1*")] ref DxgiOutputDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc1*, HResult>)(LpVtbl[27]))(ptr, (DxgiOutputDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckHardwareCompositionSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckHardwareCompositionSupport([NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, HResult>)(LpVtbl[28]))(ptr, pFlags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckHardwareCompositionSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckHardwareCompositionSupport([NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, HResult>)(LpVtbl[28]))(ptr, (uint*)ppFlags);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput5 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput5>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput4 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput4>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput3 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput3>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput2 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput2>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// interface __MIDL_itf_dxgi1_6_0000_0001 <br/>
	/// [local] <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_OUTPUT_DESC1")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutputDesc1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DeviceName")]
		[NativeName(NativeNameType.Type, "WCHAR[32]")]
		public char DeviceName_0;
		public char DeviceName_1;
		public char DeviceName_2;
		public char DeviceName_3;
		public char DeviceName_4;
		public char DeviceName_5;
		public char DeviceName_6;
		public char DeviceName_7;
		public char DeviceName_8;
		public char DeviceName_9;
		public char DeviceName_10;
		public char DeviceName_11;
		public char DeviceName_12;
		public char DeviceName_13;
		public char DeviceName_14;
		public char DeviceName_15;
		public char DeviceName_16;
		public char DeviceName_17;
		public char DeviceName_18;
		public char DeviceName_19;
		public char DeviceName_20;
		public char DeviceName_21;
		public char DeviceName_22;
		public char DeviceName_23;
		public char DeviceName_24;
		public char DeviceName_25;
		public char DeviceName_26;
		public char DeviceName_27;
		public char DeviceName_28;
		public char DeviceName_29;
		public char DeviceName_30;
		public char DeviceName_31;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DesktopCoordinates")]
		[NativeName(NativeNameType.Type, "RECT")]
		public Rect32 DesktopCoordinates;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AttachedToDesktop")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public Bool32 AttachedToDesktop;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Rotation")]
		[NativeName(NativeNameType.Type, "DXGI_MODE_ROTATION")]
		public DxgiModeRotation Rotation;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Monitor")]
		[NativeName(NativeNameType.Type, "HMONITOR")]
		public nint Monitor;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BitsPerColor")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint BitsPerColor;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColorSpace")]
		[NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")]
		public DxgiColorSpaceType ColorSpace;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RedPrimary")]
		[NativeName(NativeNameType.Type, "FLOAT[2]")]
		public float RedPrimary_0;
		public float RedPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GreenPrimary")]
		[NativeName(NativeNameType.Type, "FLOAT[2]")]
		public float GreenPrimary_0;
		public float GreenPrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BluePrimary")]
		[NativeName(NativeNameType.Type, "FLOAT[2]")]
		public float BluePrimary_0;
		public float BluePrimary_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "WhitePoint")]
		[NativeName(NativeNameType.Type, "FLOAT[2]")]
		public float WhitePoint_0;
		public float WhitePoint_1;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MinLuminance")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float MinLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxLuminance")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float MaxLuminance;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxFullFrameLuminance")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float MaxFullFrameLuminance;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutputDesc1(char* deviceName = default, Rect32 desktopCoordinates = default, Bool32 attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default, uint bitsPerColor = default, DxgiColorSpaceType colorSpace = default, float* redPrimary = default, float* greenPrimary = default, float* bluePrimary = default, float* whitePoint = default, float minLuminance = default, float maxLuminance = default, float maxFullFrameLuminance = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
			BitsPerColor = bitsPerColor;
			ColorSpace = colorSpace;
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MinLuminance = minLuminance;
			MaxLuminance = maxLuminance;
			MaxFullFrameLuminance = maxFullFrameLuminance;
		}

		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiOutputDesc1(Span<char> deviceName = default, Rect32 desktopCoordinates = default, Bool32 attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default, uint bitsPerColor = default, DxgiColorSpaceType colorSpace = default, Span<float> redPrimary = default, Span<float> greenPrimary = default, Span<float> bluePrimary = default, Span<float> whitePoint = default, float minLuminance = default, float maxLuminance = default, float maxFullFrameLuminance = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
			BitsPerColor = bitsPerColor;
			ColorSpace = colorSpace;
			if (redPrimary != default)
			{
				RedPrimary_0 = redPrimary[0];
				RedPrimary_1 = redPrimary[1];
			}
			if (greenPrimary != default)
			{
				GreenPrimary_0 = greenPrimary[0];
				GreenPrimary_1 = greenPrimary[1];
			}
			if (bluePrimary != default)
			{
				BluePrimary_0 = bluePrimary[0];
				BluePrimary_1 = bluePrimary[1];
			}
			if (whitePoint != default)
			{
				WhitePoint_0 = whitePoint[0];
				WhitePoint_1 = whitePoint[1];
			}
			MinLuminance = minLuminance;
			MaxLuminance = maxLuminance;
			MaxFullFrameLuminance = maxFullFrameLuminance;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
		/// <summary>
		/// To be documented.
		/// </summary>
	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("c1b6694f-ff09-44a9-b03c-77900a0a1d17")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory6")]
	public partial struct IDXGIFactory6 : IComObject, IComObject<IDXGIFactory6>, IComObject<IDXGIFactory5>, IComObject<IDXGIFactory4>, IComObject<IDXGIFactory3>, IComObject<IDXGIFactory2>, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("c1b6694f-ff09-44a9-b03c-77900a0a1d17");

		public unsafe IDXGIFactory6 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsCurrent")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsCurrent() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Bool32>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsWindowedStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsWindowedStereoEnabled() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Bool32>)(LpVtbl[14]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] Luid* pLuid) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, pLuid);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] ref Luid pLuid) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterStereoStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterStereoStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, void>)(LpVtbl[20]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterOcclusionStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterOcclusionStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, void>)(LpVtbl[23]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCreationFlags")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetCreationFlags() 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint>)(LpVtbl[25]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckFeatureSupport([NativeName(NativeNameType.Param, "Feature")] [NativeName(NativeNameType.Type, "DXGI_FEATURE")] DxgiFeature feature, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] void* pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, DxgiFeature, void*, uint, HResult>)(LpVtbl[28]))(ptr, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckFeatureSupport<T>([NativeName(NativeNameType.Param, "Feature")] [NativeName(NativeNameType.Type, "DXGI_FEATURE")] DxgiFeature feature, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, DxgiFeature, void*, uint, HResult>)(LpVtbl[28]))(ptr, feature, (void*)pFeatureSupportData.GetAddressOf(), featureSupportDataSize);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference<T>([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference<T>([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory6* ptr = (IDXGIFactory6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory5 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory5>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory4 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory4>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory3 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory3>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory2 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory2>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory1 (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory1>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory6 value)
		{
			return Unsafe.As<IDXGIFactory6, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("a4966eed-76db-44da-84c1-ee9a7afb20a8")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIFactory7")]
	public partial struct IDXGIFactory7 : IComObject, IComObject<IDXGIFactory7>, IComObject<IDXGIFactory6>, IComObject<IDXGIFactory5>, IComObject<IDXGIFactory4>, IComObject<IDXGIFactory3>, IComObject<IDXGIFactory2>, IComObject<IDXGIFactory1>, IComObject<IDXGIFactory>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("a4966eed-76db-44da-84c1-ee9a7afb20a8");

		public unsafe IDXGIFactory7 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pUnknown) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pUnknown) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetPrivateDataInterface([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pUnknown")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetPrivateData<T>([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid name, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] void** ppParent) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetParent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetParent<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppParent")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter**, HResult>)(LpVtbl[7]))(ptr, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "MakeWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult MakeWindowAssociation([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, HResult>)(LpVtbl[8]))(ptr, windowHandle, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] nint* pWindowHandle) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint*, HResult>)(LpVtbl[9]))(ptr, pWindowHandle);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetWindowAssociation")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetWindowAssociation([NativeName(NativeNameType.Param, "pWindowHandle")] [NativeName(NativeNameType.Type, "HWND*")] ref nint pWindowHandle) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint*, HResult>)(LpVtbl[9]))(ptr, (nint*)ppWindowHandle);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] DxgiSwapChainDesc* pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChain([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "DXGI_SWAP_CHAIN_DESC*")] ref DxgiSwapChainDesc pDesc, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain**")] out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(LpVtbl[10]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSoftwareAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSoftwareAdapter([NativeName(NativeNameType.Param, "Module")] [NativeName(NativeNameType.Type, "HMODULE")] nint module, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter**")] out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, IDXGIAdapter**, HResult>)(LpVtbl[11]))(ptr, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, ppAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapters1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapters1([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "ppAdapter")] [NativeName(NativeNameType.Type, "IDXGIAdapter1**")] out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter1**, HResult>)(LpVtbl[12]))(ptr, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsCurrent")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsCurrent() 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Bool32>)(LpVtbl[13]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsWindowedStereoEnabled")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsWindowedStereoEnabled() 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Bool32>)(LpVtbl[14]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] DxgiSwapChainFullscreenDesc* pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForHwnd")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForHwnd([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "hWnd")] [NativeName(NativeNameType.Type, "HWND")] nint hWnd, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pFullscreenDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC*")] ref DxgiSwapChainFullscreenDesc pFullscreenDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[15]))(ptr, (IUnknown*)pDevice.GetAddressOf(), hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, pDevice, (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForCoreWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForCoreWindow([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pWindow")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pWindow, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[16]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (IUnknown*)pWindow.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] Luid* pLuid) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, pLuid);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetSharedResourceAdapterLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetSharedResourceAdapterLuid([NativeName(NativeNameType.Param, "hResource")] [NativeName(NativeNameType.Type, "HANDLE")] nint hResource, [NativeName(NativeNameType.Param, "pLuid")] [NativeName(NativeNameType.Type, "LUID*")] ref Luid pLuid) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, Luid*, HResult>)(LpVtbl[17]))(ptr, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(LpVtbl[18]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterStereoStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterStereoStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(LpVtbl[19]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterStereoStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterStereoStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, void>)(LpVtbl[20]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusWindow")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusWindow([NativeName(NativeNameType.Param, "WindowHandle")] [NativeName(NativeNameType.Type, "HWND")] nint windowHandle, [NativeName(NativeNameType.Param, "wMsg")] [NativeName(NativeNameType.Type, "UINT")] uint wMsg, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(LpVtbl[21]))(ptr, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterOcclusionStatusEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterOcclusionStatusEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(LpVtbl[22]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterOcclusionStatus")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterOcclusionStatus([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, void>)(LpVtbl[23]))(ptr, dwCookie);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), ppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] IDXGIOutput* pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] DxgiSwapChainDesc1* pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), pDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] IUnknown* pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ref IUnknown pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ref IDXGIOutput pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CreateSwapChainForComposition")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSwapChainForComposition([NativeName(NativeNameType.Param, "pDevice")] [NativeName(NativeNameType.Type, "IUnknown*")] ComPtr<IUnknown> pDevice, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const DXGI_SWAP_CHAIN_DESC1*")] ref DxgiSwapChainDesc1 pDesc, [NativeName(NativeNameType.Param, "pRestrictToOutput")] [NativeName(NativeNameType.Type, "IDXGIOutput*")] ComPtr<IDXGIOutput> pRestrictToOutput, [NativeName(NativeNameType.Param, "ppSwapChain")] [NativeName(NativeNameType.Type, "IDXGISwapChain1**")] out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(LpVtbl[24]))(ptr, (IUnknown*)pDevice.GetAddressOf(), (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.GetAddressOf(), (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetCreationFlags")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetCreationFlags() 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint>)(LpVtbl[25]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByLuid")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByLuid<T>([NativeName(NativeNameType.Param, "AdapterLuid")] [NativeName(NativeNameType.Type, "LUID")] Luid adapterLuid, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, HResult>)(LpVtbl[26]))(ptr, adapterLuid, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumWarpAdapter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumWarpAdapter<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckFeatureSupport([NativeName(NativeNameType.Param, "Feature")] [NativeName(NativeNameType.Type, "DXGI_FEATURE")] DxgiFeature feature, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] void* pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, DxgiFeature, void*, uint, HResult>)(LpVtbl[28]))(ptr, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CheckFeatureSupport<T>([NativeName(NativeNameType.Param, "Feature")] [NativeName(NativeNameType.Type, "DXGI_FEATURE")] DxgiFeature feature, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, DxgiFeature, void*, uint, HResult>)(LpVtbl[28]))(ptr, feature, (void*)pFeatureSupportData.GetAddressOf(), featureSupportDataSize);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, riid, ppvAdapter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] void** ppvAdapter) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference<T>([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnumAdapterByGpuPreference")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnumAdapterByGpuPreference<T>([NativeName(NativeNameType.Param, "Adapter")] [NativeName(NativeNameType.Type, "UINT")] uint adapter, [NativeName(NativeNameType.Param, "GpuPreference")] [NativeName(NativeNameType.Type, "DXGI_GPU_PREFERENCE")] DxgiGpuPreference gpuPreference, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvAdapter")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, adapter, gpuPreference, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterAdaptersChangedEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterAdaptersChangedEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(LpVtbl[30]))(ptr, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "RegisterAdaptersChangedEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterAdaptersChangedEvent([NativeName(NativeNameType.Param, "hEvent")] [NativeName(NativeNameType.Type, "HANDLE")] nint hEvent, [NativeName(NativeNameType.Param, "pdwCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pdwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(LpVtbl[30]))(ptr, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "UnregisterAdaptersChangedEvent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult UnregisterAdaptersChangedEvent([NativeName(NativeNameType.Param, "dwCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint dwCookie) 
		{
			IDXGIFactory7* ptr = (IDXGIFactory7*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, HResult>)(LpVtbl[31]))(ptr, dwCookie);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIFactory6 (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIFactory6>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory5 (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIFactory5>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory4 (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIFactory4>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory3 (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIFactory3>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory2 (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIFactory2>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory1 (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIFactory1>(ref value);
		}

		public unsafe static implicit operator IDXGIFactory (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIFactory>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIFactory7 value)
		{
			return Unsafe.As<IDXGIFactory7, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("d67441c7-672a-476f-9e82-cd55b44949ce")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIInfoQueue")]
	public partial struct IDXGIInfoQueue : IComObject, IComObject<IDXGIInfoQueue>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("d67441c7-672a-476f-9e82-cd55b44949ce");

		public unsafe IDXGIInfoQueue (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetMessageCountLimit([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "MessageCountLimit")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageCountLimit) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, HResult>)(LpVtbl[3]))(ptr, producer, messageCountLimit);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ClearStoredMessages")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ClearStoredMessages([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(LpVtbl[4]))(ptr, producer);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMessageA([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE*")] DxgiInfoQueueMessage* pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pMessageByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, HResult>)(LpVtbl[5]))(ptr, producer, messageIndex, pMessage, pMessageByteLength);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMessageA([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE*")] ref DxgiInfoQueueMessage pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pMessageByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueMessage* ppMessage = &pMessage)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, HResult>)(LpVtbl[5]))(ptr, producer, messageIndex, (DxgiInfoQueueMessage*)ppMessage, pMessageByteLength);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMessageA([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE*")] DxgiInfoQueueMessage* pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pMessageByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nuint* ppMessageByteLength = &pMessageByteLength)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, HResult>)(LpVtbl[5]))(ptr, producer, messageIndex, pMessage, (nuint*)ppMessageByteLength);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetMessageA([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE*")] ref DxgiInfoQueueMessage pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pMessageByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueMessage* ppMessage = &pMessage)
			{
				fixed (nuint* ppMessageByteLength = &pMessageByteLength)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, HResult>)(LpVtbl[5]))(ptr, producer, messageIndex, (DxgiInfoQueueMessage*)ppMessage, (nuint*)ppMessageByteLength);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetNumStoredMessagesAllowedByRetrievalFilters")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public readonly unsafe ulong GetNumStoredMessagesAllowedByRetrievalFilters([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(LpVtbl[6]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetNumStoredMessages")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public readonly unsafe ulong GetNumStoredMessages([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(LpVtbl[7]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetNumMessagesDiscardedByMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public readonly unsafe ulong GetNumMessagesDiscardedByMessageCountLimit([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(LpVtbl[8]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public readonly unsafe ulong GetMessageCountLimit([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(LpVtbl[9]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetNumMessagesAllowedByStorageFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public readonly unsafe ulong GetNumMessagesAllowedByStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(LpVtbl[10]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetNumMessagesDeniedByStorageFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public readonly unsafe ulong GetNumMessagesDeniedByStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(LpVtbl[11]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddStorageFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AddStorageFilterEntries([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[12]))(ptr, producer, pFilter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddStorageFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AddStorageFilterEntries([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[12]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[13]))(ptr, producer, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[13]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[13]))(ptr, producer, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[13]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ClearStorageFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ClearStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(LpVtbl[14]))(ptr, producer);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushEmptyStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushEmptyStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, HResult>)(LpVtbl[15]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushDenyAllStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushDenyAllStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, HResult>)(LpVtbl[16]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushCopyOfStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushCopyOfStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, HResult>)(LpVtbl[17]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[18]))(ptr, producer, pFilter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[18]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PopStorageFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void PopStorageFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(LpVtbl[19]))(ptr, producer);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetStorageFilterStackSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetStorageFilterStackSize([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, uint>)(LpVtbl[20]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRetrievalFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AddRetrievalFilterEntries([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[21]))(ptr, producer, pFilter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRetrievalFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AddRetrievalFilterEntries([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[21]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[22]))(ptr, producer, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[22]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[22]))(ptr, producer, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, HResult>)(LpVtbl[22]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ClearRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ClearRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(LpVtbl[23]))(ptr, producer);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushEmptyRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushEmptyRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, HResult>)(LpVtbl[24]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushDenyAllRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushDenyAllRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, HResult>)(LpVtbl[25]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushCopyOfRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushCopyOfRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, HResult>)(LpVtbl[26]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[27]))(ptr, producer, pFilter);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PushRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult PushRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER*")] ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, HResult>)(LpVtbl[27]))(ptr, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "PopRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void PopRetrievalFilter([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(LpVtbl[28]))(ptr, producer);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetRetrievalFilterStackSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetRetrievalFilterStackSize([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, uint>)(LpVtbl[29]))(ptr, producer);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AddMessage([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_CATEGORY")] DxgiInfoQueueMessageCategory category, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_SEVERITY")] DxgiInfoQueueMessageSeverity severity, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_ID")] int id, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pDescription) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageCategory, DxgiInfoQueueMessageSeverity, int, byte*, HResult>)(LpVtbl[30]))(ptr, producer, category, severity, id, pDescription);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddApplicationMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult AddApplicationMessage([NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_SEVERITY")] DxgiInfoQueueMessageSeverity severity, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pDescription) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, DxgiInfoQueueMessageSeverity, byte*, HResult>)(LpVtbl[31]))(ptr, severity, pDescription);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBreakOnCategory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBreakOnCategory([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_CATEGORY")] DxgiInfoQueueMessageCategory category, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 bEnable) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageCategory, Bool32, HResult>)(LpVtbl[32]))(ptr, producer, category, bEnable);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBreakOnSeverity")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBreakOnSeverity([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_SEVERITY")] DxgiInfoQueueMessageSeverity severity, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 bEnable) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageSeverity, Bool32, HResult>)(LpVtbl[33]))(ptr, producer, severity, bEnable);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetBreakOnID")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetBreakOnID([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_ID")] int id, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 bEnable) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int, Bool32, HResult>)(LpVtbl[34]))(ptr, producer, id, bEnable);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBreakOnCategory")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 GetBreakOnCategory([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_CATEGORY")] DxgiInfoQueueMessageCategory category) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageCategory, Bool32>)(LpVtbl[35]))(ptr, producer, category);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBreakOnSeverity")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 GetBreakOnSeverity([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_SEVERITY")] DxgiInfoQueueMessageSeverity severity) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageSeverity, Bool32>)(LpVtbl[36]))(ptr, producer, severity);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetBreakOnID")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 GetBreakOnID([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_ID")] int id) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int, Bool32>)(LpVtbl[37]))(ptr, producer, id);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "SetMuteDebugOutput")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetMuteDebugOutput([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer, [NativeName(NativeNameType.Param, "bMute")] [NativeName(NativeNameType.Type, "BOOL")] Bool32 bMute) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, Bool32, void>)(LpVtbl[38]))(ptr, producer, bMute);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "GetMuteDebugOutput")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 GetMuteDebugOutput([NativeName(NativeNameType.Param, "Producer")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")] Guid producer) 
		{
			IDXGIInfoQueue* ptr = (IDXGIInfoQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, Bool32>)(LpVtbl[39]))(ptr, producer);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGIInfoQueue value)
		{
			return Unsafe.As<IDXGIInfoQueue, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_INFO_QUEUE_MESSAGE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiInfoQueueMessage
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Producer")]
		[NativeName(NativeNameType.Type, "DXGI_DEBUG_ID")]
		public Guid Producer;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Category")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_CATEGORY")]
		public DxgiInfoQueueMessageCategory Category;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Severity")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_SEVERITY")]
		public DxgiInfoQueueMessageSeverity Severity;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ID")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_ID")]
		public int ID;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pDescription")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PDescription;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DescriptionByteLength")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint DescriptionByteLength;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiInfoQueueMessage(Guid producer = default, DxgiInfoQueueMessageCategory category = default, DxgiInfoQueueMessageSeverity severity = default, int id = default, byte* pDescription = default, nuint descriptionByteLength = default)
		{
			Producer = producer;
			Category = category;
			Severity = severity;
			ID = id;
			PDescription = pDescription;
			DescriptionByteLength = descriptionByteLength;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_INFO_QUEUE_FILTER")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiInfoQueueFilter
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AllowList")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER_DESC")]
		public DxgiInfoQueueFilterDesc AllowList;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DenyList")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_FILTER_DESC")]
		public DxgiInfoQueueFilterDesc DenyList;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiInfoQueueFilter(DxgiInfoQueueFilterDesc allowList = default, DxgiInfoQueueFilterDesc denyList = default)
		{
			AllowList = allowList;
			DenyList = denyList;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DXGI_INFO_QUEUE_FILTER_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiInfoQueueFilterDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NumCategories")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NumCategories;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pCategoryList")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_CATEGORY*")]
		public unsafe DxgiInfoQueueMessageCategory* PCategoryList;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NumSeverities")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NumSeverities;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pSeverityList")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_SEVERITY*")]
		public unsafe DxgiInfoQueueMessageSeverity* PSeverityList;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NumIDs")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NumIDs;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pIDList")]
		[NativeName(NativeNameType.Type, "DXGI_INFO_QUEUE_MESSAGE_ID*")]
		public unsafe int* PIDList;


		/// <summary>		/// To be documented.		/// </summary>		public unsafe DxgiInfoQueueFilterDesc(uint numCategories = default, DxgiInfoQueueMessageCategory* pCategoryList = default, uint numSeverities = default, DxgiInfoQueueMessageSeverity* pSeverityList = default, uint numIDs = default, int* pIDList = default)
		{
			NumCategories = numCategories;
			PCategoryList = pCategoryList;
			NumSeverities = numSeverities;
			PSeverityList = pSeverityList;
			NumIDs = numIDs;
			PIDList = pIDList;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("119e7452-de9e-40fe-8806-88f90c12b441")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDebug")]
	public partial struct IDXGIDebug : IComObject, IComObject<IDXGIDebug>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("119e7452-de9e-40fe-8806-88f90c12b441");

		public unsafe IDXGIDebug (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDebug* ptr = (IDXGIDebug*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDebug* ptr = (IDXGIDebug*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug* ptr = (IDXGIDebug*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug* ptr = (IDXGIDebug*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDebug* ptr = (IDXGIDebug*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDebug* ptr = (IDXGIDebug*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReportLiveObjects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReportLiveObjects([NativeName(NativeNameType.Param, "apiid")] [NativeName(NativeNameType.Type, "GUID")] Guid apiid, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_RLO_FLAGS")] DxgiDebugRloFlags flags) 
		{
			IDXGIDebug* ptr = (IDXGIDebug*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid, DxgiDebugRloFlags, HResult>)(LpVtbl[3]))(ptr, apiid, flags);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGIDebug value)
		{
			return Unsafe.As<IDXGIDebug, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("c5a05f0c-16f2-4adf-9f4d-a8c4d58ac550")]
	[NativeName(NativeNameType.StructOrClass, "IDXGIDebug1")]
	public partial struct IDXGIDebug1 : IComObject, IComObject<IDXGIDebug1>, IComObject<IDXGIDebug>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("c5a05f0c-16f2-4adf-9f4d-a8c4d58ac550");

		public unsafe IDXGIDebug1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "ReportLiveObjects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ReportLiveObjects([NativeName(NativeNameType.Param, "apiid")] [NativeName(NativeNameType.Type, "GUID")] Guid apiid, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "DXGI_DEBUG_RLO_FLAGS")] DxgiDebugRloFlags flags) 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid, DxgiDebugRloFlags, HResult>)(LpVtbl[3]))(ptr, apiid, flags);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "EnableLeakTrackingForThread")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void EnableLeakTrackingForThread() 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIDebug1*, void>)(LpVtbl[4]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "DisableLeakTrackingForThread")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DisableLeakTrackingForThread() 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIDebug1*, void>)(LpVtbl[5]))(ptr);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "IsLeakTrackingEnabledForThread")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public readonly unsafe Bool32 IsLeakTrackingEnabledForThread() 
		{
			IDXGIDebug1* ptr = (IDXGIDebug1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Bool32>)(LpVtbl[6]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDebug (IDXGIDebug1 value)
		{
			return Unsafe.As<IDXGIDebug1, IDXGIDebug>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDebug1 value)
		{
			return Unsafe.As<IDXGIDebug1, IUnknown>(ref value);
		}

	}

}
