// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("0aa1ae0a-fa0e-4b84-8644-e05ff8e5acb5")]
	public partial struct IDXGIAdapter2 : IComObject, IComObject<IDXGIAdapter2>, IComObject<IDXGIAdapter1>, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("0aa1ae0a-fa0e-4b84-8644-e05ff8e5acb5");

		public unsafe IDXGIAdapter2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc*, int>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc*, int>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, int>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, int>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, int>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, int>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc1*, int>)(LpVtbl[10]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc1*, int>)(LpVtbl[10]))(ptr, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc2(DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc2*, int>)(LpVtbl[11]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc2(ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter2* ptr = (IDXGIAdapter2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc2*, int>)(LpVtbl[11]))(ptr, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIAdapter1 (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IDXGIAdapter1>(ref value);
		}

		public unsafe static implicit operator IDXGIAdapter (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IDXGIAdapter>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter2 value)
		{
			return Unsafe.As<IDXGIAdapter2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiAdapterDesc2
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public char Description_0;
		public char Description_1;
		public char Description_2;
		public char Description_3;
		public char Description_4;
		public char Description_5;
		public char Description_6;
		public char Description_7;
		public char Description_8;
		public char Description_9;
		public char Description_10;
		public char Description_11;
		public char Description_12;
		public char Description_13;
		public char Description_14;
		public char Description_15;
		public char Description_16;
		public char Description_17;
		public char Description_18;
		public char Description_19;
		public char Description_20;
		public char Description_21;
		public char Description_22;
		public char Description_23;
		public char Description_24;
		public char Description_25;
		public char Description_26;
		public char Description_27;
		public char Description_28;
		public char Description_29;
		public char Description_30;
		public char Description_31;
		public char Description_32;
		public char Description_33;
		public char Description_34;
		public char Description_35;
		public char Description_36;
		public char Description_37;
		public char Description_38;
		public char Description_39;
		public char Description_40;
		public char Description_41;
		public char Description_42;
		public char Description_43;
		public char Description_44;
		public char Description_45;
		public char Description_46;
		public char Description_47;
		public char Description_48;
		public char Description_49;
		public char Description_50;
		public char Description_51;
		public char Description_52;
		public char Description_53;
		public char Description_54;
		public char Description_55;
		public char Description_56;
		public char Description_57;
		public char Description_58;
		public char Description_59;
		public char Description_60;
		public char Description_61;
		public char Description_62;
		public char Description_63;
		public char Description_64;
		public char Description_65;
		public char Description_66;
		public char Description_67;
		public char Description_68;
		public char Description_69;
		public char Description_70;
		public char Description_71;
		public char Description_72;
		public char Description_73;
		public char Description_74;
		public char Description_75;
		public char Description_76;
		public char Description_77;
		public char Description_78;
		public char Description_79;
		public char Description_80;
		public char Description_81;
		public char Description_82;
		public char Description_83;
		public char Description_84;
		public char Description_85;
		public char Description_86;
		public char Description_87;
		public char Description_88;
		public char Description_89;
		public char Description_90;
		public char Description_91;
		public char Description_92;
		public char Description_93;
		public char Description_94;
		public char Description_95;
		public char Description_96;
		public char Description_97;
		public char Description_98;
		public char Description_99;
		public char Description_100;
		public char Description_101;
		public char Description_102;
		public char Description_103;
		public char Description_104;
		public char Description_105;
		public char Description_106;
		public char Description_107;
		public char Description_108;
		public char Description_109;
		public char Description_110;
		public char Description_111;
		public char Description_112;
		public char Description_113;
		public char Description_114;
		public char Description_115;
		public char Description_116;
		public char Description_117;
		public char Description_118;
		public char Description_119;
		public char Description_120;
		public char Description_121;
		public char Description_122;
		public char Description_123;
		public char Description_124;
		public char Description_125;
		public char Description_126;
		public char Description_127;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint VendorId;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint DeviceId;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint SubSysId;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Revision;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nuint DedicatedVideoMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nuint DedicatedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nuint SharedSystemMemory;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Luid AdapterLuid;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiGraphicsPreemptionGranularity GraphicsPreemptionGranularity;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiComputePreemptionGranularity ComputePreemptionGranularity;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiAdapterDesc2(char* description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, uint flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}

		/// <summary>/// To be documented./// </summary>		public unsafe DxgiAdapterDesc2(Span<char> description = default, uint vendorId = default, uint deviceId = default, uint subSysId = default, uint revision = default, nuint dedicatedVideoMemory = default, nuint dedicatedSystemMemory = default, nuint sharedSystemMemory = default, Luid adapterLuid = default, uint flags = default, DxgiGraphicsPreemptionGranularity graphicsPreemptionGranularity = default, DxgiComputePreemptionGranularity computePreemptionGranularity = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
			}
			VendorId = vendorId;
			DeviceId = deviceId;
			SubSysId = subSysId;
			Revision = revision;
			DedicatedVideoMemory = dedicatedVideoMemory;
			DedicatedSystemMemory = dedicatedSystemMemory;
			SharedSystemMemory = sharedSystemMemory;
			AdapterLuid = adapterLuid;
			Flags = flags;
			GraphicsPreemptionGranularity = graphicsPreemptionGranularity;
			ComputePreemptionGranularity = computePreemptionGranularity;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("00cddea8-939b-4b83-a340-a685226666cc")]
	public partial struct IDXGIOutput1 : IComObject, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("00cddea8-939b-4b83-a340-a685226666cc");

		public unsafe IDXGIOutput1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int WaitForVBlank() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, int>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(IUnknown* pDevice, int exclusive) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ref IUnknown pDevice, int exclusive) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ComPtr<IUnknown> pDevice, int exclusive) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.Handle, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput1*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(IDXGISurface* pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ref IDXGISurface pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(IDXGIResource* pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(ref IDXGIResource pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput1* ptr = (IDXGIOutput1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput1 value)
		{
			return Unsafe.As<IDXGIOutput1, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput1 value)
		{
			return Unsafe.As<IDXGIOutput1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput1 value)
		{
			return Unsafe.As<IDXGIOutput1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiModeDesc1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiRational RefreshRate;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiModeScanlineOrder ScanlineOrdering;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiModeScaling Scaling;

		/// <summary>
		/// To be documented.
		/// </summary>
		public int Stereo;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiModeDesc1(uint width = default, uint height = default, DxgiRational refreshRate = default, DxgiFormat format = default, DxgiModeScanlineOrder scanlineOrdering = default, DxgiModeScaling scaling = default, int stereo = default)
		{
			Width = width;
			Height = height;
			RefreshRate = refreshRate;
			Format = format;
			ScanlineOrdering = scanlineOrdering;
			Scaling = scaling;
			Stereo = stereo;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("6007896c-3244-4afd-bf18-a6d3beda5023")]
	public partial struct IDXGIDevice3 : IComObject, IComObject<IDXGIDevice3>, IComObject<IDXGIDevice2>, IComObject<IDXGIDevice1>, IComObject<IDXGIDevice>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("6007896c-3244-4afd-bf18-a6d3beda5023");

		public unsafe IDXGIDevice3 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetAdapter(IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, int>)(LpVtbl[7]))(ptr, pAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetAdapter(ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, int>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetAdapter(out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			pAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, int>)(LpVtbl[7]))(ptr, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CreateSurface(ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryResourceResidency(IUnknown** ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, int>)(LpVtbl[9]))(ptr, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryResourceResidency(ref IUnknown* ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, int>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryResourceResidency(ComPtr<IUnknown> ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, int>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.Handle, pResidencyStatus, numResources);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryResourceResidency(IUnknown** ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, int>)(LpVtbl[9]))(ptr, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryResourceResidency(ref IUnknown* ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, int>)(LpVtbl[9]))(ptr, (IUnknown**)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryResourceResidency(ComPtr<IUnknown> ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown**, DxgiResidency*, uint, int>)(LpVtbl[9]))(ptr, (IUnknown**)ppResources.Handle, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGPUThreadPriority(int priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int, int>)(LpVtbl[10]))(ptr, priority);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGPUThreadPriority(int* pPriority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int*, int>)(LpVtbl[11]))(ptr, pPriority);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGPUThreadPriority(ref int pPriority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppPriority = &pPriority)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int*, int>)(LpVtbl[11]))(ptr, (int*)ppPriority);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetMaximumFrameLatency(uint maxLatency) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, int>)(LpVtbl[12]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetMaximumFrameLatency(uint* pMaxLatency) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint*, int>)(LpVtbl[13]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetMaximumFrameLatency(ref uint pMaxLatency) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint*, int>)(LpVtbl[13]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int OfferResources(uint numResources, IDXGIResource** ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, DxgiOfferResourcePriority, int>)(LpVtbl[14]))(ptr, numResources, ppResources, priority);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int OfferResources(uint numResources, ref IDXGIResource* ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, DxgiOfferResourcePriority, int>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)pppResources, priority);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int OfferResources(uint numResources, ComPtr<IDXGIResource> ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, DxgiOfferResourcePriority, int>)(LpVtbl[14]))(ptr, numResources, (IDXGIResource**)ppResources.Handle, priority);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReclaimResources(uint numResources, IDXGIResource** ppResources, int* pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, int*, int>)(LpVtbl[15]))(ptr, numResources, ppResources, pDiscarded);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReclaimResources(uint numResources, ref IDXGIResource* ppResources, int* pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, int*, int>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, pDiscarded);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReclaimResources(uint numResources, ComPtr<IDXGIResource> ppResources, int* pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, int*, int>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.Handle, pDiscarded);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReclaimResources(uint numResources, IDXGIResource** ppResources, ref int pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppDiscarded = &pDiscarded)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, int*, int>)(LpVtbl[15]))(ptr, numResources, ppResources, (int*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReclaimResources(uint numResources, ref IDXGIResource* ppResources, ref int pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (int* ppDiscarded = &pDiscarded)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, int*, int>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)pppResources, (int*)ppDiscarded);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReclaimResources(uint numResources, ComPtr<IDXGIResource> ppResources, ref int pDiscarded) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppDiscarded = &pDiscarded)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource**, int*, int>)(LpVtbl[15]))(ptr, numResources, (IDXGIResource**)ppResources.Handle, (int*)ppDiscarded);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnqueueSetEvent(nint hEvent) 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, nint, int>)(LpVtbl[16]))(ptr, hEvent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void Trim() 
		{
			IDXGIDevice3* ptr = (IDXGIDevice3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIDevice3*, void>)(LpVtbl[17]))(ptr);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDevice2 (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIDevice2>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice1 (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIDevice1>(ref value);
		}

		public unsafe static implicit operator IDXGIDevice (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIDevice>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDevice3 value)
		{
			return Unsafe.As<IDXGIDevice3, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("a8be2ac4-199f-4946-b331-79599fb98de7")]
	public partial struct IDXGISwapChain2 : IComObject, IComObject<IDXGISwapChain2>, IComObject<IDXGISwapChain1>, IComObject<IDXGISwapChain>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("a8be2ac4-199f-4946-b331-79599fb98de7");

		public unsafe IDXGISwapChain2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(Guid* riid, void** ppDevice) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(ref Guid riid, void** ppDevice) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(ref Guid riid, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Present(uint syncInterval, uint flags) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, int>)(LpVtbl[8]))(ptr, syncInterval, flags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetBuffer(uint buffer, Guid* riid, void** ppSurface) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, int>)(LpVtbl[9]))(ptr, buffer, riid, ppSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetBuffer(uint buffer, ref Guid riid, void** ppSurface) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, int>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetBuffer<T>(uint buffer, out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSurface = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, int>)(LpVtbl[9]))(ptr, buffer, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSurface.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetBuffer<T>(uint buffer, ref Guid riid, out ComPtr<T> ppSurface) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSurface = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, int>)(LpVtbl[9]))(ptr, buffer, (Guid*)priid, (void**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetFullscreenState(int fullscreen, IDXGIOutput* pTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int, IDXGIOutput*, int>)(LpVtbl[10]))(ptr, fullscreen, pTarget);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetFullscreenState(int fullscreen, ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int, IDXGIOutput*, int>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetFullscreenState(int fullscreen, ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int, IDXGIOutput*, int>)(LpVtbl[10]))(ptr, fullscreen, (IDXGIOutput*)pTarget.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenState(int* pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int*, IDXGIOutput**, int>)(LpVtbl[11]))(ptr, pFullscreen, ppTarget);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenState(ref int pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppFullscreen = &pFullscreen)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int*, IDXGIOutput**, int>)(LpVtbl[11]))(ptr, (int*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenState(int* pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int*, IDXGIOutput**, int>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenState(int* pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppTarget = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int*, IDXGIOutput**, int>)(LpVtbl[11]))(ptr, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenState(ref int pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int*, IDXGIOutput**, int>)(LpVtbl[11]))(ptr, (int*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenState(ref int pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int*, IDXGIOutput**, int>)(LpVtbl[11]))(ptr, (int*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc*, int>)(LpVtbl[12]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc*, int>)(LpVtbl[12]))(ptr, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ResizeBuffers(uint bufferCount, uint width, uint height, DxgiFormat newFormat, uint swapChainFlags) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, uint, DxgiFormat, uint, int>)(LpVtbl[13]))(ptr, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ResizeTarget(DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeDesc*, int>)(LpVtbl[14]))(ptr, pNewTargetParameters);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ResizeTarget(ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeDesc*, int>)(LpVtbl[14]))(ptr, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetContainingOutput(IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, int>)(LpVtbl[15]))(ptr, ppOutput);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetContainingOutput(ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, int>)(LpVtbl[15]))(ptr, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetContainingOutput(out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, int>)(LpVtbl[15]))(ptr, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiFrameStatistics*, int>)(LpVtbl[16]))(ptr, pStats);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiFrameStatistics*, int>)(LpVtbl[16]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetLastPresentCount(uint* pLastPresentCount) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, int>)(LpVtbl[17]))(ptr, pLastPresentCount);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetLastPresentCount(ref uint pLastPresentCount) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, int>)(LpVtbl[17]))(ptr, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc1*, int>)(LpVtbl[18]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc1(ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc1*, int>)(LpVtbl[18]))(ptr, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenDesc(DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainFullscreenDesc*, int>)(LpVtbl[19]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFullscreenDesc(ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainFullscreenDesc*, int>)(LpVtbl[19]))(ptr, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetHwnd(nint* pHwnd) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint*, int>)(LpVtbl[20]))(ptr, pHwnd);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetHwnd(ref nint pHwnd) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHwnd = &pHwnd)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint*, int>)(LpVtbl[20]))(ptr, (nint*)ppHwnd);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetCoreWindow(Guid* refiid, void** ppUnk) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[21]))(ptr, refiid, ppUnk);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetCoreWindow(ref Guid refiid, void** ppUnk) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[21]))(ptr, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetCoreWindow<T>(out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppUnk = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[21]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppUnk.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetCoreWindow<T>(ref Guid refiid, out ComPtr<T> ppUnk) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* prefiid = &refiid)
			{
				ppUnk = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, int>)(LpVtbl[21]))(ptr, (Guid*)prefiid, (void**)ppUnk.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Present1(uint syncInterval, uint presentFlags, DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, DxgiPresentParameters*, int>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Present1(uint syncInterval, uint presentFlags, ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, DxgiPresentParameters*, int>)(LpVtbl[22]))(ptr, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int IsTemporaryMonoSupported() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, int>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetRestrictToOutput(IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, int>)(LpVtbl[24]))(ptr, ppRestrictToOutput);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetRestrictToOutput(ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, int>)(LpVtbl[24]))(ptr, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetRestrictToOutput(out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppRestrictToOutput = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, int>)(LpVtbl[24]))(ptr, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetBackgroundColor(Vector4* pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, int>)(LpVtbl[25]))(ptr, pColor);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetBackgroundColor(ref Vector4 pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, int>)(LpVtbl[25]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetBackgroundColor(Vector4* pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, int>)(LpVtbl[26]))(ptr, pColor);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetBackgroundColor(ref Vector4 pColor) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Vector4* ppColor = &pColor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, int>)(LpVtbl[26]))(ptr, (Vector4*)ppColor);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetRotation(DxgiModeRotation rotation) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation, int>)(LpVtbl[27]))(ptr, rotation);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetRotation(DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation*, int>)(LpVtbl[28]))(ptr, pRotation);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetRotation(ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation*, int>)(LpVtbl[28]))(ptr, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetSourceSize(uint width, uint height) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, int>)(LpVtbl[29]))(ptr, width, height);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSourceSize(uint* pWidth, uint* pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, int>)(LpVtbl[30]))(ptr, pWidth, pHeight);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSourceSize(ref uint pWidth, uint* pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, int>)(LpVtbl[30]))(ptr, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSourceSize(uint* pWidth, ref uint pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeight = &pHeight)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, int>)(LpVtbl[30]))(ptr, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSourceSize(ref uint pWidth, ref uint pHeight) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, int>)(LpVtbl[30]))(ptr, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetMaximumFrameLatency(uint maxLatency) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, int>)(LpVtbl[31]))(ptr, maxLatency);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetMaximumFrameLatency(uint* pMaxLatency) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, int>)(LpVtbl[32]))(ptr, pMaxLatency);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetMaximumFrameLatency(ref uint pMaxLatency) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, int>)(LpVtbl[32]))(ptr, (uint*)ppMaxLatency);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe nint GetFrameLatencyWaitableObject() 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			nint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint>)(LpVtbl[33]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetMatrixTransform(DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, int>)(LpVtbl[34]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetMatrixTransform(ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, int>)(LpVtbl[34]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetMatrixTransform(DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, int>)(LpVtbl[35]))(ptr, pMatrix);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetMatrixTransform(ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain2* ptr = (IDXGISwapChain2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, int>)(LpVtbl[35]))(ptr, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISwapChain1 (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGISwapChain1>(ref value);
		}

		public unsafe static implicit operator IDXGISwapChain (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGISwapChain>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISwapChain2 value)
		{
			return Unsafe.As<IDXGISwapChain2, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// interface __MIDL_itf_dxgi1_3_0000_0001 <br/>
	/// [local] <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiMatrix3X2F
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public float _11;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float _12;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float _21;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float _22;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float _31;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float _32;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiMatrix3X2F(float _11 = default, float _12 = default, float _21 = default, float _22 = default, float _31 = default, float _32 = default)
		{
			this._11 = _11;
			this._12 = _12;
			this._21 = _21;
			this._22 = _22;
			this._31 = _31;
			this._32 = _32;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("595e39d1-2724-4663-99b1-da969de28364")]
	public partial struct IDXGIOutput2 : IComObject, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("595e39d1-2724-4663-99b1-da969de28364");

		public unsafe IDXGIOutput2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int WaitForVBlank() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, int>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(IUnknown* pDevice, int exclusive) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ref IUnknown pDevice, int exclusive) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ComPtr<IUnknown> pDevice, int exclusive) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.Handle, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput2*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(IDXGISurface* pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ref IDXGISurface pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList1(DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, int>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode1(ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, int>)(LpVtbl[20]))(ptr, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(IDXGIResource* pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(ref IDXGIResource pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData1(ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, int>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, ppOutputDuplication);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int DuplicateOutput(ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, int>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SupportsOverlays() 
		{
			IDXGIOutput2* ptr = (IDXGIOutput2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, int>)(LpVtbl[23]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput2 value)
		{
			return Unsafe.As<IDXGIOutput2, IUnknown>(ref value);
		}

	}
}
