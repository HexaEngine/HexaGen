// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{
	public static unsafe partial class Extensions
	{

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, pDevice, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[16]))(handle, (IUnknown*)pDevice.Handle, (IUnknown*)pWindow.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory7> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, Luid*, int>)(handle->LpVtbl[17]))(handle, hResource, pLuid);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory7> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, Luid*, int>)(handle->LpVtbl[17]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, int>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, int>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, int>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterStereoStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, int>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory7> comObj, uint dwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, int>)(handle->LpVtbl[21]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, int>)(handle->LpVtbl[21]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, int>)(handle->LpVtbl[22]))(handle, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, int>)(handle->LpVtbl[22]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory7> comObj, uint dwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, void>)(handle->LpVtbl[23]))(handle, dwCookie);
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, ppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, pDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, int>)(handle->LpVtbl[24]))(handle, (IUnknown*)pDevice.Handle, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)pRestrictToOutput.Handle, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint GetCreationFlags(this ComPtr<IDXGIFactory7> comObj) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint>)(handle->LpVtbl[25]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByLuid(this ComPtr<IDXGIFactory7> comObj, Luid adapterLuid, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, int>)(handle->LpVtbl[26]))(handle, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByLuid(this ComPtr<IDXGIFactory7> comObj, Luid adapterLuid, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, int>)(handle->LpVtbl[26]))(handle, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByLuid<T>(this ComPtr<IDXGIFactory7> comObj, Luid adapterLuid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppvAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, int>)(handle->LpVtbl[26]))(handle, adapterLuid, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByLuid<T>(this ComPtr<IDXGIFactory7> comObj, Luid adapterLuid, ref Guid riid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, int>)(handle->LpVtbl[26]))(handle, adapterLuid, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumWarpAdapter(this ComPtr<IDXGIFactory7> comObj, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, int>)(handle->LpVtbl[27]))(handle, riid, ppvAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumWarpAdapter(this ComPtr<IDXGIFactory7> comObj, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, int>)(handle->LpVtbl[27]))(handle, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumWarpAdapter<T>(this ComPtr<IDXGIFactory7> comObj, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppvAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, int>)(handle->LpVtbl[27]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumWarpAdapter<T>(this ComPtr<IDXGIFactory7> comObj, ref Guid riid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, int>)(handle->LpVtbl[27]))(handle, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckFeatureSupport(this ComPtr<IDXGIFactory7> comObj, DxgiFeature feature, void* pFeatureSupportData, uint featureSupportDataSize) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, DxgiFeature, void*, uint, int>)(handle->LpVtbl[28]))(handle, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int CheckFeatureSupport<T>(this ComPtr<IDXGIFactory7> comObj, DxgiFeature feature, ComPtr<T> pFeatureSupportData, uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, DxgiFeature, void*, uint, int>)(handle->LpVtbl[28]))(handle, feature, (void*)pFeatureSupportData.Handle, featureSupportDataSize);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByGpuPreference(this ComPtr<IDXGIFactory7> comObj, uint adapter, DxgiGpuPreference gpuPreference, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, int>)(handle->LpVtbl[29]))(handle, adapter, gpuPreference, riid, ppvAdapter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByGpuPreference(this ComPtr<IDXGIFactory7> comObj, uint adapter, DxgiGpuPreference gpuPreference, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, int>)(handle->LpVtbl[29]))(handle, adapter, gpuPreference, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByGpuPreference<T>(this ComPtr<IDXGIFactory7> comObj, uint adapter, DxgiGpuPreference gpuPreference, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppvAdapter = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, int>)(handle->LpVtbl[29]))(handle, adapter, gpuPreference, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvAdapter.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int EnumAdapterByGpuPreference<T>(this ComPtr<IDXGIFactory7> comObj, uint adapter, DxgiGpuPreference gpuPreference, ref Guid riid, out ComPtr<T> ppvAdapter) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvAdapter = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, int>)(handle->LpVtbl[29]))(handle, adapter, gpuPreference, (Guid*)priid, (void**)ppvAdapter.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterAdaptersChangedEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, int>)(handle->LpVtbl[30]))(handle, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int RegisterAdaptersChangedEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, int>)(handle->LpVtbl[30]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int UnregisterAdaptersChangedEvent(this ComPtr<IDXGIFactory7> comObj, uint dwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, int>)(handle->LpVtbl[31]))(handle, dwCookie);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIInfoQueue> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIInfoQueue> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIInfoQueue> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIInfoQueue> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGIInfoQueue> comObj) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGIInfoQueue> comObj) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetMessageCountLimit(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ulong messageCountLimit) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, int>)(handle->LpVtbl[3]))(handle, producer, messageCountLimit);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static void ClearStoredMessages(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(handle->LpVtbl[4]))(handle, producer);
		}

		/// <summary>/// To be documented./// </summary>		public static int GetMessageA(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ulong messageIndex, DxgiInfoQueueMessage* pMessage, nuint* pMessageByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, int>)(handle->LpVtbl[5]))(handle, producer, messageIndex, pMessage, pMessageByteLength);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetMessageA(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ulong messageIndex, ref DxgiInfoQueueMessage pMessage, nuint* pMessageByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueMessage* ppMessage = &pMessage)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, int>)(handle->LpVtbl[5]))(handle, producer, messageIndex, (DxgiInfoQueueMessage*)ppMessage, pMessageByteLength);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetMessageA(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ulong messageIndex, DxgiInfoQueueMessage* pMessage, ref nuint pMessageByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (nuint* ppMessageByteLength = &pMessageByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, int>)(handle->LpVtbl[5]))(handle, producer, messageIndex, pMessage, (nuint*)ppMessageByteLength);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetMessageA(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ulong messageIndex, ref DxgiInfoQueueMessage pMessage, ref nuint pMessageByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueMessage* ppMessage = &pMessage)
			{
				fixed (nuint* ppMessageByteLength = &pMessageByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong, DxgiInfoQueueMessage*, nuint*, int>)(handle->LpVtbl[5]))(handle, producer, messageIndex, (DxgiInfoQueueMessage*)ppMessage, (nuint*)ppMessageByteLength);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static ulong GetNumStoredMessagesAllowedByRetrievalFilters(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(handle->LpVtbl[6]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static ulong GetNumStoredMessages(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(handle->LpVtbl[7]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static ulong GetNumMessagesDiscardedByMessageCountLimit(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(handle->LpVtbl[8]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static ulong GetMessageCountLimit(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(handle->LpVtbl[9]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static ulong GetNumMessagesAllowedByStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(handle->LpVtbl[10]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static ulong GetNumMessagesDeniedByStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, ulong>)(handle->LpVtbl[11]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int AddStorageFilterEntries(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[12]))(handle, producer, pFilter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int AddStorageFilterEntries(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[12]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter, nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, producer, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter, nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter, ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, producer, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter, ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void ClearStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(handle->LpVtbl[14]))(handle, producer);
		}

		/// <summary>/// To be documented./// </summary>		public static int PushEmptyStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int>)(handle->LpVtbl[15]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushDenyAllStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int>)(handle->LpVtbl[16]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushCopyOfStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int>)(handle->LpVtbl[17]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[18]))(handle, producer, pFilter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[18]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void PopStorageFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(handle->LpVtbl[19]))(handle, producer);
		}

		/// <summary>/// To be documented./// </summary>		public static uint GetStorageFilterStackSize(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, uint>)(handle->LpVtbl[20]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int AddRetrievalFilterEntries(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[21]))(handle, producer, pFilter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int AddRetrievalFilterEntries(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[21]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter, nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[22]))(handle, producer, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter, nuint* pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[22]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter, ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[22]))(handle, producer, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int GetRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter, ref nuint pFilterByteLength) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, nuint*, int>)(handle->LpVtbl[22]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void ClearRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(handle->LpVtbl[23]))(handle, producer);
		}

		/// <summary>/// To be documented./// </summary>		public static int PushEmptyRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int>)(handle->LpVtbl[24]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushDenyAllRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int>)(handle->LpVtbl[25]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushCopyOfRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int>)(handle->LpVtbl[26]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueFilter* pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[27]))(handle, producer, pFilter);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int PushRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, ref DxgiInfoQueueFilter pFilter) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			fixed (DxgiInfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueFilter*, int>)(handle->LpVtbl[27]))(handle, producer, (DxgiInfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static void PopRetrievalFilter(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, void>)(handle->LpVtbl[28]))(handle, producer);
		}

		/// <summary>/// To be documented./// </summary>		public static uint GetRetrievalFilterStackSize(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, uint>)(handle->LpVtbl[29]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int AddMessage(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueMessageCategory category, DxgiInfoQueueMessageSeverity severity, int id, byte* pDescription) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageCategory, DxgiInfoQueueMessageSeverity, int, byte*, int>)(handle->LpVtbl[30]))(handle, producer, category, severity, id, pDescription);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int AddApplicationMessage(this ComPtr<IDXGIInfoQueue> comObj, DxgiInfoQueueMessageSeverity severity, byte* pDescription) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, DxgiInfoQueueMessageSeverity, byte*, int>)(handle->LpVtbl[31]))(handle, severity, pDescription);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetBreakOnCategory(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueMessageCategory category, int bEnable) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageCategory, int, int>)(handle->LpVtbl[32]))(handle, producer, category, bEnable);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetBreakOnSeverity(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueMessageSeverity severity, int bEnable) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageSeverity, int, int>)(handle->LpVtbl[33]))(handle, producer, severity, bEnable);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int SetBreakOnId(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, int id, int bEnable) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int, int, int>)(handle->LpVtbl[34]))(handle, producer, id, bEnable);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetBreakOnCategory(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueMessageCategory category) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageCategory, int>)(handle->LpVtbl[35]))(handle, producer, category);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetBreakOnSeverity(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, DxgiInfoQueueMessageSeverity severity) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, DxgiInfoQueueMessageSeverity, int>)(handle->LpVtbl[36]))(handle, producer, severity);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int GetBreakOnId(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, int id) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int, int>)(handle->LpVtbl[37]))(handle, producer, id);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static void SetMuteDebugOutput(this ComPtr<IDXGIInfoQueue> comObj, Guid producer, int bMute) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int, void>)(handle->LpVtbl[38]))(handle, producer, bMute);
		}

		/// <summary>/// To be documented./// </summary>		public static int GetMuteDebugOutput(this ComPtr<IDXGIInfoQueue> comObj, Guid producer) 
		{
			IDXGIInfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIInfoQueue*, Guid, int>)(handle->LpVtbl[39]))(handle, producer);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIDebug> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGIDebug* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIDebug> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGIDebug* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIDebug> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIDebug> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGIDebug> comObj) 
		{
			IDXGIDebug* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGIDebug> comObj) 
		{
			IDXGIDebug* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int ReportLiveObjects(this ComPtr<IDXGIDebug> comObj, Guid apiid, DxgiDebugRloFlags flags) 
		{
			IDXGIDebug* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug*, Guid, DxgiDebugRloFlags, int>)(handle->LpVtbl[3]))(handle, apiid, flags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIDebug1> comObj, Guid* riid, void** ppvObject) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface(this ComPtr<IDXGIDebug1> comObj, ref Guid riid, void** ppvObject) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIDebug1> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug1* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int QueryInterface<T>(this ComPtr<IDXGIDebug1> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDebug1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public static uint AddRef(this ComPtr<IDXGIDebug1> comObj) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static uint Release(this ComPtr<IDXGIDebug1> comObj) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static int ReportLiveObjects(this ComPtr<IDXGIDebug1> comObj, Guid apiid, DxgiDebugRloFlags flags) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, Guid, DxgiDebugRloFlags, int>)(handle->LpVtbl[3]))(handle, apiid, flags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public static void EnableLeakTrackingForThread(this ComPtr<IDXGIDebug1> comObj) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIDebug1*, void>)(handle->LpVtbl[4]))(handle);
		}

		/// <summary>/// To be documented./// </summary>		public static void DisableLeakTrackingForThread(this ComPtr<IDXGIDebug1> comObj) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIDebug1*, void>)(handle->LpVtbl[5]))(handle);
		}

		/// <summary>/// To be documented./// </summary>		public static int IsLeakTrackingEnabledForThread(this ComPtr<IDXGIDebug1> comObj) 
		{
			IDXGIDebug1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDebug1*, int>)(handle->LpVtbl[6]))(handle);
			return ret;
		}

	}
}
