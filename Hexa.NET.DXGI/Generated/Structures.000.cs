// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("aec22fb8-76f3-4639-9be0-28eb43a67a2e")]
	public partial struct IDXGIObject : IComObject, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("aec22fb8-76f3-4639-9be0-28eb43a67a2e");

		public unsafe IDXGIObject (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIObject* ptr = (IDXGIObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDXGIObject value)
		{
			return Unsafe.As<IDXGIObject, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("3d3e0379-f9de-4d58-bb6c-18d62992f1a6")]
	public partial struct IDXGIDeviceSubObject : IComObject, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("3d3e0379-f9de-4d58-bb6c-18d62992f1a6");

		public unsafe IDXGIDeviceSubObject (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(Guid* riid, void** ppDevice) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(ref Guid riid, void** ppDevice) 
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(ref Guid riid, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIDeviceSubObject* ptr = (IDXGIDeviceSubObject*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIDeviceSubObject value)
		{
			return Unsafe.As<IDXGIDeviceSubObject, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIDeviceSubObject value)
		{
			return Unsafe.As<IDXGIDeviceSubObject, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("035f3ab4-482e-4e50-b41f-8a7f8bd8960b")]
	public partial struct IDXGIResource : IComObject, IComObject<IDXGIResource>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("035f3ab4-482e-4e50-b41f-8a7f8bd8960b");

		public unsafe IDXGIResource (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(Guid* riid, void** ppDevice) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(ref Guid riid, void** ppDevice) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(ref Guid riid, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSharedHandle(nint* pSharedHandle) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, nint*, int>)(LpVtbl[8]))(ptr, pSharedHandle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetSharedHandle(ref nint pSharedHandle) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppSharedHandle = &pSharedHandle)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, nint*, int>)(LpVtbl[8]))(ptr, (nint*)ppSharedHandle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetUsage(uint* pUsage) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, int>)(LpVtbl[9]))(ptr, pUsage);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetUsage(ref uint pUsage) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUsage = &pUsage)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, int>)(LpVtbl[9]))(ptr, (uint*)ppUsage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetEvictionPriority(uint evictionPriority) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint, int>)(LpVtbl[10]))(ptr, evictionPriority);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetEvictionPriority(uint* pEvictionPriority) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, int>)(LpVtbl[11]))(ptr, pEvictionPriority);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetEvictionPriority(ref uint pEvictionPriority) 
		{
			IDXGIResource* ptr = (IDXGIResource*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppEvictionPriority = &pEvictionPriority)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, int>)(LpVtbl[11]))(ptr, (uint*)ppEvictionPriority);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGIResource value)
		{
			return Unsafe.As<IDXGIResource, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIResource value)
		{
			return Unsafe.As<IDXGIResource, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIResource value)
		{
			return Unsafe.As<IDXGIResource, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("9d8e1289-d7b3-465f-8126-250e349af85d")]
	public partial struct IDXGIKeyedMutex : IComObject, IComObject<IDXGIKeyedMutex>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("9d8e1289-d7b3-465f-8126-250e349af85d");

		public unsafe IDXGIKeyedMutex (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(Guid* riid, void** ppDevice) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(ref Guid riid, void** ppDevice) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(ref Guid riid, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int AcquireSync(ulong key, uint dwMilliseconds) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, ulong, uint, int>)(LpVtbl[8]))(ptr, key, dwMilliseconds);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReleaseSync(ulong key) 
		{
			IDXGIKeyedMutex* ptr = (IDXGIKeyedMutex*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, ulong, int>)(LpVtbl[9]))(ptr, key);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGIKeyedMutex value)
		{
			return Unsafe.As<IDXGIKeyedMutex, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIKeyedMutex value)
		{
			return Unsafe.As<IDXGIKeyedMutex, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIKeyedMutex value)
		{
			return Unsafe.As<IDXGIKeyedMutex, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("cafcb56c-6ac3-4889-bf47-9e23bbd260ec")]
	public partial struct IDXGISurface : IComObject, IComObject<IDXGISurface>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("cafcb56c-6ac3-4889-bf47-9e23bbd260ec");

		public unsafe IDXGISurface (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(Guid* riid, void** ppDevice) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(ref Guid riid, void** ppDevice) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(ref Guid riid, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiSurfaceDesc*, int>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiSurfaceDesc*, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Map(DxgiMappedRect* pLockedRect, uint mapFlags) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiMappedRect*, uint, int>)(LpVtbl[9]))(ptr, pLockedRect, mapFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Map(ref DxgiMappedRect pLockedRect, uint mapFlags) 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiMappedRect*, uint, int>)(LpVtbl[9]))(ptr, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Unmap() 
		{
			IDXGISurface* ptr = (IDXGISurface*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, int>)(LpVtbl[10]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISurface value)
		{
			return Unsafe.As<IDXGISurface, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISurface value)
		{
			return Unsafe.As<IDXGISurface, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISurface value)
		{
			return Unsafe.As<IDXGISurface, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSurfaceDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiSampleDesc SampleDesc;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiSurfaceDesc(uint width = default, uint height = default, DxgiFormat format = default, DxgiSampleDesc sampleDesc = default)
		{
			Width = width;
			Height = height;
			Format = format;
			SampleDesc = sampleDesc;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiSampleDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Count;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Quality;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiSampleDesc(uint count = default, uint quality = default)
		{
			Count = count;
			Quality = quality;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiMappedRect
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public int Pitch;

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe byte* PBits;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiMappedRect(int pitch = default, byte* pBits = default)
		{
			Pitch = pitch;
			PBits = pBits;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("4ae63092-6327-4c1b-80ae-bfe12ea32b86")]
	public partial struct IDXGISurface1 : IComObject, IComObject<IDXGISurface1>, IComObject<IDXGISurface>, IComObject<IDXGIDeviceSubObject>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("4ae63092-6327-4c1b-80ae-bfe12ea32b86");

		public unsafe IDXGISurface1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(Guid* riid, void** ppDevice) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice(ref Guid riid, void** ppDevice) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDevice.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDevice<T>(ref Guid riid, out ComPtr<T> ppDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiSurfaceDesc*, int>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiSurfaceDesc*, int>)(LpVtbl[8]))(ptr, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Map(DxgiMappedRect* pLockedRect, uint mapFlags) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiMappedRect*, uint, int>)(LpVtbl[9]))(ptr, pLockedRect, mapFlags);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Map(ref DxgiMappedRect pLockedRect, uint mapFlags) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiMappedRect*, uint, int>)(LpVtbl[9]))(ptr, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int Unmap() 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, int>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDC(int discard, nint* phdc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, int, nint*, int>)(LpVtbl[11]))(ptr, discard, phdc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDC(int discard, ref nint phdc) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* pphdc = &phdc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, int, nint*, int>)(LpVtbl[11]))(ptr, discard, (nint*)pphdc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReleaseDC(Rect32* pDirtyRect) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Rect32*, int>)(LpVtbl[12]))(ptr, pDirtyRect);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int ReleaseDC(ref Rect32 pDirtyRect) 
		{
			IDXGISurface1* ptr = (IDXGISurface1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppDirtyRect = &pDirtyRect)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Rect32*, int>)(LpVtbl[12]))(ptr, (Rect32*)ppDirtyRect);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGISurface (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IDXGISurface>(ref value);
		}

		public unsafe static implicit operator IDXGIDeviceSubObject (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IDXGIDeviceSubObject>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGISurface1 value)
		{
			return Unsafe.As<IDXGISurface1, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("2411e7e1-12ac-4ccf-bd14-9798e8534dc0")]
	public partial struct IDXGIAdapter : IComObject, IComObject<IDXGIAdapter>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("2411e7e1-12ac-4ccf-bd14-9798e8534dc0");

		public unsafe IDXGIAdapter (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, ppOutput);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int EnumOutputs(uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutput = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, int>)(LpVtbl[7]))(ptr, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, DxgiAdapterDesc*, int>)(LpVtbl[8]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, DxgiAdapterDesc*, int>)(LpVtbl[8]))(ptr, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, int>)(LpVtbl[9]))(ptr, interfaceName, pUMDVersion);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, int>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, int>)(LpVtbl[9]))(ptr, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int CheckInterfaceSupport(ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter* ptr = (IDXGIAdapter*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, int>)(LpVtbl[9]))(ptr, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIAdapter value)
		{
			return Unsafe.As<IDXGIAdapter, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIAdapter value)
		{
			return Unsafe.As<IDXGIAdapter, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("ae02eedb-c735-4690-8d52-5a8dc20213aa")]
	public partial struct IDXGIOutput : IComObject, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("ae02eedb-c735-4690-8d52-5a8dc20213aa");

		public unsafe IDXGIOutput (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe uint Release() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, int>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, int>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDesc(ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiOutputDesc*, int>)(LpVtbl[7]))(ptr, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplayModeList(DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, int>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int FindClosestMatchingMode(ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, int>)(LpVtbl[9]))(ptr, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int WaitForVBlank() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, int>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(IUnknown* pDevice, int exclusive) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ref IUnknown pDevice, int exclusive) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int TakeOwnership(ComPtr<IUnknown> pDevice, int exclusive) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, int, int>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.Handle, exclusive);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControlCapabilities(ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControlCapabilities*, int>)(LpVtbl[13]))(ptr, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, int>)(LpVtbl[14]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(DxgiGammaControl* pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetGammaControl(ref DxgiGammaControl pArray) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, int>)(LpVtbl[15]))(ptr, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int SetDisplaySurface(ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, int>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(IDXGISurface* pDestination) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ref IDXGISurface pDestination) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetDisplaySurfaceData(ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, int>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		public readonly unsafe int GetFrameStatistics(ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput* ptr = (IDXGIOutput*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFrameStatistics*, int>)(LpVtbl[18]))(ptr, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput value)
		{
			return Unsafe.As<IDXGIOutput, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput value)
		{
			return Unsafe.As<IDXGIOutput, IUnknown>(ref value);
		}

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiOutputDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public char DeviceName_0;
		public char DeviceName_1;
		public char DeviceName_2;
		public char DeviceName_3;
		public char DeviceName_4;
		public char DeviceName_5;
		public char DeviceName_6;
		public char DeviceName_7;
		public char DeviceName_8;
		public char DeviceName_9;
		public char DeviceName_10;
		public char DeviceName_11;
		public char DeviceName_12;
		public char DeviceName_13;
		public char DeviceName_14;
		public char DeviceName_15;
		public char DeviceName_16;
		public char DeviceName_17;
		public char DeviceName_18;
		public char DeviceName_19;
		public char DeviceName_20;
		public char DeviceName_21;
		public char DeviceName_22;
		public char DeviceName_23;
		public char DeviceName_24;
		public char DeviceName_25;
		public char DeviceName_26;
		public char DeviceName_27;
		public char DeviceName_28;
		public char DeviceName_29;
		public char DeviceName_30;
		public char DeviceName_31;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Rect32 DesktopCoordinates;

		/// <summary>
		/// To be documented.
		/// </summary>
		public int AttachedToDesktop;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiModeRotation Rotation;

		/// <summary>
		/// To be documented.
		/// </summary>
		public nint Monitor;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiOutputDesc(char* deviceName = default, Rect32 desktopCoordinates = default, int attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
		}

		/// <summary>/// To be documented./// </summary>		public unsafe DxgiOutputDesc(Span<char> deviceName = default, Rect32 desktopCoordinates = default, int attachedToDesktop = default, DxgiModeRotation rotation = default, nint monitor = default)
		{
			if (deviceName != default)
			{
				DeviceName_0 = deviceName[0];
				DeviceName_1 = deviceName[1];
				DeviceName_2 = deviceName[2];
				DeviceName_3 = deviceName[3];
				DeviceName_4 = deviceName[4];
				DeviceName_5 = deviceName[5];
				DeviceName_6 = deviceName[6];
				DeviceName_7 = deviceName[7];
				DeviceName_8 = deviceName[8];
				DeviceName_9 = deviceName[9];
				DeviceName_10 = deviceName[10];
				DeviceName_11 = deviceName[11];
				DeviceName_12 = deviceName[12];
				DeviceName_13 = deviceName[13];
				DeviceName_14 = deviceName[14];
				DeviceName_15 = deviceName[15];
				DeviceName_16 = deviceName[16];
				DeviceName_17 = deviceName[17];
				DeviceName_18 = deviceName[18];
				DeviceName_19 = deviceName[19];
				DeviceName_20 = deviceName[20];
				DeviceName_21 = deviceName[21];
				DeviceName_22 = deviceName[22];
				DeviceName_23 = deviceName[23];
				DeviceName_24 = deviceName[24];
				DeviceName_25 = deviceName[25];
				DeviceName_26 = deviceName[26];
				DeviceName_27 = deviceName[27];
				DeviceName_28 = deviceName[28];
				DeviceName_29 = deviceName[29];
				DeviceName_30 = deviceName[30];
				DeviceName_31 = deviceName[31];
			}
			DesktopCoordinates = desktopCoordinates;
			AttachedToDesktop = attachedToDesktop;
			Rotation = rotation;
			Monitor = monitor;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiModeDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiRational RefreshRate;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiModeScanlineOrder ScanlineOrdering;

		/// <summary>
		/// To be documented.
		/// </summary>
		public DxgiModeScaling Scaling;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiModeDesc(uint width = default, uint height = default, DxgiRational refreshRate = default, DxgiFormat format = default, DxgiModeScanlineOrder scanlineOrdering = default, DxgiModeScaling scaling = default)
		{
			Width = width;
			Height = height;
			RefreshRate = refreshRate;
			Format = format;
			ScanlineOrdering = scanlineOrdering;
			Scaling = scaling;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiRational
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Numerator;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Denominator;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiRational(uint numerator = default, uint denominator = default)
		{
			Numerator = numerator;
			Denominator = denominator;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxgiGammaControlCapabilities
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public int ScaleAndOffsetSupported;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MaxConvertedValue;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MinConvertedValue;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint NumGammaControlPoints;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float ControlPointPositions_0;
		public float ControlPointPositions_1;
		public float ControlPointPositions_2;
		public float ControlPointPositions_3;
		public float ControlPointPositions_4;
		public float ControlPointPositions_5;
		public float ControlPointPositions_6;
		public float ControlPointPositions_7;
		public float ControlPointPositions_8;
		public float ControlPointPositions_9;
		public float ControlPointPositions_10;
		public float ControlPointPositions_11;
		public float ControlPointPositions_12;
		public float ControlPointPositions_13;
		public float ControlPointPositions_14;
		public float ControlPointPositions_15;
		public float ControlPointPositions_16;
		public float ControlPointPositions_17;
		public float ControlPointPositions_18;
		public float ControlPointPositions_19;
		public float ControlPointPositions_20;
		public float ControlPointPositions_21;
		public float ControlPointPositions_22;
		public float ControlPointPositions_23;
		public float ControlPointPositions_24;
		public float ControlPointPositions_25;
		public float ControlPointPositions_26;
		public float ControlPointPositions_27;
		public float ControlPointPositions_28;
		public float ControlPointPositions_29;
		public float ControlPointPositions_30;
		public float ControlPointPositions_31;
		public float ControlPointPositions_32;
		public float ControlPointPositions_33;
		public float ControlPointPositions_34;
		public float ControlPointPositions_35;
		public float ControlPointPositions_36;
		public float ControlPointPositions_37;
		public float ControlPointPositions_38;
		public float ControlPointPositions_39;
		public float ControlPointPositions_40;
		public float ControlPointPositions_41;
		public float ControlPointPositions_42;
		public float ControlPointPositions_43;
		public float ControlPointPositions_44;
		public float ControlPointPositions_45;
		public float ControlPointPositions_46;
		public float ControlPointPositions_47;
		public float ControlPointPositions_48;
		public float ControlPointPositions_49;
		public float ControlPointPositions_50;
		public float ControlPointPositions_51;
		public float ControlPointPositions_52;
		public float ControlPointPositions_53;
		public float ControlPointPositions_54;
		public float ControlPointPositions_55;
		public float ControlPointPositions_56;
		public float ControlPointPositions_57;
		public float ControlPointPositions_58;
		public float ControlPointPositions_59;
		public float ControlPointPositions_60;
		public float ControlPointPositions_61;
		public float ControlPointPositions_62;
		public float ControlPointPositions_63;
		public float ControlPointPositions_64;
		public float ControlPointPositions_65;
		public float ControlPointPositions_66;
		public float ControlPointPositions_67;
		public float ControlPointPositions_68;
		public float ControlPointPositions_69;
		public float ControlPointPositions_70;
		public float ControlPointPositions_71;
		public float ControlPointPositions_72;
		public float ControlPointPositions_73;
		public float ControlPointPositions_74;
		public float ControlPointPositions_75;
		public float ControlPointPositions_76;
		public float ControlPointPositions_77;
		public float ControlPointPositions_78;
		public float ControlPointPositions_79;
		public float ControlPointPositions_80;
		public float ControlPointPositions_81;
		public float ControlPointPositions_82;
		public float ControlPointPositions_83;
		public float ControlPointPositions_84;
		public float ControlPointPositions_85;
		public float ControlPointPositions_86;
		public float ControlPointPositions_87;
		public float ControlPointPositions_88;
		public float ControlPointPositions_89;
		public float ControlPointPositions_90;
		public float ControlPointPositions_91;
		public float ControlPointPositions_92;
		public float ControlPointPositions_93;
		public float ControlPointPositions_94;
		public float ControlPointPositions_95;
		public float ControlPointPositions_96;
		public float ControlPointPositions_97;
		public float ControlPointPositions_98;
		public float ControlPointPositions_99;
		public float ControlPointPositions_100;
		public float ControlPointPositions_101;
		public float ControlPointPositions_102;
		public float ControlPointPositions_103;
		public float ControlPointPositions_104;
		public float ControlPointPositions_105;
		public float ControlPointPositions_106;
		public float ControlPointPositions_107;
		public float ControlPointPositions_108;
		public float ControlPointPositions_109;
		public float ControlPointPositions_110;
		public float ControlPointPositions_111;
		public float ControlPointPositions_112;
		public float ControlPointPositions_113;
		public float ControlPointPositions_114;
		public float ControlPointPositions_115;
		public float ControlPointPositions_116;
		public float ControlPointPositions_117;
		public float ControlPointPositions_118;
		public float ControlPointPositions_119;
		public float ControlPointPositions_120;
		public float ControlPointPositions_121;
		public float ControlPointPositions_122;
		public float ControlPointPositions_123;
		public float ControlPointPositions_124;
		public float ControlPointPositions_125;
		public float ControlPointPositions_126;
		public float ControlPointPositions_127;
		public float ControlPointPositions_128;
		public float ControlPointPositions_129;
		public float ControlPointPositions_130;
		public float ControlPointPositions_131;
		public float ControlPointPositions_132;
		public float ControlPointPositions_133;
		public float ControlPointPositions_134;
		public float ControlPointPositions_135;
		public float ControlPointPositions_136;
		public float ControlPointPositions_137;
		public float ControlPointPositions_138;
		public float ControlPointPositions_139;
		public float ControlPointPositions_140;
		public float ControlPointPositions_141;
		public float ControlPointPositions_142;
		public float ControlPointPositions_143;
		public float ControlPointPositions_144;
		public float ControlPointPositions_145;
		public float ControlPointPositions_146;
		public float ControlPointPositions_147;
		public float ControlPointPositions_148;
		public float ControlPointPositions_149;
		public float ControlPointPositions_150;
		public float ControlPointPositions_151;
		public float ControlPointPositions_152;
		public float ControlPointPositions_153;
		public float ControlPointPositions_154;
		public float ControlPointPositions_155;
		public float ControlPointPositions_156;
		public float ControlPointPositions_157;
		public float ControlPointPositions_158;
		public float ControlPointPositions_159;
		public float ControlPointPositions_160;
		public float ControlPointPositions_161;
		public float ControlPointPositions_162;
		public float ControlPointPositions_163;
		public float ControlPointPositions_164;
		public float ControlPointPositions_165;
		public float ControlPointPositions_166;
		public float ControlPointPositions_167;
		public float ControlPointPositions_168;
		public float ControlPointPositions_169;
		public float ControlPointPositions_170;
		public float ControlPointPositions_171;
		public float ControlPointPositions_172;
		public float ControlPointPositions_173;
		public float ControlPointPositions_174;
		public float ControlPointPositions_175;
		public float ControlPointPositions_176;
		public float ControlPointPositions_177;
		public float ControlPointPositions_178;
		public float ControlPointPositions_179;
		public float ControlPointPositions_180;
		public float ControlPointPositions_181;
		public float ControlPointPositions_182;
		public float ControlPointPositions_183;
		public float ControlPointPositions_184;
		public float ControlPointPositions_185;
		public float ControlPointPositions_186;
		public float ControlPointPositions_187;
		public float ControlPointPositions_188;
		public float ControlPointPositions_189;
		public float ControlPointPositions_190;
		public float ControlPointPositions_191;
		public float ControlPointPositions_192;
		public float ControlPointPositions_193;
		public float ControlPointPositions_194;
		public float ControlPointPositions_195;
		public float ControlPointPositions_196;
		public float ControlPointPositions_197;
		public float ControlPointPositions_198;
		public float ControlPointPositions_199;
		public float ControlPointPositions_200;
		public float ControlPointPositions_201;
		public float ControlPointPositions_202;
		public float ControlPointPositions_203;
		public float ControlPointPositions_204;
		public float ControlPointPositions_205;
		public float ControlPointPositions_206;
		public float ControlPointPositions_207;
		public float ControlPointPositions_208;
		public float ControlPointPositions_209;
		public float ControlPointPositions_210;
		public float ControlPointPositions_211;
		public float ControlPointPositions_212;
		public float ControlPointPositions_213;
		public float ControlPointPositions_214;
		public float ControlPointPositions_215;
		public float ControlPointPositions_216;
		public float ControlPointPositions_217;
		public float ControlPointPositions_218;
		public float ControlPointPositions_219;
		public float ControlPointPositions_220;
		public float ControlPointPositions_221;
		public float ControlPointPositions_222;
		public float ControlPointPositions_223;
		public float ControlPointPositions_224;
		public float ControlPointPositions_225;
		public float ControlPointPositions_226;
		public float ControlPointPositions_227;
		public float ControlPointPositions_228;
		public float ControlPointPositions_229;
		public float ControlPointPositions_230;
		public float ControlPointPositions_231;
		public float ControlPointPositions_232;
		public float ControlPointPositions_233;
		public float ControlPointPositions_234;
		public float ControlPointPositions_235;
		public float ControlPointPositions_236;
		public float ControlPointPositions_237;
		public float ControlPointPositions_238;
		public float ControlPointPositions_239;
		public float ControlPointPositions_240;
		public float ControlPointPositions_241;
		public float ControlPointPositions_242;
		public float ControlPointPositions_243;
		public float ControlPointPositions_244;
		public float ControlPointPositions_245;
		public float ControlPointPositions_246;
		public float ControlPointPositions_247;
		public float ControlPointPositions_248;
		public float ControlPointPositions_249;
		public float ControlPointPositions_250;
		public float ControlPointPositions_251;
		public float ControlPointPositions_252;
		public float ControlPointPositions_253;
		public float ControlPointPositions_254;
		public float ControlPointPositions_255;
		public float ControlPointPositions_256;
		public float ControlPointPositions_257;
		public float ControlPointPositions_258;
		public float ControlPointPositions_259;
		public float ControlPointPositions_260;
		public float ControlPointPositions_261;
		public float ControlPointPositions_262;
		public float ControlPointPositions_263;
		public float ControlPointPositions_264;
		public float ControlPointPositions_265;
		public float ControlPointPositions_266;
		public float ControlPointPositions_267;
		public float ControlPointPositions_268;
		public float ControlPointPositions_269;
		public float ControlPointPositions_270;
		public float ControlPointPositions_271;
		public float ControlPointPositions_272;
		public float ControlPointPositions_273;
		public float ControlPointPositions_274;
		public float ControlPointPositions_275;
		public float ControlPointPositions_276;
		public float ControlPointPositions_277;
		public float ControlPointPositions_278;
		public float ControlPointPositions_279;
		public float ControlPointPositions_280;
		public float ControlPointPositions_281;
		public float ControlPointPositions_282;
		public float ControlPointPositions_283;
		public float ControlPointPositions_284;
		public float ControlPointPositions_285;
		public float ControlPointPositions_286;
		public float ControlPointPositions_287;
		public float ControlPointPositions_288;
		public float ControlPointPositions_289;
		public float ControlPointPositions_290;
		public float ControlPointPositions_291;
		public float ControlPointPositions_292;
		public float ControlPointPositions_293;
		public float ControlPointPositions_294;
		public float ControlPointPositions_295;
		public float ControlPointPositions_296;
		public float ControlPointPositions_297;
		public float ControlPointPositions_298;
		public float ControlPointPositions_299;
		public float ControlPointPositions_300;
		public float ControlPointPositions_301;
		public float ControlPointPositions_302;
		public float ControlPointPositions_303;
		public float ControlPointPositions_304;
		public float ControlPointPositions_305;
		public float ControlPointPositions_306;
		public float ControlPointPositions_307;
		public float ControlPointPositions_308;
		public float ControlPointPositions_309;
		public float ControlPointPositions_310;
		public float ControlPointPositions_311;
		public float ControlPointPositions_312;
		public float ControlPointPositions_313;
		public float ControlPointPositions_314;
		public float ControlPointPositions_315;
		public float ControlPointPositions_316;
		public float ControlPointPositions_317;
		public float ControlPointPositions_318;
		public float ControlPointPositions_319;
		public float ControlPointPositions_320;
		public float ControlPointPositions_321;
		public float ControlPointPositions_322;
		public float ControlPointPositions_323;
		public float ControlPointPositions_324;
		public float ControlPointPositions_325;
		public float ControlPointPositions_326;
		public float ControlPointPositions_327;
		public float ControlPointPositions_328;
		public float ControlPointPositions_329;
		public float ControlPointPositions_330;
		public float ControlPointPositions_331;
		public float ControlPointPositions_332;
		public float ControlPointPositions_333;
		public float ControlPointPositions_334;
		public float ControlPointPositions_335;
		public float ControlPointPositions_336;
		public float ControlPointPositions_337;
		public float ControlPointPositions_338;
		public float ControlPointPositions_339;
		public float ControlPointPositions_340;
		public float ControlPointPositions_341;
		public float ControlPointPositions_342;
		public float ControlPointPositions_343;
		public float ControlPointPositions_344;
		public float ControlPointPositions_345;
		public float ControlPointPositions_346;
		public float ControlPointPositions_347;
		public float ControlPointPositions_348;
		public float ControlPointPositions_349;
		public float ControlPointPositions_350;
		public float ControlPointPositions_351;
		public float ControlPointPositions_352;
		public float ControlPointPositions_353;
		public float ControlPointPositions_354;
		public float ControlPointPositions_355;
		public float ControlPointPositions_356;
		public float ControlPointPositions_357;
		public float ControlPointPositions_358;
		public float ControlPointPositions_359;
		public float ControlPointPositions_360;
		public float ControlPointPositions_361;
		public float ControlPointPositions_362;
		public float ControlPointPositions_363;
		public float ControlPointPositions_364;
		public float ControlPointPositions_365;
		public float ControlPointPositions_366;
		public float ControlPointPositions_367;
		public float ControlPointPositions_368;
		public float ControlPointPositions_369;
		public float ControlPointPositions_370;
		public float ControlPointPositions_371;
		public float ControlPointPositions_372;
		public float ControlPointPositions_373;
		public float ControlPointPositions_374;
		public float ControlPointPositions_375;
		public float ControlPointPositions_376;
		public float ControlPointPositions_377;
		public float ControlPointPositions_378;
		public float ControlPointPositions_379;
		public float ControlPointPositions_380;
		public float ControlPointPositions_381;
		public float ControlPointPositions_382;
		public float ControlPointPositions_383;
		public float ControlPointPositions_384;
		public float ControlPointPositions_385;
		public float ControlPointPositions_386;
		public float ControlPointPositions_387;
		public float ControlPointPositions_388;
		public float ControlPointPositions_389;
		public float ControlPointPositions_390;
		public float ControlPointPositions_391;
		public float ControlPointPositions_392;
		public float ControlPointPositions_393;
		public float ControlPointPositions_394;
		public float ControlPointPositions_395;
		public float ControlPointPositions_396;
		public float ControlPointPositions_397;
		public float ControlPointPositions_398;
		public float ControlPointPositions_399;
		public float ControlPointPositions_400;
		public float ControlPointPositions_401;
		public float ControlPointPositions_402;
		public float ControlPointPositions_403;
		public float ControlPointPositions_404;
		public float ControlPointPositions_405;
		public float ControlPointPositions_406;
		public float ControlPointPositions_407;
		public float ControlPointPositions_408;
		public float ControlPointPositions_409;
		public float ControlPointPositions_410;
		public float ControlPointPositions_411;
		public float ControlPointPositions_412;
		public float ControlPointPositions_413;
		public float ControlPointPositions_414;
		public float ControlPointPositions_415;
		public float ControlPointPositions_416;
		public float ControlPointPositions_417;
		public float ControlPointPositions_418;
		public float ControlPointPositions_419;
		public float ControlPointPositions_420;
		public float ControlPointPositions_421;
		public float ControlPointPositions_422;
		public float ControlPointPositions_423;
		public float ControlPointPositions_424;
		public float ControlPointPositions_425;
		public float ControlPointPositions_426;
		public float ControlPointPositions_427;
		public float ControlPointPositions_428;
		public float ControlPointPositions_429;
		public float ControlPointPositions_430;
		public float ControlPointPositions_431;
		public float ControlPointPositions_432;
		public float ControlPointPositions_433;
		public float ControlPointPositions_434;
		public float ControlPointPositions_435;
		public float ControlPointPositions_436;
		public float ControlPointPositions_437;
		public float ControlPointPositions_438;
		public float ControlPointPositions_439;
		public float ControlPointPositions_440;
		public float ControlPointPositions_441;
		public float ControlPointPositions_442;
		public float ControlPointPositions_443;
		public float ControlPointPositions_444;
		public float ControlPointPositions_445;
		public float ControlPointPositions_446;
		public float ControlPointPositions_447;
		public float ControlPointPositions_448;
		public float ControlPointPositions_449;
		public float ControlPointPositions_450;
		public float ControlPointPositions_451;
		public float ControlPointPositions_452;
		public float ControlPointPositions_453;
		public float ControlPointPositions_454;
		public float ControlPointPositions_455;
		public float ControlPointPositions_456;
		public float ControlPointPositions_457;
		public float ControlPointPositions_458;
		public float ControlPointPositions_459;
		public float ControlPointPositions_460;
		public float ControlPointPositions_461;
		public float ControlPointPositions_462;
		public float ControlPointPositions_463;
		public float ControlPointPositions_464;
		public float ControlPointPositions_465;
		public float ControlPointPositions_466;
		public float ControlPointPositions_467;
		public float ControlPointPositions_468;
		public float ControlPointPositions_469;
		public float ControlPointPositions_470;
		public float ControlPointPositions_471;
		public float ControlPointPositions_472;
		public float ControlPointPositions_473;
		public float ControlPointPositions_474;
		public float ControlPointPositions_475;
		public float ControlPointPositions_476;
		public float ControlPointPositions_477;
		public float ControlPointPositions_478;
		public float ControlPointPositions_479;
		public float ControlPointPositions_480;
		public float ControlPointPositions_481;
		public float ControlPointPositions_482;
		public float ControlPointPositions_483;
		public float ControlPointPositions_484;
		public float ControlPointPositions_485;
		public float ControlPointPositions_486;
		public float ControlPointPositions_487;
		public float ControlPointPositions_488;
		public float ControlPointPositions_489;
		public float ControlPointPositions_490;
		public float ControlPointPositions_491;
		public float ControlPointPositions_492;
		public float ControlPointPositions_493;
		public float ControlPointPositions_494;
		public float ControlPointPositions_495;
		public float ControlPointPositions_496;
		public float ControlPointPositions_497;
		public float ControlPointPositions_498;
		public float ControlPointPositions_499;
		public float ControlPointPositions_500;
		public float ControlPointPositions_501;
		public float ControlPointPositions_502;
		public float ControlPointPositions_503;
		public float ControlPointPositions_504;
		public float ControlPointPositions_505;
		public float ControlPointPositions_506;
		public float ControlPointPositions_507;
		public float ControlPointPositions_508;
		public float ControlPointPositions_509;
		public float ControlPointPositions_510;
		public float ControlPointPositions_511;
		public float ControlPointPositions_512;
		public float ControlPointPositions_513;
		public float ControlPointPositions_514;
		public float ControlPointPositions_515;
		public float ControlPointPositions_516;
		public float ControlPointPositions_517;
		public float ControlPointPositions_518;
		public float ControlPointPositions_519;
		public float ControlPointPositions_520;
		public float ControlPointPositions_521;
		public float ControlPointPositions_522;
		public float ControlPointPositions_523;
		public float ControlPointPositions_524;
		public float ControlPointPositions_525;
		public float ControlPointPositions_526;
		public float ControlPointPositions_527;
		public float ControlPointPositions_528;
		public float ControlPointPositions_529;
		public float ControlPointPositions_530;
		public float ControlPointPositions_531;
		public float ControlPointPositions_532;
		public float ControlPointPositions_533;
		public float ControlPointPositions_534;
		public float ControlPointPositions_535;
		public float ControlPointPositions_536;
		public float ControlPointPositions_537;
		public float ControlPointPositions_538;
		public float ControlPointPositions_539;
		public float ControlPointPositions_540;
		public float ControlPointPositions_541;
		public float ControlPointPositions_542;
		public float ControlPointPositions_543;
		public float ControlPointPositions_544;
		public float ControlPointPositions_545;
		public float ControlPointPositions_546;
		public float ControlPointPositions_547;
		public float ControlPointPositions_548;
		public float ControlPointPositions_549;
		public float ControlPointPositions_550;
		public float ControlPointPositions_551;
		public float ControlPointPositions_552;
		public float ControlPointPositions_553;
		public float ControlPointPositions_554;
		public float ControlPointPositions_555;
		public float ControlPointPositions_556;
		public float ControlPointPositions_557;
		public float ControlPointPositions_558;
		public float ControlPointPositions_559;
		public float ControlPointPositions_560;
		public float ControlPointPositions_561;
		public float ControlPointPositions_562;
		public float ControlPointPositions_563;
		public float ControlPointPositions_564;
		public float ControlPointPositions_565;
		public float ControlPointPositions_566;
		public float ControlPointPositions_567;
		public float ControlPointPositions_568;
		public float ControlPointPositions_569;
		public float ControlPointPositions_570;
		public float ControlPointPositions_571;
		public float ControlPointPositions_572;
		public float ControlPointPositions_573;
		public float ControlPointPositions_574;
		public float ControlPointPositions_575;
		public float ControlPointPositions_576;
		public float ControlPointPositions_577;
		public float ControlPointPositions_578;
		public float ControlPointPositions_579;
		public float ControlPointPositions_580;
		public float ControlPointPositions_581;
		public float ControlPointPositions_582;
		public float ControlPointPositions_583;
		public float ControlPointPositions_584;
		public float ControlPointPositions_585;
		public float ControlPointPositions_586;
		public float ControlPointPositions_587;
		public float ControlPointPositions_588;
		public float ControlPointPositions_589;
		public float ControlPointPositions_590;
		public float ControlPointPositions_591;
		public float ControlPointPositions_592;
		public float ControlPointPositions_593;
		public float ControlPointPositions_594;
		public float ControlPointPositions_595;
		public float ControlPointPositions_596;
		public float ControlPointPositions_597;
		public float ControlPointPositions_598;
		public float ControlPointPositions_599;
		public float ControlPointPositions_600;
		public float ControlPointPositions_601;
		public float ControlPointPositions_602;
		public float ControlPointPositions_603;
		public float ControlPointPositions_604;
		public float ControlPointPositions_605;
		public float ControlPointPositions_606;
		public float ControlPointPositions_607;
		public float ControlPointPositions_608;
		public float ControlPointPositions_609;
		public float ControlPointPositions_610;
		public float ControlPointPositions_611;
		public float ControlPointPositions_612;
		public float ControlPointPositions_613;
		public float ControlPointPositions_614;
		public float ControlPointPositions_615;
		public float ControlPointPositions_616;
		public float ControlPointPositions_617;
		public float ControlPointPositions_618;
		public float ControlPointPositions_619;
		public float ControlPointPositions_620;
		public float ControlPointPositions_621;
		public float ControlPointPositions_622;
		public float ControlPointPositions_623;
		public float ControlPointPositions_624;
		public float ControlPointPositions_625;
		public float ControlPointPositions_626;
		public float ControlPointPositions_627;
		public float ControlPointPositions_628;
		public float ControlPointPositions_629;
		public float ControlPointPositions_630;
		public float ControlPointPositions_631;
		public float ControlPointPositions_632;
		public float ControlPointPositions_633;
		public float ControlPointPositions_634;
		public float ControlPointPositions_635;
		public float ControlPointPositions_636;
		public float ControlPointPositions_637;
		public float ControlPointPositions_638;
		public float ControlPointPositions_639;
		public float ControlPointPositions_640;
		public float ControlPointPositions_641;
		public float ControlPointPositions_642;
		public float ControlPointPositions_643;
		public float ControlPointPositions_644;
		public float ControlPointPositions_645;
		public float ControlPointPositions_646;
		public float ControlPointPositions_647;
		public float ControlPointPositions_648;
		public float ControlPointPositions_649;
		public float ControlPointPositions_650;
		public float ControlPointPositions_651;
		public float ControlPointPositions_652;
		public float ControlPointPositions_653;
		public float ControlPointPositions_654;
		public float ControlPointPositions_655;
		public float ControlPointPositions_656;
		public float ControlPointPositions_657;
		public float ControlPointPositions_658;
		public float ControlPointPositions_659;
		public float ControlPointPositions_660;
		public float ControlPointPositions_661;
		public float ControlPointPositions_662;
		public float ControlPointPositions_663;
		public float ControlPointPositions_664;
		public float ControlPointPositions_665;
		public float ControlPointPositions_666;
		public float ControlPointPositions_667;
		public float ControlPointPositions_668;
		public float ControlPointPositions_669;
		public float ControlPointPositions_670;
		public float ControlPointPositions_671;
		public float ControlPointPositions_672;
		public float ControlPointPositions_673;
		public float ControlPointPositions_674;
		public float ControlPointPositions_675;
		public float ControlPointPositions_676;
		public float ControlPointPositions_677;
		public float ControlPointPositions_678;
		public float ControlPointPositions_679;
		public float ControlPointPositions_680;
		public float ControlPointPositions_681;
		public float ControlPointPositions_682;
		public float ControlPointPositions_683;
		public float ControlPointPositions_684;
		public float ControlPointPositions_685;
		public float ControlPointPositions_686;
		public float ControlPointPositions_687;
		public float ControlPointPositions_688;
		public float ControlPointPositions_689;
		public float ControlPointPositions_690;
		public float ControlPointPositions_691;
		public float ControlPointPositions_692;
		public float ControlPointPositions_693;
		public float ControlPointPositions_694;
		public float ControlPointPositions_695;
		public float ControlPointPositions_696;
		public float ControlPointPositions_697;
		public float ControlPointPositions_698;
		public float ControlPointPositions_699;
		public float ControlPointPositions_700;
		public float ControlPointPositions_701;
		public float ControlPointPositions_702;
		public float ControlPointPositions_703;
		public float ControlPointPositions_704;
		public float ControlPointPositions_705;
		public float ControlPointPositions_706;
		public float ControlPointPositions_707;
		public float ControlPointPositions_708;
		public float ControlPointPositions_709;
		public float ControlPointPositions_710;
		public float ControlPointPositions_711;
		public float ControlPointPositions_712;
		public float ControlPointPositions_713;
		public float ControlPointPositions_714;
		public float ControlPointPositions_715;
		public float ControlPointPositions_716;
		public float ControlPointPositions_717;
		public float ControlPointPositions_718;
		public float ControlPointPositions_719;
		public float ControlPointPositions_720;
		public float ControlPointPositions_721;
		public float ControlPointPositions_722;
		public float ControlPointPositions_723;
		public float ControlPointPositions_724;
		public float ControlPointPositions_725;
		public float ControlPointPositions_726;
		public float ControlPointPositions_727;
		public float ControlPointPositions_728;
		public float ControlPointPositions_729;
		public float ControlPointPositions_730;
		public float ControlPointPositions_731;
		public float ControlPointPositions_732;
		public float ControlPointPositions_733;
		public float ControlPointPositions_734;
		public float ControlPointPositions_735;
		public float ControlPointPositions_736;
		public float ControlPointPositions_737;
		public float ControlPointPositions_738;
		public float ControlPointPositions_739;
		public float ControlPointPositions_740;
		public float ControlPointPositions_741;
		public float ControlPointPositions_742;
		public float ControlPointPositions_743;
		public float ControlPointPositions_744;
		public float ControlPointPositions_745;
		public float ControlPointPositions_746;
		public float ControlPointPositions_747;
		public float ControlPointPositions_748;
		public float ControlPointPositions_749;
		public float ControlPointPositions_750;
		public float ControlPointPositions_751;
		public float ControlPointPositions_752;
		public float ControlPointPositions_753;
		public float ControlPointPositions_754;
		public float ControlPointPositions_755;
		public float ControlPointPositions_756;
		public float ControlPointPositions_757;
		public float ControlPointPositions_758;
		public float ControlPointPositions_759;
		public float ControlPointPositions_760;
		public float ControlPointPositions_761;
		public float ControlPointPositions_762;
		public float ControlPointPositions_763;
		public float ControlPointPositions_764;
		public float ControlPointPositions_765;
		public float ControlPointPositions_766;
		public float ControlPointPositions_767;
		public float ControlPointPositions_768;
		public float ControlPointPositions_769;
		public float ControlPointPositions_770;
		public float ControlPointPositions_771;
		public float ControlPointPositions_772;
		public float ControlPointPositions_773;
		public float ControlPointPositions_774;
		public float ControlPointPositions_775;
		public float ControlPointPositions_776;
		public float ControlPointPositions_777;
		public float ControlPointPositions_778;
		public float ControlPointPositions_779;
		public float ControlPointPositions_780;
		public float ControlPointPositions_781;
		public float ControlPointPositions_782;
		public float ControlPointPositions_783;
		public float ControlPointPositions_784;
		public float ControlPointPositions_785;
		public float ControlPointPositions_786;
		public float ControlPointPositions_787;
		public float ControlPointPositions_788;
		public float ControlPointPositions_789;
		public float ControlPointPositions_790;
		public float ControlPointPositions_791;
		public float ControlPointPositions_792;
		public float ControlPointPositions_793;
		public float ControlPointPositions_794;
		public float ControlPointPositions_795;
		public float ControlPointPositions_796;
		public float ControlPointPositions_797;
		public float ControlPointPositions_798;
		public float ControlPointPositions_799;
		public float ControlPointPositions_800;
		public float ControlPointPositions_801;
		public float ControlPointPositions_802;
		public float ControlPointPositions_803;
		public float ControlPointPositions_804;
		public float ControlPointPositions_805;
		public float ControlPointPositions_806;
		public float ControlPointPositions_807;
		public float ControlPointPositions_808;
		public float ControlPointPositions_809;
		public float ControlPointPositions_810;
		public float ControlPointPositions_811;
		public float ControlPointPositions_812;
		public float ControlPointPositions_813;
		public float ControlPointPositions_814;
		public float ControlPointPositions_815;
		public float ControlPointPositions_816;
		public float ControlPointPositions_817;
		public float ControlPointPositions_818;
		public float ControlPointPositions_819;
		public float ControlPointPositions_820;
		public float ControlPointPositions_821;
		public float ControlPointPositions_822;
		public float ControlPointPositions_823;
		public float ControlPointPositions_824;
		public float ControlPointPositions_825;
		public float ControlPointPositions_826;
		public float ControlPointPositions_827;
		public float ControlPointPositions_828;
		public float ControlPointPositions_829;
		public float ControlPointPositions_830;
		public float ControlPointPositions_831;
		public float ControlPointPositions_832;
		public float ControlPointPositions_833;
		public float ControlPointPositions_834;
		public float ControlPointPositions_835;
		public float ControlPointPositions_836;
		public float ControlPointPositions_837;
		public float ControlPointPositions_838;
		public float ControlPointPositions_839;
		public float ControlPointPositions_840;
		public float ControlPointPositions_841;
		public float ControlPointPositions_842;
		public float ControlPointPositions_843;
		public float ControlPointPositions_844;
		public float ControlPointPositions_845;
		public float ControlPointPositions_846;
		public float ControlPointPositions_847;
		public float ControlPointPositions_848;
		public float ControlPointPositions_849;
		public float ControlPointPositions_850;
		public float ControlPointPositions_851;
		public float ControlPointPositions_852;
		public float ControlPointPositions_853;
		public float ControlPointPositions_854;
		public float ControlPointPositions_855;
		public float ControlPointPositions_856;
		public float ControlPointPositions_857;
		public float ControlPointPositions_858;
		public float ControlPointPositions_859;
		public float ControlPointPositions_860;
		public float ControlPointPositions_861;
		public float ControlPointPositions_862;
		public float ControlPointPositions_863;
		public float ControlPointPositions_864;
		public float ControlPointPositions_865;
		public float ControlPointPositions_866;
		public float ControlPointPositions_867;
		public float ControlPointPositions_868;
		public float ControlPointPositions_869;
		public float ControlPointPositions_870;
		public float ControlPointPositions_871;
		public float ControlPointPositions_872;
		public float ControlPointPositions_873;
		public float ControlPointPositions_874;
		public float ControlPointPositions_875;
		public float ControlPointPositions_876;
		public float ControlPointPositions_877;
		public float ControlPointPositions_878;
		public float ControlPointPositions_879;
		public float ControlPointPositions_880;
		public float ControlPointPositions_881;
		public float ControlPointPositions_882;
		public float ControlPointPositions_883;
		public float ControlPointPositions_884;
		public float ControlPointPositions_885;
		public float ControlPointPositions_886;
		public float ControlPointPositions_887;
		public float ControlPointPositions_888;
		public float ControlPointPositions_889;
		public float ControlPointPositions_890;
		public float ControlPointPositions_891;
		public float ControlPointPositions_892;
		public float ControlPointPositions_893;
		public float ControlPointPositions_894;
		public float ControlPointPositions_895;
		public float ControlPointPositions_896;
		public float ControlPointPositions_897;
		public float ControlPointPositions_898;
		public float ControlPointPositions_899;
		public float ControlPointPositions_900;
		public float ControlPointPositions_901;
		public float ControlPointPositions_902;
		public float ControlPointPositions_903;
		public float ControlPointPositions_904;
		public float ControlPointPositions_905;
		public float ControlPointPositions_906;
		public float ControlPointPositions_907;
		public float ControlPointPositions_908;
		public float ControlPointPositions_909;
		public float ControlPointPositions_910;
		public float ControlPointPositions_911;
		public float ControlPointPositions_912;
		public float ControlPointPositions_913;
		public float ControlPointPositions_914;
		public float ControlPointPositions_915;
		public float ControlPointPositions_916;
		public float ControlPointPositions_917;
		public float ControlPointPositions_918;
		public float ControlPointPositions_919;
		public float ControlPointPositions_920;
		public float ControlPointPositions_921;
		public float ControlPointPositions_922;
		public float ControlPointPositions_923;
		public float ControlPointPositions_924;
		public float ControlPointPositions_925;
		public float ControlPointPositions_926;
		public float ControlPointPositions_927;
		public float ControlPointPositions_928;
		public float ControlPointPositions_929;
		public float ControlPointPositions_930;
		public float ControlPointPositions_931;
		public float ControlPointPositions_932;
		public float ControlPointPositions_933;
		public float ControlPointPositions_934;
		public float ControlPointPositions_935;
		public float ControlPointPositions_936;
		public float ControlPointPositions_937;
		public float ControlPointPositions_938;
		public float ControlPointPositions_939;
		public float ControlPointPositions_940;
		public float ControlPointPositions_941;
		public float ControlPointPositions_942;
		public float ControlPointPositions_943;
		public float ControlPointPositions_944;
		public float ControlPointPositions_945;
		public float ControlPointPositions_946;
		public float ControlPointPositions_947;
		public float ControlPointPositions_948;
		public float ControlPointPositions_949;
		public float ControlPointPositions_950;
		public float ControlPointPositions_951;
		public float ControlPointPositions_952;
		public float ControlPointPositions_953;
		public float ControlPointPositions_954;
		public float ControlPointPositions_955;
		public float ControlPointPositions_956;
		public float ControlPointPositions_957;
		public float ControlPointPositions_958;
		public float ControlPointPositions_959;
		public float ControlPointPositions_960;
		public float ControlPointPositions_961;
		public float ControlPointPositions_962;
		public float ControlPointPositions_963;
		public float ControlPointPositions_964;
		public float ControlPointPositions_965;
		public float ControlPointPositions_966;
		public float ControlPointPositions_967;
		public float ControlPointPositions_968;
		public float ControlPointPositions_969;
		public float ControlPointPositions_970;
		public float ControlPointPositions_971;
		public float ControlPointPositions_972;
		public float ControlPointPositions_973;
		public float ControlPointPositions_974;
		public float ControlPointPositions_975;
		public float ControlPointPositions_976;
		public float ControlPointPositions_977;
		public float ControlPointPositions_978;
		public float ControlPointPositions_979;
		public float ControlPointPositions_980;
		public float ControlPointPositions_981;
		public float ControlPointPositions_982;
		public float ControlPointPositions_983;
		public float ControlPointPositions_984;
		public float ControlPointPositions_985;
		public float ControlPointPositions_986;
		public float ControlPointPositions_987;
		public float ControlPointPositions_988;
		public float ControlPointPositions_989;
		public float ControlPointPositions_990;
		public float ControlPointPositions_991;
		public float ControlPointPositions_992;
		public float ControlPointPositions_993;
		public float ControlPointPositions_994;
		public float ControlPointPositions_995;
		public float ControlPointPositions_996;
		public float ControlPointPositions_997;
		public float ControlPointPositions_998;
		public float ControlPointPositions_999;
		public float ControlPointPositions_1000;
		public float ControlPointPositions_1001;
		public float ControlPointPositions_1002;
		public float ControlPointPositions_1003;
		public float ControlPointPositions_1004;
		public float ControlPointPositions_1005;
		public float ControlPointPositions_1006;
		public float ControlPointPositions_1007;
		public float ControlPointPositions_1008;
		public float ControlPointPositions_1009;
		public float ControlPointPositions_1010;
		public float ControlPointPositions_1011;
		public float ControlPointPositions_1012;
		public float ControlPointPositions_1013;
		public float ControlPointPositions_1014;
		public float ControlPointPositions_1015;
		public float ControlPointPositions_1016;
		public float ControlPointPositions_1017;
		public float ControlPointPositions_1018;
		public float ControlPointPositions_1019;
		public float ControlPointPositions_1020;
		public float ControlPointPositions_1021;
		public float ControlPointPositions_1022;
		public float ControlPointPositions_1023;
		public float ControlPointPositions_1024;


		/// <summary>/// To be documented./// </summary>		public unsafe DxgiGammaControlCapabilities(int scaleAndOffsetSupported = default, float maxConvertedValue = default, float minConvertedValue = default, uint numGammaControlPoints = default, float* controlPointPositions = default)
		{
			ScaleAndOffsetSupported = scaleAndOffsetSupported;
			MaxConvertedValue = maxConvertedValue;
			MinConvertedValue = minConvertedValue;
			NumGammaControlPoints = numGammaControlPoints;
			if (controlPointPositions != default)
			{
				ControlPointPositions_0 = controlPointPositions[0];
				ControlPointPositions_1 = controlPointPositions[1];
				ControlPointPositions_2 = controlPointPositions[2];
				ControlPointPositions_3 = controlPointPositions[3];
				ControlPointPositions_4 = controlPointPositions[4];
				ControlPointPositions_5 = controlPointPositions[5];
				ControlPointPositions_6 = controlPointPositions[6];
				ControlPointPositions_7 = controlPointPositions[7];
				ControlPointPositions_8 = controlPointPositions[8];
				ControlPointPositions_9 = controlPointPositions[9];
				ControlPointPositions_10 = controlPointPositions[10];
				ControlPointPositions_11 = controlPointPositions[11];
				ControlPointPositions_12 = controlPointPositions[12];
				ControlPointPositions_13 = controlPointPositions[13];
				ControlPointPositions_14 = controlPointPositions[14];
				ControlPointPositions_15 = controlPointPositions[15];
				ControlPointPositions_16 = controlPointPositions[16];
				ControlPointPositions_17 = controlPointPositions[17];
				ControlPointPositions_18 = controlPointPositions[18];
				ControlPointPositions_19 = controlPointPositions[19];
				ControlPointPositions_20 = controlPointPositions[20];
				ControlPointPositions_21 = controlPointPositions[21];
				ControlPointPositions_22 = controlPointPositions[22];
				ControlPointPositions_23 = controlPointPositions[23];
				ControlPointPositions_24 = controlPointPositions[24];
				ControlPointPositions_25 = controlPointPositions[25];
				ControlPointPositions_26 = controlPointPositions[26];
				ControlPointPositions_27 = controlPointPositions[27];
				ControlPointPositions_28 = controlPointPositions[28];
				ControlPointPositions_29 = controlPointPositions[29];
				ControlPointPositions_30 = controlPointPositions[30];
				ControlPointPositions_31 = controlPointPositions[31];
				ControlPointPositions_32 = controlPointPositions[32];
				ControlPointPositions_33 = controlPointPositions[33];
				ControlPointPositions_34 = controlPointPositions[34];
				ControlPointPositions_35 = controlPointPositions[35];
				ControlPointPositions_36 = controlPointPositions[36];
				ControlPointPositions_37 = controlPointPositions[37];
				ControlPointPositions_38 = controlPointPositions[38];
				ControlPointPositions_39 = controlPointPositions[39];
				ControlPointPositions_40 = controlPointPositions[40];
				ControlPointPositions_41 = controlPointPositions[41];
				ControlPointPositions_42 = controlPointPositions[42];
				ControlPointPositions_43 = controlPointPositions[43];
				ControlPointPositions_44 = controlPointPositions[44];
				ControlPointPositions_45 = controlPointPositions[45];
				ControlPointPositions_46 = controlPointPositions[46];
				ControlPointPositions_47 = controlPointPositions[47];
				ControlPointPositions_48 = controlPointPositions[48];
				ControlPointPositions_49 = controlPointPositions[49];
				ControlPointPositions_50 = controlPointPositions[50];
				ControlPointPositions_51 = controlPointPositions[51];
				ControlPointPositions_52 = controlPointPositions[52];
				ControlPointPositions_53 = controlPointPositions[53];
				ControlPointPositions_54 = controlPointPositions[54];
				ControlPointPositions_55 = controlPointPositions[55];
				ControlPointPositions_56 = controlPointPositions[56];
				ControlPointPositions_57 = controlPointPositions[57];
				ControlPointPositions_58 = controlPointPositions[58];
				ControlPointPositions_59 = controlPointPositions[59];
				ControlPointPositions_60 = controlPointPositions[60];
				ControlPointPositions_61 = controlPointPositions[61];
				ControlPointPositions_62 = controlPointPositions[62];
				ControlPointPositions_63 = controlPointPositions[63];
				ControlPointPositions_64 = controlPointPositions[64];
				ControlPointPositions_65 = controlPointPositions[65];
				ControlPointPositions_66 = controlPointPositions[66];
				ControlPointPositions_67 = controlPointPositions[67];
				ControlPointPositions_68 = controlPointPositions[68];
				ControlPointPositions_69 = controlPointPositions[69];
				ControlPointPositions_70 = controlPointPositions[70];
				ControlPointPositions_71 = controlPointPositions[71];
				ControlPointPositions_72 = controlPointPositions[72];
				ControlPointPositions_73 = controlPointPositions[73];
				ControlPointPositions_74 = controlPointPositions[74];
				ControlPointPositions_75 = controlPointPositions[75];
				ControlPointPositions_76 = controlPointPositions[76];
				ControlPointPositions_77 = controlPointPositions[77];
				ControlPointPositions_78 = controlPointPositions[78];
				ControlPointPositions_79 = controlPointPositions[79];
				ControlPointPositions_80 = controlPointPositions[80];
				ControlPointPositions_81 = controlPointPositions[81];
				ControlPointPositions_82 = controlPointPositions[82];
				ControlPointPositions_83 = controlPointPositions[83];
				ControlPointPositions_84 = controlPointPositions[84];
				ControlPointPositions_85 = controlPointPositions[85];
				ControlPointPositions_86 = controlPointPositions[86];
				ControlPointPositions_87 = controlPointPositions[87];
				ControlPointPositions_88 = controlPointPositions[88];
				ControlPointPositions_89 = controlPointPositions[89];
				ControlPointPositions_90 = controlPointPositions[90];
				ControlPointPositions_91 = controlPointPositions[91];
				ControlPointPositions_92 = controlPointPositions[92];
				ControlPointPositions_93 = controlPointPositions[93];
				ControlPointPositions_94 = controlPointPositions[94];
				ControlPointPositions_95 = controlPointPositions[95];
				ControlPointPositions_96 = controlPointPositions[96];
				ControlPointPositions_97 = controlPointPositions[97];
				ControlPointPositions_98 = controlPointPositions[98];
				ControlPointPositions_99 = controlPointPositions[99];
				ControlPointPositions_100 = controlPointPositions[100];
				ControlPointPositions_101 = controlPointPositions[101];
				ControlPointPositions_102 = controlPointPositions[102];
				ControlPointPositions_103 = controlPointPositions[103];
				ControlPointPositions_104 = controlPointPositions[104];
				ControlPointPositions_105 = controlPointPositions[105];
				ControlPointPositions_106 = controlPointPositions[106];
				ControlPointPositions_107 = controlPointPositions[107];
				ControlPointPositions_108 = controlPointPositions[108];
				ControlPointPositions_109 = controlPointPositions[109];
				ControlPointPositions_110 = controlPointPositions[110];
				ControlPointPositions_111 = controlPointPositions[111];
				ControlPointPositions_112 = controlPointPositions[112];
				ControlPointPositions_113 = controlPointPositions[113];
				ControlPointPositions_114 = controlPointPositions[114];
				ControlPointPositions_115 = controlPointPositions[115];
				ControlPointPositions_116 = controlPointPositions[116];
				ControlPointPositions_117 = controlPointPositions[117];
				ControlPointPositions_118 = controlPointPositions[118];
				ControlPointPositions_119 = controlPointPositions[119];
				ControlPointPositions_120 = controlPointPositions[120];
				ControlPointPositions_121 = controlPointPositions[121];
				ControlPointPositions_122 = controlPointPositions[122];
				ControlPointPositions_123 = controlPointPositions[123];
				ControlPointPositions_124 = controlPointPositions[124];
				ControlPointPositions_125 = controlPointPositions[125];
				ControlPointPositions_126 = controlPointPositions[126];
				ControlPointPositions_127 = controlPointPositions[127];
				ControlPointPositions_128 = controlPointPositions[128];
				ControlPointPositions_129 = controlPointPositions[129];
				ControlPointPositions_130 = controlPointPositions[130];
				ControlPointPositions_131 = controlPointPositions[131];
				ControlPointPositions_132 = controlPointPositions[132];
				ControlPointPositions_133 = controlPointPositions[133];
				ControlPointPositions_134 = controlPointPositions[134];
				ControlPointPositions_135 = controlPointPositions[135];
				ControlPointPositions_136 = controlPointPositions[136];
				ControlPointPositions_137 = controlPointPositions[137];
				ControlPointPositions_138 = controlPointPositions[138];
				ControlPointPositions_139 = controlPointPositions[139];
				ControlPointPositions_140 = controlPointPositions[140];
				ControlPointPositions_141 = controlPointPositions[141];
				ControlPointPositions_142 = controlPointPositions[142];
				ControlPointPositions_143 = controlPointPositions[143];
				ControlPointPositions_144 = controlPointPositions[144];
				ControlPointPositions_145 = controlPointPositions[145];
				ControlPointPositions_146 = controlPointPositions[146];
				ControlPointPositions_147 = controlPointPositions[147];
				ControlPointPositions_148 = controlPointPositions[148];
				ControlPointPositions_149 = controlPointPositions[149];
				ControlPointPositions_150 = controlPointPositions[150];
				ControlPointPositions_151 = controlPointPositions[151];
				ControlPointPositions_152 = controlPointPositions[152];
				ControlPointPositions_153 = controlPointPositions[153];
				ControlPointPositions_154 = controlPointPositions[154];
				ControlPointPositions_155 = controlPointPositions[155];
				ControlPointPositions_156 = controlPointPositions[156];
				ControlPointPositions_157 = controlPointPositions[157];
				ControlPointPositions_158 = controlPointPositions[158];
				ControlPointPositions_159 = controlPointPositions[159];
				ControlPointPositions_160 = controlPointPositions[160];
				ControlPointPositions_161 = controlPointPositions[161];
				ControlPointPositions_162 = controlPointPositions[162];
				ControlPointPositions_163 = controlPointPositions[163];
				ControlPointPositions_164 = controlPointPositions[164];
				ControlPointPositions_165 = controlPointPositions[165];
				ControlPointPositions_166 = controlPointPositions[166];
				ControlPointPositions_167 = controlPointPositions[167];
				ControlPointPositions_168 = controlPointPositions[168];
				ControlPointPositions_169 = controlPointPositions[169];
				ControlPointPositions_170 = controlPointPositions[170];
				ControlPointPositions_171 = controlPointPositions[171];
				ControlPointPositions_172 = controlPointPositions[172];
				ControlPointPositions_173 = controlPointPositions[173];
				ControlPointPositions_174 = controlPointPositions[174];
				ControlPointPositions_175 = controlPointPositions[175];
				ControlPointPositions_176 = controlPointPositions[176];
				ControlPointPositions_177 = controlPointPositions[177];
				ControlPointPositions_178 = controlPointPositions[178];
				ControlPointPositions_179 = controlPointPositions[179];
				ControlPointPositions_180 = controlPointPositions[180];
				ControlPointPositions_181 = controlPointPositions[181];
				ControlPointPositions_182 = controlPointPositions[182];
				ControlPointPositions_183 = controlPointPositions[183];
				ControlPointPositions_184 = controlPointPositions[184];
				ControlPointPositions_185 = controlPointPositions[185];
				ControlPointPositions_186 = controlPointPositions[186];
				ControlPointPositions_187 = controlPointPositions[187];
				ControlPointPositions_188 = controlPointPositions[188];
				ControlPointPositions_189 = controlPointPositions[189];
				ControlPointPositions_190 = controlPointPositions[190];
				ControlPointPositions_191 = controlPointPositions[191];
				ControlPointPositions_192 = controlPointPositions[192];
				ControlPointPositions_193 = controlPointPositions[193];
				ControlPointPositions_194 = controlPointPositions[194];
				ControlPointPositions_195 = controlPointPositions[195];
				ControlPointPositions_196 = controlPointPositions[196];
				ControlPointPositions_197 = controlPointPositions[197];
				ControlPointPositions_198 = controlPointPositions[198];
				ControlPointPositions_199 = controlPointPositions[199];
				ControlPointPositions_200 = controlPointPositions[200];
				ControlPointPositions_201 = controlPointPositions[201];
				ControlPointPositions_202 = controlPointPositions[202];
				ControlPointPositions_203 = controlPointPositions[203];
				ControlPointPositions_204 = controlPointPositions[204];
				ControlPointPositions_205 = controlPointPositions[205];
				ControlPointPositions_206 = controlPointPositions[206];
				ControlPointPositions_207 = controlPointPositions[207];
				ControlPointPositions_208 = controlPointPositions[208];
				ControlPointPositions_209 = controlPointPositions[209];
				ControlPointPositions_210 = controlPointPositions[210];
				ControlPointPositions_211 = controlPointPositions[211];
				ControlPointPositions_212 = controlPointPositions[212];
				ControlPointPositions_213 = controlPointPositions[213];
				ControlPointPositions_214 = controlPointPositions[214];
				ControlPointPositions_215 = controlPointPositions[215];
				ControlPointPositions_216 = controlPointPositions[216];
				ControlPointPositions_217 = controlPointPositions[217];
				ControlPointPositions_218 = controlPointPositions[218];
				ControlPointPositions_219 = controlPointPositions[219];
				ControlPointPositions_220 = controlPointPositions[220];
				ControlPointPositions_221 = controlPointPositions[221];
				ControlPointPositions_222 = controlPointPositions[222];
				ControlPointPositions_223 = controlPointPositions[223];
				ControlPointPositions_224 = controlPointPositions[224];
				ControlPointPositions_225 = controlPointPositions[225];
				ControlPointPositions_226 = controlPointPositions[226];
				ControlPointPositions_227 = controlPointPositions[227];
				ControlPointPositions_228 = controlPointPositions[228];
				ControlPointPositions_229 = controlPointPositions[229];
				ControlPointPositions_230 = controlPointPositions[230];
				ControlPointPositions_231 = controlPointPositions[231];
				ControlPointPositions_232 = controlPointPositions[232];
				ControlPointPositions_233 = controlPointPositions[233];
				ControlPointPositions_234 = controlPointPositions[234];
				ControlPointPositions_235 = controlPointPositions[235];
				ControlPointPositions_236 = controlPointPositions[236];
				ControlPointPositions_237 = controlPointPositions[237];
				ControlPointPositions_238 = controlPointPositions[238];
				ControlPointPositions_239 = controlPointPositions[239];
				ControlPointPositions_240 = controlPointPositions[240];
				ControlPointPositions_241 = controlPointPositions[241];
				ControlPointPositions_242 = controlPointPositions[242];
				ControlPointPositions_243 = controlPointPositions[243];
				ControlPointPositions_244 = controlPointPositions[244];
				ControlPointPositions_245 = controlPointPositions[245];
				ControlPointPositions_246 = controlPointPositions[246];
				ControlPointPositions_247 = controlPointPositions[247];
				ControlPointPositions_248 = controlPointPositions[248];
				ControlPointPositions_249 = controlPointPositions[249];
				ControlPointPositions_250 = controlPointPositions[250];
				ControlPointPositions_251 = controlPointPositions[251];
				ControlPointPositions_252 = controlPointPositions[252];
				ControlPointPositions_253 = controlPointPositions[253];
				ControlPointPositions_254 = controlPointPositions[254];
				ControlPointPositions_255 = controlPointPositions[255];
				ControlPointPositions_256 = controlPointPositions[256];
				ControlPointPositions_257 = controlPointPositions[257];
				ControlPointPositions_258 = controlPointPositions[258];
				ControlPointPositions_259 = controlPointPositions[259];
				ControlPointPositions_260 = controlPointPositions[260];
				ControlPointPositions_261 = controlPointPositions[261];
				ControlPointPositions_262 = controlPointPositions[262];
				ControlPointPositions_263 = controlPointPositions[263];
				ControlPointPositions_264 = controlPointPositions[264];
				ControlPointPositions_265 = controlPointPositions[265];
				ControlPointPositions_266 = controlPointPositions[266];
				ControlPointPositions_267 = controlPointPositions[267];
				ControlPointPositions_268 = controlPointPositions[268];
				ControlPointPositions_269 = controlPointPositions[269];
				ControlPointPositions_270 = controlPointPositions[270];
				ControlPointPositions_271 = controlPointPositions[271];
				ControlPointPositions_272 = controlPointPositions[272];
				ControlPointPositions_273 = controlPointPositions[273];
				ControlPointPositions_274 = controlPointPositions[274];
				ControlPointPositions_275 = controlPointPositions[275];
				ControlPointPositions_276 = controlPointPositions[276];
				ControlPointPositions_277 = controlPointPositions[277];
				ControlPointPositions_278 = controlPointPositions[278];
				ControlPointPositions_279 = controlPointPositions[279];
				ControlPointPositions_280 = controlPointPositions[280];
				ControlPointPositions_281 = controlPointPositions[281];
				ControlPointPositions_282 = controlPointPositions[282];
				ControlPointPositions_283 = controlPointPositions[283];
				ControlPointPositions_284 = controlPointPositions[284];
				ControlPointPositions_285 = controlPointPositions[285];
				ControlPointPositions_286 = controlPointPositions[286];
				ControlPointPositions_287 = controlPointPositions[287];
				ControlPointPositions_288 = controlPointPositions[288];
				ControlPointPositions_289 = controlPointPositions[289];
				ControlPointPositions_290 = controlPointPositions[290];
				ControlPointPositions_291 = controlPointPositions[291];
				ControlPointPositions_292 = controlPointPositions[292];
				ControlPointPositions_293 = controlPointPositions[293];
				ControlPointPositions_294 = controlPointPositions[294];
				ControlPointPositions_295 = controlPointPositions[295];
				ControlPointPositions_296 = controlPointPositions[296];
				ControlPointPositions_297 = controlPointPositions[297];
				ControlPointPositions_298 = controlPointPositions[298];
				ControlPointPositions_299 = controlPointPositions[299];
				ControlPointPositions_300 = controlPointPositions[300];
				ControlPointPositions_301 = controlPointPositions[301];
				ControlPointPositions_302 = controlPointPositions[302];
				ControlPointPositions_303 = controlPointPositions[303];
				ControlPointPositions_304 = controlPointPositions[304];
				ControlPointPositions_305 = controlPointPositions[305];
				ControlPointPositions_306 = controlPointPositions[306];
				ControlPointPositions_307 = controlPointPositions[307];
				ControlPointPositions_308 = controlPointPositions[308];
				ControlPointPositions_309 = controlPointPositions[309];
				ControlPointPositions_310 = controlPointPositions[310];
				ControlPointPositions_311 = controlPointPositions[311];
				ControlPointPositions_312 = controlPointPositions[312];
				ControlPointPositions_313 = controlPointPositions[313];
				ControlPointPositions_314 = controlPointPositions[314];
				ControlPointPositions_315 = controlPointPositions[315];
				ControlPointPositions_316 = controlPointPositions[316];
				ControlPointPositions_317 = controlPointPositions[317];
				ControlPointPositions_318 = controlPointPositions[318];
				ControlPointPositions_319 = controlPointPositions[319];
				ControlPointPositions_320 = controlPointPositions[320];
				ControlPointPositions_321 = controlPointPositions[321];
				ControlPointPositions_322 = controlPointPositions[322];
				ControlPointPositions_323 = controlPointPositions[323];
				ControlPointPositions_324 = controlPointPositions[324];
				ControlPointPositions_325 = controlPointPositions[325];
				ControlPointPositions_326 = controlPointPositions[326];
				ControlPointPositions_327 = controlPointPositions[327];
				ControlPointPositions_328 = controlPointPositions[328];
				ControlPointPositions_329 = controlPointPositions[329];
				ControlPointPositions_330 = controlPointPositions[330];
				ControlPointPositions_331 = controlPointPositions[331];
				ControlPointPositions_332 = controlPointPositions[332];
				ControlPointPositions_333 = controlPointPositions[333];
				ControlPointPositions_334 = controlPointPositions[334];
				ControlPointPositions_335 = controlPointPositions[335];
				ControlPointPositions_336 = controlPointPositions[336];
				ControlPointPositions_337 = controlPointPositions[337];
				ControlPointPositions_338 = controlPointPositions[338];
				ControlPointPositions_339 = controlPointPositions[339];
				ControlPointPositions_340 = controlPointPositions[340];
				ControlPointPositions_341 = controlPointPositions[341];
				ControlPointPositions_342 = controlPointPositions[342];
				ControlPointPositions_343 = controlPointPositions[343];
				ControlPointPositions_344 = controlPointPositions[344];
				ControlPointPositions_345 = controlPointPositions[345];
				ControlPointPositions_346 = controlPointPositions[346];
				ControlPointPositions_347 = controlPointPositions[347];
				ControlPointPositions_348 = controlPointPositions[348];
				ControlPointPositions_349 = controlPointPositions[349];
				ControlPointPositions_350 = controlPointPositions[350];
				ControlPointPositions_351 = controlPointPositions[351];
				ControlPointPositions_352 = controlPointPositions[352];
				ControlPointPositions_353 = controlPointPositions[353];
				ControlPointPositions_354 = controlPointPositions[354];
				ControlPointPositions_355 = controlPointPositions[355];
				ControlPointPositions_356 = controlPointPositions[356];
				ControlPointPositions_357 = controlPointPositions[357];
				ControlPointPositions_358 = controlPointPositions[358];
				ControlPointPositions_359 = controlPointPositions[359];
				ControlPointPositions_360 = controlPointPositions[360];
				ControlPointPositions_361 = controlPointPositions[361];
				ControlPointPositions_362 = controlPointPositions[362];
				ControlPointPositions_363 = controlPointPositions[363];
				ControlPointPositions_364 = controlPointPositions[364];
				ControlPointPositions_365 = controlPointPositions[365];
				ControlPointPositions_366 = controlPointPositions[366];
				ControlPointPositions_367 = controlPointPositions[367];
				ControlPointPositions_368 = controlPointPositions[368];
				ControlPointPositions_369 = controlPointPositions[369];
				ControlPointPositions_370 = controlPointPositions[370];
				ControlPointPositions_371 = controlPointPositions[371];
				ControlPointPositions_372 = controlPointPositions[372];
				ControlPointPositions_373 = controlPointPositions[373];
				ControlPointPositions_374 = controlPointPositions[374];
				ControlPointPositions_375 = controlPointPositions[375];
				ControlPointPositions_376 = controlPointPositions[376];
				ControlPointPositions_377 = controlPointPositions[377];
				ControlPointPositions_378 = controlPointPositions[378];
				ControlPointPositions_379 = controlPointPositions[379];
				ControlPointPositions_380 = controlPointPositions[380];
				ControlPointPositions_381 = controlPointPositions[381];
				ControlPointPositions_382 = controlPointPositions[382];
				ControlPointPositions_383 = controlPointPositions[383];
				ControlPointPositions_384 = controlPointPositions[384];
				ControlPointPositions_385 = controlPointPositions[385];
				ControlPointPositions_386 = controlPointPositions[386];
				ControlPointPositions_387 = controlPointPositions[387];
				ControlPointPositions_388 = controlPointPositions[388];
				ControlPointPositions_389 = controlPointPositions[389];
				ControlPointPositions_390 = controlPointPositions[390];
				ControlPointPositions_391 = controlPointPositions[391];
				ControlPointPositions_392 = controlPointPositions[392];
				ControlPointPositions_393 = controlPointPositions[393];
				ControlPointPositions_394 = controlPointPositions[394];
				ControlPointPositions_395 = controlPointPositions[395];
				ControlPointPositions_396 = controlPointPositions[396];
				ControlPointPositions_397 = controlPointPositions[397];
				ControlPointPositions_398 = controlPointPositions[398];
				ControlPointPositions_399 = controlPointPositions[399];
				ControlPointPositions_400 = controlPointPositions[400];
				ControlPointPositions_401 = controlPointPositions[401];
				ControlPointPositions_402 = controlPointPositions[402];
				ControlPointPositions_403 = controlPointPositions[403];
				ControlPointPositions_404 = controlPointPositions[404];
				ControlPointPositions_405 = controlPointPositions[405];
				ControlPointPositions_406 = controlPointPositions[406];
				ControlPointPositions_407 = controlPointPositions[407];
				ControlPointPositions_408 = controlPointPositions[408];
				ControlPointPositions_409 = controlPointPositions[409];
				ControlPointPositions_410 = controlPointPositions[410];
				ControlPointPositions_411 = controlPointPositions[411];
				ControlPointPositions_412 = controlPointPositions[412];
				ControlPointPositions_413 = controlPointPositions[413];
				ControlPointPositions_414 = controlPointPositions[414];
				ControlPointPositions_415 = controlPointPositions[415];
				ControlPointPositions_416 = controlPointPositions[416];
				ControlPointPositions_417 = controlPointPositions[417];
				ControlPointPositions_418 = controlPointPositions[418];
				ControlPointPositions_419 = controlPointPositions[419];
				ControlPointPositions_420 = controlPointPositions[420];
				ControlPointPositions_421 = controlPointPositions[421];
				ControlPointPositions_422 = controlPointPositions[422];
				ControlPointPositions_423 = controlPointPositions[423];
				ControlPointPositions_424 = controlPointPositions[424];
				ControlPointPositions_425 = controlPointPositions[425];
				ControlPointPositions_426 = controlPointPositions[426];
				ControlPointPositions_427 = controlPointPositions[427];
				ControlPointPositions_428 = controlPointPositions[428];
				ControlPointPositions_429 = controlPointPositions[429];
				ControlPointPositions_430 = controlPointPositions[430];
				ControlPointPositions_431 = controlPointPositions[431];
				ControlPointPositions_432 = controlPointPositions[432];
				ControlPointPositions_433 = controlPointPositions[433];
				ControlPointPositions_434 = controlPointPositions[434];
				ControlPointPositions_435 = controlPointPositions[435];
				ControlPointPositions_436 = controlPointPositions[436];
				ControlPointPositions_437 = controlPointPositions[437];
				ControlPointPositions_438 = controlPointPositions[438];
				ControlPointPositions_439 = controlPointPositions[439];
				ControlPointPositions_440 = controlPointPositions[440];
				ControlPointPositions_441 = controlPointPositions[441];
				ControlPointPositions_442 = controlPointPositions[442];
				ControlPointPositions_443 = controlPointPositions[443];
				ControlPointPositions_444 = controlPointPositions[444];
				ControlPointPositions_445 = controlPointPositions[445];
				ControlPointPositions_446 = controlPointPositions[446];
				ControlPointPositions_447 = controlPointPositions[447];
				ControlPointPositions_448 = controlPointPositions[448];
				ControlPointPositions_449 = controlPointPositions[449];
				ControlPointPositions_450 = controlPointPositions[450];
				ControlPointPositions_451 = controlPointPositions[451];
				ControlPointPositions_452 = controlPointPositions[452];
				ControlPointPositions_453 = controlPointPositions[453];
				ControlPointPositions_454 = controlPointPositions[454];
				ControlPointPositions_455 = controlPointPositions[455];
				ControlPointPositions_456 = controlPointPositions[456];
				ControlPointPositions_457 = controlPointPositions[457];
				ControlPointPositions_458 = controlPointPositions[458];
				ControlPointPositions_459 = controlPointPositions[459];
				ControlPointPositions_460 = controlPointPositions[460];
				ControlPointPositions_461 = controlPointPositions[461];
				ControlPointPositions_462 = controlPointPositions[462];
				ControlPointPositions_463 = controlPointPositions[463];
				ControlPointPositions_464 = controlPointPositions[464];
				ControlPointPositions_465 = controlPointPositions[465];
				ControlPointPositions_466 = controlPointPositions[466];
				ControlPointPositions_467 = controlPointPositions[467];
				ControlPointPositions_468 = controlPointPositions[468];
				ControlPointPositions_469 = controlPointPositions[469];
				ControlPointPositions_470 = controlPointPositions[470];
				ControlPointPositions_471 = controlPointPositions[471];
				ControlPointPositions_472 = controlPointPositions[472];
				ControlPointPositions_473 = controlPointPositions[473];
				ControlPointPositions_474 = controlPointPositions[474];
				ControlPointPositions_475 = controlPointPositions[475];
				ControlPointPositions_476 = controlPointPositions[476];
				ControlPointPositions_477 = controlPointPositions[477];
				ControlPointPositions_478 = controlPointPositions[478];
				ControlPointPositions_479 = controlPointPositions[479];
				ControlPointPositions_480 = controlPointPositions[480];
				ControlPointPositions_481 = controlPointPositions[481];
				ControlPointPositions_482 = controlPointPositions[482];
				ControlPointPositions_483 = controlPointPositions[483];
				ControlPointPositions_484 = controlPointPositions[484];
				ControlPointPositions_485 = controlPointPositions[485];
				ControlPointPositions_486 = controlPointPositions[486];
				ControlPointPositions_487 = controlPointPositions[487];
				ControlPointPositions_488 = controlPointPositions[488];
				ControlPointPositions_489 = controlPointPositions[489];
				ControlPointPositions_490 = controlPointPositions[490];
				ControlPointPositions_491 = controlPointPositions[491];
				ControlPointPositions_492 = controlPointPositions[492];
				ControlPointPositions_493 = controlPointPositions[493];
				ControlPointPositions_494 = controlPointPositions[494];
				ControlPointPositions_495 = controlPointPositions[495];
				ControlPointPositions_496 = controlPointPositions[496];
				ControlPointPositions_497 = controlPointPositions[497];
				ControlPointPositions_498 = controlPointPositions[498];
				ControlPointPositions_499 = controlPointPositions[499];
				ControlPointPositions_500 = controlPointPositions[500];
				ControlPointPositions_501 = controlPointPositions[501];
				ControlPointPositions_502 = controlPointPositions[502];
				ControlPointPositions_503 = controlPointPositions[503];
				ControlPointPositions_504 = controlPointPositions[504];
				ControlPointPositions_505 = controlPointPositions[505];
				ControlPointPositions_506 = controlPointPositions[506];
				ControlPointPositions_507 = controlPointPositions[507];
				ControlPointPositions_508 = controlPointPositions[508];
				ControlPointPositions_509 = controlPointPositions[509];
				ControlPointPositions_510 = controlPointPositions[510];
				ControlPointPositions_511 = controlPointPositions[511];
				ControlPointPositions_512 = controlPointPositions[512];
				ControlPointPositions_513 = controlPointPositions[513];
				ControlPointPositions_514 = controlPointPositions[514];
				ControlPointPositions_515 = controlPointPositions[515];
				ControlPointPositions_516 = controlPointPositions[516];
				ControlPointPositions_517 = controlPointPositions[517];
				ControlPointPositions_518 = controlPointPositions[518];
				ControlPointPositions_519 = controlPointPositions[519];
				ControlPointPositions_520 = controlPointPositions[520];
				ControlPointPositions_521 = controlPointPositions[521];
				ControlPointPositions_522 = controlPointPositions[522];
				ControlPointPositions_523 = controlPointPositions[523];
				ControlPointPositions_524 = controlPointPositions[524];
				ControlPointPositions_525 = controlPointPositions[525];
				ControlPointPositions_526 = controlPointPositions[526];
				ControlPointPositions_527 = controlPointPositions[527];
				ControlPointPositions_528 = controlPointPositions[528];
				ControlPointPositions_529 = controlPointPositions[529];
				ControlPointPositions_530 = controlPointPositions[530];
				ControlPointPositions_531 = controlPointPositions[531];
				ControlPointPositions_532 = controlPointPositions[532];
				ControlPointPositions_533 = controlPointPositions[533];
				ControlPointPositions_534 = controlPointPositions[534];
				ControlPointPositions_535 = controlPointPositions[535];
				ControlPointPositions_536 = controlPointPositions[536];
				ControlPointPositions_537 = controlPointPositions[537];
				ControlPointPositions_538 = controlPointPositions[538];
				ControlPointPositions_539 = controlPointPositions[539];
				ControlPointPositions_540 = controlPointPositions[540];
				ControlPointPositions_541 = controlPointPositions[541];
				ControlPointPositions_542 = controlPointPositions[542];
				ControlPointPositions_543 = controlPointPositions[543];
				ControlPointPositions_544 = controlPointPositions[544];
				ControlPointPositions_545 = controlPointPositions[545];
				ControlPointPositions_546 = controlPointPositions[546];
				ControlPointPositions_547 = controlPointPositions[547];
				ControlPointPositions_548 = controlPointPositions[548];
				ControlPointPositions_549 = controlPointPositions[549];
				ControlPointPositions_550 = controlPointPositions[550];
				ControlPointPositions_551 = controlPointPositions[551];
				ControlPointPositions_552 = controlPointPositions[552];
				ControlPointPositions_553 = controlPointPositions[553];
				ControlPointPositions_554 = controlPointPositions[554];
				ControlPointPositions_555 = controlPointPositions[555];
				ControlPointPositions_556 = controlPointPositions[556];
				ControlPointPositions_557 = controlPointPositions[557];
				ControlPointPositions_558 = controlPointPositions[558];
				ControlPointPositions_559 = controlPointPositions[559];
				ControlPointPositions_560 = controlPointPositions[560];
				ControlPointPositions_561 = controlPointPositions[561];
				ControlPointPositions_562 = controlPointPositions[562];
				ControlPointPositions_563 = controlPointPositions[563];
				ControlPointPositions_564 = controlPointPositions[564];
				ControlPointPositions_565 = controlPointPositions[565];
				ControlPointPositions_566 = controlPointPositions[566];
				ControlPointPositions_567 = controlPointPositions[567];
				ControlPointPositions_568 = controlPointPositions[568];
				ControlPointPositions_569 = controlPointPositions[569];
				ControlPointPositions_570 = controlPointPositions[570];
				ControlPointPositions_571 = controlPointPositions[571];
				ControlPointPositions_572 = controlPointPositions[572];
				ControlPointPositions_573 = controlPointPositions[573];
				ControlPointPositions_574 = controlPointPositions[574];
				ControlPointPositions_575 = controlPointPositions[575];
				ControlPointPositions_576 = controlPointPositions[576];
				ControlPointPositions_577 = controlPointPositions[577];
				ControlPointPositions_578 = controlPointPositions[578];
				ControlPointPositions_579 = controlPointPositions[579];
				ControlPointPositions_580 = controlPointPositions[580];
				ControlPointPositions_581 = controlPointPositions[581];
				ControlPointPositions_582 = controlPointPositions[582];
				ControlPointPositions_583 = controlPointPositions[583];
				ControlPointPositions_584 = controlPointPositions[584];
				ControlPointPositions_585 = controlPointPositions[585];
				ControlPointPositions_586 = controlPointPositions[586];
				ControlPointPositions_587 = controlPointPositions[587];
				ControlPointPositions_588 = controlPointPositions[588];
				ControlPointPositions_589 = controlPointPositions[589];
				ControlPointPositions_590 = controlPointPositions[590];
				ControlPointPositions_591 = controlPointPositions[591];
				ControlPointPositions_592 = controlPointPositions[592];
				ControlPointPositions_593 = controlPointPositions[593];
				ControlPointPositions_594 = controlPointPositions[594];
				ControlPointPositions_595 = controlPointPositions[595];
				ControlPointPositions_596 = controlPointPositions[596];
				ControlPointPositions_597 = controlPointPositions[597];
				ControlPointPositions_598 = controlPointPositions[598];
				ControlPointPositions_599 = controlPointPositions[599];
				ControlPointPositions_600 = controlPointPositions[600];
				ControlPointPositions_601 = controlPointPositions[601];
				ControlPointPositions_602 = controlPointPositions[602];
				ControlPointPositions_603 = controlPointPositions[603];
				ControlPointPositions_604 = controlPointPositions[604];
				ControlPointPositions_605 = controlPointPositions[605];
				ControlPointPositions_606 = controlPointPositions[606];
				ControlPointPositions_607 = controlPointPositions[607];
				ControlPointPositions_608 = controlPointPositions[608];
				ControlPointPositions_609 = controlPointPositions[609];
				ControlPointPositions_610 = controlPointPositions[610];
				ControlPointPositions_611 = controlPointPositions[611];
				ControlPointPositions_612 = controlPointPositions[612];
				ControlPointPositions_613 = controlPointPositions[613];
				ControlPointPositions_614 = controlPointPositions[614];
				ControlPointPositions_615 = controlPointPositions[615];
				ControlPointPositions_616 = controlPointPositions[616];
				ControlPointPositions_617 = controlPointPositions[617];
				ControlPointPositions_618 = controlPointPositions[618];
				ControlPointPositions_619 = controlPointPositions[619];
				ControlPointPositions_620 = controlPointPositions[620];
				ControlPointPositions_621 = controlPointPositions[621];
				ControlPointPositions_622 = controlPointPositions[622];
				ControlPointPositions_623 = controlPointPositions[623];
				ControlPointPositions_624 = controlPointPositions[624];
				ControlPointPositions_625 = controlPointPositions[625];
				ControlPointPositions_626 = controlPointPositions[626];
				ControlPointPositions_627 = controlPointPositions[627];
				ControlPointPositions_628 = controlPointPositions[628];
				ControlPointPositions_629 = controlPointPositions[629];
				ControlPointPositions_630 = controlPointPositions[630];
				ControlPointPositions_631 = controlPointPositions[631];
				ControlPointPositions_632 = controlPointPositions[632];
				ControlPointPositions_633 = controlPointPositions[633];
				ControlPointPositions_634 = controlPointPositions[634];
				ControlPointPositions_635 = controlPointPositions[635];
				ControlPointPositions_636 = controlPointPositions[636];
				ControlPointPositions_637 = controlPointPositions[637];
				ControlPointPositions_638 = controlPointPositions[638];
				ControlPointPositions_639 = controlPointPositions[639];
				ControlPointPositions_640 = controlPointPositions[640];
				ControlPointPositions_641 = controlPointPositions[641];
				ControlPointPositions_642 = controlPointPositions[642];
				ControlPointPositions_643 = controlPointPositions[643];
				ControlPointPositions_644 = controlPointPositions[644];
				ControlPointPositions_645 = controlPointPositions[645];
				ControlPointPositions_646 = controlPointPositions[646];
				ControlPointPositions_647 = controlPointPositions[647];
				ControlPointPositions_648 = controlPointPositions[648];
				ControlPointPositions_649 = controlPointPositions[649];
				ControlPointPositions_650 = controlPointPositions[650];
				ControlPointPositions_651 = controlPointPositions[651];
				ControlPointPositions_652 = controlPointPositions[652];
				ControlPointPositions_653 = controlPointPositions[653];
				ControlPointPositions_654 = controlPointPositions[654];
				ControlPointPositions_655 = controlPointPositions[655];
				ControlPointPositions_656 = controlPointPositions[656];
				ControlPointPositions_657 = controlPointPositions[657];
				ControlPointPositions_658 = controlPointPositions[658];
				ControlPointPositions_659 = controlPointPositions[659];
				ControlPointPositions_660 = controlPointPositions[660];
				ControlPointPositions_661 = controlPointPositions[661];
				ControlPointPositions_662 = controlPointPositions[662];
				ControlPointPositions_663 = controlPointPositions[663];
				ControlPointPositions_664 = controlPointPositions[664];
				ControlPointPositions_665 = controlPointPositions[665];
				ControlPointPositions_666 = controlPointPositions[666];
				ControlPointPositions_667 = controlPointPositions[667];
				ControlPointPositions_668 = controlPointPositions[668];
				ControlPointPositions_669 = controlPointPositions[669];
				ControlPointPositions_670 = controlPointPositions[670];
				ControlPointPositions_671 = controlPointPositions[671];
				ControlPointPositions_672 = controlPointPositions[672];
				ControlPointPositions_673 = controlPointPositions[673];
				ControlPointPositions_674 = controlPointPositions[674];
				ControlPointPositions_675 = controlPointPositions[675];
				ControlPointPositions_676 = controlPointPositions[676];
				ControlPointPositions_677 = controlPointPositions[677];
				ControlPointPositions_678 = controlPointPositions[678];
				ControlPointPositions_679 = controlPointPositions[679];
				ControlPointPositions_680 = controlPointPositions[680];
				ControlPointPositions_681 = controlPointPositions[681];
				ControlPointPositions_682 = controlPointPositions[682];
				ControlPointPositions_683 = controlPointPositions[683];
				ControlPointPositions_684 = controlPointPositions[684];
				ControlPointPositions_685 = controlPointPositions[685];
				ControlPointPositions_686 = controlPointPositions[686];
				ControlPointPositions_687 = controlPointPositions[687];
				ControlPointPositions_688 = controlPointPositions[688];
				ControlPointPositions_689 = controlPointPositions[689];
				ControlPointPositions_690 = controlPointPositions[690];
				ControlPointPositions_691 = controlPointPositions[691];
				ControlPointPositions_692 = controlPointPositions[692];
				ControlPointPositions_693 = controlPointPositions[693];
				ControlPointPositions_694 = controlPointPositions[694];
				ControlPointPositions_695 = controlPointPositions[695];
				ControlPointPositions_696 = controlPointPositions[696];
				ControlPointPositions_697 = controlPointPositions[697];
				ControlPointPositions_698 = controlPointPositions[698];
				ControlPointPositions_699 = controlPointPositions[699];
				ControlPointPositions_700 = controlPointPositions[700];
				ControlPointPositions_701 = controlPointPositions[701];
				ControlPointPositions_702 = controlPointPositions[702];
				ControlPointPositions_703 = controlPointPositions[703];
				ControlPointPositions_704 = controlPointPositions[704];
				ControlPointPositions_705 = controlPointPositions[705];
				ControlPointPositions_706 = controlPointPositions[706];
				ControlPointPositions_707 = controlPointPositions[707];
				ControlPointPositions_708 = controlPointPositions[708];
				ControlPointPositions_709 = controlPointPositions[709];
				ControlPointPositions_710 = controlPointPositions[710];
				ControlPointPositions_711 = controlPointPositions[711];
				ControlPointPositions_712 = controlPointPositions[712];
				ControlPointPositions_713 = controlPointPositions[713];
				ControlPointPositions_714 = controlPointPositions[714];
				ControlPointPositions_715 = controlPointPositions[715];
				ControlPointPositions_716 = controlPointPositions[716];
				ControlPointPositions_717 = controlPointPositions[717];
				ControlPointPositions_718 = controlPointPositions[718];
				ControlPointPositions_719 = controlPointPositions[719];
				ControlPointPositions_720 = controlPointPositions[720];
				ControlPointPositions_721 = controlPointPositions[721];
				ControlPointPositions_722 = controlPointPositions[722];
				ControlPointPositions_723 = controlPointPositions[723];
				ControlPointPositions_724 = controlPointPositions[724];
				ControlPointPositions_725 = controlPointPositions[725];
				ControlPointPositions_726 = controlPointPositions[726];
				ControlPointPositions_727 = controlPointPositions[727];
				ControlPointPositions_728 = controlPointPositions[728];
				ControlPointPositions_729 = controlPointPositions[729];
				ControlPointPositions_730 = controlPointPositions[730];
				ControlPointPositions_731 = controlPointPositions[731];
				ControlPointPositions_732 = controlPointPositions[732];
				ControlPointPositions_733 = controlPointPositions[733];
				ControlPointPositions_734 = controlPointPositions[734];
				ControlPointPositions_735 = controlPointPositions[735];
				ControlPointPositions_736 = controlPointPositions[736];
				ControlPointPositions_737 = controlPointPositions[737];
				ControlPointPositions_738 = controlPointPositions[738];
				ControlPointPositions_739 = controlPointPositions[739];
				ControlPointPositions_740 = controlPointPositions[740];
				ControlPointPositions_741 = controlPointPositions[741];
				ControlPointPositions_742 = controlPointPositions[742];
				ControlPointPositions_743 = controlPointPositions[743];
				ControlPointPositions_744 = controlPointPositions[744];
				ControlPointPositions_745 = controlPointPositions[745];
				ControlPointPositions_746 = controlPointPositions[746];
				ControlPointPositions_747 = controlPointPositions[747];
				ControlPointPositions_748 = controlPointPositions[748];
				ControlPointPositions_749 = controlPointPositions[749];
				ControlPointPositions_750 = controlPointPositions[750];
				ControlPointPositions_751 = controlPointPositions[751];
				ControlPointPositions_752 = controlPointPositions[752];
				ControlPointPositions_753 = controlPointPositions[753];
				ControlPointPositions_754 = controlPointPositions[754];
				ControlPointPositions_755 = controlPointPositions[755];
				ControlPointPositions_756 = controlPointPositions[756];
				ControlPointPositions_757 = controlPointPositions[757];
				ControlPointPositions_758 = controlPointPositions[758];
				ControlPointPositions_759 = controlPointPositions[759];
				ControlPointPositions_760 = controlPointPositions[760];
				ControlPointPositions_761 = controlPointPositions[761];
				ControlPointPositions_762 = controlPointPositions[762];
				ControlPointPositions_763 = controlPointPositions[763];
				ControlPointPositions_764 = controlPointPositions[764];
				ControlPointPositions_765 = controlPointPositions[765];
				ControlPointPositions_766 = controlPointPositions[766];
				ControlPointPositions_767 = controlPointPositions[767];
				ControlPointPositions_768 = controlPointPositions[768];
				ControlPointPositions_769 = controlPointPositions[769];
				ControlPointPositions_770 = controlPointPositions[770];
				ControlPointPositions_771 = controlPointPositions[771];
				ControlPointPositions_772 = controlPointPositions[772];
				ControlPointPositions_773 = controlPointPositions[773];
				ControlPointPositions_774 = controlPointPositions[774];
				ControlPointPositions_775 = controlPointPositions[775];
				ControlPointPositions_776 = controlPointPositions[776];
				ControlPointPositions_777 = controlPointPositions[777];
				ControlPointPositions_778 = controlPointPositions[778];
				ControlPointPositions_779 = controlPointPositions[779];
				ControlPointPositions_780 = controlPointPositions[780];
				ControlPointPositions_781 = controlPointPositions[781];
				ControlPointPositions_782 = controlPointPositions[782];
				ControlPointPositions_783 = controlPointPositions[783];
				ControlPointPositions_784 = controlPointPositions[784];
				ControlPointPositions_785 = controlPointPositions[785];
				ControlPointPositions_786 = controlPointPositions[786];
				ControlPointPositions_787 = controlPointPositions[787];
				ControlPointPositions_788 = controlPointPositions[788];
				ControlPointPositions_789 = controlPointPositions[789];
				ControlPointPositions_790 = controlPointPositions[790];
				ControlPointPositions_791 = controlPointPositions[791];
				ControlPointPositions_792 = controlPointPositions[792];
				ControlPointPositions_793 = controlPointPositions[793];
				ControlPointPositions_794 = controlPointPositions[794];
				ControlPointPositions_795 = controlPointPositions[795];
				ControlPointPositions_796 = controlPointPositions[796];
				ControlPointPositions_797 = controlPointPositions[797];
				ControlPointPositions_798 = controlPointPositions[798];
				ControlPointPositions_799 = controlPointPositions[799];
				ControlPointPositions_800 = controlPointPositions[800];
				ControlPointPositions_801 = controlPointPositions[801];
				ControlPointPositions_802 = controlPointPositions[802];
				ControlPointPositions_803 = controlPointPositions[803];
				ControlPointPositions_804 = controlPointPositions[804];
				ControlPointPositions_805 = controlPointPositions[805];
				ControlPointPositions_806 = controlPointPositions[806];
				ControlPointPositions_807 = controlPointPositions[807];
				ControlPointPositions_808 = controlPointPositions[808];
				ControlPointPositions_809 = controlPointPositions[809];
				ControlPointPositions_810 = controlPointPositions[810];
				ControlPointPositions_811 = controlPointPositions[811];
				ControlPointPositions_812 = controlPointPositions[812];
				ControlPointPositions_813 = controlPointPositions[813];
				ControlPointPositions_814 = controlPointPositions[814];
				ControlPointPositions_815 = controlPointPositions[815];
				ControlPointPositions_816 = controlPointPositions[816];
				ControlPointPositions_817 = controlPointPositions[817];
				ControlPointPositions_818 = controlPointPositions[818];
				ControlPointPositions_819 = controlPointPositions[819];
				ControlPointPositions_820 = controlPointPositions[820];
				ControlPointPositions_821 = controlPointPositions[821];
				ControlPointPositions_822 = controlPointPositions[822];
				ControlPointPositions_823 = controlPointPositions[823];
				ControlPointPositions_824 = controlPointPositions[824];
				ControlPointPositions_825 = controlPointPositions[825];
				ControlPointPositions_826 = controlPointPositions[826];
				ControlPointPositions_827 = controlPointPositions[827];
				ControlPointPositions_828 = controlPointPositions[828];
				ControlPointPositions_829 = controlPointPositions[829];
				ControlPointPositions_830 = controlPointPositions[830];
				ControlPointPositions_831 = controlPointPositions[831];
				ControlPointPositions_832 = controlPointPositions[832];
				ControlPointPositions_833 = controlPointPositions[833];
				ControlPointPositions_834 = controlPointPositions[834];
				ControlPointPositions_835 = controlPointPositions[835];
				ControlPointPositions_836 = controlPointPositions[836];
				ControlPointPositions_837 = controlPointPositions[837];
				ControlPointPositions_838 = controlPointPositions[838];
				ControlPointPositions_839 = controlPointPositions[839];
				ControlPointPositions_840 = controlPointPositions[840];
				ControlPointPositions_841 = controlPointPositions[841];
				ControlPointPositions_842 = controlPointPositions[842];
				ControlPointPositions_843 = controlPointPositions[843];
				ControlPointPositions_844 = controlPointPositions[844];
				ControlPointPositions_845 = controlPointPositions[845];
				ControlPointPositions_846 = controlPointPositions[846];
				ControlPointPositions_847 = controlPointPositions[847];
				ControlPointPositions_848 = controlPointPositions[848];
				ControlPointPositions_849 = controlPointPositions[849];
				ControlPointPositions_850 = controlPointPositions[850];
				ControlPointPositions_851 = controlPointPositions[851];
				ControlPointPositions_852 = controlPointPositions[852];
				ControlPointPositions_853 = controlPointPositions[853];
				ControlPointPositions_854 = controlPointPositions[854];
				ControlPointPositions_855 = controlPointPositions[855];
				ControlPointPositions_856 = controlPointPositions[856];
				ControlPointPositions_857 = controlPointPositions[857];
				ControlPointPositions_858 = controlPointPositions[858];
				ControlPointPositions_859 = controlPointPositions[859];
				ControlPointPositions_860 = controlPointPositions[860];
				ControlPointPositions_861 = controlPointPositions[861];
				ControlPointPositions_862 = controlPointPositions[862];
				ControlPointPositions_863 = controlPointPositions[863];
				ControlPointPositions_864 = controlPointPositions[864];
				ControlPointPositions_865 = controlPointPositions[865];
				ControlPointPositions_866 = controlPointPositions[866];
				ControlPointPositions_867 = controlPointPositions[867];
				ControlPointPositions_868 = controlPointPositions[868];
				ControlPointPositions_869 = controlPointPositions[869];
				ControlPointPositions_870 = controlPointPositions[870];
				ControlPointPositions_871 = controlPointPositions[871];
				ControlPointPositions_872 = controlPointPositions[872];
				ControlPointPositions_873 = controlPointPositions[873];
				ControlPointPositions_874 = controlPointPositions[874];
				ControlPointPositions_875 = controlPointPositions[875];
				ControlPointPositions_876 = controlPointPositions[876];
				ControlPointPositions_877 = controlPointPositions[877];
				ControlPointPositions_878 = controlPointPositions[878];
				ControlPointPositions_879 = controlPointPositions[879];
				ControlPointPositions_880 = controlPointPositions[880];
				ControlPointPositions_881 = controlPointPositions[881];
				ControlPointPositions_882 = controlPointPositions[882];
				ControlPointPositions_883 = controlPointPositions[883];
				ControlPointPositions_884 = controlPointPositions[884];
				ControlPointPositions_885 = controlPointPositions[885];
				ControlPointPositions_886 = controlPointPositions[886];
				ControlPointPositions_887 = controlPointPositions[887];
				ControlPointPositions_888 = controlPointPositions[888];
				ControlPointPositions_889 = controlPointPositions[889];
				ControlPointPositions_890 = controlPointPositions[890];
				ControlPointPositions_891 = controlPointPositions[891];
				ControlPointPositions_892 = controlPointPositions[892];
				ControlPointPositions_893 = controlPointPositions[893];
				ControlPointPositions_894 = controlPointPositions[894];
				ControlPointPositions_895 = controlPointPositions[895];
				ControlPointPositions_896 = controlPointPositions[896];
				ControlPointPositions_897 = controlPointPositions[897];
				ControlPointPositions_898 = controlPointPositions[898];
				ControlPointPositions_899 = controlPointPositions[899];
				ControlPointPositions_900 = controlPointPositions[900];
				ControlPointPositions_901 = controlPointPositions[901];
				ControlPointPositions_902 = controlPointPositions[902];
				ControlPointPositions_903 = controlPointPositions[903];
				ControlPointPositions_904 = controlPointPositions[904];
				ControlPointPositions_905 = controlPointPositions[905];
				ControlPointPositions_906 = controlPointPositions[906];
				ControlPointPositions_907 = controlPointPositions[907];
				ControlPointPositions_908 = controlPointPositions[908];
				ControlPointPositions_909 = controlPointPositions[909];
				ControlPointPositions_910 = controlPointPositions[910];
				ControlPointPositions_911 = controlPointPositions[911];
				ControlPointPositions_912 = controlPointPositions[912];
				ControlPointPositions_913 = controlPointPositions[913];
				ControlPointPositions_914 = controlPointPositions[914];
				ControlPointPositions_915 = controlPointPositions[915];
				ControlPointPositions_916 = controlPointPositions[916];
				ControlPointPositions_917 = controlPointPositions[917];
				ControlPointPositions_918 = controlPointPositions[918];
				ControlPointPositions_919 = controlPointPositions[919];
				ControlPointPositions_920 = controlPointPositions[920];
				ControlPointPositions_921 = controlPointPositions[921];
				ControlPointPositions_922 = controlPointPositions[922];
				ControlPointPositions_923 = controlPointPositions[923];
				ControlPointPositions_924 = controlPointPositions[924];
				ControlPointPositions_925 = controlPointPositions[925];
				ControlPointPositions_926 = controlPointPositions[926];
				ControlPointPositions_927 = controlPointPositions[927];
				ControlPointPositions_928 = controlPointPositions[928];
				ControlPointPositions_929 = controlPointPositions[929];
				ControlPointPositions_930 = controlPointPositions[930];
				ControlPointPositions_931 = controlPointPositions[931];
				ControlPointPositions_932 = controlPointPositions[932];
				ControlPointPositions_933 = controlPointPositions[933];
				ControlPointPositions_934 = controlPointPositions[934];
				ControlPointPositions_935 = controlPointPositions[935];
				ControlPointPositions_936 = controlPointPositions[936];
				ControlPointPositions_937 = controlPointPositions[937];
				ControlPointPositions_938 = controlPointPositions[938];
				ControlPointPositions_939 = controlPointPositions[939];
				ControlPointPositions_940 = controlPointPositions[940];
				ControlPointPositions_941 = controlPointPositions[941];
				ControlPointPositions_942 = controlPointPositions[942];
				ControlPointPositions_943 = controlPointPositions[943];
				ControlPointPositions_944 = controlPointPositions[944];
				ControlPointPositions_945 = controlPointPositions[945];
				ControlPointPositions_946 = controlPointPositions[946];
				ControlPointPositions_947 = controlPointPositions[947];
				ControlPointPositions_948 = controlPointPositions[948];
				ControlPointPositions_949 = controlPointPositions[949];
				ControlPointPositions_950 = controlPointPositions[950];
				ControlPointPositions_951 = controlPointPositions[951];
				ControlPointPositions_952 = controlPointPositions[952];
				ControlPointPositions_953 = controlPointPositions[953];
				ControlPointPositions_954 = controlPointPositions[954];
				ControlPointPositions_955 = controlPointPositions[955];
				ControlPointPositions_956 = controlPointPositions[956];
				ControlPointPositions_957 = controlPointPositions[957];
				ControlPointPositions_958 = controlPointPositions[958];
				ControlPointPositions_959 = controlPointPositions[959];
				ControlPointPositions_960 = controlPointPositions[960];
				ControlPointPositions_961 = controlPointPositions[961];
				ControlPointPositions_962 = controlPointPositions[962];
				ControlPointPositions_963 = controlPointPositions[963];
				ControlPointPositions_964 = controlPointPositions[964];
				ControlPointPositions_965 = controlPointPositions[965];
				ControlPointPositions_966 = controlPointPositions[966];
				ControlPointPositions_967 = controlPointPositions[967];
				ControlPointPositions_968 = controlPointPositions[968];
				ControlPointPositions_969 = controlPointPositions[969];
				ControlPointPositions_970 = controlPointPositions[970];
				ControlPointPositions_971 = controlPointPositions[971];
				ControlPointPositions_972 = controlPointPositions[972];
				ControlPointPositions_973 = controlPointPositions[973];
				ControlPointPositions_974 = controlPointPositions[974];
				ControlPointPositions_975 = controlPointPositions[975];
				ControlPointPositions_976 = controlPointPositions[976];
				ControlPointPositions_977 = controlPointPositions[977];
				ControlPointPositions_978 = controlPointPositions[978];
				ControlPointPositions_979 = controlPointPositions[979];
				ControlPointPositions_980 = controlPointPositions[980];
				ControlPointPositions_981 = controlPointPositions[981];
				ControlPointPositions_982 = controlPointPositions[982];
				ControlPointPositions_983 = controlPointPositions[983];
				ControlPointPositions_984 = controlPointPositions[984];
				ControlPointPositions_985 = controlPointPositions[985];
				ControlPointPositions_986 = controlPointPositions[986];
				ControlPointPositions_987 = controlPointPositions[987];
				ControlPointPositions_988 = controlPointPositions[988];
				ControlPointPositions_989 = controlPointPositions[989];
				ControlPointPositions_990 = controlPointPositions[990];
				ControlPointPositions_991 = controlPointPositions[991];
				ControlPointPositions_992 = controlPointPositions[992];
				ControlPointPositions_993 = controlPointPositions[993];
				ControlPointPositions_994 = controlPointPositions[994];
				ControlPointPositions_995 = controlPointPositions[995];
				ControlPointPositions_996 = controlPointPositions[996];
				ControlPointPositions_997 = controlPointPositions[997];
				ControlPointPositions_998 = controlPointPositions[998];
				ControlPointPositions_999 = controlPointPositions[999];
				ControlPointPositions_1000 = controlPointPositions[1000];
				ControlPointPositions_1001 = controlPointPositions[1001];
				ControlPointPositions_1002 = controlPointPositions[1002];
				ControlPointPositions_1003 = controlPointPositions[1003];
				ControlPointPositions_1004 = controlPointPositions[1004];
				ControlPointPositions_1005 = controlPointPositions[1005];
				ControlPointPositions_1006 = controlPointPositions[1006];
				ControlPointPositions_1007 = controlPointPositions[1007];
				ControlPointPositions_1008 = controlPointPositions[1008];
				ControlPointPositions_1009 = controlPointPositions[1009];
				ControlPointPositions_1010 = controlPointPositions[1010];
				ControlPointPositions_1011 = controlPointPositions[1011];
				ControlPointPositions_1012 = controlPointPositions[1012];
				ControlPointPositions_1013 = controlPointPositions[1013];
				ControlPointPositions_1014 = controlPointPositions[1014];
				ControlPointPositions_1015 = controlPointPositions[1015];
				ControlPointPositions_1016 = controlPointPositions[1016];
				ControlPointPositions_1017 = controlPointPositions[1017];
				ControlPointPositions_1018 = controlPointPositions[1018];
				ControlPointPositions_1019 = controlPointPositions[1019];
				ControlPointPositions_1020 = controlPointPositions[1020];
				ControlPointPositions_1021 = controlPointPositions[1021];
				ControlPointPositions_1022 = controlPointPositions[1022];
				ControlPointPositions_1023 = controlPointPositions[1023];
				ControlPointPositions_1024 = controlPointPositions[1024];
			}
		}

		/// <summary>/// To be documented./// </summary>		public unsafe DxgiGammaControlCapabilities(int scaleAndOffsetSupported = default, float maxConvertedValue = default, float minConvertedValue = default, uint numGammaControlPoints = default, Span<float> controlPointPositions = default)
		{
			ScaleAndOffsetSupported = scaleAndOffsetSupported;
			MaxConvertedValue = maxConvertedValue;
			MinConvertedValue = minConvertedValue;
			NumGammaControlPoints = numGammaControlPoints;
			if (controlPointPositions != default)
			{
				ControlPointPositions_0 = controlPointPositions[0];
				ControlPointPositions_1 = controlPointPositions[1];
				ControlPointPositions_2 = controlPointPositions[2];
				ControlPointPositions_3 = controlPointPositions[3];
				ControlPointPositions_4 = controlPointPositions[4];
				ControlPointPositions_5 = controlPointPositions[5];
				ControlPointPositions_6 = controlPointPositions[6];
				ControlPointPositions_7 = controlPointPositions[7];
				ControlPointPositions_8 = controlPointPositions[8];
				ControlPointPositions_9 = controlPointPositions[9];
				ControlPointPositions_10 = controlPointPositions[10];
				ControlPointPositions_11 = controlPointPositions[11];
				ControlPointPositions_12 = controlPointPositions[12];
				ControlPointPositions_13 = controlPointPositions[13];
				ControlPointPositions_14 = controlPointPositions[14];
				ControlPointPositions_15 = controlPointPositions[15];
				ControlPointPositions_16 = controlPointPositions[16];
				ControlPointPositions_17 = controlPointPositions[17];
				ControlPointPositions_18 = controlPointPositions[18];
				ControlPointPositions_19 = controlPointPositions[19];
				ControlPointPositions_20 = controlPointPositions[20];
				ControlPointPositions_21 = controlPointPositions[21];
				ControlPointPositions_22 = controlPointPositions[22];
				ControlPointPositions_23 = controlPointPositions[23];
				ControlPointPositions_24 = controlPointPositions[24];
				ControlPointPositions_25 = controlPointPositions[25];
				ControlPointPositions_26 = controlPointPositions[26];
				ControlPointPositions_27 = controlPointPositions[27];
				ControlPointPositions_28 = controlPointPositions[28];
				ControlPointPositions_29 = controlPointPositions[29];
				ControlPointPositions_30 = controlPointPositions[30];
				ControlPointPositions_31 = controlPointPositions[31];
				ControlPointPositions_32 = controlPointPositions[32];
				ControlPointPositions_33 = controlPointPositions[33];
				ControlPointPositions_34 = controlPointPositions[34];
				ControlPointPositions_35 = controlPointPositions[35];
				ControlPointPositions_36 = controlPointPositions[36];
				ControlPointPositions_37 = controlPointPositions[37];
				ControlPointPositions_38 = controlPointPositions[38];
				ControlPointPositions_39 = controlPointPositions[39];
				ControlPointPositions_40 = controlPointPositions[40];
				ControlPointPositions_41 = controlPointPositions[41];
				ControlPointPositions_42 = controlPointPositions[42];
				ControlPointPositions_43 = controlPointPositions[43];
				ControlPointPositions_44 = controlPointPositions[44];
				ControlPointPositions_45 = controlPointPositions[45];
				ControlPointPositions_46 = controlPointPositions[46];
				ControlPointPositions_47 = controlPointPositions[47];
				ControlPointPositions_48 = controlPointPositions[48];
				ControlPointPositions_49 = controlPointPositions[49];
				ControlPointPositions_50 = controlPointPositions[50];
				ControlPointPositions_51 = controlPointPositions[51];
				ControlPointPositions_52 = controlPointPositions[52];
				ControlPointPositions_53 = controlPointPositions[53];
				ControlPointPositions_54 = controlPointPositions[54];
				ControlPointPositions_55 = controlPointPositions[55];
				ControlPointPositions_56 = controlPointPositions[56];
				ControlPointPositions_57 = controlPointPositions[57];
				ControlPointPositions_58 = controlPointPositions[58];
				ControlPointPositions_59 = controlPointPositions[59];
				ControlPointPositions_60 = controlPointPositions[60];
				ControlPointPositions_61 = controlPointPositions[61];
				ControlPointPositions_62 = controlPointPositions[62];
				ControlPointPositions_63 = controlPointPositions[63];
				ControlPointPositions_64 = controlPointPositions[64];
				ControlPointPositions_65 = controlPointPositions[65];
				ControlPointPositions_66 = controlPointPositions[66];
				ControlPointPositions_67 = controlPointPositions[67];
				ControlPointPositions_68 = controlPointPositions[68];
				ControlPointPositions_69 = controlPointPositions[69];
				ControlPointPositions_70 = controlPointPositions[70];
				ControlPointPositions_71 = controlPointPositions[71];
				ControlPointPositions_72 = controlPointPositions[72];
				ControlPointPositions_73 = controlPointPositions[73];
				ControlPointPositions_74 = controlPointPositions[74];
				ControlPointPositions_75 = controlPointPositions[75];
				ControlPointPositions_76 = controlPointPositions[76];
				ControlPointPositions_77 = controlPointPositions[77];
				ControlPointPositions_78 = controlPointPositions[78];
				ControlPointPositions_79 = controlPointPositions[79];
				ControlPointPositions_80 = controlPointPositions[80];
				ControlPointPositions_81 = controlPointPositions[81];
				ControlPointPositions_82 = controlPointPositions[82];
				ControlPointPositions_83 = controlPointPositions[83];
				ControlPointPositions_84 = controlPointPositions[84];
				ControlPointPositions_85 = controlPointPositions[85];
				ControlPointPositions_86 = controlPointPositions[86];
				ControlPointPositions_87 = controlPointPositions[87];
				ControlPointPositions_88 = controlPointPositions[88];
				ControlPointPositions_89 = controlPointPositions[89];
				ControlPointPositions_90 = controlPointPositions[90];
				ControlPointPositions_91 = controlPointPositions[91];
				ControlPointPositions_92 = controlPointPositions[92];
				ControlPointPositions_93 = controlPointPositions[93];
				ControlPointPositions_94 = controlPointPositions[94];
				ControlPointPositions_95 = controlPointPositions[95];
				ControlPointPositions_96 = controlPointPositions[96];
				ControlPointPositions_97 = controlPointPositions[97];
				ControlPointPositions_98 = controlPointPositions[98];
				ControlPointPositions_99 = controlPointPositions[99];
				ControlPointPositions_100 = controlPointPositions[100];
				ControlPointPositions_101 = controlPointPositions[101];
				ControlPointPositions_102 = controlPointPositions[102];
				ControlPointPositions_103 = controlPointPositions[103];
				ControlPointPositions_104 = controlPointPositions[104];
				ControlPointPositions_105 = controlPointPositions[105];
				ControlPointPositions_106 = controlPointPositions[106];
				ControlPointPositions_107 = controlPointPositions[107];
				ControlPointPositions_108 = controlPointPositions[108];
				ControlPointPositions_109 = controlPointPositions[109];
				ControlPointPositions_110 = controlPointPositions[110];
				ControlPointPositions_111 = controlPointPositions[111];
				ControlPointPositions_112 = controlPointPositions[112];
				ControlPointPositions_113 = controlPointPositions[113];
				ControlPointPositions_114 = controlPointPositions[114];
				ControlPointPositions_115 = controlPointPositions[115];
				ControlPointPositions_116 = controlPointPositions[116];
				ControlPointPositions_117 = controlPointPositions[117];
				ControlPointPositions_118 = controlPointPositions[118];
				ControlPointPositions_119 = controlPointPositions[119];
				ControlPointPositions_120 = controlPointPositions[120];
				ControlPointPositions_121 = controlPointPositions[121];
				ControlPointPositions_122 = controlPointPositions[122];
				ControlPointPositions_123 = controlPointPositions[123];
				ControlPointPositions_124 = controlPointPositions[124];
				ControlPointPositions_125 = controlPointPositions[125];
				ControlPointPositions_126 = controlPointPositions[126];
				ControlPointPositions_127 = controlPointPositions[127];
				ControlPointPositions_128 = controlPointPositions[128];
				ControlPointPositions_129 = controlPointPositions[129];
				ControlPointPositions_130 = controlPointPositions[130];
				ControlPointPositions_131 = controlPointPositions[131];
				ControlPointPositions_132 = controlPointPositions[132];
				ControlPointPositions_133 = controlPointPositions[133];
				ControlPointPositions_134 = controlPointPositions[134];
				ControlPointPositions_135 = controlPointPositions[135];
				ControlPointPositions_136 = controlPointPositions[136];
				ControlPointPositions_137 = controlPointPositions[137];
				ControlPointPositions_138 = controlPointPositions[138];
				ControlPointPositions_139 = controlPointPositions[139];
				ControlPointPositions_140 = controlPointPositions[140];
				ControlPointPositions_141 = controlPointPositions[141];
				ControlPointPositions_142 = controlPointPositions[142];
				ControlPointPositions_143 = controlPointPositions[143];
				ControlPointPositions_144 = controlPointPositions[144];
				ControlPointPositions_145 = controlPointPositions[145];
				ControlPointPositions_146 = controlPointPositions[146];
				ControlPointPositions_147 = controlPointPositions[147];
				ControlPointPositions_148 = controlPointPositions[148];
				ControlPointPositions_149 = controlPointPositions[149];
				ControlPointPositions_150 = controlPointPositions[150];
				ControlPointPositions_151 = controlPointPositions[151];
				ControlPointPositions_152 = controlPointPositions[152];
				ControlPointPositions_153 = controlPointPositions[153];
				ControlPointPositions_154 = controlPointPositions[154];
				ControlPointPositions_155 = controlPointPositions[155];
				ControlPointPositions_156 = controlPointPositions[156];
				ControlPointPositions_157 = controlPointPositions[157];
				ControlPointPositions_158 = controlPointPositions[158];
				ControlPointPositions_159 = controlPointPositions[159];
				ControlPointPositions_160 = controlPointPositions[160];
				ControlPointPositions_161 = controlPointPositions[161];
				ControlPointPositions_162 = controlPointPositions[162];
				ControlPointPositions_163 = controlPointPositions[163];
				ControlPointPositions_164 = controlPointPositions[164];
				ControlPointPositions_165 = controlPointPositions[165];
				ControlPointPositions_166 = controlPointPositions[166];
				ControlPointPositions_167 = controlPointPositions[167];
				ControlPointPositions_168 = controlPointPositions[168];
				ControlPointPositions_169 = controlPointPositions[169];
				ControlPointPositions_170 = controlPointPositions[170];
				ControlPointPositions_171 = controlPointPositions[171];
				ControlPointPositions_172 = controlPointPositions[172];
				ControlPointPositions_173 = controlPointPositions[173];
				ControlPointPositions_174 = controlPointPositions[174];
				ControlPointPositions_175 = controlPointPositions[175];
				ControlPointPositions_176 = controlPointPositions[176];
				ControlPointPositions_177 = controlPointPositions[177];
				ControlPointPositions_178 = controlPointPositions[178];
				ControlPointPositions_179 = controlPointPositions[179];
				ControlPointPositions_180 = controlPointPositions[180];
				ControlPointPositions_181 = controlPointPositions[181];
				ControlPointPositions_182 = controlPointPositions[182];
				ControlPointPositions_183 = controlPointPositions[183];
				ControlPointPositions_184 = controlPointPositions[184];
				ControlPointPositions_185 = controlPointPositions[185];
				ControlPointPositions_186 = controlPointPositions[186];
				ControlPointPositions_187 = controlPointPositions[187];
				ControlPointPositions_188 = controlPointPositions[188];
				ControlPointPositions_189 = controlPointPositions[189];
				ControlPointPositions_190 = controlPointPositions[190];
				ControlPointPositions_191 = controlPointPositions[191];
				ControlPointPositions_192 = controlPointPositions[192];
				ControlPointPositions_193 = controlPointPositions[193];
				ControlPointPositions_194 = controlPointPositions[194];
				ControlPointPositions_195 = controlPointPositions[195];
				ControlPointPositions_196 = controlPointPositions[196];
				ControlPointPositions_197 = controlPointPositions[197];
				ControlPointPositions_198 = controlPointPositions[198];
				ControlPointPositions_199 = controlPointPositions[199];
				ControlPointPositions_200 = controlPointPositions[200];
				ControlPointPositions_201 = controlPointPositions[201];
				ControlPointPositions_202 = controlPointPositions[202];
				ControlPointPositions_203 = controlPointPositions[203];
				ControlPointPositions_204 = controlPointPositions[204];
				ControlPointPositions_205 = controlPointPositions[205];
				ControlPointPositions_206 = controlPointPositions[206];
				ControlPointPositions_207 = controlPointPositions[207];
				ControlPointPositions_208 = controlPointPositions[208];
				ControlPointPositions_209 = controlPointPositions[209];
				ControlPointPositions_210 = controlPointPositions[210];
				ControlPointPositions_211 = controlPointPositions[211];
				ControlPointPositions_212 = controlPointPositions[212];
				ControlPointPositions_213 = controlPointPositions[213];
				ControlPointPositions_214 = controlPointPositions[214];
				ControlPointPositions_215 = controlPointPositions[215];
				ControlPointPositions_216 = controlPointPositions[216];
				ControlPointPositions_217 = controlPointPositions[217];
				ControlPointPositions_218 = controlPointPositions[218];
				ControlPointPositions_219 = controlPointPositions[219];
				ControlPointPositions_220 = controlPointPositions[220];
				ControlPointPositions_221 = controlPointPositions[221];
				ControlPointPositions_222 = controlPointPositions[222];
				ControlPointPositions_223 = controlPointPositions[223];
				ControlPointPositions_224 = controlPointPositions[224];
				ControlPointPositions_225 = controlPointPositions[225];
				ControlPointPositions_226 = controlPointPositions[226];
				ControlPointPositions_227 = controlPointPositions[227];
				ControlPointPositions_228 = controlPointPositions[228];
				ControlPointPositions_229 = controlPointPositions[229];
				ControlPointPositions_230 = controlPointPositions[230];
				ControlPointPositions_231 = controlPointPositions[231];
				ControlPointPositions_232 = controlPointPositions[232];
				ControlPointPositions_233 = controlPointPositions[233];
				ControlPointPositions_234 = controlPointPositions[234];
				ControlPointPositions_235 = controlPointPositions[235];
				ControlPointPositions_236 = controlPointPositions[236];
				ControlPointPositions_237 = controlPointPositions[237];
				ControlPointPositions_238 = controlPointPositions[238];
				ControlPointPositions_239 = controlPointPositions[239];
				ControlPointPositions_240 = controlPointPositions[240];
				ControlPointPositions_241 = controlPointPositions[241];
				ControlPointPositions_242 = controlPointPositions[242];
				ControlPointPositions_243 = controlPointPositions[243];
				ControlPointPositions_244 = controlPointPositions[244];
				ControlPointPositions_245 = controlPointPositions[245];
				ControlPointPositions_246 = controlPointPositions[246];
				ControlPointPositions_247 = controlPointPositions[247];
				ControlPointPositions_248 = controlPointPositions[248];
				ControlPointPositions_249 = controlPointPositions[249];
				ControlPointPositions_250 = controlPointPositions[250];
				ControlPointPositions_251 = controlPointPositions[251];
				ControlPointPositions_252 = controlPointPositions[252];
				ControlPointPositions_253 = controlPointPositions[253];
				ControlPointPositions_254 = controlPointPositions[254];
				ControlPointPositions_255 = controlPointPositions[255];
				ControlPointPositions_256 = controlPointPositions[256];
				ControlPointPositions_257 = controlPointPositions[257];
				ControlPointPositions_258 = controlPointPositions[258];
				ControlPointPositions_259 = controlPointPositions[259];
				ControlPointPositions_260 = controlPointPositions[260];
				ControlPointPositions_261 = controlPointPositions[261];
				ControlPointPositions_262 = controlPointPositions[262];
				ControlPointPositions_263 = controlPointPositions[263];
				ControlPointPositions_264 = controlPointPositions[264];
				ControlPointPositions_265 = controlPointPositions[265];
				ControlPointPositions_266 = controlPointPositions[266];
				ControlPointPositions_267 = controlPointPositions[267];
				ControlPointPositions_268 = controlPointPositions[268];
				ControlPointPositions_269 = controlPointPositions[269];
				ControlPointPositions_270 = controlPointPositions[270];
				ControlPointPositions_271 = controlPointPositions[271];
				ControlPointPositions_272 = controlPointPositions[272];
				ControlPointPositions_273 = controlPointPositions[273];
				ControlPointPositions_274 = controlPointPositions[274];
				ControlPointPositions_275 = controlPointPositions[275];
				ControlPointPositions_276 = controlPointPositions[276];
				ControlPointPositions_277 = controlPointPositions[277];
				ControlPointPositions_278 = controlPointPositions[278];
				ControlPointPositions_279 = controlPointPositions[279];
				ControlPointPositions_280 = controlPointPositions[280];
				ControlPointPositions_281 = controlPointPositions[281];
				ControlPointPositions_282 = controlPointPositions[282];
				ControlPointPositions_283 = controlPointPositions[283];
				ControlPointPositions_284 = controlPointPositions[284];
				ControlPointPositions_285 = controlPointPositions[285];
				ControlPointPositions_286 = controlPointPositions[286];
				ControlPointPositions_287 = controlPointPositions[287];
				ControlPointPositions_288 = controlPointPositions[288];
				ControlPointPositions_289 = controlPointPositions[289];
				ControlPointPositions_290 = controlPointPositions[290];
				ControlPointPositions_291 = controlPointPositions[291];
				ControlPointPositions_292 = controlPointPositions[292];
				ControlPointPositions_293 = controlPointPositions[293];
				ControlPointPositions_294 = controlPointPositions[294];
				ControlPointPositions_295 = controlPointPositions[295];
				ControlPointPositions_296 = controlPointPositions[296];
				ControlPointPositions_297 = controlPointPositions[297];
				ControlPointPositions_298 = controlPointPositions[298];
				ControlPointPositions_299 = controlPointPositions[299];
				ControlPointPositions_300 = controlPointPositions[300];
				ControlPointPositions_301 = controlPointPositions[301];
				ControlPointPositions_302 = controlPointPositions[302];
				ControlPointPositions_303 = controlPointPositions[303];
				ControlPointPositions_304 = controlPointPositions[304];
				ControlPointPositions_305 = controlPointPositions[305];
				ControlPointPositions_306 = controlPointPositions[306];
				ControlPointPositions_307 = controlPointPositions[307];
				ControlPointPositions_308 = controlPointPositions[308];
				ControlPointPositions_309 = controlPointPositions[309];
				ControlPointPositions_310 = controlPointPositions[310];
				ControlPointPositions_311 = controlPointPositions[311];
				ControlPointPositions_312 = controlPointPositions[312];
				ControlPointPositions_313 = controlPointPositions[313];
				ControlPointPositions_314 = controlPointPositions[314];
				ControlPointPositions_315 = controlPointPositions[315];
				ControlPointPositions_316 = controlPointPositions[316];
				ControlPointPositions_317 = controlPointPositions[317];
				ControlPointPositions_318 = controlPointPositions[318];
				ControlPointPositions_319 = controlPointPositions[319];
				ControlPointPositions_320 = controlPointPositions[320];
				ControlPointPositions_321 = controlPointPositions[321];
				ControlPointPositions_322 = controlPointPositions[322];
				ControlPointPositions_323 = controlPointPositions[323];
				ControlPointPositions_324 = controlPointPositions[324];
				ControlPointPositions_325 = controlPointPositions[325];
				ControlPointPositions_326 = controlPointPositions[326];
				ControlPointPositions_327 = controlPointPositions[327];
				ControlPointPositions_328 = controlPointPositions[328];
				ControlPointPositions_329 = controlPointPositions[329];
				ControlPointPositions_330 = controlPointPositions[330];
				ControlPointPositions_331 = controlPointPositions[331];
				ControlPointPositions_332 = controlPointPositions[332];
				ControlPointPositions_333 = controlPointPositions[333];
				ControlPointPositions_334 = controlPointPositions[334];
				ControlPointPositions_335 = controlPointPositions[335];
				ControlPointPositions_336 = controlPointPositions[336];
				ControlPointPositions_337 = controlPointPositions[337];
				ControlPointPositions_338 = controlPointPositions[338];
				ControlPointPositions_339 = controlPointPositions[339];
				ControlPointPositions_340 = controlPointPositions[340];
				ControlPointPositions_341 = controlPointPositions[341];
				ControlPointPositions_342 = controlPointPositions[342];
				ControlPointPositions_343 = controlPointPositions[343];
				ControlPointPositions_344 = controlPointPositions[344];
				ControlPointPositions_345 = controlPointPositions[345];
				ControlPointPositions_346 = controlPointPositions[346];
				ControlPointPositions_347 = controlPointPositions[347];
				ControlPointPositions_348 = controlPointPositions[348];
				ControlPointPositions_349 = controlPointPositions[349];
				ControlPointPositions_350 = controlPointPositions[350];
				ControlPointPositions_351 = controlPointPositions[351];
				ControlPointPositions_352 = controlPointPositions[352];
				ControlPointPositions_353 = controlPointPositions[353];
				ControlPointPositions_354 = controlPointPositions[354];
				ControlPointPositions_355 = controlPointPositions[355];
				ControlPointPositions_356 = controlPointPositions[356];
				ControlPointPositions_357 = controlPointPositions[357];
				ControlPointPositions_358 = controlPointPositions[358];
				ControlPointPositions_359 = controlPointPositions[359];
				ControlPointPositions_360 = controlPointPositions[360];
				ControlPointPositions_361 = controlPointPositions[361];
				ControlPointPositions_362 = controlPointPositions[362];
				ControlPointPositions_363 = controlPointPositions[363];
				ControlPointPositions_364 = controlPointPositions[364];
				ControlPointPositions_365 = controlPointPositions[365];
				ControlPointPositions_366 = controlPointPositions[366];
				ControlPointPositions_367 = controlPointPositions[367];
				ControlPointPositions_368 = controlPointPositions[368];
				ControlPointPositions_369 = controlPointPositions[369];
				ControlPointPositions_370 = controlPointPositions[370];
				ControlPointPositions_371 = controlPointPositions[371];
				ControlPointPositions_372 = controlPointPositions[372];
				ControlPointPositions_373 = controlPointPositions[373];
				ControlPointPositions_374 = controlPointPositions[374];
				ControlPointPositions_375 = controlPointPositions[375];
				ControlPointPositions_376 = controlPointPositions[376];
				ControlPointPositions_377 = controlPointPositions[377];
				ControlPointPositions_378 = controlPointPositions[378];
				ControlPointPositions_379 = controlPointPositions[379];
				ControlPointPositions_380 = controlPointPositions[380];
				ControlPointPositions_381 = controlPointPositions[381];
				ControlPointPositions_382 = controlPointPositions[382];
				ControlPointPositions_383 = controlPointPositions[383];
				ControlPointPositions_384 = controlPointPositions[384];
				ControlPointPositions_385 = controlPointPositions[385];
				ControlPointPositions_386 = controlPointPositions[386];
				ControlPointPositions_387 = controlPointPositions[387];
				ControlPointPositions_388 = controlPointPositions[388];
				ControlPointPositions_389 = controlPointPositions[389];
				ControlPointPositions_390 = controlPointPositions[390];
				ControlPointPositions_391 = controlPointPositions[391];
				ControlPointPositions_392 = controlPointPositions[392];
				ControlPointPositions_393 = controlPointPositions[393];
				ControlPointPositions_394 = controlPointPositions[394];
				ControlPointPositions_395 = controlPointPositions[395];
				ControlPointPositions_396 = controlPointPositions[396];
				ControlPointPositions_397 = controlPointPositions[397];
				ControlPointPositions_398 = controlPointPositions[398];
				ControlPointPositions_399 = controlPointPositions[399];
				ControlPointPositions_400 = controlPointPositions[400];
				ControlPointPositions_401 = controlPointPositions[401];
				ControlPointPositions_402 = controlPointPositions[402];
				ControlPointPositions_403 = controlPointPositions[403];
				ControlPointPositions_404 = controlPointPositions[404];
				ControlPointPositions_405 = controlPointPositions[405];
				ControlPointPositions_406 = controlPointPositions[406];
				ControlPointPositions_407 = controlPointPositions[407];
				ControlPointPositions_408 = controlPointPositions[408];
				ControlPointPositions_409 = controlPointPositions[409];
				ControlPointPositions_410 = controlPointPositions[410];
				ControlPointPositions_411 = controlPointPositions[411];
				ControlPointPositions_412 = controlPointPositions[412];
				ControlPointPositions_413 = controlPointPositions[413];
				ControlPointPositions_414 = controlPointPositions[414];
				ControlPointPositions_415 = controlPointPositions[415];
				ControlPointPositions_416 = controlPointPositions[416];
				ControlPointPositions_417 = controlPointPositions[417];
				ControlPointPositions_418 = controlPointPositions[418];
				ControlPointPositions_419 = controlPointPositions[419];
				ControlPointPositions_420 = controlPointPositions[420];
				ControlPointPositions_421 = controlPointPositions[421];
				ControlPointPositions_422 = controlPointPositions[422];
				ControlPointPositions_423 = controlPointPositions[423];
				ControlPointPositions_424 = controlPointPositions[424];
				ControlPointPositions_425 = controlPointPositions[425];
				ControlPointPositions_426 = controlPointPositions[426];
				ControlPointPositions_427 = controlPointPositions[427];
				ControlPointPositions_428 = controlPointPositions[428];
				ControlPointPositions_429 = controlPointPositions[429];
				ControlPointPositions_430 = controlPointPositions[430];
				ControlPointPositions_431 = controlPointPositions[431];
				ControlPointPositions_432 = controlPointPositions[432];
				ControlPointPositions_433 = controlPointPositions[433];
				ControlPointPositions_434 = controlPointPositions[434];
				ControlPointPositions_435 = controlPointPositions[435];
				ControlPointPositions_436 = controlPointPositions[436];
				ControlPointPositions_437 = controlPointPositions[437];
				ControlPointPositions_438 = controlPointPositions[438];
				ControlPointPositions_439 = controlPointPositions[439];
				ControlPointPositions_440 = controlPointPositions[440];
				ControlPointPositions_441 = controlPointPositions[441];
				ControlPointPositions_442 = controlPointPositions[442];
				ControlPointPositions_443 = controlPointPositions[443];
				ControlPointPositions_444 = controlPointPositions[444];
				ControlPointPositions_445 = controlPointPositions[445];
				ControlPointPositions_446 = controlPointPositions[446];
				ControlPointPositions_447 = controlPointPositions[447];
				ControlPointPositions_448 = controlPointPositions[448];
				ControlPointPositions_449 = controlPointPositions[449];
				ControlPointPositions_450 = controlPointPositions[450];
				ControlPointPositions_451 = controlPointPositions[451];
				ControlPointPositions_452 = controlPointPositions[452];
				ControlPointPositions_453 = controlPointPositions[453];
				ControlPointPositions_454 = controlPointPositions[454];
				ControlPointPositions_455 = controlPointPositions[455];
				ControlPointPositions_456 = controlPointPositions[456];
				ControlPointPositions_457 = controlPointPositions[457];
				ControlPointPositions_458 = controlPointPositions[458];
				ControlPointPositions_459 = controlPointPositions[459];
				ControlPointPositions_460 = controlPointPositions[460];
				ControlPointPositions_461 = controlPointPositions[461];
				ControlPointPositions_462 = controlPointPositions[462];
				ControlPointPositions_463 = controlPointPositions[463];
				ControlPointPositions_464 = controlPointPositions[464];
				ControlPointPositions_465 = controlPointPositions[465];
				ControlPointPositions_466 = controlPointPositions[466];
				ControlPointPositions_467 = controlPointPositions[467];
				ControlPointPositions_468 = controlPointPositions[468];
				ControlPointPositions_469 = controlPointPositions[469];
				ControlPointPositions_470 = controlPointPositions[470];
				ControlPointPositions_471 = controlPointPositions[471];
				ControlPointPositions_472 = controlPointPositions[472];
				ControlPointPositions_473 = controlPointPositions[473];
				ControlPointPositions_474 = controlPointPositions[474];
				ControlPointPositions_475 = controlPointPositions[475];
				ControlPointPositions_476 = controlPointPositions[476];
				ControlPointPositions_477 = controlPointPositions[477];
				ControlPointPositions_478 = controlPointPositions[478];
				ControlPointPositions_479 = controlPointPositions[479];
				ControlPointPositions_480 = controlPointPositions[480];
				ControlPointPositions_481 = controlPointPositions[481];
				ControlPointPositions_482 = controlPointPositions[482];
				ControlPointPositions_483 = controlPointPositions[483];
				ControlPointPositions_484 = controlPointPositions[484];
				ControlPointPositions_485 = controlPointPositions[485];
				ControlPointPositions_486 = controlPointPositions[486];
				ControlPointPositions_487 = controlPointPositions[487];
				ControlPointPositions_488 = controlPointPositions[488];
				ControlPointPositions_489 = controlPointPositions[489];
				ControlPointPositions_490 = controlPointPositions[490];
				ControlPointPositions_491 = controlPointPositions[491];
				ControlPointPositions_492 = controlPointPositions[492];
				ControlPointPositions_493 = controlPointPositions[493];
				ControlPointPositions_494 = controlPointPositions[494];
				ControlPointPositions_495 = controlPointPositions[495];
				ControlPointPositions_496 = controlPointPositions[496];
				ControlPointPositions_497 = controlPointPositions[497];
				ControlPointPositions_498 = controlPointPositions[498];
				ControlPointPositions_499 = controlPointPositions[499];
				ControlPointPositions_500 = controlPointPositions[500];
				ControlPointPositions_501 = controlPointPositions[501];
				ControlPointPositions_502 = controlPointPositions[502];
				ControlPointPositions_503 = controlPointPositions[503];
				ControlPointPositions_504 = controlPointPositions[504];
				ControlPointPositions_505 = controlPointPositions[505];
				ControlPointPositions_506 = controlPointPositions[506];
				ControlPointPositions_507 = controlPointPositions[507];
				ControlPointPositions_508 = controlPointPositions[508];
				ControlPointPositions_509 = controlPointPositions[509];
				ControlPointPositions_510 = controlPointPositions[510];
				ControlPointPositions_511 = controlPointPositions[511];
				ControlPointPositions_512 = controlPointPositions[512];
				ControlPointPositions_513 = controlPointPositions[513];
				ControlPointPositions_514 = controlPointPositions[514];
				ControlPointPositions_515 = controlPointPositions[515];
				ControlPointPositions_516 = controlPointPositions[516];
				ControlPointPositions_517 = controlPointPositions[517];
				ControlPointPositions_518 = controlPointPositions[518];
				ControlPointPositions_519 = controlPointPositions[519];
				ControlPointPositions_520 = controlPointPositions[520];
				ControlPointPositions_521 = controlPointPositions[521];
				ControlPointPositions_522 = controlPointPositions[522];
				ControlPointPositions_523 = controlPointPositions[523];
				ControlPointPositions_524 = controlPointPositions[524];
				ControlPointPositions_525 = controlPointPositions[525];
				ControlPointPositions_526 = controlPointPositions[526];
				ControlPointPositions_527 = controlPointPositions[527];
				ControlPointPositions_528 = controlPointPositions[528];
				ControlPointPositions_529 = controlPointPositions[529];
				ControlPointPositions_530 = controlPointPositions[530];
				ControlPointPositions_531 = controlPointPositions[531];
				ControlPointPositions_532 = controlPointPositions[532];
				ControlPointPositions_533 = controlPointPositions[533];
				ControlPointPositions_534 = controlPointPositions[534];
				ControlPointPositions_535 = controlPointPositions[535];
				ControlPointPositions_536 = controlPointPositions[536];
				ControlPointPositions_537 = controlPointPositions[537];
				ControlPointPositions_538 = controlPointPositions[538];
				ControlPointPositions_539 = controlPointPositions[539];
				ControlPointPositions_540 = controlPointPositions[540];
				ControlPointPositions_541 = controlPointPositions[541];
				ControlPointPositions_542 = controlPointPositions[542];
				ControlPointPositions_543 = controlPointPositions[543];
				ControlPointPositions_544 = controlPointPositions[544];
				ControlPointPositions_545 = controlPointPositions[545];
				ControlPointPositions_546 = controlPointPositions[546];
				ControlPointPositions_547 = controlPointPositions[547];
				ControlPointPositions_548 = controlPointPositions[548];
				ControlPointPositions_549 = controlPointPositions[549];
				ControlPointPositions_550 = controlPointPositions[550];
				ControlPointPositions_551 = controlPointPositions[551];
				ControlPointPositions_552 = controlPointPositions[552];
				ControlPointPositions_553 = controlPointPositions[553];
				ControlPointPositions_554 = controlPointPositions[554];
				ControlPointPositions_555 = controlPointPositions[555];
				ControlPointPositions_556 = controlPointPositions[556];
				ControlPointPositions_557 = controlPointPositions[557];
				ControlPointPositions_558 = controlPointPositions[558];
				ControlPointPositions_559 = controlPointPositions[559];
				ControlPointPositions_560 = controlPointPositions[560];
				ControlPointPositions_561 = controlPointPositions[561];
				ControlPointPositions_562 = controlPointPositions[562];
				ControlPointPositions_563 = controlPointPositions[563];
				ControlPointPositions_564 = controlPointPositions[564];
				ControlPointPositions_565 = controlPointPositions[565];
				ControlPointPositions_566 = controlPointPositions[566];
				ControlPointPositions_567 = controlPointPositions[567];
				ControlPointPositions_568 = controlPointPositions[568];
				ControlPointPositions_569 = controlPointPositions[569];
				ControlPointPositions_570 = controlPointPositions[570];
				ControlPointPositions_571 = controlPointPositions[571];
				ControlPointPositions_572 = controlPointPositions[572];
				ControlPointPositions_573 = controlPointPositions[573];
				ControlPointPositions_574 = controlPointPositions[574];
				ControlPointPositions_575 = controlPointPositions[575];
				ControlPointPositions_576 = controlPointPositions[576];
				ControlPointPositions_577 = controlPointPositions[577];
				ControlPointPositions_578 = controlPointPositions[578];
				ControlPointPositions_579 = controlPointPositions[579];
				ControlPointPositions_580 = controlPointPositions[580];
				ControlPointPositions_581 = controlPointPositions[581];
				ControlPointPositions_582 = controlPointPositions[582];
				ControlPointPositions_583 = controlPointPositions[583];
				ControlPointPositions_584 = controlPointPositions[584];
				ControlPointPositions_585 = controlPointPositions[585];
				ControlPointPositions_586 = controlPointPositions[586];
				ControlPointPositions_587 = controlPointPositions[587];
				ControlPointPositions_588 = controlPointPositions[588];
				ControlPointPositions_589 = controlPointPositions[589];
				ControlPointPositions_590 = controlPointPositions[590];
				ControlPointPositions_591 = controlPointPositions[591];
				ControlPointPositions_592 = controlPointPositions[592];
				ControlPointPositions_593 = controlPointPositions[593];
				ControlPointPositions_594 = controlPointPositions[594];
				ControlPointPositions_595 = controlPointPositions[595];
				ControlPointPositions_596 = controlPointPositions[596];
				ControlPointPositions_597 = controlPointPositions[597];
				ControlPointPositions_598 = controlPointPositions[598];
				ControlPointPositions_599 = controlPointPositions[599];
				ControlPointPositions_600 = controlPointPositions[600];
				ControlPointPositions_601 = controlPointPositions[601];
				ControlPointPositions_602 = controlPointPositions[602];
				ControlPointPositions_603 = controlPointPositions[603];
				ControlPointPositions_604 = controlPointPositions[604];
				ControlPointPositions_605 = controlPointPositions[605];
				ControlPointPositions_606 = controlPointPositions[606];
				ControlPointPositions_607 = controlPointPositions[607];
				ControlPointPositions_608 = controlPointPositions[608];
				ControlPointPositions_609 = controlPointPositions[609];
				ControlPointPositions_610 = controlPointPositions[610];
				ControlPointPositions_611 = controlPointPositions[611];
				ControlPointPositions_612 = controlPointPositions[612];
				ControlPointPositions_613 = controlPointPositions[613];
				ControlPointPositions_614 = controlPointPositions[614];
				ControlPointPositions_615 = controlPointPositions[615];
				ControlPointPositions_616 = controlPointPositions[616];
				ControlPointPositions_617 = controlPointPositions[617];
				ControlPointPositions_618 = controlPointPositions[618];
				ControlPointPositions_619 = controlPointPositions[619];
				ControlPointPositions_620 = controlPointPositions[620];
				ControlPointPositions_621 = controlPointPositions[621];
				ControlPointPositions_622 = controlPointPositions[622];
				ControlPointPositions_623 = controlPointPositions[623];
				ControlPointPositions_624 = controlPointPositions[624];
				ControlPointPositions_625 = controlPointPositions[625];
				ControlPointPositions_626 = controlPointPositions[626];
				ControlPointPositions_627 = controlPointPositions[627];
				ControlPointPositions_628 = controlPointPositions[628];
				ControlPointPositions_629 = controlPointPositions[629];
				ControlPointPositions_630 = controlPointPositions[630];
				ControlPointPositions_631 = controlPointPositions[631];
				ControlPointPositions_632 = controlPointPositions[632];
				ControlPointPositions_633 = controlPointPositions[633];
				ControlPointPositions_634 = controlPointPositions[634];
				ControlPointPositions_635 = controlPointPositions[635];
				ControlPointPositions_636 = controlPointPositions[636];
				ControlPointPositions_637 = controlPointPositions[637];
				ControlPointPositions_638 = controlPointPositions[638];
				ControlPointPositions_639 = controlPointPositions[639];
				ControlPointPositions_640 = controlPointPositions[640];
				ControlPointPositions_641 = controlPointPositions[641];
				ControlPointPositions_642 = controlPointPositions[642];
				ControlPointPositions_643 = controlPointPositions[643];
				ControlPointPositions_644 = controlPointPositions[644];
				ControlPointPositions_645 = controlPointPositions[645];
				ControlPointPositions_646 = controlPointPositions[646];
				ControlPointPositions_647 = controlPointPositions[647];
				ControlPointPositions_648 = controlPointPositions[648];
				ControlPointPositions_649 = controlPointPositions[649];
				ControlPointPositions_650 = controlPointPositions[650];
				ControlPointPositions_651 = controlPointPositions[651];
				ControlPointPositions_652 = controlPointPositions[652];
				ControlPointPositions_653 = controlPointPositions[653];
				ControlPointPositions_654 = controlPointPositions[654];
				ControlPointPositions_655 = controlPointPositions[655];
				ControlPointPositions_656 = controlPointPositions[656];
				ControlPointPositions_657 = controlPointPositions[657];
				ControlPointPositions_658 = controlPointPositions[658];
				ControlPointPositions_659 = controlPointPositions[659];
				ControlPointPositions_660 = controlPointPositions[660];
				ControlPointPositions_661 = controlPointPositions[661];
				ControlPointPositions_662 = controlPointPositions[662];
				ControlPointPositions_663 = controlPointPositions[663];
				ControlPointPositions_664 = controlPointPositions[664];
				ControlPointPositions_665 = controlPointPositions[665];
				ControlPointPositions_666 = controlPointPositions[666];
				ControlPointPositions_667 = controlPointPositions[667];
				ControlPointPositions_668 = controlPointPositions[668];
				ControlPointPositions_669 = controlPointPositions[669];
				ControlPointPositions_670 = controlPointPositions[670];
				ControlPointPositions_671 = controlPointPositions[671];
				ControlPointPositions_672 = controlPointPositions[672];
				ControlPointPositions_673 = controlPointPositions[673];
				ControlPointPositions_674 = controlPointPositions[674];
				ControlPointPositions_675 = controlPointPositions[675];
				ControlPointPositions_676 = controlPointPositions[676];
				ControlPointPositions_677 = controlPointPositions[677];
				ControlPointPositions_678 = controlPointPositions[678];
				ControlPointPositions_679 = controlPointPositions[679];
				ControlPointPositions_680 = controlPointPositions[680];
				ControlPointPositions_681 = controlPointPositions[681];
				ControlPointPositions_682 = controlPointPositions[682];
				ControlPointPositions_683 = controlPointPositions[683];
				ControlPointPositions_684 = controlPointPositions[684];
				ControlPointPositions_685 = controlPointPositions[685];
				ControlPointPositions_686 = controlPointPositions[686];
				ControlPointPositions_687 = controlPointPositions[687];
				ControlPointPositions_688 = controlPointPositions[688];
				ControlPointPositions_689 = controlPointPositions[689];
				ControlPointPositions_690 = controlPointPositions[690];
				ControlPointPositions_691 = controlPointPositions[691];
				ControlPointPositions_692 = controlPointPositions[692];
				ControlPointPositions_693 = controlPointPositions[693];
				ControlPointPositions_694 = controlPointPositions[694];
				ControlPointPositions_695 = controlPointPositions[695];
				ControlPointPositions_696 = controlPointPositions[696];
				ControlPointPositions_697 = controlPointPositions[697];
				ControlPointPositions_698 = controlPointPositions[698];
				ControlPointPositions_699 = controlPointPositions[699];
				ControlPointPositions_700 = controlPointPositions[700];
				ControlPointPositions_701 = controlPointPositions[701];
				ControlPointPositions_702 = controlPointPositions[702];
				ControlPointPositions_703 = controlPointPositions[703];
				ControlPointPositions_704 = controlPointPositions[704];
				ControlPointPositions_705 = controlPointPositions[705];
				ControlPointPositions_706 = controlPointPositions[706];
				ControlPointPositions_707 = controlPointPositions[707];
				ControlPointPositions_708 = controlPointPositions[708];
				ControlPointPositions_709 = controlPointPositions[709];
				ControlPointPositions_710 = controlPointPositions[710];
				ControlPointPositions_711 = controlPointPositions[711];
				ControlPointPositions_712 = controlPointPositions[712];
				ControlPointPositions_713 = controlPointPositions[713];
				ControlPointPositions_714 = controlPointPositions[714];
				ControlPointPositions_715 = controlPointPositions[715];
				ControlPointPositions_716 = controlPointPositions[716];
				ControlPointPositions_717 = controlPointPositions[717];
				ControlPointPositions_718 = controlPointPositions[718];
				ControlPointPositions_719 = controlPointPositions[719];
				ControlPointPositions_720 = controlPointPositions[720];
				ControlPointPositions_721 = controlPointPositions[721];
				ControlPointPositions_722 = controlPointPositions[722];
				ControlPointPositions_723 = controlPointPositions[723];
				ControlPointPositions_724 = controlPointPositions[724];
				ControlPointPositions_725 = controlPointPositions[725];
				ControlPointPositions_726 = controlPointPositions[726];
				ControlPointPositions_727 = controlPointPositions[727];
				ControlPointPositions_728 = controlPointPositions[728];
				ControlPointPositions_729 = controlPointPositions[729];
				ControlPointPositions_730 = controlPointPositions[730];
				ControlPointPositions_731 = controlPointPositions[731];
				ControlPointPositions_732 = controlPointPositions[732];
				ControlPointPositions_733 = controlPointPositions[733];
				ControlPointPositions_734 = controlPointPositions[734];
				ControlPointPositions_735 = controlPointPositions[735];
				ControlPointPositions_736 = controlPointPositions[736];
				ControlPointPositions_737 = controlPointPositions[737];
				ControlPointPositions_738 = controlPointPositions[738];
				ControlPointPositions_739 = controlPointPositions[739];
				ControlPointPositions_740 = controlPointPositions[740];
				ControlPointPositions_741 = controlPointPositions[741];
				ControlPointPositions_742 = controlPointPositions[742];
				ControlPointPositions_743 = controlPointPositions[743];
				ControlPointPositions_744 = controlPointPositions[744];
				ControlPointPositions_745 = controlPointPositions[745];
				ControlPointPositions_746 = controlPointPositions[746];
				ControlPointPositions_747 = controlPointPositions[747];
				ControlPointPositions_748 = controlPointPositions[748];
				ControlPointPositions_749 = controlPointPositions[749];
				ControlPointPositions_750 = controlPointPositions[750];
				ControlPointPositions_751 = controlPointPositions[751];
				ControlPointPositions_752 = controlPointPositions[752];
				ControlPointPositions_753 = controlPointPositions[753];
				ControlPointPositions_754 = controlPointPositions[754];
				ControlPointPositions_755 = controlPointPositions[755];
				ControlPointPositions_756 = controlPointPositions[756];
				ControlPointPositions_757 = controlPointPositions[757];
				ControlPointPositions_758 = controlPointPositions[758];
				ControlPointPositions_759 = controlPointPositions[759];
				ControlPointPositions_760 = controlPointPositions[760];
				ControlPointPositions_761 = controlPointPositions[761];
				ControlPointPositions_762 = controlPointPositions[762];
				ControlPointPositions_763 = controlPointPositions[763];
				ControlPointPositions_764 = controlPointPositions[764];
				ControlPointPositions_765 = controlPointPositions[765];
				ControlPointPositions_766 = controlPointPositions[766];
				ControlPointPositions_767 = controlPointPositions[767];
				ControlPointPositions_768 = controlPointPositions[768];
				ControlPointPositions_769 = controlPointPositions[769];
				ControlPointPositions_770 = controlPointPositions[770];
				ControlPointPositions_771 = controlPointPositions[771];
				ControlPointPositions_772 = controlPointPositions[772];
				ControlPointPositions_773 = controlPointPositions[773];
				ControlPointPositions_774 = controlPointPositions[774];
				ControlPointPositions_775 = controlPointPositions[775];
				ControlPointPositions_776 = controlPointPositions[776];
				ControlPointPositions_777 = controlPointPositions[777];
				ControlPointPositions_778 = controlPointPositions[778];
				ControlPointPositions_779 = controlPointPositions[779];
				ControlPointPositions_780 = controlPointPositions[780];
				ControlPointPositions_781 = controlPointPositions[781];
				ControlPointPositions_782 = controlPointPositions[782];
				ControlPointPositions_783 = controlPointPositions[783];
				ControlPointPositions_784 = controlPointPositions[784];
				ControlPointPositions_785 = controlPointPositions[785];
				ControlPointPositions_786 = controlPointPositions[786];
				ControlPointPositions_787 = controlPointPositions[787];
				ControlPointPositions_788 = controlPointPositions[788];
				ControlPointPositions_789 = controlPointPositions[789];
				ControlPointPositions_790 = controlPointPositions[790];
				ControlPointPositions_791 = controlPointPositions[791];
				ControlPointPositions_792 = controlPointPositions[792];
				ControlPointPositions_793 = controlPointPositions[793];
				ControlPointPositions_794 = controlPointPositions[794];
				ControlPointPositions_795 = controlPointPositions[795];
				ControlPointPositions_796 = controlPointPositions[796];
				ControlPointPositions_797 = controlPointPositions[797];
				ControlPointPositions_798 = controlPointPositions[798];
				ControlPointPositions_799 = controlPointPositions[799];
				ControlPointPositions_800 = controlPointPositions[800];
				ControlPointPositions_801 = controlPointPositions[801];
				ControlPointPositions_802 = controlPointPositions[802];
				ControlPointPositions_803 = controlPointPositions[803];
				ControlPointPositions_804 = controlPointPositions[804];
				ControlPointPositions_805 = controlPointPositions[805];
				ControlPointPositions_806 = controlPointPositions[806];
				ControlPointPositions_807 = controlPointPositions[807];
				ControlPointPositions_808 = controlPointPositions[808];
				ControlPointPositions_809 = controlPointPositions[809];
				ControlPointPositions_810 = controlPointPositions[810];
				ControlPointPositions_811 = controlPointPositions[811];
				ControlPointPositions_812 = controlPointPositions[812];
				ControlPointPositions_813 = controlPointPositions[813];
				ControlPointPositions_814 = controlPointPositions[814];
				ControlPointPositions_815 = controlPointPositions[815];
				ControlPointPositions_816 = controlPointPositions[816];
				ControlPointPositions_817 = controlPointPositions[817];
				ControlPointPositions_818 = controlPointPositions[818];
				ControlPointPositions_819 = controlPointPositions[819];
				ControlPointPositions_820 = controlPointPositions[820];
				ControlPointPositions_821 = controlPointPositions[821];
				ControlPointPositions_822 = controlPointPositions[822];
				ControlPointPositions_823 = controlPointPositions[823];
				ControlPointPositions_824 = controlPointPositions[824];
				ControlPointPositions_825 = controlPointPositions[825];
				ControlPointPositions_826 = controlPointPositions[826];
				ControlPointPositions_827 = controlPointPositions[827];
				ControlPointPositions_828 = controlPointPositions[828];
				ControlPointPositions_829 = controlPointPositions[829];
				ControlPointPositions_830 = controlPointPositions[830];
				ControlPointPositions_831 = controlPointPositions[831];
				ControlPointPositions_832 = controlPointPositions[832];
				ControlPointPositions_833 = controlPointPositions[833];
				ControlPointPositions_834 = controlPointPositions[834];
				ControlPointPositions_835 = controlPointPositions[835];
				ControlPointPositions_836 = controlPointPositions[836];
				ControlPointPositions_837 = controlPointPositions[837];
				ControlPointPositions_838 = controlPointPositions[838];
				ControlPointPositions_839 = controlPointPositions[839];
				ControlPointPositions_840 = controlPointPositions[840];
				ControlPointPositions_841 = controlPointPositions[841];
				ControlPointPositions_842 = controlPointPositions[842];
				ControlPointPositions_843 = controlPointPositions[843];
				ControlPointPositions_844 = controlPointPositions[844];
				ControlPointPositions_845 = controlPointPositions[845];
				ControlPointPositions_846 = controlPointPositions[846];
				ControlPointPositions_847 = controlPointPositions[847];
				ControlPointPositions_848 = controlPointPositions[848];
				ControlPointPositions_849 = controlPointPositions[849];
				ControlPointPositions_850 = controlPointPositions[850];
				ControlPointPositions_851 = controlPointPositions[851];
				ControlPointPositions_852 = controlPointPositions[852];
				ControlPointPositions_853 = controlPointPositions[853];
				ControlPointPositions_854 = controlPointPositions[854];
				ControlPointPositions_855 = controlPointPositions[855];
				ControlPointPositions_856 = controlPointPositions[856];
				ControlPointPositions_857 = controlPointPositions[857];
				ControlPointPositions_858 = controlPointPositions[858];
				ControlPointPositions_859 = controlPointPositions[859];
				ControlPointPositions_860 = controlPointPositions[860];
				ControlPointPositions_861 = controlPointPositions[861];
				ControlPointPositions_862 = controlPointPositions[862];
				ControlPointPositions_863 = controlPointPositions[863];
				ControlPointPositions_864 = controlPointPositions[864];
				ControlPointPositions_865 = controlPointPositions[865];
				ControlPointPositions_866 = controlPointPositions[866];
				ControlPointPositions_867 = controlPointPositions[867];
				ControlPointPositions_868 = controlPointPositions[868];
				ControlPointPositions_869 = controlPointPositions[869];
				ControlPointPositions_870 = controlPointPositions[870];
				ControlPointPositions_871 = controlPointPositions[871];
				ControlPointPositions_872 = controlPointPositions[872];
				ControlPointPositions_873 = controlPointPositions[873];
				ControlPointPositions_874 = controlPointPositions[874];
				ControlPointPositions_875 = controlPointPositions[875];
				ControlPointPositions_876 = controlPointPositions[876];
				ControlPointPositions_877 = controlPointPositions[877];
				ControlPointPositions_878 = controlPointPositions[878];
				ControlPointPositions_879 = controlPointPositions[879];
				ControlPointPositions_880 = controlPointPositions[880];
				ControlPointPositions_881 = controlPointPositions[881];
				ControlPointPositions_882 = controlPointPositions[882];
				ControlPointPositions_883 = controlPointPositions[883];
				ControlPointPositions_884 = controlPointPositions[884];
				ControlPointPositions_885 = controlPointPositions[885];
				ControlPointPositions_886 = controlPointPositions[886];
				ControlPointPositions_887 = controlPointPositions[887];
				ControlPointPositions_888 = controlPointPositions[888];
				ControlPointPositions_889 = controlPointPositions[889];
				ControlPointPositions_890 = controlPointPositions[890];
				ControlPointPositions_891 = controlPointPositions[891];
				ControlPointPositions_892 = controlPointPositions[892];
				ControlPointPositions_893 = controlPointPositions[893];
				ControlPointPositions_894 = controlPointPositions[894];
				ControlPointPositions_895 = controlPointPositions[895];
				ControlPointPositions_896 = controlPointPositions[896];
				ControlPointPositions_897 = controlPointPositions[897];
				ControlPointPositions_898 = controlPointPositions[898];
				ControlPointPositions_899 = controlPointPositions[899];
				ControlPointPositions_900 = controlPointPositions[900];
				ControlPointPositions_901 = controlPointPositions[901];
				ControlPointPositions_902 = controlPointPositions[902];
				ControlPointPositions_903 = controlPointPositions[903];
				ControlPointPositions_904 = controlPointPositions[904];
				ControlPointPositions_905 = controlPointPositions[905];
				ControlPointPositions_906 = controlPointPositions[906];
				ControlPointPositions_907 = controlPointPositions[907];
				ControlPointPositions_908 = controlPointPositions[908];
				ControlPointPositions_909 = controlPointPositions[909];
				ControlPointPositions_910 = controlPointPositions[910];
				ControlPointPositions_911 = controlPointPositions[911];
				ControlPointPositions_912 = controlPointPositions[912];
				ControlPointPositions_913 = controlPointPositions[913];
				ControlPointPositions_914 = controlPointPositions[914];
				ControlPointPositions_915 = controlPointPositions[915];
				ControlPointPositions_916 = controlPointPositions[916];
				ControlPointPositions_917 = controlPointPositions[917];
				ControlPointPositions_918 = controlPointPositions[918];
				ControlPointPositions_919 = controlPointPositions[919];
				ControlPointPositions_920 = controlPointPositions[920];
				ControlPointPositions_921 = controlPointPositions[921];
				ControlPointPositions_922 = controlPointPositions[922];
				ControlPointPositions_923 = controlPointPositions[923];
				ControlPointPositions_924 = controlPointPositions[924];
				ControlPointPositions_925 = controlPointPositions[925];
				ControlPointPositions_926 = controlPointPositions[926];
				ControlPointPositions_927 = controlPointPositions[927];
				ControlPointPositions_928 = controlPointPositions[928];
				ControlPointPositions_929 = controlPointPositions[929];
				ControlPointPositions_930 = controlPointPositions[930];
				ControlPointPositions_931 = controlPointPositions[931];
				ControlPointPositions_932 = controlPointPositions[932];
				ControlPointPositions_933 = controlPointPositions[933];
				ControlPointPositions_934 = controlPointPositions[934];
				ControlPointPositions_935 = controlPointPositions[935];
				ControlPointPositions_936 = controlPointPositions[936];
				ControlPointPositions_937 = controlPointPositions[937];
				ControlPointPositions_938 = controlPointPositions[938];
				ControlPointPositions_939 = controlPointPositions[939];
				ControlPointPositions_940 = controlPointPositions[940];
				ControlPointPositions_941 = controlPointPositions[941];
				ControlPointPositions_942 = controlPointPositions[942];
				ControlPointPositions_943 = controlPointPositions[943];
				ControlPointPositions_944 = controlPointPositions[944];
				ControlPointPositions_945 = controlPointPositions[945];
				ControlPointPositions_946 = controlPointPositions[946];
				ControlPointPositions_947 = controlPointPositions[947];
				ControlPointPositions_948 = controlPointPositions[948];
				ControlPointPositions_949 = controlPointPositions[949];
				ControlPointPositions_950 = controlPointPositions[950];
				ControlPointPositions_951 = controlPointPositions[951];
				ControlPointPositions_952 = controlPointPositions[952];
				ControlPointPositions_953 = controlPointPositions[953];
				ControlPointPositions_954 = controlPointPositions[954];
				ControlPointPositions_955 = controlPointPositions[955];
				ControlPointPositions_956 = controlPointPositions[956];
				ControlPointPositions_957 = controlPointPositions[957];
				ControlPointPositions_958 = controlPointPositions[958];
				ControlPointPositions_959 = controlPointPositions[959];
				ControlPointPositions_960 = controlPointPositions[960];
				ControlPointPositions_961 = controlPointPositions[961];
				ControlPointPositions_962 = controlPointPositions[962];
				ControlPointPositions_963 = controlPointPositions[963];
				ControlPointPositions_964 = controlPointPositions[964];
				ControlPointPositions_965 = controlPointPositions[965];
				ControlPointPositions_966 = controlPointPositions[966];
				ControlPointPositions_967 = controlPointPositions[967];
				ControlPointPositions_968 = controlPointPositions[968];
				ControlPointPositions_969 = controlPointPositions[969];
				ControlPointPositions_970 = controlPointPositions[970];
				ControlPointPositions_971 = controlPointPositions[971];
				ControlPointPositions_972 = controlPointPositions[972];
				ControlPointPositions_973 = controlPointPositions[973];
				ControlPointPositions_974 = controlPointPositions[974];
				ControlPointPositions_975 = controlPointPositions[975];
				ControlPointPositions_976 = controlPointPositions[976];
				ControlPointPositions_977 = controlPointPositions[977];
				ControlPointPositions_978 = controlPointPositions[978];
				ControlPointPositions_979 = controlPointPositions[979];
				ControlPointPositions_980 = controlPointPositions[980];
				ControlPointPositions_981 = controlPointPositions[981];
				ControlPointPositions_982 = controlPointPositions[982];
				ControlPointPositions_983 = controlPointPositions[983];
				ControlPointPositions_984 = controlPointPositions[984];
				ControlPointPositions_985 = controlPointPositions[985];
				ControlPointPositions_986 = controlPointPositions[986];
				ControlPointPositions_987 = controlPointPositions[987];
				ControlPointPositions_988 = controlPointPositions[988];
				ControlPointPositions_989 = controlPointPositions[989];
				ControlPointPositions_990 = controlPointPositions[990];
				ControlPointPositions_991 = controlPointPositions[991];
				ControlPointPositions_992 = controlPointPositions[992];
				ControlPointPositions_993 = controlPointPositions[993];
				ControlPointPositions_994 = controlPointPositions[994];
				ControlPointPositions_995 = controlPointPositions[995];
				ControlPointPositions_996 = controlPointPositions[996];
				ControlPointPositions_997 = controlPointPositions[997];
				ControlPointPositions_998 = controlPointPositions[998];
				ControlPointPositions_999 = controlPointPositions[999];
				ControlPointPositions_1000 = controlPointPositions[1000];
				ControlPointPositions_1001 = controlPointPositions[1001];
				ControlPointPositions_1002 = controlPointPositions[1002];
				ControlPointPositions_1003 = controlPointPositions[1003];
				ControlPointPositions_1004 = controlPointPositions[1004];
				ControlPointPositions_1005 = controlPointPositions[1005];
				ControlPointPositions_1006 = controlPointPositions[1006];
				ControlPointPositions_1007 = controlPointPositions[1007];
				ControlPointPositions_1008 = controlPointPositions[1008];
				ControlPointPositions_1009 = controlPointPositions[1009];
				ControlPointPositions_1010 = controlPointPositions[1010];
				ControlPointPositions_1011 = controlPointPositions[1011];
				ControlPointPositions_1012 = controlPointPositions[1012];
				ControlPointPositions_1013 = controlPointPositions[1013];
				ControlPointPositions_1014 = controlPointPositions[1014];
				ControlPointPositions_1015 = controlPointPositions[1015];
				ControlPointPositions_1016 = controlPointPositions[1016];
				ControlPointPositions_1017 = controlPointPositions[1017];
				ControlPointPositions_1018 = controlPointPositions[1018];
				ControlPointPositions_1019 = controlPointPositions[1019];
				ControlPointPositions_1020 = controlPointPositions[1020];
				ControlPointPositions_1021 = controlPointPositions[1021];
				ControlPointPositions_1022 = controlPointPositions[1022];
				ControlPointPositions_1023 = controlPointPositions[1023];
				ControlPointPositions_1024 = controlPointPositions[1024];
			}
		}


	}
}
