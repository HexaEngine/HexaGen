// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Daxa
{

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVulkanMemoryModelFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVulkanMemoryModelFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vulkanMemoryModel")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VulkanMemoryModel;
		[NativeName(NativeNameType.Field, "vulkanMemoryModelDeviceScope")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VulkanMemoryModelDeviceScope;
		[NativeName(NativeNameType.Field, "vulkanMemoryModelAvailabilityVisibilityChains")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VulkanMemoryModelAvailabilityVisibilityChains;

		public unsafe VkPhysicalDeviceVulkanMemoryModelFeatures(VkStructureType sType = default, void* pNext = default, uint vulkanMemoryModel = default, uint vulkanMemoryModelDeviceScope = default, uint vulkanMemoryModelAvailabilityVisibilityChains = default)
		{
			SType = sType;
			PNext = pNext;
			VulkanMemoryModel = vulkanMemoryModel;
			VulkanMemoryModelDeviceScope = vulkanMemoryModelDeviceScope;
			VulkanMemoryModelAvailabilityVisibilityChains = vulkanMemoryModelAvailabilityVisibilityChains;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceImagelessFramebufferFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceImagelessFramebufferFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imagelessFramebuffer")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ImagelessFramebuffer;

		public unsafe VkPhysicalDeviceImagelessFramebufferFeatures(VkStructureType sType = default, void* pNext = default, uint imagelessFramebuffer = default)
		{
			SType = sType;
			PNext = pNext;
			ImagelessFramebuffer = imagelessFramebuffer;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkFramebufferAttachmentImageInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkFramebufferAttachmentImageInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkImageCreateFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "usage")]
		[NativeName(NativeNameType.Type, "VkImageUsageFlags")]
		public uint Usage;
		[NativeName(NativeNameType.Field, "width")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Width;
		[NativeName(NativeNameType.Field, "height")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Height;
		[NativeName(NativeNameType.Field, "layerCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint LayerCount;
		[NativeName(NativeNameType.Field, "viewFormatCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewFormatCount;
		[NativeName(NativeNameType.Field, "pViewFormats")]
		[NativeName(NativeNameType.Type, "const VkFormat*")]
		public unsafe VkFormat* PViewFormats;

		public unsafe VkFramebufferAttachmentImageInfo(VkStructureType sType = default, void* pNext = default, uint flags = default, uint usage = default, uint width = default, uint height = default, uint layerCount = default, uint viewFormatCount = default, VkFormat* pViewFormats = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			Usage = usage;
			Width = width;
			Height = height;
			LayerCount = layerCount;
			ViewFormatCount = viewFormatCount;
			PViewFormats = pViewFormats;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkFramebufferAttachmentsCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkFramebufferAttachmentsCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "attachmentImageInfoCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AttachmentImageInfoCount;
		[NativeName(NativeNameType.Field, "pAttachmentImageInfos")]
		[NativeName(NativeNameType.Type, "const VkFramebufferAttachmentImageInfo*")]
		public unsafe VkFramebufferAttachmentImageInfo* PAttachmentImageInfos;

		public unsafe VkFramebufferAttachmentsCreateInfo(VkStructureType sType = default, void* pNext = default, uint attachmentImageInfoCount = default, VkFramebufferAttachmentImageInfo* pAttachmentImageInfos = default)
		{
			SType = sType;
			PNext = pNext;
			AttachmentImageInfoCount = attachmentImageInfoCount;
			PAttachmentImageInfos = pAttachmentImageInfos;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRenderPassAttachmentBeginInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRenderPassAttachmentBeginInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "attachmentCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AttachmentCount;
		[NativeName(NativeNameType.Field, "pAttachments")]
		[NativeName(NativeNameType.Type, "const VkImageView*")]
		public unsafe VkImageView* PAttachments;

		public unsafe VkRenderPassAttachmentBeginInfo(VkStructureType sType = default, void* pNext = default, uint attachmentCount = default, VkImageView* pAttachments = default)
		{
			SType = sType;
			PNext = pNext;
			AttachmentCount = attachmentCount;
			PAttachments = pAttachments;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceUniformBufferStandardLayoutFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceUniformBufferStandardLayoutFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "uniformBufferStandardLayout")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint UniformBufferStandardLayout;

		public unsafe VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkStructureType sType = default, void* pNext = default, uint uniformBufferStandardLayout = default)
		{
			SType = sType;
			PNext = pNext;
			UniformBufferStandardLayout = uniformBufferStandardLayout;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderSubgroupExtendedTypes")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSubgroupExtendedTypes;

		public unsafe VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkStructureType sType = default, void* pNext = default, uint shaderSubgroupExtendedTypes = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderSubgroupExtendedTypes = shaderSubgroupExtendedTypes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "separateDepthStencilLayouts")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SeparateDepthStencilLayouts;

		public unsafe VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkStructureType sType = default, void* pNext = default, uint separateDepthStencilLayouts = default)
		{
			SType = sType;
			PNext = pNext;
			SeparateDepthStencilLayouts = separateDepthStencilLayouts;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAttachmentReferenceStencilLayout")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAttachmentReferenceStencilLayout
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stencilLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout StencilLayout;

		public unsafe VkAttachmentReferenceStencilLayout(VkStructureType sType = default, void* pNext = default, VkImageLayout stencilLayout = default)
		{
			SType = sType;
			PNext = pNext;
			StencilLayout = stencilLayout;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAttachmentDescriptionStencilLayout")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAttachmentDescriptionStencilLayout
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stencilInitialLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout StencilInitialLayout;
		[NativeName(NativeNameType.Field, "stencilFinalLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout StencilFinalLayout;

		public unsafe VkAttachmentDescriptionStencilLayout(VkStructureType sType = default, void* pNext = default, VkImageLayout stencilInitialLayout = default, VkImageLayout stencilFinalLayout = default)
		{
			SType = sType;
			PNext = pNext;
			StencilInitialLayout = stencilInitialLayout;
			StencilFinalLayout = stencilFinalLayout;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceHostQueryResetFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceHostQueryResetFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "hostQueryReset")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint HostQueryReset;

		public unsafe VkPhysicalDeviceHostQueryResetFeatures(VkStructureType sType = default, void* pNext = default, uint hostQueryReset = default)
		{
			SType = sType;
			PNext = pNext;
			HostQueryReset = hostQueryReset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceTimelineSemaphoreFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceTimelineSemaphoreFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "timelineSemaphore")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TimelineSemaphore;

		public unsafe VkPhysicalDeviceTimelineSemaphoreFeatures(VkStructureType sType = default, void* pNext = default, uint timelineSemaphore = default)
		{
			SType = sType;
			PNext = pNext;
			TimelineSemaphore = timelineSemaphore;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceTimelineSemaphoreProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceTimelineSemaphoreProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxTimelineSemaphoreValueDifference")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxTimelineSemaphoreValueDifference;

		public unsafe VkPhysicalDeviceTimelineSemaphoreProperties(VkStructureType sType = default, void* pNext = default, ulong maxTimelineSemaphoreValueDifference = default)
		{
			SType = sType;
			PNext = pNext;
			MaxTimelineSemaphoreValueDifference = maxTimelineSemaphoreValueDifference;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSemaphoreTypeCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSemaphoreTypeCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "semaphoreType")]
		[NativeName(NativeNameType.Type, "VkSemaphoreType")]
		public VkSemaphoreType SemaphoreType;
		[NativeName(NativeNameType.Field, "initialValue")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong InitialValue;

		public unsafe VkSemaphoreTypeCreateInfo(VkStructureType sType = default, void* pNext = default, VkSemaphoreType semaphoreType = default, ulong initialValue = default)
		{
			SType = sType;
			PNext = pNext;
			SemaphoreType = semaphoreType;
			InitialValue = initialValue;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkTimelineSemaphoreSubmitInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkTimelineSemaphoreSubmitInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "waitSemaphoreValueCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint WaitSemaphoreValueCount;
		[NativeName(NativeNameType.Field, "pWaitSemaphoreValues")]
		[NativeName(NativeNameType.Type, "const uint64_t*")]
		public unsafe ulong* PWaitSemaphoreValues;
		[NativeName(NativeNameType.Field, "signalSemaphoreValueCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SignalSemaphoreValueCount;
		[NativeName(NativeNameType.Field, "pSignalSemaphoreValues")]
		[NativeName(NativeNameType.Type, "const uint64_t*")]
		public unsafe ulong* PSignalSemaphoreValues;

		public unsafe VkTimelineSemaphoreSubmitInfo(VkStructureType sType = default, void* pNext = default, uint waitSemaphoreValueCount = default, ulong* pWaitSemaphoreValues = default, uint signalSemaphoreValueCount = default, ulong* pSignalSemaphoreValues = default)
		{
			SType = sType;
			PNext = pNext;
			WaitSemaphoreValueCount = waitSemaphoreValueCount;
			PWaitSemaphoreValues = pWaitSemaphoreValues;
			SignalSemaphoreValueCount = signalSemaphoreValueCount;
			PSignalSemaphoreValues = pSignalSemaphoreValues;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSemaphoreWaitInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSemaphoreWaitInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkSemaphoreWaitFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "semaphoreCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SemaphoreCount;
		[NativeName(NativeNameType.Field, "pSemaphores")]
		[NativeName(NativeNameType.Type, "const VkSemaphore*")]
		public unsafe VkSemaphore* PSemaphores;
		[NativeName(NativeNameType.Field, "pValues")]
		[NativeName(NativeNameType.Type, "const uint64_t*")]
		public unsafe ulong* PValues;

		public unsafe VkSemaphoreWaitInfo(VkStructureType sType = default, void* pNext = default, uint flags = default, uint semaphoreCount = default, VkSemaphore* pSemaphores = default, ulong* pValues = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			SemaphoreCount = semaphoreCount;
			PSemaphores = pSemaphores;
			PValues = pValues;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSemaphoreSignalInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSemaphoreSignalInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "semaphore")]
		[NativeName(NativeNameType.Type, "VkSemaphore")]
		public VkSemaphore Semaphore;
		[NativeName(NativeNameType.Field, "value")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Value;

		public unsafe VkSemaphoreSignalInfo(VkStructureType sType = default, void* pNext = default, VkSemaphore semaphore = default, ulong value = default)
		{
			SType = sType;
			PNext = pNext;
			Semaphore = semaphore;
			Value = value;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceBufferDeviceAddressFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceBufferDeviceAddressFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "bufferDeviceAddress")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddress;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressCaptureReplay")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressCaptureReplay;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressMultiDevice")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressMultiDevice;

		public unsafe VkPhysicalDeviceBufferDeviceAddressFeatures(VkStructureType sType = default, void* pNext = default, uint bufferDeviceAddress = default, uint bufferDeviceAddressCaptureReplay = default, uint bufferDeviceAddressMultiDevice = default)
		{
			SType = sType;
			PNext = pNext;
			BufferDeviceAddress = bufferDeviceAddress;
			BufferDeviceAddressCaptureReplay = bufferDeviceAddressCaptureReplay;
			BufferDeviceAddressMultiDevice = bufferDeviceAddressMultiDevice;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferDeviceAddressInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferDeviceAddressInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;

		public unsafe VkBufferDeviceAddressInfo(VkStructureType sType = default, void* pNext = default, VkBuffer buffer = default)
		{
			SType = sType;
			PNext = pNext;
			Buffer = buffer;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferOpaqueCaptureAddressCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferOpaqueCaptureAddressCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "opaqueCaptureAddress")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong OpaqueCaptureAddress;

		public unsafe VkBufferOpaqueCaptureAddressCreateInfo(VkStructureType sType = default, void* pNext = default, ulong opaqueCaptureAddress = default)
		{
			SType = sType;
			PNext = pNext;
			OpaqueCaptureAddress = opaqueCaptureAddress;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMemoryOpaqueCaptureAddressAllocateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryOpaqueCaptureAddressAllocateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "opaqueCaptureAddress")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong OpaqueCaptureAddress;

		public unsafe VkMemoryOpaqueCaptureAddressAllocateInfo(VkStructureType sType = default, void* pNext = default, ulong opaqueCaptureAddress = default)
		{
			SType = sType;
			PNext = pNext;
			OpaqueCaptureAddress = opaqueCaptureAddress;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceMemoryOpaqueCaptureAddressInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceMemoryOpaqueCaptureAddressInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "memory")]
		[NativeName(NativeNameType.Type, "VkDeviceMemory")]
		public VkDeviceMemory Memory;

		public unsafe VkDeviceMemoryOpaqueCaptureAddressInfo(VkStructureType sType = default, void* pNext = default, VkDeviceMemory memory = default)
		{
			SType = sType;
			PNext = pNext;
			Memory = memory;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVulkan13Features")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVulkan13Features
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "robustImageAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RobustImageAccess;
		[NativeName(NativeNameType.Field, "inlineUniformBlock")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint InlineUniformBlock;
		[NativeName(NativeNameType.Field, "descriptorBindingInlineUniformBlockUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingInlineUniformBlockUpdateAfterBind;
		[NativeName(NativeNameType.Field, "pipelineCreationCacheControl")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PipelineCreationCacheControl;
		[NativeName(NativeNameType.Field, "privateData")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrivateData;
		[NativeName(NativeNameType.Field, "shaderDemoteToHelperInvocation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDemoteToHelperInvocation;
		[NativeName(NativeNameType.Field, "shaderTerminateInvocation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderTerminateInvocation;
		[NativeName(NativeNameType.Field, "subgroupSizeControl")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SubgroupSizeControl;
		[NativeName(NativeNameType.Field, "computeFullSubgroups")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ComputeFullSubgroups;
		[NativeName(NativeNameType.Field, "synchronization2")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Synchronization2;
		[NativeName(NativeNameType.Field, "textureCompressionASTC_HDR")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TextureCompressionASTCHDR;
		[NativeName(NativeNameType.Field, "shaderZeroInitializeWorkgroupMemory")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderZeroInitializeWorkgroupMemory;
		[NativeName(NativeNameType.Field, "dynamicRendering")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DynamicRendering;
		[NativeName(NativeNameType.Field, "shaderIntegerDotProduct")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderIntegerDotProduct;
		[NativeName(NativeNameType.Field, "maintenance4")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Maintenance4;

		public unsafe VkPhysicalDeviceVulkan13Features(VkStructureType sType = default, void* pNext = default, uint robustImageAccess = default, uint inlineUniformBlock = default, uint descriptorBindingInlineUniformBlockUpdateAfterBind = default, uint pipelineCreationCacheControl = default, uint privateData = default, uint shaderDemoteToHelperInvocation = default, uint shaderTerminateInvocation = default, uint subgroupSizeControl = default, uint computeFullSubgroups = default, uint synchronization2 = default, uint texturecompressionastcHdr = default, uint shaderZeroInitializeWorkgroupMemory = default, uint dynamicRendering = default, uint shaderIntegerDotProduct = default, uint maintenance4 = default)
		{
			SType = sType;
			PNext = pNext;
			RobustImageAccess = robustImageAccess;
			InlineUniformBlock = inlineUniformBlock;
			DescriptorBindingInlineUniformBlockUpdateAfterBind = descriptorBindingInlineUniformBlockUpdateAfterBind;
			PipelineCreationCacheControl = pipelineCreationCacheControl;
			PrivateData = privateData;
			ShaderDemoteToHelperInvocation = shaderDemoteToHelperInvocation;
			ShaderTerminateInvocation = shaderTerminateInvocation;
			SubgroupSizeControl = subgroupSizeControl;
			ComputeFullSubgroups = computeFullSubgroups;
			Synchronization2 = synchronization2;
			TextureCompressionASTCHDR = texturecompressionastcHdr;
			ShaderZeroInitializeWorkgroupMemory = shaderZeroInitializeWorkgroupMemory;
			DynamicRendering = dynamicRendering;
			ShaderIntegerDotProduct = shaderIntegerDotProduct;
			Maintenance4 = maintenance4;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVulkan13Properties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVulkan13Properties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "minSubgroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinSubgroupSize;
		[NativeName(NativeNameType.Field, "maxSubgroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxSubgroupSize;
		[NativeName(NativeNameType.Field, "maxComputeWorkgroupSubgroups")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxComputeWorkgroupSubgroups;
		[NativeName(NativeNameType.Field, "requiredSubgroupSizeStages")]
		[NativeName(NativeNameType.Type, "VkShaderStageFlags")]
		public uint RequiredSubgroupSizeStages;
		[NativeName(NativeNameType.Field, "maxInlineUniformBlockSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxInlineUniformBlockSize;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorInlineUniformBlocks")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorInlineUniformBlocks;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
		[NativeName(NativeNameType.Field, "maxDescriptorSetInlineUniformBlocks")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetInlineUniformBlocks;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindInlineUniformBlocks")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindInlineUniformBlocks;
		[NativeName(NativeNameType.Field, "maxInlineUniformTotalSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxInlineUniformTotalSize;
		[NativeName(NativeNameType.Field, "integerDotProduct8BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct8BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct8BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct8BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct8BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct8BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct4x8BitPackedUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct4x8BitPackedUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct4x8BitPackedSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct4x8BitPackedSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct4x8BitPackedMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct4x8BitPackedMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct16BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct16BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct16BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct16BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct16BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct16BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct32BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct32BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct32BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct32BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct32BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct32BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct64BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct64BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct64BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct64BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProduct64BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProduct64BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating8BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating8BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating16BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating16BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating32BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating32BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating64BitSignedAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating64BitSignedAccelerated;
		[NativeName(NativeNameType.Field, "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IntegerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
		[NativeName(NativeNameType.Field, "storageTexelBufferOffsetAlignmentBytes")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong StorageTexelBufferOffsetAlignmentBytes;
		[NativeName(NativeNameType.Field, "storageTexelBufferOffsetSingleTexelAlignment")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StorageTexelBufferOffsetSingleTexelAlignment;
		[NativeName(NativeNameType.Field, "uniformTexelBufferOffsetAlignmentBytes")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong UniformTexelBufferOffsetAlignmentBytes;
		[NativeName(NativeNameType.Field, "uniformTexelBufferOffsetSingleTexelAlignment")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint UniformTexelBufferOffsetSingleTexelAlignment;
		[NativeName(NativeNameType.Field, "maxBufferSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MaxBufferSize;

		public unsafe VkPhysicalDeviceVulkan13Properties(VkStructureType sType = default, void* pNext = default, uint minSubgroupSize = default, uint maxSubgroupSize = default, uint maxComputeWorkgroupSubgroups = default, uint requiredSubgroupSizeStages = default, uint maxInlineUniformBlockSize = default, uint maxPerStageDescriptorInlineUniformBlocks = default, uint maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks = default, uint maxDescriptorSetInlineUniformBlocks = default, uint maxDescriptorSetUpdateAfterBindInlineUniformBlocks = default, uint maxInlineUniformTotalSize = default, uint integerDotProduct8BitUnsignedAccelerated = default, uint integerDotProduct8BitSignedAccelerated = default, uint integerDotProduct8BitMixedSignednessAccelerated = default, uint integerDotProduct4x8BitPackedUnsignedAccelerated = default, uint integerDotProduct4x8BitPackedSignedAccelerated = default, uint integerDotProduct4x8BitPackedMixedSignednessAccelerated = default, uint integerDotProduct16BitUnsignedAccelerated = default, uint integerDotProduct16BitSignedAccelerated = default, uint integerDotProduct16BitMixedSignednessAccelerated = default, uint integerDotProduct32BitUnsignedAccelerated = default, uint integerDotProduct32BitSignedAccelerated = default, uint integerDotProduct32BitMixedSignednessAccelerated = default, uint integerDotProduct64BitUnsignedAccelerated = default, uint integerDotProduct64BitSignedAccelerated = default, uint integerDotProduct64BitMixedSignednessAccelerated = default, uint integerDotProductAccumulatingSaturating8BitUnsignedAccelerated = default, uint integerDotProductAccumulatingSaturating8BitSignedAccelerated = default, uint integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated = default, uint integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated = default, uint integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated = default, uint integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated = default, uint integerDotProductAccumulatingSaturating16BitUnsignedAccelerated = default, uint integerDotProductAccumulatingSaturating16BitSignedAccelerated = default, uint integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated = default, uint integerDotProductAccumulatingSaturating32BitUnsignedAccelerated = default, uint integerDotProductAccumulatingSaturating32BitSignedAccelerated = default, uint integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated = default, uint integerDotProductAccumulatingSaturating64BitUnsignedAccelerated = default, uint integerDotProductAccumulatingSaturating64BitSignedAccelerated = default, uint integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated = default, ulong storageTexelBufferOffsetAlignmentBytes = default, uint storageTexelBufferOffsetSingleTexelAlignment = default, ulong uniformTexelBufferOffsetAlignmentBytes = default, uint uniformTexelBufferOffsetSingleTexelAlignment = default, ulong maxBufferSize = default)
		{
			SType = sType;
			PNext = pNext;
			MinSubgroupSize = minSubgroupSize;
			MaxSubgroupSize = maxSubgroupSize;
			MaxComputeWorkgroupSubgroups = maxComputeWorkgroupSubgroups;
			RequiredSubgroupSizeStages = requiredSubgroupSizeStages;
			MaxInlineUniformBlockSize = maxInlineUniformBlockSize;
			MaxPerStageDescriptorInlineUniformBlocks = maxPerStageDescriptorInlineUniformBlocks;
			MaxPerStageDescriptorUpdateAfterBindInlineUniformBlocks = maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
			MaxDescriptorSetInlineUniformBlocks = maxDescriptorSetInlineUniformBlocks;
			MaxDescriptorSetUpdateAfterBindInlineUniformBlocks = maxDescriptorSetUpdateAfterBindInlineUniformBlocks;
			MaxInlineUniformTotalSize = maxInlineUniformTotalSize;
			IntegerDotProduct8BitUnsignedAccelerated = integerDotProduct8BitUnsignedAccelerated;
			IntegerDotProduct8BitSignedAccelerated = integerDotProduct8BitSignedAccelerated;
			IntegerDotProduct8BitMixedSignednessAccelerated = integerDotProduct8BitMixedSignednessAccelerated;
			IntegerDotProduct4x8BitPackedUnsignedAccelerated = integerDotProduct4x8BitPackedUnsignedAccelerated;
			IntegerDotProduct4x8BitPackedSignedAccelerated = integerDotProduct4x8BitPackedSignedAccelerated;
			IntegerDotProduct4x8BitPackedMixedSignednessAccelerated = integerDotProduct4x8BitPackedMixedSignednessAccelerated;
			IntegerDotProduct16BitUnsignedAccelerated = integerDotProduct16BitUnsignedAccelerated;
			IntegerDotProduct16BitSignedAccelerated = integerDotProduct16BitSignedAccelerated;
			IntegerDotProduct16BitMixedSignednessAccelerated = integerDotProduct16BitMixedSignednessAccelerated;
			IntegerDotProduct32BitUnsignedAccelerated = integerDotProduct32BitUnsignedAccelerated;
			IntegerDotProduct32BitSignedAccelerated = integerDotProduct32BitSignedAccelerated;
			IntegerDotProduct32BitMixedSignednessAccelerated = integerDotProduct32BitMixedSignednessAccelerated;
			IntegerDotProduct64BitUnsignedAccelerated = integerDotProduct64BitUnsignedAccelerated;
			IntegerDotProduct64BitSignedAccelerated = integerDotProduct64BitSignedAccelerated;
			IntegerDotProduct64BitMixedSignednessAccelerated = integerDotProduct64BitMixedSignednessAccelerated;
			IntegerDotProductAccumulatingSaturating8BitUnsignedAccelerated = integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
			IntegerDotProductAccumulatingSaturating8BitSignedAccelerated = integerDotProductAccumulatingSaturating8BitSignedAccelerated;
			IntegerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated = integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
			IntegerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated = integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
			IntegerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated = integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
			IntegerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated = integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
			IntegerDotProductAccumulatingSaturating16BitUnsignedAccelerated = integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
			IntegerDotProductAccumulatingSaturating16BitSignedAccelerated = integerDotProductAccumulatingSaturating16BitSignedAccelerated;
			IntegerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated = integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
			IntegerDotProductAccumulatingSaturating32BitUnsignedAccelerated = integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
			IntegerDotProductAccumulatingSaturating32BitSignedAccelerated = integerDotProductAccumulatingSaturating32BitSignedAccelerated;
			IntegerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated = integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
			IntegerDotProductAccumulatingSaturating64BitUnsignedAccelerated = integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
			IntegerDotProductAccumulatingSaturating64BitSignedAccelerated = integerDotProductAccumulatingSaturating64BitSignedAccelerated;
			IntegerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated = integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
			StorageTexelBufferOffsetAlignmentBytes = storageTexelBufferOffsetAlignmentBytes;
			StorageTexelBufferOffsetSingleTexelAlignment = storageTexelBufferOffsetSingleTexelAlignment;
			UniformTexelBufferOffsetAlignmentBytes = uniformTexelBufferOffsetAlignmentBytes;
			UniformTexelBufferOffsetSingleTexelAlignment = uniformTexelBufferOffsetSingleTexelAlignment;
			MaxBufferSize = maxBufferSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCreationFeedback")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCreationFeedback
	{
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCreationFeedbackFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "duration")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Duration;

		public unsafe VkPipelineCreationFeedback(uint flags = default, ulong duration = default)
		{
			Flags = flags;
			Duration = duration;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCreationFeedbackCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCreationFeedbackCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pPipelineCreationFeedback")]
		[NativeName(NativeNameType.Type, "VkPipelineCreationFeedback*")]
		public unsafe VkPipelineCreationFeedback* PPipelineCreationFeedback;
		[NativeName(NativeNameType.Field, "pipelineStageCreationFeedbackCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PipelineStageCreationFeedbackCount;
		[NativeName(NativeNameType.Field, "pPipelineStageCreationFeedbacks")]
		[NativeName(NativeNameType.Type, "VkPipelineCreationFeedback*")]
		public unsafe VkPipelineCreationFeedback* PPipelineStageCreationFeedbacks;

		public unsafe VkPipelineCreationFeedbackCreateInfo(VkStructureType sType = default, void* pNext = default, VkPipelineCreationFeedback* pPipelineCreationFeedback = default, uint pipelineStageCreationFeedbackCount = default, VkPipelineCreationFeedback* pPipelineStageCreationFeedbacks = default)
		{
			SType = sType;
			PNext = pNext;
			PPipelineCreationFeedback = pPipelineCreationFeedback;
			PipelineStageCreationFeedbackCount = pipelineStageCreationFeedbackCount;
			PPipelineStageCreationFeedbacks = pPipelineStageCreationFeedbacks;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderTerminateInvocationFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderTerminateInvocationFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderTerminateInvocation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderTerminateInvocation;

		public unsafe VkPhysicalDeviceShaderTerminateInvocationFeatures(VkStructureType sType = default, void* pNext = default, uint shaderTerminateInvocation = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderTerminateInvocation = shaderTerminateInvocation;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceToolProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceToolProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "name")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte Name_0;
		public byte Name_1;
		public byte Name_2;
		public byte Name_3;
		public byte Name_4;
		public byte Name_5;
		public byte Name_6;
		public byte Name_7;
		public byte Name_8;
		public byte Name_9;
		public byte Name_10;
		public byte Name_11;
		public byte Name_12;
		public byte Name_13;
		public byte Name_14;
		public byte Name_15;
		public byte Name_16;
		public byte Name_17;
		public byte Name_18;
		public byte Name_19;
		public byte Name_20;
		public byte Name_21;
		public byte Name_22;
		public byte Name_23;
		public byte Name_24;
		public byte Name_25;
		public byte Name_26;
		public byte Name_27;
		public byte Name_28;
		public byte Name_29;
		public byte Name_30;
		public byte Name_31;
		public byte Name_32;
		public byte Name_33;
		public byte Name_34;
		public byte Name_35;
		public byte Name_36;
		public byte Name_37;
		public byte Name_38;
		public byte Name_39;
		public byte Name_40;
		public byte Name_41;
		public byte Name_42;
		public byte Name_43;
		public byte Name_44;
		public byte Name_45;
		public byte Name_46;
		public byte Name_47;
		public byte Name_48;
		public byte Name_49;
		public byte Name_50;
		public byte Name_51;
		public byte Name_52;
		public byte Name_53;
		public byte Name_54;
		public byte Name_55;
		public byte Name_56;
		public byte Name_57;
		public byte Name_58;
		public byte Name_59;
		public byte Name_60;
		public byte Name_61;
		public byte Name_62;
		public byte Name_63;
		public byte Name_64;
		public byte Name_65;
		public byte Name_66;
		public byte Name_67;
		public byte Name_68;
		public byte Name_69;
		public byte Name_70;
		public byte Name_71;
		public byte Name_72;
		public byte Name_73;
		public byte Name_74;
		public byte Name_75;
		public byte Name_76;
		public byte Name_77;
		public byte Name_78;
		public byte Name_79;
		public byte Name_80;
		public byte Name_81;
		public byte Name_82;
		public byte Name_83;
		public byte Name_84;
		public byte Name_85;
		public byte Name_86;
		public byte Name_87;
		public byte Name_88;
		public byte Name_89;
		public byte Name_90;
		public byte Name_91;
		public byte Name_92;
		public byte Name_93;
		public byte Name_94;
		public byte Name_95;
		public byte Name_96;
		public byte Name_97;
		public byte Name_98;
		public byte Name_99;
		public byte Name_100;
		public byte Name_101;
		public byte Name_102;
		public byte Name_103;
		public byte Name_104;
		public byte Name_105;
		public byte Name_106;
		public byte Name_107;
		public byte Name_108;
		public byte Name_109;
		public byte Name_110;
		public byte Name_111;
		public byte Name_112;
		public byte Name_113;
		public byte Name_114;
		public byte Name_115;
		public byte Name_116;
		public byte Name_117;
		public byte Name_118;
		public byte Name_119;
		public byte Name_120;
		public byte Name_121;
		public byte Name_122;
		public byte Name_123;
		public byte Name_124;
		public byte Name_125;
		public byte Name_126;
		public byte Name_127;
		public byte Name_128;
		public byte Name_129;
		public byte Name_130;
		public byte Name_131;
		public byte Name_132;
		public byte Name_133;
		public byte Name_134;
		public byte Name_135;
		public byte Name_136;
		public byte Name_137;
		public byte Name_138;
		public byte Name_139;
		public byte Name_140;
		public byte Name_141;
		public byte Name_142;
		public byte Name_143;
		public byte Name_144;
		public byte Name_145;
		public byte Name_146;
		public byte Name_147;
		public byte Name_148;
		public byte Name_149;
		public byte Name_150;
		public byte Name_151;
		public byte Name_152;
		public byte Name_153;
		public byte Name_154;
		public byte Name_155;
		public byte Name_156;
		public byte Name_157;
		public byte Name_158;
		public byte Name_159;
		public byte Name_160;
		public byte Name_161;
		public byte Name_162;
		public byte Name_163;
		public byte Name_164;
		public byte Name_165;
		public byte Name_166;
		public byte Name_167;
		public byte Name_168;
		public byte Name_169;
		public byte Name_170;
		public byte Name_171;
		public byte Name_172;
		public byte Name_173;
		public byte Name_174;
		public byte Name_175;
		public byte Name_176;
		public byte Name_177;
		public byte Name_178;
		public byte Name_179;
		public byte Name_180;
		public byte Name_181;
		public byte Name_182;
		public byte Name_183;
		public byte Name_184;
		public byte Name_185;
		public byte Name_186;
		public byte Name_187;
		public byte Name_188;
		public byte Name_189;
		public byte Name_190;
		public byte Name_191;
		public byte Name_192;
		public byte Name_193;
		public byte Name_194;
		public byte Name_195;
		public byte Name_196;
		public byte Name_197;
		public byte Name_198;
		public byte Name_199;
		public byte Name_200;
		public byte Name_201;
		public byte Name_202;
		public byte Name_203;
		public byte Name_204;
		public byte Name_205;
		public byte Name_206;
		public byte Name_207;
		public byte Name_208;
		public byte Name_209;
		public byte Name_210;
		public byte Name_211;
		public byte Name_212;
		public byte Name_213;
		public byte Name_214;
		public byte Name_215;
		public byte Name_216;
		public byte Name_217;
		public byte Name_218;
		public byte Name_219;
		public byte Name_220;
		public byte Name_221;
		public byte Name_222;
		public byte Name_223;
		public byte Name_224;
		public byte Name_225;
		public byte Name_226;
		public byte Name_227;
		public byte Name_228;
		public byte Name_229;
		public byte Name_230;
		public byte Name_231;
		public byte Name_232;
		public byte Name_233;
		public byte Name_234;
		public byte Name_235;
		public byte Name_236;
		public byte Name_237;
		public byte Name_238;
		public byte Name_239;
		public byte Name_240;
		public byte Name_241;
		public byte Name_242;
		public byte Name_243;
		public byte Name_244;
		public byte Name_245;
		public byte Name_246;
		public byte Name_247;
		public byte Name_248;
		public byte Name_249;
		public byte Name_250;
		public byte Name_251;
		public byte Name_252;
		public byte Name_253;
		public byte Name_254;
		public byte Name_255;
		[NativeName(NativeNameType.Field, "version")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte Version_0;
		public byte Version_1;
		public byte Version_2;
		public byte Version_3;
		public byte Version_4;
		public byte Version_5;
		public byte Version_6;
		public byte Version_7;
		public byte Version_8;
		public byte Version_9;
		public byte Version_10;
		public byte Version_11;
		public byte Version_12;
		public byte Version_13;
		public byte Version_14;
		public byte Version_15;
		public byte Version_16;
		public byte Version_17;
		public byte Version_18;
		public byte Version_19;
		public byte Version_20;
		public byte Version_21;
		public byte Version_22;
		public byte Version_23;
		public byte Version_24;
		public byte Version_25;
		public byte Version_26;
		public byte Version_27;
		public byte Version_28;
		public byte Version_29;
		public byte Version_30;
		public byte Version_31;
		public byte Version_32;
		public byte Version_33;
		public byte Version_34;
		public byte Version_35;
		public byte Version_36;
		public byte Version_37;
		public byte Version_38;
		public byte Version_39;
		public byte Version_40;
		public byte Version_41;
		public byte Version_42;
		public byte Version_43;
		public byte Version_44;
		public byte Version_45;
		public byte Version_46;
		public byte Version_47;
		public byte Version_48;
		public byte Version_49;
		public byte Version_50;
		public byte Version_51;
		public byte Version_52;
		public byte Version_53;
		public byte Version_54;
		public byte Version_55;
		public byte Version_56;
		public byte Version_57;
		public byte Version_58;
		public byte Version_59;
		public byte Version_60;
		public byte Version_61;
		public byte Version_62;
		public byte Version_63;
		public byte Version_64;
		public byte Version_65;
		public byte Version_66;
		public byte Version_67;
		public byte Version_68;
		public byte Version_69;
		public byte Version_70;
		public byte Version_71;
		public byte Version_72;
		public byte Version_73;
		public byte Version_74;
		public byte Version_75;
		public byte Version_76;
		public byte Version_77;
		public byte Version_78;
		public byte Version_79;
		public byte Version_80;
		public byte Version_81;
		public byte Version_82;
		public byte Version_83;
		public byte Version_84;
		public byte Version_85;
		public byte Version_86;
		public byte Version_87;
		public byte Version_88;
		public byte Version_89;
		public byte Version_90;
		public byte Version_91;
		public byte Version_92;
		public byte Version_93;
		public byte Version_94;
		public byte Version_95;
		public byte Version_96;
		public byte Version_97;
		public byte Version_98;
		public byte Version_99;
		public byte Version_100;
		public byte Version_101;
		public byte Version_102;
		public byte Version_103;
		public byte Version_104;
		public byte Version_105;
		public byte Version_106;
		public byte Version_107;
		public byte Version_108;
		public byte Version_109;
		public byte Version_110;
		public byte Version_111;
		public byte Version_112;
		public byte Version_113;
		public byte Version_114;
		public byte Version_115;
		public byte Version_116;
		public byte Version_117;
		public byte Version_118;
		public byte Version_119;
		public byte Version_120;
		public byte Version_121;
		public byte Version_122;
		public byte Version_123;
		public byte Version_124;
		public byte Version_125;
		public byte Version_126;
		public byte Version_127;
		public byte Version_128;
		public byte Version_129;
		public byte Version_130;
		public byte Version_131;
		public byte Version_132;
		public byte Version_133;
		public byte Version_134;
		public byte Version_135;
		public byte Version_136;
		public byte Version_137;
		public byte Version_138;
		public byte Version_139;
		public byte Version_140;
		public byte Version_141;
		public byte Version_142;
		public byte Version_143;
		public byte Version_144;
		public byte Version_145;
		public byte Version_146;
		public byte Version_147;
		public byte Version_148;
		public byte Version_149;
		public byte Version_150;
		public byte Version_151;
		public byte Version_152;
		public byte Version_153;
		public byte Version_154;
		public byte Version_155;
		public byte Version_156;
		public byte Version_157;
		public byte Version_158;
		public byte Version_159;
		public byte Version_160;
		public byte Version_161;
		public byte Version_162;
		public byte Version_163;
		public byte Version_164;
		public byte Version_165;
		public byte Version_166;
		public byte Version_167;
		public byte Version_168;
		public byte Version_169;
		public byte Version_170;
		public byte Version_171;
		public byte Version_172;
		public byte Version_173;
		public byte Version_174;
		public byte Version_175;
		public byte Version_176;
		public byte Version_177;
		public byte Version_178;
		public byte Version_179;
		public byte Version_180;
		public byte Version_181;
		public byte Version_182;
		public byte Version_183;
		public byte Version_184;
		public byte Version_185;
		public byte Version_186;
		public byte Version_187;
		public byte Version_188;
		public byte Version_189;
		public byte Version_190;
		public byte Version_191;
		public byte Version_192;
		public byte Version_193;
		public byte Version_194;
		public byte Version_195;
		public byte Version_196;
		public byte Version_197;
		public byte Version_198;
		public byte Version_199;
		public byte Version_200;
		public byte Version_201;
		public byte Version_202;
		public byte Version_203;
		public byte Version_204;
		public byte Version_205;
		public byte Version_206;
		public byte Version_207;
		public byte Version_208;
		public byte Version_209;
		public byte Version_210;
		public byte Version_211;
		public byte Version_212;
		public byte Version_213;
		public byte Version_214;
		public byte Version_215;
		public byte Version_216;
		public byte Version_217;
		public byte Version_218;
		public byte Version_219;
		public byte Version_220;
		public byte Version_221;
		public byte Version_222;
		public byte Version_223;
		public byte Version_224;
		public byte Version_225;
		public byte Version_226;
		public byte Version_227;
		public byte Version_228;
		public byte Version_229;
		public byte Version_230;
		public byte Version_231;
		public byte Version_232;
		public byte Version_233;
		public byte Version_234;
		public byte Version_235;
		public byte Version_236;
		public byte Version_237;
		public byte Version_238;
		public byte Version_239;
		public byte Version_240;
		public byte Version_241;
		public byte Version_242;
		public byte Version_243;
		public byte Version_244;
		public byte Version_245;
		public byte Version_246;
		public byte Version_247;
		public byte Version_248;
		public byte Version_249;
		public byte Version_250;
		public byte Version_251;
		public byte Version_252;
		public byte Version_253;
		public byte Version_254;
		public byte Version_255;
		[NativeName(NativeNameType.Field, "purposes")]
		[NativeName(NativeNameType.Type, "VkToolPurposeFlags")]
		public uint Purposes;
		[NativeName(NativeNameType.Field, "description")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte Description_0;
		public byte Description_1;
		public byte Description_2;
		public byte Description_3;
		public byte Description_4;
		public byte Description_5;
		public byte Description_6;
		public byte Description_7;
		public byte Description_8;
		public byte Description_9;
		public byte Description_10;
		public byte Description_11;
		public byte Description_12;
		public byte Description_13;
		public byte Description_14;
		public byte Description_15;
		public byte Description_16;
		public byte Description_17;
		public byte Description_18;
		public byte Description_19;
		public byte Description_20;
		public byte Description_21;
		public byte Description_22;
		public byte Description_23;
		public byte Description_24;
		public byte Description_25;
		public byte Description_26;
		public byte Description_27;
		public byte Description_28;
		public byte Description_29;
		public byte Description_30;
		public byte Description_31;
		public byte Description_32;
		public byte Description_33;
		public byte Description_34;
		public byte Description_35;
		public byte Description_36;
		public byte Description_37;
		public byte Description_38;
		public byte Description_39;
		public byte Description_40;
		public byte Description_41;
		public byte Description_42;
		public byte Description_43;
		public byte Description_44;
		public byte Description_45;
		public byte Description_46;
		public byte Description_47;
		public byte Description_48;
		public byte Description_49;
		public byte Description_50;
		public byte Description_51;
		public byte Description_52;
		public byte Description_53;
		public byte Description_54;
		public byte Description_55;
		public byte Description_56;
		public byte Description_57;
		public byte Description_58;
		public byte Description_59;
		public byte Description_60;
		public byte Description_61;
		public byte Description_62;
		public byte Description_63;
		public byte Description_64;
		public byte Description_65;
		public byte Description_66;
		public byte Description_67;
		public byte Description_68;
		public byte Description_69;
		public byte Description_70;
		public byte Description_71;
		public byte Description_72;
		public byte Description_73;
		public byte Description_74;
		public byte Description_75;
		public byte Description_76;
		public byte Description_77;
		public byte Description_78;
		public byte Description_79;
		public byte Description_80;
		public byte Description_81;
		public byte Description_82;
		public byte Description_83;
		public byte Description_84;
		public byte Description_85;
		public byte Description_86;
		public byte Description_87;
		public byte Description_88;
		public byte Description_89;
		public byte Description_90;
		public byte Description_91;
		public byte Description_92;
		public byte Description_93;
		public byte Description_94;
		public byte Description_95;
		public byte Description_96;
		public byte Description_97;
		public byte Description_98;
		public byte Description_99;
		public byte Description_100;
		public byte Description_101;
		public byte Description_102;
		public byte Description_103;
		public byte Description_104;
		public byte Description_105;
		public byte Description_106;
		public byte Description_107;
		public byte Description_108;
		public byte Description_109;
		public byte Description_110;
		public byte Description_111;
		public byte Description_112;
		public byte Description_113;
		public byte Description_114;
		public byte Description_115;
		public byte Description_116;
		public byte Description_117;
		public byte Description_118;
		public byte Description_119;
		public byte Description_120;
		public byte Description_121;
		public byte Description_122;
		public byte Description_123;
		public byte Description_124;
		public byte Description_125;
		public byte Description_126;
		public byte Description_127;
		public byte Description_128;
		public byte Description_129;
		public byte Description_130;
		public byte Description_131;
		public byte Description_132;
		public byte Description_133;
		public byte Description_134;
		public byte Description_135;
		public byte Description_136;
		public byte Description_137;
		public byte Description_138;
		public byte Description_139;
		public byte Description_140;
		public byte Description_141;
		public byte Description_142;
		public byte Description_143;
		public byte Description_144;
		public byte Description_145;
		public byte Description_146;
		public byte Description_147;
		public byte Description_148;
		public byte Description_149;
		public byte Description_150;
		public byte Description_151;
		public byte Description_152;
		public byte Description_153;
		public byte Description_154;
		public byte Description_155;
		public byte Description_156;
		public byte Description_157;
		public byte Description_158;
		public byte Description_159;
		public byte Description_160;
		public byte Description_161;
		public byte Description_162;
		public byte Description_163;
		public byte Description_164;
		public byte Description_165;
		public byte Description_166;
		public byte Description_167;
		public byte Description_168;
		public byte Description_169;
		public byte Description_170;
		public byte Description_171;
		public byte Description_172;
		public byte Description_173;
		public byte Description_174;
		public byte Description_175;
		public byte Description_176;
		public byte Description_177;
		public byte Description_178;
		public byte Description_179;
		public byte Description_180;
		public byte Description_181;
		public byte Description_182;
		public byte Description_183;
		public byte Description_184;
		public byte Description_185;
		public byte Description_186;
		public byte Description_187;
		public byte Description_188;
		public byte Description_189;
		public byte Description_190;
		public byte Description_191;
		public byte Description_192;
		public byte Description_193;
		public byte Description_194;
		public byte Description_195;
		public byte Description_196;
		public byte Description_197;
		public byte Description_198;
		public byte Description_199;
		public byte Description_200;
		public byte Description_201;
		public byte Description_202;
		public byte Description_203;
		public byte Description_204;
		public byte Description_205;
		public byte Description_206;
		public byte Description_207;
		public byte Description_208;
		public byte Description_209;
		public byte Description_210;
		public byte Description_211;
		public byte Description_212;
		public byte Description_213;
		public byte Description_214;
		public byte Description_215;
		public byte Description_216;
		public byte Description_217;
		public byte Description_218;
		public byte Description_219;
		public byte Description_220;
		public byte Description_221;
		public byte Description_222;
		public byte Description_223;
		public byte Description_224;
		public byte Description_225;
		public byte Description_226;
		public byte Description_227;
		public byte Description_228;
		public byte Description_229;
		public byte Description_230;
		public byte Description_231;
		public byte Description_232;
		public byte Description_233;
		public byte Description_234;
		public byte Description_235;
		public byte Description_236;
		public byte Description_237;
		public byte Description_238;
		public byte Description_239;
		public byte Description_240;
		public byte Description_241;
		public byte Description_242;
		public byte Description_243;
		public byte Description_244;
		public byte Description_245;
		public byte Description_246;
		public byte Description_247;
		public byte Description_248;
		public byte Description_249;
		public byte Description_250;
		public byte Description_251;
		public byte Description_252;
		public byte Description_253;
		public byte Description_254;
		public byte Description_255;
		[NativeName(NativeNameType.Field, "layer")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte Layer_0;
		public byte Layer_1;
		public byte Layer_2;
		public byte Layer_3;
		public byte Layer_4;
		public byte Layer_5;
		public byte Layer_6;
		public byte Layer_7;
		public byte Layer_8;
		public byte Layer_9;
		public byte Layer_10;
		public byte Layer_11;
		public byte Layer_12;
		public byte Layer_13;
		public byte Layer_14;
		public byte Layer_15;
		public byte Layer_16;
		public byte Layer_17;
		public byte Layer_18;
		public byte Layer_19;
		public byte Layer_20;
		public byte Layer_21;
		public byte Layer_22;
		public byte Layer_23;
		public byte Layer_24;
		public byte Layer_25;
		public byte Layer_26;
		public byte Layer_27;
		public byte Layer_28;
		public byte Layer_29;
		public byte Layer_30;
		public byte Layer_31;
		public byte Layer_32;
		public byte Layer_33;
		public byte Layer_34;
		public byte Layer_35;
		public byte Layer_36;
		public byte Layer_37;
		public byte Layer_38;
		public byte Layer_39;
		public byte Layer_40;
		public byte Layer_41;
		public byte Layer_42;
		public byte Layer_43;
		public byte Layer_44;
		public byte Layer_45;
		public byte Layer_46;
		public byte Layer_47;
		public byte Layer_48;
		public byte Layer_49;
		public byte Layer_50;
		public byte Layer_51;
		public byte Layer_52;
		public byte Layer_53;
		public byte Layer_54;
		public byte Layer_55;
		public byte Layer_56;
		public byte Layer_57;
		public byte Layer_58;
		public byte Layer_59;
		public byte Layer_60;
		public byte Layer_61;
		public byte Layer_62;
		public byte Layer_63;
		public byte Layer_64;
		public byte Layer_65;
		public byte Layer_66;
		public byte Layer_67;
		public byte Layer_68;
		public byte Layer_69;
		public byte Layer_70;
		public byte Layer_71;
		public byte Layer_72;
		public byte Layer_73;
		public byte Layer_74;
		public byte Layer_75;
		public byte Layer_76;
		public byte Layer_77;
		public byte Layer_78;
		public byte Layer_79;
		public byte Layer_80;
		public byte Layer_81;
		public byte Layer_82;
		public byte Layer_83;
		public byte Layer_84;
		public byte Layer_85;
		public byte Layer_86;
		public byte Layer_87;
		public byte Layer_88;
		public byte Layer_89;
		public byte Layer_90;
		public byte Layer_91;
		public byte Layer_92;
		public byte Layer_93;
		public byte Layer_94;
		public byte Layer_95;
		public byte Layer_96;
		public byte Layer_97;
		public byte Layer_98;
		public byte Layer_99;
		public byte Layer_100;
		public byte Layer_101;
		public byte Layer_102;
		public byte Layer_103;
		public byte Layer_104;
		public byte Layer_105;
		public byte Layer_106;
		public byte Layer_107;
		public byte Layer_108;
		public byte Layer_109;
		public byte Layer_110;
		public byte Layer_111;
		public byte Layer_112;
		public byte Layer_113;
		public byte Layer_114;
		public byte Layer_115;
		public byte Layer_116;
		public byte Layer_117;
		public byte Layer_118;
		public byte Layer_119;
		public byte Layer_120;
		public byte Layer_121;
		public byte Layer_122;
		public byte Layer_123;
		public byte Layer_124;
		public byte Layer_125;
		public byte Layer_126;
		public byte Layer_127;
		public byte Layer_128;
		public byte Layer_129;
		public byte Layer_130;
		public byte Layer_131;
		public byte Layer_132;
		public byte Layer_133;
		public byte Layer_134;
		public byte Layer_135;
		public byte Layer_136;
		public byte Layer_137;
		public byte Layer_138;
		public byte Layer_139;
		public byte Layer_140;
		public byte Layer_141;
		public byte Layer_142;
		public byte Layer_143;
		public byte Layer_144;
		public byte Layer_145;
		public byte Layer_146;
		public byte Layer_147;
		public byte Layer_148;
		public byte Layer_149;
		public byte Layer_150;
		public byte Layer_151;
		public byte Layer_152;
		public byte Layer_153;
		public byte Layer_154;
		public byte Layer_155;
		public byte Layer_156;
		public byte Layer_157;
		public byte Layer_158;
		public byte Layer_159;
		public byte Layer_160;
		public byte Layer_161;
		public byte Layer_162;
		public byte Layer_163;
		public byte Layer_164;
		public byte Layer_165;
		public byte Layer_166;
		public byte Layer_167;
		public byte Layer_168;
		public byte Layer_169;
		public byte Layer_170;
		public byte Layer_171;
		public byte Layer_172;
		public byte Layer_173;
		public byte Layer_174;
		public byte Layer_175;
		public byte Layer_176;
		public byte Layer_177;
		public byte Layer_178;
		public byte Layer_179;
		public byte Layer_180;
		public byte Layer_181;
		public byte Layer_182;
		public byte Layer_183;
		public byte Layer_184;
		public byte Layer_185;
		public byte Layer_186;
		public byte Layer_187;
		public byte Layer_188;
		public byte Layer_189;
		public byte Layer_190;
		public byte Layer_191;
		public byte Layer_192;
		public byte Layer_193;
		public byte Layer_194;
		public byte Layer_195;
		public byte Layer_196;
		public byte Layer_197;
		public byte Layer_198;
		public byte Layer_199;
		public byte Layer_200;
		public byte Layer_201;
		public byte Layer_202;
		public byte Layer_203;
		public byte Layer_204;
		public byte Layer_205;
		public byte Layer_206;
		public byte Layer_207;
		public byte Layer_208;
		public byte Layer_209;
		public byte Layer_210;
		public byte Layer_211;
		public byte Layer_212;
		public byte Layer_213;
		public byte Layer_214;
		public byte Layer_215;
		public byte Layer_216;
		public byte Layer_217;
		public byte Layer_218;
		public byte Layer_219;
		public byte Layer_220;
		public byte Layer_221;
		public byte Layer_222;
		public byte Layer_223;
		public byte Layer_224;
		public byte Layer_225;
		public byte Layer_226;
		public byte Layer_227;
		public byte Layer_228;
		public byte Layer_229;
		public byte Layer_230;
		public byte Layer_231;
		public byte Layer_232;
		public byte Layer_233;
		public byte Layer_234;
		public byte Layer_235;
		public byte Layer_236;
		public byte Layer_237;
		public byte Layer_238;
		public byte Layer_239;
		public byte Layer_240;
		public byte Layer_241;
		public byte Layer_242;
		public byte Layer_243;
		public byte Layer_244;
		public byte Layer_245;
		public byte Layer_246;
		public byte Layer_247;
		public byte Layer_248;
		public byte Layer_249;
		public byte Layer_250;
		public byte Layer_251;
		public byte Layer_252;
		public byte Layer_253;
		public byte Layer_254;
		public byte Layer_255;

		public unsafe VkPhysicalDeviceToolProperties(VkStructureType sType = default, void* pNext = default, byte* name = default, byte* version = default, uint purposes = default, byte* description = default, byte* layer = default)
		{
			SType = sType;
			PNext = pNext;
			if (name != default)
			{
				Name_0 = name[0];
				Name_1 = name[1];
				Name_2 = name[2];
				Name_3 = name[3];
				Name_4 = name[4];
				Name_5 = name[5];
				Name_6 = name[6];
				Name_7 = name[7];
				Name_8 = name[8];
				Name_9 = name[9];
				Name_10 = name[10];
				Name_11 = name[11];
				Name_12 = name[12];
				Name_13 = name[13];
				Name_14 = name[14];
				Name_15 = name[15];
				Name_16 = name[16];
				Name_17 = name[17];
				Name_18 = name[18];
				Name_19 = name[19];
				Name_20 = name[20];
				Name_21 = name[21];
				Name_22 = name[22];
				Name_23 = name[23];
				Name_24 = name[24];
				Name_25 = name[25];
				Name_26 = name[26];
				Name_27 = name[27];
				Name_28 = name[28];
				Name_29 = name[29];
				Name_30 = name[30];
				Name_31 = name[31];
				Name_32 = name[32];
				Name_33 = name[33];
				Name_34 = name[34];
				Name_35 = name[35];
				Name_36 = name[36];
				Name_37 = name[37];
				Name_38 = name[38];
				Name_39 = name[39];
				Name_40 = name[40];
				Name_41 = name[41];
				Name_42 = name[42];
				Name_43 = name[43];
				Name_44 = name[44];
				Name_45 = name[45];
				Name_46 = name[46];
				Name_47 = name[47];
				Name_48 = name[48];
				Name_49 = name[49];
				Name_50 = name[50];
				Name_51 = name[51];
				Name_52 = name[52];
				Name_53 = name[53];
				Name_54 = name[54];
				Name_55 = name[55];
				Name_56 = name[56];
				Name_57 = name[57];
				Name_58 = name[58];
				Name_59 = name[59];
				Name_60 = name[60];
				Name_61 = name[61];
				Name_62 = name[62];
				Name_63 = name[63];
				Name_64 = name[64];
				Name_65 = name[65];
				Name_66 = name[66];
				Name_67 = name[67];
				Name_68 = name[68];
				Name_69 = name[69];
				Name_70 = name[70];
				Name_71 = name[71];
				Name_72 = name[72];
				Name_73 = name[73];
				Name_74 = name[74];
				Name_75 = name[75];
				Name_76 = name[76];
				Name_77 = name[77];
				Name_78 = name[78];
				Name_79 = name[79];
				Name_80 = name[80];
				Name_81 = name[81];
				Name_82 = name[82];
				Name_83 = name[83];
				Name_84 = name[84];
				Name_85 = name[85];
				Name_86 = name[86];
				Name_87 = name[87];
				Name_88 = name[88];
				Name_89 = name[89];
				Name_90 = name[90];
				Name_91 = name[91];
				Name_92 = name[92];
				Name_93 = name[93];
				Name_94 = name[94];
				Name_95 = name[95];
				Name_96 = name[96];
				Name_97 = name[97];
				Name_98 = name[98];
				Name_99 = name[99];
				Name_100 = name[100];
				Name_101 = name[101];
				Name_102 = name[102];
				Name_103 = name[103];
				Name_104 = name[104];
				Name_105 = name[105];
				Name_106 = name[106];
				Name_107 = name[107];
				Name_108 = name[108];
				Name_109 = name[109];
				Name_110 = name[110];
				Name_111 = name[111];
				Name_112 = name[112];
				Name_113 = name[113];
				Name_114 = name[114];
				Name_115 = name[115];
				Name_116 = name[116];
				Name_117 = name[117];
				Name_118 = name[118];
				Name_119 = name[119];
				Name_120 = name[120];
				Name_121 = name[121];
				Name_122 = name[122];
				Name_123 = name[123];
				Name_124 = name[124];
				Name_125 = name[125];
				Name_126 = name[126];
				Name_127 = name[127];
				Name_128 = name[128];
				Name_129 = name[129];
				Name_130 = name[130];
				Name_131 = name[131];
				Name_132 = name[132];
				Name_133 = name[133];
				Name_134 = name[134];
				Name_135 = name[135];
				Name_136 = name[136];
				Name_137 = name[137];
				Name_138 = name[138];
				Name_139 = name[139];
				Name_140 = name[140];
				Name_141 = name[141];
				Name_142 = name[142];
				Name_143 = name[143];
				Name_144 = name[144];
				Name_145 = name[145];
				Name_146 = name[146];
				Name_147 = name[147];
				Name_148 = name[148];
				Name_149 = name[149];
				Name_150 = name[150];
				Name_151 = name[151];
				Name_152 = name[152];
				Name_153 = name[153];
				Name_154 = name[154];
				Name_155 = name[155];
				Name_156 = name[156];
				Name_157 = name[157];
				Name_158 = name[158];
				Name_159 = name[159];
				Name_160 = name[160];
				Name_161 = name[161];
				Name_162 = name[162];
				Name_163 = name[163];
				Name_164 = name[164];
				Name_165 = name[165];
				Name_166 = name[166];
				Name_167 = name[167];
				Name_168 = name[168];
				Name_169 = name[169];
				Name_170 = name[170];
				Name_171 = name[171];
				Name_172 = name[172];
				Name_173 = name[173];
				Name_174 = name[174];
				Name_175 = name[175];
				Name_176 = name[176];
				Name_177 = name[177];
				Name_178 = name[178];
				Name_179 = name[179];
				Name_180 = name[180];
				Name_181 = name[181];
				Name_182 = name[182];
				Name_183 = name[183];
				Name_184 = name[184];
				Name_185 = name[185];
				Name_186 = name[186];
				Name_187 = name[187];
				Name_188 = name[188];
				Name_189 = name[189];
				Name_190 = name[190];
				Name_191 = name[191];
				Name_192 = name[192];
				Name_193 = name[193];
				Name_194 = name[194];
				Name_195 = name[195];
				Name_196 = name[196];
				Name_197 = name[197];
				Name_198 = name[198];
				Name_199 = name[199];
				Name_200 = name[200];
				Name_201 = name[201];
				Name_202 = name[202];
				Name_203 = name[203];
				Name_204 = name[204];
				Name_205 = name[205];
				Name_206 = name[206];
				Name_207 = name[207];
				Name_208 = name[208];
				Name_209 = name[209];
				Name_210 = name[210];
				Name_211 = name[211];
				Name_212 = name[212];
				Name_213 = name[213];
				Name_214 = name[214];
				Name_215 = name[215];
				Name_216 = name[216];
				Name_217 = name[217];
				Name_218 = name[218];
				Name_219 = name[219];
				Name_220 = name[220];
				Name_221 = name[221];
				Name_222 = name[222];
				Name_223 = name[223];
				Name_224 = name[224];
				Name_225 = name[225];
				Name_226 = name[226];
				Name_227 = name[227];
				Name_228 = name[228];
				Name_229 = name[229];
				Name_230 = name[230];
				Name_231 = name[231];
				Name_232 = name[232];
				Name_233 = name[233];
				Name_234 = name[234];
				Name_235 = name[235];
				Name_236 = name[236];
				Name_237 = name[237];
				Name_238 = name[238];
				Name_239 = name[239];
				Name_240 = name[240];
				Name_241 = name[241];
				Name_242 = name[242];
				Name_243 = name[243];
				Name_244 = name[244];
				Name_245 = name[245];
				Name_246 = name[246];
				Name_247 = name[247];
				Name_248 = name[248];
				Name_249 = name[249];
				Name_250 = name[250];
				Name_251 = name[251];
				Name_252 = name[252];
				Name_253 = name[253];
				Name_254 = name[254];
				Name_255 = name[255];
			}
			if (version != default)
			{
				Version_0 = version[0];
				Version_1 = version[1];
				Version_2 = version[2];
				Version_3 = version[3];
				Version_4 = version[4];
				Version_5 = version[5];
				Version_6 = version[6];
				Version_7 = version[7];
				Version_8 = version[8];
				Version_9 = version[9];
				Version_10 = version[10];
				Version_11 = version[11];
				Version_12 = version[12];
				Version_13 = version[13];
				Version_14 = version[14];
				Version_15 = version[15];
				Version_16 = version[16];
				Version_17 = version[17];
				Version_18 = version[18];
				Version_19 = version[19];
				Version_20 = version[20];
				Version_21 = version[21];
				Version_22 = version[22];
				Version_23 = version[23];
				Version_24 = version[24];
				Version_25 = version[25];
				Version_26 = version[26];
				Version_27 = version[27];
				Version_28 = version[28];
				Version_29 = version[29];
				Version_30 = version[30];
				Version_31 = version[31];
				Version_32 = version[32];
				Version_33 = version[33];
				Version_34 = version[34];
				Version_35 = version[35];
				Version_36 = version[36];
				Version_37 = version[37];
				Version_38 = version[38];
				Version_39 = version[39];
				Version_40 = version[40];
				Version_41 = version[41];
				Version_42 = version[42];
				Version_43 = version[43];
				Version_44 = version[44];
				Version_45 = version[45];
				Version_46 = version[46];
				Version_47 = version[47];
				Version_48 = version[48];
				Version_49 = version[49];
				Version_50 = version[50];
				Version_51 = version[51];
				Version_52 = version[52];
				Version_53 = version[53];
				Version_54 = version[54];
				Version_55 = version[55];
				Version_56 = version[56];
				Version_57 = version[57];
				Version_58 = version[58];
				Version_59 = version[59];
				Version_60 = version[60];
				Version_61 = version[61];
				Version_62 = version[62];
				Version_63 = version[63];
				Version_64 = version[64];
				Version_65 = version[65];
				Version_66 = version[66];
				Version_67 = version[67];
				Version_68 = version[68];
				Version_69 = version[69];
				Version_70 = version[70];
				Version_71 = version[71];
				Version_72 = version[72];
				Version_73 = version[73];
				Version_74 = version[74];
				Version_75 = version[75];
				Version_76 = version[76];
				Version_77 = version[77];
				Version_78 = version[78];
				Version_79 = version[79];
				Version_80 = version[80];
				Version_81 = version[81];
				Version_82 = version[82];
				Version_83 = version[83];
				Version_84 = version[84];
				Version_85 = version[85];
				Version_86 = version[86];
				Version_87 = version[87];
				Version_88 = version[88];
				Version_89 = version[89];
				Version_90 = version[90];
				Version_91 = version[91];
				Version_92 = version[92];
				Version_93 = version[93];
				Version_94 = version[94];
				Version_95 = version[95];
				Version_96 = version[96];
				Version_97 = version[97];
				Version_98 = version[98];
				Version_99 = version[99];
				Version_100 = version[100];
				Version_101 = version[101];
				Version_102 = version[102];
				Version_103 = version[103];
				Version_104 = version[104];
				Version_105 = version[105];
				Version_106 = version[106];
				Version_107 = version[107];
				Version_108 = version[108];
				Version_109 = version[109];
				Version_110 = version[110];
				Version_111 = version[111];
				Version_112 = version[112];
				Version_113 = version[113];
				Version_114 = version[114];
				Version_115 = version[115];
				Version_116 = version[116];
				Version_117 = version[117];
				Version_118 = version[118];
				Version_119 = version[119];
				Version_120 = version[120];
				Version_121 = version[121];
				Version_122 = version[122];
				Version_123 = version[123];
				Version_124 = version[124];
				Version_125 = version[125];
				Version_126 = version[126];
				Version_127 = version[127];
				Version_128 = version[128];
				Version_129 = version[129];
				Version_130 = version[130];
				Version_131 = version[131];
				Version_132 = version[132];
				Version_133 = version[133];
				Version_134 = version[134];
				Version_135 = version[135];
				Version_136 = version[136];
				Version_137 = version[137];
				Version_138 = version[138];
				Version_139 = version[139];
				Version_140 = version[140];
				Version_141 = version[141];
				Version_142 = version[142];
				Version_143 = version[143];
				Version_144 = version[144];
				Version_145 = version[145];
				Version_146 = version[146];
				Version_147 = version[147];
				Version_148 = version[148];
				Version_149 = version[149];
				Version_150 = version[150];
				Version_151 = version[151];
				Version_152 = version[152];
				Version_153 = version[153];
				Version_154 = version[154];
				Version_155 = version[155];
				Version_156 = version[156];
				Version_157 = version[157];
				Version_158 = version[158];
				Version_159 = version[159];
				Version_160 = version[160];
				Version_161 = version[161];
				Version_162 = version[162];
				Version_163 = version[163];
				Version_164 = version[164];
				Version_165 = version[165];
				Version_166 = version[166];
				Version_167 = version[167];
				Version_168 = version[168];
				Version_169 = version[169];
				Version_170 = version[170];
				Version_171 = version[171];
				Version_172 = version[172];
				Version_173 = version[173];
				Version_174 = version[174];
				Version_175 = version[175];
				Version_176 = version[176];
				Version_177 = version[177];
				Version_178 = version[178];
				Version_179 = version[179];
				Version_180 = version[180];
				Version_181 = version[181];
				Version_182 = version[182];
				Version_183 = version[183];
				Version_184 = version[184];
				Version_185 = version[185];
				Version_186 = version[186];
				Version_187 = version[187];
				Version_188 = version[188];
				Version_189 = version[189];
				Version_190 = version[190];
				Version_191 = version[191];
				Version_192 = version[192];
				Version_193 = version[193];
				Version_194 = version[194];
				Version_195 = version[195];
				Version_196 = version[196];
				Version_197 = version[197];
				Version_198 = version[198];
				Version_199 = version[199];
				Version_200 = version[200];
				Version_201 = version[201];
				Version_202 = version[202];
				Version_203 = version[203];
				Version_204 = version[204];
				Version_205 = version[205];
				Version_206 = version[206];
				Version_207 = version[207];
				Version_208 = version[208];
				Version_209 = version[209];
				Version_210 = version[210];
				Version_211 = version[211];
				Version_212 = version[212];
				Version_213 = version[213];
				Version_214 = version[214];
				Version_215 = version[215];
				Version_216 = version[216];
				Version_217 = version[217];
				Version_218 = version[218];
				Version_219 = version[219];
				Version_220 = version[220];
				Version_221 = version[221];
				Version_222 = version[222];
				Version_223 = version[223];
				Version_224 = version[224];
				Version_225 = version[225];
				Version_226 = version[226];
				Version_227 = version[227];
				Version_228 = version[228];
				Version_229 = version[229];
				Version_230 = version[230];
				Version_231 = version[231];
				Version_232 = version[232];
				Version_233 = version[233];
				Version_234 = version[234];
				Version_235 = version[235];
				Version_236 = version[236];
				Version_237 = version[237];
				Version_238 = version[238];
				Version_239 = version[239];
				Version_240 = version[240];
				Version_241 = version[241];
				Version_242 = version[242];
				Version_243 = version[243];
				Version_244 = version[244];
				Version_245 = version[245];
				Version_246 = version[246];
				Version_247 = version[247];
				Version_248 = version[248];
				Version_249 = version[249];
				Version_250 = version[250];
				Version_251 = version[251];
				Version_252 = version[252];
				Version_253 = version[253];
				Version_254 = version[254];
				Version_255 = version[255];
			}
			Purposes = purposes;
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
				Description_128 = description[128];
				Description_129 = description[129];
				Description_130 = description[130];
				Description_131 = description[131];
				Description_132 = description[132];
				Description_133 = description[133];
				Description_134 = description[134];
				Description_135 = description[135];
				Description_136 = description[136];
				Description_137 = description[137];
				Description_138 = description[138];
				Description_139 = description[139];
				Description_140 = description[140];
				Description_141 = description[141];
				Description_142 = description[142];
				Description_143 = description[143];
				Description_144 = description[144];
				Description_145 = description[145];
				Description_146 = description[146];
				Description_147 = description[147];
				Description_148 = description[148];
				Description_149 = description[149];
				Description_150 = description[150];
				Description_151 = description[151];
				Description_152 = description[152];
				Description_153 = description[153];
				Description_154 = description[154];
				Description_155 = description[155];
				Description_156 = description[156];
				Description_157 = description[157];
				Description_158 = description[158];
				Description_159 = description[159];
				Description_160 = description[160];
				Description_161 = description[161];
				Description_162 = description[162];
				Description_163 = description[163];
				Description_164 = description[164];
				Description_165 = description[165];
				Description_166 = description[166];
				Description_167 = description[167];
				Description_168 = description[168];
				Description_169 = description[169];
				Description_170 = description[170];
				Description_171 = description[171];
				Description_172 = description[172];
				Description_173 = description[173];
				Description_174 = description[174];
				Description_175 = description[175];
				Description_176 = description[176];
				Description_177 = description[177];
				Description_178 = description[178];
				Description_179 = description[179];
				Description_180 = description[180];
				Description_181 = description[181];
				Description_182 = description[182];
				Description_183 = description[183];
				Description_184 = description[184];
				Description_185 = description[185];
				Description_186 = description[186];
				Description_187 = description[187];
				Description_188 = description[188];
				Description_189 = description[189];
				Description_190 = description[190];
				Description_191 = description[191];
				Description_192 = description[192];
				Description_193 = description[193];
				Description_194 = description[194];
				Description_195 = description[195];
				Description_196 = description[196];
				Description_197 = description[197];
				Description_198 = description[198];
				Description_199 = description[199];
				Description_200 = description[200];
				Description_201 = description[201];
				Description_202 = description[202];
				Description_203 = description[203];
				Description_204 = description[204];
				Description_205 = description[205];
				Description_206 = description[206];
				Description_207 = description[207];
				Description_208 = description[208];
				Description_209 = description[209];
				Description_210 = description[210];
				Description_211 = description[211];
				Description_212 = description[212];
				Description_213 = description[213];
				Description_214 = description[214];
				Description_215 = description[215];
				Description_216 = description[216];
				Description_217 = description[217];
				Description_218 = description[218];
				Description_219 = description[219];
				Description_220 = description[220];
				Description_221 = description[221];
				Description_222 = description[222];
				Description_223 = description[223];
				Description_224 = description[224];
				Description_225 = description[225];
				Description_226 = description[226];
				Description_227 = description[227];
				Description_228 = description[228];
				Description_229 = description[229];
				Description_230 = description[230];
				Description_231 = description[231];
				Description_232 = description[232];
				Description_233 = description[233];
				Description_234 = description[234];
				Description_235 = description[235];
				Description_236 = description[236];
				Description_237 = description[237];
				Description_238 = description[238];
				Description_239 = description[239];
				Description_240 = description[240];
				Description_241 = description[241];
				Description_242 = description[242];
				Description_243 = description[243];
				Description_244 = description[244];
				Description_245 = description[245];
				Description_246 = description[246];
				Description_247 = description[247];
				Description_248 = description[248];
				Description_249 = description[249];
				Description_250 = description[250];
				Description_251 = description[251];
				Description_252 = description[252];
				Description_253 = description[253];
				Description_254 = description[254];
				Description_255 = description[255];
			}
			if (layer != default)
			{
				Layer_0 = layer[0];
				Layer_1 = layer[1];
				Layer_2 = layer[2];
				Layer_3 = layer[3];
				Layer_4 = layer[4];
				Layer_5 = layer[5];
				Layer_6 = layer[6];
				Layer_7 = layer[7];
				Layer_8 = layer[8];
				Layer_9 = layer[9];
				Layer_10 = layer[10];
				Layer_11 = layer[11];
				Layer_12 = layer[12];
				Layer_13 = layer[13];
				Layer_14 = layer[14];
				Layer_15 = layer[15];
				Layer_16 = layer[16];
				Layer_17 = layer[17];
				Layer_18 = layer[18];
				Layer_19 = layer[19];
				Layer_20 = layer[20];
				Layer_21 = layer[21];
				Layer_22 = layer[22];
				Layer_23 = layer[23];
				Layer_24 = layer[24];
				Layer_25 = layer[25];
				Layer_26 = layer[26];
				Layer_27 = layer[27];
				Layer_28 = layer[28];
				Layer_29 = layer[29];
				Layer_30 = layer[30];
				Layer_31 = layer[31];
				Layer_32 = layer[32];
				Layer_33 = layer[33];
				Layer_34 = layer[34];
				Layer_35 = layer[35];
				Layer_36 = layer[36];
				Layer_37 = layer[37];
				Layer_38 = layer[38];
				Layer_39 = layer[39];
				Layer_40 = layer[40];
				Layer_41 = layer[41];
				Layer_42 = layer[42];
				Layer_43 = layer[43];
				Layer_44 = layer[44];
				Layer_45 = layer[45];
				Layer_46 = layer[46];
				Layer_47 = layer[47];
				Layer_48 = layer[48];
				Layer_49 = layer[49];
				Layer_50 = layer[50];
				Layer_51 = layer[51];
				Layer_52 = layer[52];
				Layer_53 = layer[53];
				Layer_54 = layer[54];
				Layer_55 = layer[55];
				Layer_56 = layer[56];
				Layer_57 = layer[57];
				Layer_58 = layer[58];
				Layer_59 = layer[59];
				Layer_60 = layer[60];
				Layer_61 = layer[61];
				Layer_62 = layer[62];
				Layer_63 = layer[63];
				Layer_64 = layer[64];
				Layer_65 = layer[65];
				Layer_66 = layer[66];
				Layer_67 = layer[67];
				Layer_68 = layer[68];
				Layer_69 = layer[69];
				Layer_70 = layer[70];
				Layer_71 = layer[71];
				Layer_72 = layer[72];
				Layer_73 = layer[73];
				Layer_74 = layer[74];
				Layer_75 = layer[75];
				Layer_76 = layer[76];
				Layer_77 = layer[77];
				Layer_78 = layer[78];
				Layer_79 = layer[79];
				Layer_80 = layer[80];
				Layer_81 = layer[81];
				Layer_82 = layer[82];
				Layer_83 = layer[83];
				Layer_84 = layer[84];
				Layer_85 = layer[85];
				Layer_86 = layer[86];
				Layer_87 = layer[87];
				Layer_88 = layer[88];
				Layer_89 = layer[89];
				Layer_90 = layer[90];
				Layer_91 = layer[91];
				Layer_92 = layer[92];
				Layer_93 = layer[93];
				Layer_94 = layer[94];
				Layer_95 = layer[95];
				Layer_96 = layer[96];
				Layer_97 = layer[97];
				Layer_98 = layer[98];
				Layer_99 = layer[99];
				Layer_100 = layer[100];
				Layer_101 = layer[101];
				Layer_102 = layer[102];
				Layer_103 = layer[103];
				Layer_104 = layer[104];
				Layer_105 = layer[105];
				Layer_106 = layer[106];
				Layer_107 = layer[107];
				Layer_108 = layer[108];
				Layer_109 = layer[109];
				Layer_110 = layer[110];
				Layer_111 = layer[111];
				Layer_112 = layer[112];
				Layer_113 = layer[113];
				Layer_114 = layer[114];
				Layer_115 = layer[115];
				Layer_116 = layer[116];
				Layer_117 = layer[117];
				Layer_118 = layer[118];
				Layer_119 = layer[119];
				Layer_120 = layer[120];
				Layer_121 = layer[121];
				Layer_122 = layer[122];
				Layer_123 = layer[123];
				Layer_124 = layer[124];
				Layer_125 = layer[125];
				Layer_126 = layer[126];
				Layer_127 = layer[127];
				Layer_128 = layer[128];
				Layer_129 = layer[129];
				Layer_130 = layer[130];
				Layer_131 = layer[131];
				Layer_132 = layer[132];
				Layer_133 = layer[133];
				Layer_134 = layer[134];
				Layer_135 = layer[135];
				Layer_136 = layer[136];
				Layer_137 = layer[137];
				Layer_138 = layer[138];
				Layer_139 = layer[139];
				Layer_140 = layer[140];
				Layer_141 = layer[141];
				Layer_142 = layer[142];
				Layer_143 = layer[143];
				Layer_144 = layer[144];
				Layer_145 = layer[145];
				Layer_146 = layer[146];
				Layer_147 = layer[147];
				Layer_148 = layer[148];
				Layer_149 = layer[149];
				Layer_150 = layer[150];
				Layer_151 = layer[151];
				Layer_152 = layer[152];
				Layer_153 = layer[153];
				Layer_154 = layer[154];
				Layer_155 = layer[155];
				Layer_156 = layer[156];
				Layer_157 = layer[157];
				Layer_158 = layer[158];
				Layer_159 = layer[159];
				Layer_160 = layer[160];
				Layer_161 = layer[161];
				Layer_162 = layer[162];
				Layer_163 = layer[163];
				Layer_164 = layer[164];
				Layer_165 = layer[165];
				Layer_166 = layer[166];
				Layer_167 = layer[167];
				Layer_168 = layer[168];
				Layer_169 = layer[169];
				Layer_170 = layer[170];
				Layer_171 = layer[171];
				Layer_172 = layer[172];
				Layer_173 = layer[173];
				Layer_174 = layer[174];
				Layer_175 = layer[175];
				Layer_176 = layer[176];
				Layer_177 = layer[177];
				Layer_178 = layer[178];
				Layer_179 = layer[179];
				Layer_180 = layer[180];
				Layer_181 = layer[181];
				Layer_182 = layer[182];
				Layer_183 = layer[183];
				Layer_184 = layer[184];
				Layer_185 = layer[185];
				Layer_186 = layer[186];
				Layer_187 = layer[187];
				Layer_188 = layer[188];
				Layer_189 = layer[189];
				Layer_190 = layer[190];
				Layer_191 = layer[191];
				Layer_192 = layer[192];
				Layer_193 = layer[193];
				Layer_194 = layer[194];
				Layer_195 = layer[195];
				Layer_196 = layer[196];
				Layer_197 = layer[197];
				Layer_198 = layer[198];
				Layer_199 = layer[199];
				Layer_200 = layer[200];
				Layer_201 = layer[201];
				Layer_202 = layer[202];
				Layer_203 = layer[203];
				Layer_204 = layer[204];
				Layer_205 = layer[205];
				Layer_206 = layer[206];
				Layer_207 = layer[207];
				Layer_208 = layer[208];
				Layer_209 = layer[209];
				Layer_210 = layer[210];
				Layer_211 = layer[211];
				Layer_212 = layer[212];
				Layer_213 = layer[213];
				Layer_214 = layer[214];
				Layer_215 = layer[215];
				Layer_216 = layer[216];
				Layer_217 = layer[217];
				Layer_218 = layer[218];
				Layer_219 = layer[219];
				Layer_220 = layer[220];
				Layer_221 = layer[221];
				Layer_222 = layer[222];
				Layer_223 = layer[223];
				Layer_224 = layer[224];
				Layer_225 = layer[225];
				Layer_226 = layer[226];
				Layer_227 = layer[227];
				Layer_228 = layer[228];
				Layer_229 = layer[229];
				Layer_230 = layer[230];
				Layer_231 = layer[231];
				Layer_232 = layer[232];
				Layer_233 = layer[233];
				Layer_234 = layer[234];
				Layer_235 = layer[235];
				Layer_236 = layer[236];
				Layer_237 = layer[237];
				Layer_238 = layer[238];
				Layer_239 = layer[239];
				Layer_240 = layer[240];
				Layer_241 = layer[241];
				Layer_242 = layer[242];
				Layer_243 = layer[243];
				Layer_244 = layer[244];
				Layer_245 = layer[245];
				Layer_246 = layer[246];
				Layer_247 = layer[247];
				Layer_248 = layer[248];
				Layer_249 = layer[249];
				Layer_250 = layer[250];
				Layer_251 = layer[251];
				Layer_252 = layer[252];
				Layer_253 = layer[253];
				Layer_254 = layer[254];
				Layer_255 = layer[255];
			}
		}

		public unsafe VkPhysicalDeviceToolProperties(VkStructureType sType = default, void* pNext = default, Span<byte> name = default, Span<byte> version = default, uint purposes = default, Span<byte> description = default, Span<byte> layer = default)
		{
			SType = sType;
			PNext = pNext;
			if (name != default)
			{
				Name_0 = name[0];
				Name_1 = name[1];
				Name_2 = name[2];
				Name_3 = name[3];
				Name_4 = name[4];
				Name_5 = name[5];
				Name_6 = name[6];
				Name_7 = name[7];
				Name_8 = name[8];
				Name_9 = name[9];
				Name_10 = name[10];
				Name_11 = name[11];
				Name_12 = name[12];
				Name_13 = name[13];
				Name_14 = name[14];
				Name_15 = name[15];
				Name_16 = name[16];
				Name_17 = name[17];
				Name_18 = name[18];
				Name_19 = name[19];
				Name_20 = name[20];
				Name_21 = name[21];
				Name_22 = name[22];
				Name_23 = name[23];
				Name_24 = name[24];
				Name_25 = name[25];
				Name_26 = name[26];
				Name_27 = name[27];
				Name_28 = name[28];
				Name_29 = name[29];
				Name_30 = name[30];
				Name_31 = name[31];
				Name_32 = name[32];
				Name_33 = name[33];
				Name_34 = name[34];
				Name_35 = name[35];
				Name_36 = name[36];
				Name_37 = name[37];
				Name_38 = name[38];
				Name_39 = name[39];
				Name_40 = name[40];
				Name_41 = name[41];
				Name_42 = name[42];
				Name_43 = name[43];
				Name_44 = name[44];
				Name_45 = name[45];
				Name_46 = name[46];
				Name_47 = name[47];
				Name_48 = name[48];
				Name_49 = name[49];
				Name_50 = name[50];
				Name_51 = name[51];
				Name_52 = name[52];
				Name_53 = name[53];
				Name_54 = name[54];
				Name_55 = name[55];
				Name_56 = name[56];
				Name_57 = name[57];
				Name_58 = name[58];
				Name_59 = name[59];
				Name_60 = name[60];
				Name_61 = name[61];
				Name_62 = name[62];
				Name_63 = name[63];
				Name_64 = name[64];
				Name_65 = name[65];
				Name_66 = name[66];
				Name_67 = name[67];
				Name_68 = name[68];
				Name_69 = name[69];
				Name_70 = name[70];
				Name_71 = name[71];
				Name_72 = name[72];
				Name_73 = name[73];
				Name_74 = name[74];
				Name_75 = name[75];
				Name_76 = name[76];
				Name_77 = name[77];
				Name_78 = name[78];
				Name_79 = name[79];
				Name_80 = name[80];
				Name_81 = name[81];
				Name_82 = name[82];
				Name_83 = name[83];
				Name_84 = name[84];
				Name_85 = name[85];
				Name_86 = name[86];
				Name_87 = name[87];
				Name_88 = name[88];
				Name_89 = name[89];
				Name_90 = name[90];
				Name_91 = name[91];
				Name_92 = name[92];
				Name_93 = name[93];
				Name_94 = name[94];
				Name_95 = name[95];
				Name_96 = name[96];
				Name_97 = name[97];
				Name_98 = name[98];
				Name_99 = name[99];
				Name_100 = name[100];
				Name_101 = name[101];
				Name_102 = name[102];
				Name_103 = name[103];
				Name_104 = name[104];
				Name_105 = name[105];
				Name_106 = name[106];
				Name_107 = name[107];
				Name_108 = name[108];
				Name_109 = name[109];
				Name_110 = name[110];
				Name_111 = name[111];
				Name_112 = name[112];
				Name_113 = name[113];
				Name_114 = name[114];
				Name_115 = name[115];
				Name_116 = name[116];
				Name_117 = name[117];
				Name_118 = name[118];
				Name_119 = name[119];
				Name_120 = name[120];
				Name_121 = name[121];
				Name_122 = name[122];
				Name_123 = name[123];
				Name_124 = name[124];
				Name_125 = name[125];
				Name_126 = name[126];
				Name_127 = name[127];
				Name_128 = name[128];
				Name_129 = name[129];
				Name_130 = name[130];
				Name_131 = name[131];
				Name_132 = name[132];
				Name_133 = name[133];
				Name_134 = name[134];
				Name_135 = name[135];
				Name_136 = name[136];
				Name_137 = name[137];
				Name_138 = name[138];
				Name_139 = name[139];
				Name_140 = name[140];
				Name_141 = name[141];
				Name_142 = name[142];
				Name_143 = name[143];
				Name_144 = name[144];
				Name_145 = name[145];
				Name_146 = name[146];
				Name_147 = name[147];
				Name_148 = name[148];
				Name_149 = name[149];
				Name_150 = name[150];
				Name_151 = name[151];
				Name_152 = name[152];
				Name_153 = name[153];
				Name_154 = name[154];
				Name_155 = name[155];
				Name_156 = name[156];
				Name_157 = name[157];
				Name_158 = name[158];
				Name_159 = name[159];
				Name_160 = name[160];
				Name_161 = name[161];
				Name_162 = name[162];
				Name_163 = name[163];
				Name_164 = name[164];
				Name_165 = name[165];
				Name_166 = name[166];
				Name_167 = name[167];
				Name_168 = name[168];
				Name_169 = name[169];
				Name_170 = name[170];
				Name_171 = name[171];
				Name_172 = name[172];
				Name_173 = name[173];
				Name_174 = name[174];
				Name_175 = name[175];
				Name_176 = name[176];
				Name_177 = name[177];
				Name_178 = name[178];
				Name_179 = name[179];
				Name_180 = name[180];
				Name_181 = name[181];
				Name_182 = name[182];
				Name_183 = name[183];
				Name_184 = name[184];
				Name_185 = name[185];
				Name_186 = name[186];
				Name_187 = name[187];
				Name_188 = name[188];
				Name_189 = name[189];
				Name_190 = name[190];
				Name_191 = name[191];
				Name_192 = name[192];
				Name_193 = name[193];
				Name_194 = name[194];
				Name_195 = name[195];
				Name_196 = name[196];
				Name_197 = name[197];
				Name_198 = name[198];
				Name_199 = name[199];
				Name_200 = name[200];
				Name_201 = name[201];
				Name_202 = name[202];
				Name_203 = name[203];
				Name_204 = name[204];
				Name_205 = name[205];
				Name_206 = name[206];
				Name_207 = name[207];
				Name_208 = name[208];
				Name_209 = name[209];
				Name_210 = name[210];
				Name_211 = name[211];
				Name_212 = name[212];
				Name_213 = name[213];
				Name_214 = name[214];
				Name_215 = name[215];
				Name_216 = name[216];
				Name_217 = name[217];
				Name_218 = name[218];
				Name_219 = name[219];
				Name_220 = name[220];
				Name_221 = name[221];
				Name_222 = name[222];
				Name_223 = name[223];
				Name_224 = name[224];
				Name_225 = name[225];
				Name_226 = name[226];
				Name_227 = name[227];
				Name_228 = name[228];
				Name_229 = name[229];
				Name_230 = name[230];
				Name_231 = name[231];
				Name_232 = name[232];
				Name_233 = name[233];
				Name_234 = name[234];
				Name_235 = name[235];
				Name_236 = name[236];
				Name_237 = name[237];
				Name_238 = name[238];
				Name_239 = name[239];
				Name_240 = name[240];
				Name_241 = name[241];
				Name_242 = name[242];
				Name_243 = name[243];
				Name_244 = name[244];
				Name_245 = name[245];
				Name_246 = name[246];
				Name_247 = name[247];
				Name_248 = name[248];
				Name_249 = name[249];
				Name_250 = name[250];
				Name_251 = name[251];
				Name_252 = name[252];
				Name_253 = name[253];
				Name_254 = name[254];
				Name_255 = name[255];
			}
			if (version != default)
			{
				Version_0 = version[0];
				Version_1 = version[1];
				Version_2 = version[2];
				Version_3 = version[3];
				Version_4 = version[4];
				Version_5 = version[5];
				Version_6 = version[6];
				Version_7 = version[7];
				Version_8 = version[8];
				Version_9 = version[9];
				Version_10 = version[10];
				Version_11 = version[11];
				Version_12 = version[12];
				Version_13 = version[13];
				Version_14 = version[14];
				Version_15 = version[15];
				Version_16 = version[16];
				Version_17 = version[17];
				Version_18 = version[18];
				Version_19 = version[19];
				Version_20 = version[20];
				Version_21 = version[21];
				Version_22 = version[22];
				Version_23 = version[23];
				Version_24 = version[24];
				Version_25 = version[25];
				Version_26 = version[26];
				Version_27 = version[27];
				Version_28 = version[28];
				Version_29 = version[29];
				Version_30 = version[30];
				Version_31 = version[31];
				Version_32 = version[32];
				Version_33 = version[33];
				Version_34 = version[34];
				Version_35 = version[35];
				Version_36 = version[36];
				Version_37 = version[37];
				Version_38 = version[38];
				Version_39 = version[39];
				Version_40 = version[40];
				Version_41 = version[41];
				Version_42 = version[42];
				Version_43 = version[43];
				Version_44 = version[44];
				Version_45 = version[45];
				Version_46 = version[46];
				Version_47 = version[47];
				Version_48 = version[48];
				Version_49 = version[49];
				Version_50 = version[50];
				Version_51 = version[51];
				Version_52 = version[52];
				Version_53 = version[53];
				Version_54 = version[54];
				Version_55 = version[55];
				Version_56 = version[56];
				Version_57 = version[57];
				Version_58 = version[58];
				Version_59 = version[59];
				Version_60 = version[60];
				Version_61 = version[61];
				Version_62 = version[62];
				Version_63 = version[63];
				Version_64 = version[64];
				Version_65 = version[65];
				Version_66 = version[66];
				Version_67 = version[67];
				Version_68 = version[68];
				Version_69 = version[69];
				Version_70 = version[70];
				Version_71 = version[71];
				Version_72 = version[72];
				Version_73 = version[73];
				Version_74 = version[74];
				Version_75 = version[75];
				Version_76 = version[76];
				Version_77 = version[77];
				Version_78 = version[78];
				Version_79 = version[79];
				Version_80 = version[80];
				Version_81 = version[81];
				Version_82 = version[82];
				Version_83 = version[83];
				Version_84 = version[84];
				Version_85 = version[85];
				Version_86 = version[86];
				Version_87 = version[87];
				Version_88 = version[88];
				Version_89 = version[89];
				Version_90 = version[90];
				Version_91 = version[91];
				Version_92 = version[92];
				Version_93 = version[93];
				Version_94 = version[94];
				Version_95 = version[95];
				Version_96 = version[96];
				Version_97 = version[97];
				Version_98 = version[98];
				Version_99 = version[99];
				Version_100 = version[100];
				Version_101 = version[101];
				Version_102 = version[102];
				Version_103 = version[103];
				Version_104 = version[104];
				Version_105 = version[105];
				Version_106 = version[106];
				Version_107 = version[107];
				Version_108 = version[108];
				Version_109 = version[109];
				Version_110 = version[110];
				Version_111 = version[111];
				Version_112 = version[112];
				Version_113 = version[113];
				Version_114 = version[114];
				Version_115 = version[115];
				Version_116 = version[116];
				Version_117 = version[117];
				Version_118 = version[118];
				Version_119 = version[119];
				Version_120 = version[120];
				Version_121 = version[121];
				Version_122 = version[122];
				Version_123 = version[123];
				Version_124 = version[124];
				Version_125 = version[125];
				Version_126 = version[126];
				Version_127 = version[127];
				Version_128 = version[128];
				Version_129 = version[129];
				Version_130 = version[130];
				Version_131 = version[131];
				Version_132 = version[132];
				Version_133 = version[133];
				Version_134 = version[134];
				Version_135 = version[135];
				Version_136 = version[136];
				Version_137 = version[137];
				Version_138 = version[138];
				Version_139 = version[139];
				Version_140 = version[140];
				Version_141 = version[141];
				Version_142 = version[142];
				Version_143 = version[143];
				Version_144 = version[144];
				Version_145 = version[145];
				Version_146 = version[146];
				Version_147 = version[147];
				Version_148 = version[148];
				Version_149 = version[149];
				Version_150 = version[150];
				Version_151 = version[151];
				Version_152 = version[152];
				Version_153 = version[153];
				Version_154 = version[154];
				Version_155 = version[155];
				Version_156 = version[156];
				Version_157 = version[157];
				Version_158 = version[158];
				Version_159 = version[159];
				Version_160 = version[160];
				Version_161 = version[161];
				Version_162 = version[162];
				Version_163 = version[163];
				Version_164 = version[164];
				Version_165 = version[165];
				Version_166 = version[166];
				Version_167 = version[167];
				Version_168 = version[168];
				Version_169 = version[169];
				Version_170 = version[170];
				Version_171 = version[171];
				Version_172 = version[172];
				Version_173 = version[173];
				Version_174 = version[174];
				Version_175 = version[175];
				Version_176 = version[176];
				Version_177 = version[177];
				Version_178 = version[178];
				Version_179 = version[179];
				Version_180 = version[180];
				Version_181 = version[181];
				Version_182 = version[182];
				Version_183 = version[183];
				Version_184 = version[184];
				Version_185 = version[185];
				Version_186 = version[186];
				Version_187 = version[187];
				Version_188 = version[188];
				Version_189 = version[189];
				Version_190 = version[190];
				Version_191 = version[191];
				Version_192 = version[192];
				Version_193 = version[193];
				Version_194 = version[194];
				Version_195 = version[195];
				Version_196 = version[196];
				Version_197 = version[197];
				Version_198 = version[198];
				Version_199 = version[199];
				Version_200 = version[200];
				Version_201 = version[201];
				Version_202 = version[202];
				Version_203 = version[203];
				Version_204 = version[204];
				Version_205 = version[205];
				Version_206 = version[206];
				Version_207 = version[207];
				Version_208 = version[208];
				Version_209 = version[209];
				Version_210 = version[210];
				Version_211 = version[211];
				Version_212 = version[212];
				Version_213 = version[213];
				Version_214 = version[214];
				Version_215 = version[215];
				Version_216 = version[216];
				Version_217 = version[217];
				Version_218 = version[218];
				Version_219 = version[219];
				Version_220 = version[220];
				Version_221 = version[221];
				Version_222 = version[222];
				Version_223 = version[223];
				Version_224 = version[224];
				Version_225 = version[225];
				Version_226 = version[226];
				Version_227 = version[227];
				Version_228 = version[228];
				Version_229 = version[229];
				Version_230 = version[230];
				Version_231 = version[231];
				Version_232 = version[232];
				Version_233 = version[233];
				Version_234 = version[234];
				Version_235 = version[235];
				Version_236 = version[236];
				Version_237 = version[237];
				Version_238 = version[238];
				Version_239 = version[239];
				Version_240 = version[240];
				Version_241 = version[241];
				Version_242 = version[242];
				Version_243 = version[243];
				Version_244 = version[244];
				Version_245 = version[245];
				Version_246 = version[246];
				Version_247 = version[247];
				Version_248 = version[248];
				Version_249 = version[249];
				Version_250 = version[250];
				Version_251 = version[251];
				Version_252 = version[252];
				Version_253 = version[253];
				Version_254 = version[254];
				Version_255 = version[255];
			}
			Purposes = purposes;
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
				Description_128 = description[128];
				Description_129 = description[129];
				Description_130 = description[130];
				Description_131 = description[131];
				Description_132 = description[132];
				Description_133 = description[133];
				Description_134 = description[134];
				Description_135 = description[135];
				Description_136 = description[136];
				Description_137 = description[137];
				Description_138 = description[138];
				Description_139 = description[139];
				Description_140 = description[140];
				Description_141 = description[141];
				Description_142 = description[142];
				Description_143 = description[143];
				Description_144 = description[144];
				Description_145 = description[145];
				Description_146 = description[146];
				Description_147 = description[147];
				Description_148 = description[148];
				Description_149 = description[149];
				Description_150 = description[150];
				Description_151 = description[151];
				Description_152 = description[152];
				Description_153 = description[153];
				Description_154 = description[154];
				Description_155 = description[155];
				Description_156 = description[156];
				Description_157 = description[157];
				Description_158 = description[158];
				Description_159 = description[159];
				Description_160 = description[160];
				Description_161 = description[161];
				Description_162 = description[162];
				Description_163 = description[163];
				Description_164 = description[164];
				Description_165 = description[165];
				Description_166 = description[166];
				Description_167 = description[167];
				Description_168 = description[168];
				Description_169 = description[169];
				Description_170 = description[170];
				Description_171 = description[171];
				Description_172 = description[172];
				Description_173 = description[173];
				Description_174 = description[174];
				Description_175 = description[175];
				Description_176 = description[176];
				Description_177 = description[177];
				Description_178 = description[178];
				Description_179 = description[179];
				Description_180 = description[180];
				Description_181 = description[181];
				Description_182 = description[182];
				Description_183 = description[183];
				Description_184 = description[184];
				Description_185 = description[185];
				Description_186 = description[186];
				Description_187 = description[187];
				Description_188 = description[188];
				Description_189 = description[189];
				Description_190 = description[190];
				Description_191 = description[191];
				Description_192 = description[192];
				Description_193 = description[193];
				Description_194 = description[194];
				Description_195 = description[195];
				Description_196 = description[196];
				Description_197 = description[197];
				Description_198 = description[198];
				Description_199 = description[199];
				Description_200 = description[200];
				Description_201 = description[201];
				Description_202 = description[202];
				Description_203 = description[203];
				Description_204 = description[204];
				Description_205 = description[205];
				Description_206 = description[206];
				Description_207 = description[207];
				Description_208 = description[208];
				Description_209 = description[209];
				Description_210 = description[210];
				Description_211 = description[211];
				Description_212 = description[212];
				Description_213 = description[213];
				Description_214 = description[214];
				Description_215 = description[215];
				Description_216 = description[216];
				Description_217 = description[217];
				Description_218 = description[218];
				Description_219 = description[219];
				Description_220 = description[220];
				Description_221 = description[221];
				Description_222 = description[222];
				Description_223 = description[223];
				Description_224 = description[224];
				Description_225 = description[225];
				Description_226 = description[226];
				Description_227 = description[227];
				Description_228 = description[228];
				Description_229 = description[229];
				Description_230 = description[230];
				Description_231 = description[231];
				Description_232 = description[232];
				Description_233 = description[233];
				Description_234 = description[234];
				Description_235 = description[235];
				Description_236 = description[236];
				Description_237 = description[237];
				Description_238 = description[238];
				Description_239 = description[239];
				Description_240 = description[240];
				Description_241 = description[241];
				Description_242 = description[242];
				Description_243 = description[243];
				Description_244 = description[244];
				Description_245 = description[245];
				Description_246 = description[246];
				Description_247 = description[247];
				Description_248 = description[248];
				Description_249 = description[249];
				Description_250 = description[250];
				Description_251 = description[251];
				Description_252 = description[252];
				Description_253 = description[253];
				Description_254 = description[254];
				Description_255 = description[255];
			}
			if (layer != default)
			{
				Layer_0 = layer[0];
				Layer_1 = layer[1];
				Layer_2 = layer[2];
				Layer_3 = layer[3];
				Layer_4 = layer[4];
				Layer_5 = layer[5];
				Layer_6 = layer[6];
				Layer_7 = layer[7];
				Layer_8 = layer[8];
				Layer_9 = layer[9];
				Layer_10 = layer[10];
				Layer_11 = layer[11];
				Layer_12 = layer[12];
				Layer_13 = layer[13];
				Layer_14 = layer[14];
				Layer_15 = layer[15];
				Layer_16 = layer[16];
				Layer_17 = layer[17];
				Layer_18 = layer[18];
				Layer_19 = layer[19];
				Layer_20 = layer[20];
				Layer_21 = layer[21];
				Layer_22 = layer[22];
				Layer_23 = layer[23];
				Layer_24 = layer[24];
				Layer_25 = layer[25];
				Layer_26 = layer[26];
				Layer_27 = layer[27];
				Layer_28 = layer[28];
				Layer_29 = layer[29];
				Layer_30 = layer[30];
				Layer_31 = layer[31];
				Layer_32 = layer[32];
				Layer_33 = layer[33];
				Layer_34 = layer[34];
				Layer_35 = layer[35];
				Layer_36 = layer[36];
				Layer_37 = layer[37];
				Layer_38 = layer[38];
				Layer_39 = layer[39];
				Layer_40 = layer[40];
				Layer_41 = layer[41];
				Layer_42 = layer[42];
				Layer_43 = layer[43];
				Layer_44 = layer[44];
				Layer_45 = layer[45];
				Layer_46 = layer[46];
				Layer_47 = layer[47];
				Layer_48 = layer[48];
				Layer_49 = layer[49];
				Layer_50 = layer[50];
				Layer_51 = layer[51];
				Layer_52 = layer[52];
				Layer_53 = layer[53];
				Layer_54 = layer[54];
				Layer_55 = layer[55];
				Layer_56 = layer[56];
				Layer_57 = layer[57];
				Layer_58 = layer[58];
				Layer_59 = layer[59];
				Layer_60 = layer[60];
				Layer_61 = layer[61];
				Layer_62 = layer[62];
				Layer_63 = layer[63];
				Layer_64 = layer[64];
				Layer_65 = layer[65];
				Layer_66 = layer[66];
				Layer_67 = layer[67];
				Layer_68 = layer[68];
				Layer_69 = layer[69];
				Layer_70 = layer[70];
				Layer_71 = layer[71];
				Layer_72 = layer[72];
				Layer_73 = layer[73];
				Layer_74 = layer[74];
				Layer_75 = layer[75];
				Layer_76 = layer[76];
				Layer_77 = layer[77];
				Layer_78 = layer[78];
				Layer_79 = layer[79];
				Layer_80 = layer[80];
				Layer_81 = layer[81];
				Layer_82 = layer[82];
				Layer_83 = layer[83];
				Layer_84 = layer[84];
				Layer_85 = layer[85];
				Layer_86 = layer[86];
				Layer_87 = layer[87];
				Layer_88 = layer[88];
				Layer_89 = layer[89];
				Layer_90 = layer[90];
				Layer_91 = layer[91];
				Layer_92 = layer[92];
				Layer_93 = layer[93];
				Layer_94 = layer[94];
				Layer_95 = layer[95];
				Layer_96 = layer[96];
				Layer_97 = layer[97];
				Layer_98 = layer[98];
				Layer_99 = layer[99];
				Layer_100 = layer[100];
				Layer_101 = layer[101];
				Layer_102 = layer[102];
				Layer_103 = layer[103];
				Layer_104 = layer[104];
				Layer_105 = layer[105];
				Layer_106 = layer[106];
				Layer_107 = layer[107];
				Layer_108 = layer[108];
				Layer_109 = layer[109];
				Layer_110 = layer[110];
				Layer_111 = layer[111];
				Layer_112 = layer[112];
				Layer_113 = layer[113];
				Layer_114 = layer[114];
				Layer_115 = layer[115];
				Layer_116 = layer[116];
				Layer_117 = layer[117];
				Layer_118 = layer[118];
				Layer_119 = layer[119];
				Layer_120 = layer[120];
				Layer_121 = layer[121];
				Layer_122 = layer[122];
				Layer_123 = layer[123];
				Layer_124 = layer[124];
				Layer_125 = layer[125];
				Layer_126 = layer[126];
				Layer_127 = layer[127];
				Layer_128 = layer[128];
				Layer_129 = layer[129];
				Layer_130 = layer[130];
				Layer_131 = layer[131];
				Layer_132 = layer[132];
				Layer_133 = layer[133];
				Layer_134 = layer[134];
				Layer_135 = layer[135];
				Layer_136 = layer[136];
				Layer_137 = layer[137];
				Layer_138 = layer[138];
				Layer_139 = layer[139];
				Layer_140 = layer[140];
				Layer_141 = layer[141];
				Layer_142 = layer[142];
				Layer_143 = layer[143];
				Layer_144 = layer[144];
				Layer_145 = layer[145];
				Layer_146 = layer[146];
				Layer_147 = layer[147];
				Layer_148 = layer[148];
				Layer_149 = layer[149];
				Layer_150 = layer[150];
				Layer_151 = layer[151];
				Layer_152 = layer[152];
				Layer_153 = layer[153];
				Layer_154 = layer[154];
				Layer_155 = layer[155];
				Layer_156 = layer[156];
				Layer_157 = layer[157];
				Layer_158 = layer[158];
				Layer_159 = layer[159];
				Layer_160 = layer[160];
				Layer_161 = layer[161];
				Layer_162 = layer[162];
				Layer_163 = layer[163];
				Layer_164 = layer[164];
				Layer_165 = layer[165];
				Layer_166 = layer[166];
				Layer_167 = layer[167];
				Layer_168 = layer[168];
				Layer_169 = layer[169];
				Layer_170 = layer[170];
				Layer_171 = layer[171];
				Layer_172 = layer[172];
				Layer_173 = layer[173];
				Layer_174 = layer[174];
				Layer_175 = layer[175];
				Layer_176 = layer[176];
				Layer_177 = layer[177];
				Layer_178 = layer[178];
				Layer_179 = layer[179];
				Layer_180 = layer[180];
				Layer_181 = layer[181];
				Layer_182 = layer[182];
				Layer_183 = layer[183];
				Layer_184 = layer[184];
				Layer_185 = layer[185];
				Layer_186 = layer[186];
				Layer_187 = layer[187];
				Layer_188 = layer[188];
				Layer_189 = layer[189];
				Layer_190 = layer[190];
				Layer_191 = layer[191];
				Layer_192 = layer[192];
				Layer_193 = layer[193];
				Layer_194 = layer[194];
				Layer_195 = layer[195];
				Layer_196 = layer[196];
				Layer_197 = layer[197];
				Layer_198 = layer[198];
				Layer_199 = layer[199];
				Layer_200 = layer[200];
				Layer_201 = layer[201];
				Layer_202 = layer[202];
				Layer_203 = layer[203];
				Layer_204 = layer[204];
				Layer_205 = layer[205];
				Layer_206 = layer[206];
				Layer_207 = layer[207];
				Layer_208 = layer[208];
				Layer_209 = layer[209];
				Layer_210 = layer[210];
				Layer_211 = layer[211];
				Layer_212 = layer[212];
				Layer_213 = layer[213];
				Layer_214 = layer[214];
				Layer_215 = layer[215];
				Layer_216 = layer[216];
				Layer_217 = layer[217];
				Layer_218 = layer[218];
				Layer_219 = layer[219];
				Layer_220 = layer[220];
				Layer_221 = layer[221];
				Layer_222 = layer[222];
				Layer_223 = layer[223];
				Layer_224 = layer[224];
				Layer_225 = layer[225];
				Layer_226 = layer[226];
				Layer_227 = layer[227];
				Layer_228 = layer[228];
				Layer_229 = layer[229];
				Layer_230 = layer[230];
				Layer_231 = layer[231];
				Layer_232 = layer[232];
				Layer_233 = layer[233];
				Layer_234 = layer[234];
				Layer_235 = layer[235];
				Layer_236 = layer[236];
				Layer_237 = layer[237];
				Layer_238 = layer[238];
				Layer_239 = layer[239];
				Layer_240 = layer[240];
				Layer_241 = layer[241];
				Layer_242 = layer[242];
				Layer_243 = layer[243];
				Layer_244 = layer[244];
				Layer_245 = layer[245];
				Layer_246 = layer[246];
				Layer_247 = layer[247];
				Layer_248 = layer[248];
				Layer_249 = layer[249];
				Layer_250 = layer[250];
				Layer_251 = layer[251];
				Layer_252 = layer[252];
				Layer_253 = layer[253];
				Layer_254 = layer[254];
				Layer_255 = layer[255];
			}
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderDemoteToHelperInvocation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDemoteToHelperInvocation;

		public unsafe VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkStructureType sType = default, void* pNext = default, uint shaderDemoteToHelperInvocation = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderDemoteToHelperInvocation = shaderDemoteToHelperInvocation;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePrivateDataFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePrivateDataFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "privateData")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrivateData;

		public unsafe VkPhysicalDevicePrivateDataFeatures(VkStructureType sType = default, void* pNext = default, uint privateData = default)
		{
			SType = sType;
			PNext = pNext;
			PrivateData = privateData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDevicePrivateDataCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDevicePrivateDataCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "privateDataSlotRequestCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PrivateDataSlotRequestCount;

		public unsafe VkDevicePrivateDataCreateInfo(VkStructureType sType = default, void* pNext = default, uint privateDataSlotRequestCount = default)
		{
			SType = sType;
			PNext = pNext;
			PrivateDataSlotRequestCount = privateDataSlotRequestCount;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPrivateDataSlotCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPrivateDataSlotCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPrivateDataSlotCreateFlags")]
		public uint Flags;

		public unsafe VkPrivateDataSlotCreateInfo(VkStructureType sType = default, void* pNext = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePipelineCreationCacheControlFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePipelineCreationCacheControlFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pipelineCreationCacheControl")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PipelineCreationCacheControl;

		public unsafe VkPhysicalDevicePipelineCreationCacheControlFeatures(VkStructureType sType = default, void* pNext = default, uint pipelineCreationCacheControl = default)
		{
			SType = sType;
			PNext = pNext;
			PipelineCreationCacheControl = pipelineCreationCacheControl;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMemoryBarrier2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryBarrier2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint SrcStageMask;
		[NativeName(NativeNameType.Field, "srcAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags2")]
		public uint SrcAccessMask;
		[NativeName(NativeNameType.Field, "dstStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint DstStageMask;
		[NativeName(NativeNameType.Field, "dstAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags2")]
		public uint DstAccessMask;

		public unsafe VkMemoryBarrier2(VkStructureType sType = default, void* pNext = default, uint srcStageMask = default, uint srcAccessMask = default, uint dstStageMask = default, uint dstAccessMask = default)
		{
			SType = sType;
			PNext = pNext;
			SrcStageMask = srcStageMask;
			SrcAccessMask = srcAccessMask;
			DstStageMask = dstStageMask;
			DstAccessMask = dstAccessMask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferMemoryBarrier2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferMemoryBarrier2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint SrcStageMask;
		[NativeName(NativeNameType.Field, "srcAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags2")]
		public uint SrcAccessMask;
		[NativeName(NativeNameType.Field, "dstStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint DstStageMask;
		[NativeName(NativeNameType.Field, "dstAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags2")]
		public uint DstAccessMask;
		[NativeName(NativeNameType.Field, "srcQueueFamilyIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SrcQueueFamilyIndex;
		[NativeName(NativeNameType.Field, "dstQueueFamilyIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DstQueueFamilyIndex;
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Size;

		public unsafe VkBufferMemoryBarrier2(VkStructureType sType = default, void* pNext = default, uint srcStageMask = default, uint srcAccessMask = default, uint dstStageMask = default, uint dstAccessMask = default, uint srcQueueFamilyIndex = default, uint dstQueueFamilyIndex = default, VkBuffer buffer = default, ulong offset = default, ulong size = default)
		{
			SType = sType;
			PNext = pNext;
			SrcStageMask = srcStageMask;
			SrcAccessMask = srcAccessMask;
			DstStageMask = dstStageMask;
			DstAccessMask = dstAccessMask;
			SrcQueueFamilyIndex = srcQueueFamilyIndex;
			DstQueueFamilyIndex = dstQueueFamilyIndex;
			Buffer = buffer;
			Offset = offset;
			Size = size;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageMemoryBarrier2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageMemoryBarrier2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint SrcStageMask;
		[NativeName(NativeNameType.Field, "srcAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags2")]
		public uint SrcAccessMask;
		[NativeName(NativeNameType.Field, "dstStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint DstStageMask;
		[NativeName(NativeNameType.Field, "dstAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags2")]
		public uint DstAccessMask;
		[NativeName(NativeNameType.Field, "oldLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout OldLayout;
		[NativeName(NativeNameType.Field, "newLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout NewLayout;
		[NativeName(NativeNameType.Field, "srcQueueFamilyIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SrcQueueFamilyIndex;
		[NativeName(NativeNameType.Field, "dstQueueFamilyIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DstQueueFamilyIndex;
		[NativeName(NativeNameType.Field, "image")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage Image;
		[NativeName(NativeNameType.Field, "subresourceRange")]
		[NativeName(NativeNameType.Type, "VkImageSubresourceRange")]
		public VkImageSubresourceRange SubresourceRange;

		public unsafe VkImageMemoryBarrier2(VkStructureType sType = default, void* pNext = default, uint srcStageMask = default, uint srcAccessMask = default, uint dstStageMask = default, uint dstAccessMask = default, VkImageLayout oldLayout = default, VkImageLayout newLayout = default, uint srcQueueFamilyIndex = default, uint dstQueueFamilyIndex = default, VkImage image = default, VkImageSubresourceRange subresourceRange = default)
		{
			SType = sType;
			PNext = pNext;
			SrcStageMask = srcStageMask;
			SrcAccessMask = srcAccessMask;
			DstStageMask = dstStageMask;
			DstAccessMask = dstAccessMask;
			OldLayout = oldLayout;
			NewLayout = newLayout;
			SrcQueueFamilyIndex = srcQueueFamilyIndex;
			DstQueueFamilyIndex = dstQueueFamilyIndex;
			Image = image;
			SubresourceRange = subresourceRange;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDependencyInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDependencyInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "dependencyFlags")]
		[NativeName(NativeNameType.Type, "VkDependencyFlags")]
		public uint DependencyFlags;
		[NativeName(NativeNameType.Field, "memoryBarrierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MemoryBarrierCount;
		[NativeName(NativeNameType.Field, "pMemoryBarriers")]
		[NativeName(NativeNameType.Type, "const VkMemoryBarrier2*")]
		public unsafe VkMemoryBarrier2* PMemoryBarriers;
		[NativeName(NativeNameType.Field, "bufferMemoryBarrierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint BufferMemoryBarrierCount;
		[NativeName(NativeNameType.Field, "pBufferMemoryBarriers")]
		[NativeName(NativeNameType.Type, "const VkBufferMemoryBarrier2*")]
		public unsafe VkBufferMemoryBarrier2* PBufferMemoryBarriers;
		[NativeName(NativeNameType.Field, "imageMemoryBarrierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ImageMemoryBarrierCount;
		[NativeName(NativeNameType.Field, "pImageMemoryBarriers")]
		[NativeName(NativeNameType.Type, "const VkImageMemoryBarrier2*")]
		public unsafe VkImageMemoryBarrier2* PImageMemoryBarriers;

		public unsafe VkDependencyInfo(VkStructureType sType = default, void* pNext = default, uint dependencyFlags = default, uint memoryBarrierCount = default, VkMemoryBarrier2* pMemoryBarriers = default, uint bufferMemoryBarrierCount = default, VkBufferMemoryBarrier2* pBufferMemoryBarriers = default, uint imageMemoryBarrierCount = default, VkImageMemoryBarrier2* pImageMemoryBarriers = default)
		{
			SType = sType;
			PNext = pNext;
			DependencyFlags = dependencyFlags;
			MemoryBarrierCount = memoryBarrierCount;
			PMemoryBarriers = pMemoryBarriers;
			BufferMemoryBarrierCount = bufferMemoryBarrierCount;
			PBufferMemoryBarriers = pBufferMemoryBarriers;
			ImageMemoryBarrierCount = imageMemoryBarrierCount;
			PImageMemoryBarriers = pImageMemoryBarriers;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSemaphoreSubmitInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSemaphoreSubmitInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "semaphore")]
		[NativeName(NativeNameType.Type, "VkSemaphore")]
		public VkSemaphore Semaphore;
		[NativeName(NativeNameType.Field, "value")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Value;
		[NativeName(NativeNameType.Field, "stageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint StageMask;
		[NativeName(NativeNameType.Field, "deviceIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DeviceIndex;

		public unsafe VkSemaphoreSubmitInfo(VkStructureType sType = default, void* pNext = default, VkSemaphore semaphore = default, ulong value = default, uint stageMask = default, uint deviceIndex = default)
		{
			SType = sType;
			PNext = pNext;
			Semaphore = semaphore;
			Value = value;
			StageMask = stageMask;
			DeviceIndex = deviceIndex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCommandBufferSubmitInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCommandBufferSubmitInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "commandBuffer")]
		[NativeName(NativeNameType.Type, "VkCommandBuffer")]
		public VkCommandBuffer CommandBuffer;
		[NativeName(NativeNameType.Field, "deviceMask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DeviceMask;

		public unsafe VkCommandBufferSubmitInfo(VkStructureType sType = default, void* pNext = default, VkCommandBuffer commandBuffer = default, uint deviceMask = default)
		{
			SType = sType;
			PNext = pNext;
			CommandBuffer = commandBuffer;
			DeviceMask = deviceMask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubmitInfo2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubmitInfo2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkSubmitFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "waitSemaphoreInfoCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint WaitSemaphoreInfoCount;
		[NativeName(NativeNameType.Field, "pWaitSemaphoreInfos")]
		[NativeName(NativeNameType.Type, "const VkSemaphoreSubmitInfo*")]
		public unsafe VkSemaphoreSubmitInfo* PWaitSemaphoreInfos;
		[NativeName(NativeNameType.Field, "commandBufferInfoCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CommandBufferInfoCount;
		[NativeName(NativeNameType.Field, "pCommandBufferInfos")]
		[NativeName(NativeNameType.Type, "const VkCommandBufferSubmitInfo*")]
		public unsafe VkCommandBufferSubmitInfo* PCommandBufferInfos;
		[NativeName(NativeNameType.Field, "signalSemaphoreInfoCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SignalSemaphoreInfoCount;
		[NativeName(NativeNameType.Field, "pSignalSemaphoreInfos")]
		[NativeName(NativeNameType.Type, "const VkSemaphoreSubmitInfo*")]
		public unsafe VkSemaphoreSubmitInfo* PSignalSemaphoreInfos;

		public unsafe VkSubmitInfo2(VkStructureType sType = default, void* pNext = default, uint flags = default, uint waitSemaphoreInfoCount = default, VkSemaphoreSubmitInfo* pWaitSemaphoreInfos = default, uint commandBufferInfoCount = default, VkCommandBufferSubmitInfo* pCommandBufferInfos = default, uint signalSemaphoreInfoCount = default, VkSemaphoreSubmitInfo* pSignalSemaphoreInfos = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			WaitSemaphoreInfoCount = waitSemaphoreInfoCount;
			PWaitSemaphoreInfos = pWaitSemaphoreInfos;
			CommandBufferInfoCount = commandBufferInfoCount;
			PCommandBufferInfos = pCommandBufferInfos;
			SignalSemaphoreInfoCount = signalSemaphoreInfoCount;
			PSignalSemaphoreInfos = pSignalSemaphoreInfos;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceSynchronization2Features")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceSynchronization2Features
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "synchronization2")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Synchronization2;

		public unsafe VkPhysicalDeviceSynchronization2Features(VkStructureType sType = default, void* pNext = default, uint synchronization2 = default)
		{
			SType = sType;
			PNext = pNext;
			Synchronization2 = synchronization2;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderZeroInitializeWorkgroupMemory")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderZeroInitializeWorkgroupMemory;

		public unsafe VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkStructureType sType = default, void* pNext = default, uint shaderZeroInitializeWorkgroupMemory = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderZeroInitializeWorkgroupMemory = shaderZeroInitializeWorkgroupMemory;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceImageRobustnessFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceImageRobustnessFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "robustImageAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RobustImageAccess;

		public unsafe VkPhysicalDeviceImageRobustnessFeatures(VkStructureType sType = default, void* pNext = default, uint robustImageAccess = default)
		{
			SType = sType;
			PNext = pNext;
			RobustImageAccess = robustImageAccess;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferCopy2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferCopy2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong SrcOffset;
		[NativeName(NativeNameType.Field, "dstOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong DstOffset;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Size;

		public unsafe VkBufferCopy2(VkStructureType sType = default, void* pNext = default, ulong srcOffset = default, ulong dstOffset = default, ulong size = default)
		{
			SType = sType;
			PNext = pNext;
			SrcOffset = srcOffset;
			DstOffset = dstOffset;
			Size = size;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyBufferInfo2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyBufferInfo2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer SrcBuffer;
		[NativeName(NativeNameType.Field, "dstBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer DstBuffer;
		[NativeName(NativeNameType.Field, "regionCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint RegionCount;
		[NativeName(NativeNameType.Field, "pRegions")]
		[NativeName(NativeNameType.Type, "const VkBufferCopy2*")]
		public unsafe VkBufferCopy2* PRegions;

		public unsafe VkCopyBufferInfo2(VkStructureType sType = default, void* pNext = default, VkBuffer srcBuffer = default, VkBuffer dstBuffer = default, uint regionCount = default, VkBufferCopy2* pRegions = default)
		{
			SType = sType;
			PNext = pNext;
			SrcBuffer = srcBuffer;
			DstBuffer = dstBuffer;
			RegionCount = regionCount;
			PRegions = pRegions;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageCopy2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageCopy2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcSubresource")]
		[NativeName(NativeNameType.Type, "VkImageSubresourceLayers")]
		public VkImageSubresourceLayers SrcSubresource;
		[NativeName(NativeNameType.Field, "srcOffset")]
		[NativeName(NativeNameType.Type, "VkOffset3D")]
		public VkOffset3D SrcOffset;
		[NativeName(NativeNameType.Field, "dstSubresource")]
		[NativeName(NativeNameType.Type, "VkImageSubresourceLayers")]
		public VkImageSubresourceLayers DstSubresource;
		[NativeName(NativeNameType.Field, "dstOffset")]
		[NativeName(NativeNameType.Type, "VkOffset3D")]
		public VkOffset3D DstOffset;
		[NativeName(NativeNameType.Field, "extent")]
		[NativeName(NativeNameType.Type, "VkExtent3D")]
		public VkExtent3D Extent;

		public unsafe VkImageCopy2(VkStructureType sType = default, void* pNext = default, VkImageSubresourceLayers srcSubresource = default, VkOffset3D srcOffset = default, VkImageSubresourceLayers dstSubresource = default, VkOffset3D dstOffset = default, VkExtent3D extent = default)
		{
			SType = sType;
			PNext = pNext;
			SrcSubresource = srcSubresource;
			SrcOffset = srcOffset;
			DstSubresource = dstSubresource;
			DstOffset = dstOffset;
			Extent = extent;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyImageInfo2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyImageInfo2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcImage")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage SrcImage;
		[NativeName(NativeNameType.Field, "srcImageLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout SrcImageLayout;
		[NativeName(NativeNameType.Field, "dstImage")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage DstImage;
		[NativeName(NativeNameType.Field, "dstImageLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout DstImageLayout;
		[NativeName(NativeNameType.Field, "regionCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint RegionCount;
		[NativeName(NativeNameType.Field, "pRegions")]
		[NativeName(NativeNameType.Type, "const VkImageCopy2*")]
		public unsafe VkImageCopy2* PRegions;

		public unsafe VkCopyImageInfo2(VkStructureType sType = default, void* pNext = default, VkImage srcImage = default, VkImageLayout srcImageLayout = default, VkImage dstImage = default, VkImageLayout dstImageLayout = default, uint regionCount = default, VkImageCopy2* pRegions = default)
		{
			SType = sType;
			PNext = pNext;
			SrcImage = srcImage;
			SrcImageLayout = srcImageLayout;
			DstImage = dstImage;
			DstImageLayout = dstImageLayout;
			RegionCount = regionCount;
			PRegions = pRegions;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferImageCopy2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferImageCopy2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "bufferOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong BufferOffset;
		[NativeName(NativeNameType.Field, "bufferRowLength")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint BufferRowLength;
		[NativeName(NativeNameType.Field, "bufferImageHeight")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint BufferImageHeight;
		[NativeName(NativeNameType.Field, "imageSubresource")]
		[NativeName(NativeNameType.Type, "VkImageSubresourceLayers")]
		public VkImageSubresourceLayers ImageSubresource;
		[NativeName(NativeNameType.Field, "imageOffset")]
		[NativeName(NativeNameType.Type, "VkOffset3D")]
		public VkOffset3D ImageOffset;
		[NativeName(NativeNameType.Field, "imageExtent")]
		[NativeName(NativeNameType.Type, "VkExtent3D")]
		public VkExtent3D ImageExtent;

		public unsafe VkBufferImageCopy2(VkStructureType sType = default, void* pNext = default, ulong bufferOffset = default, uint bufferRowLength = default, uint bufferImageHeight = default, VkImageSubresourceLayers imageSubresource = default, VkOffset3D imageOffset = default, VkExtent3D imageExtent = default)
		{
			SType = sType;
			PNext = pNext;
			BufferOffset = bufferOffset;
			BufferRowLength = bufferRowLength;
			BufferImageHeight = bufferImageHeight;
			ImageSubresource = imageSubresource;
			ImageOffset = imageOffset;
			ImageExtent = imageExtent;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyBufferToImageInfo2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyBufferToImageInfo2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer SrcBuffer;
		[NativeName(NativeNameType.Field, "dstImage")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage DstImage;
		[NativeName(NativeNameType.Field, "dstImageLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout DstImageLayout;
		[NativeName(NativeNameType.Field, "regionCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint RegionCount;
		[NativeName(NativeNameType.Field, "pRegions")]
		[NativeName(NativeNameType.Type, "const VkBufferImageCopy2*")]
		public unsafe VkBufferImageCopy2* PRegions;

		public unsafe VkCopyBufferToImageInfo2(VkStructureType sType = default, void* pNext = default, VkBuffer srcBuffer = default, VkImage dstImage = default, VkImageLayout dstImageLayout = default, uint regionCount = default, VkBufferImageCopy2* pRegions = default)
		{
			SType = sType;
			PNext = pNext;
			SrcBuffer = srcBuffer;
			DstImage = dstImage;
			DstImageLayout = dstImageLayout;
			RegionCount = regionCount;
			PRegions = pRegions;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyImageToBufferInfo2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyImageToBufferInfo2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcImage")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage SrcImage;
		[NativeName(NativeNameType.Field, "srcImageLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout SrcImageLayout;
		[NativeName(NativeNameType.Field, "dstBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer DstBuffer;
		[NativeName(NativeNameType.Field, "regionCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint RegionCount;
		[NativeName(NativeNameType.Field, "pRegions")]
		[NativeName(NativeNameType.Type, "const VkBufferImageCopy2*")]
		public unsafe VkBufferImageCopy2* PRegions;

		public unsafe VkCopyImageToBufferInfo2(VkStructureType sType = default, void* pNext = default, VkImage srcImage = default, VkImageLayout srcImageLayout = default, VkBuffer dstBuffer = default, uint regionCount = default, VkBufferImageCopy2* pRegions = default)
		{
			SType = sType;
			PNext = pNext;
			SrcImage = srcImage;
			SrcImageLayout = srcImageLayout;
			DstBuffer = dstBuffer;
			RegionCount = regionCount;
			PRegions = pRegions;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageBlit2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageBlit2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcSubresource")]
		[NativeName(NativeNameType.Type, "VkImageSubresourceLayers")]
		public VkImageSubresourceLayers SrcSubresource;
		[NativeName(NativeNameType.Field, "srcOffsets")]
		[NativeName(NativeNameType.Type, "VkOffset3D[2]")]
		public VkOffset3D SrcOffsets_0;
		public VkOffset3D SrcOffsets_1;
		[NativeName(NativeNameType.Field, "dstSubresource")]
		[NativeName(NativeNameType.Type, "VkImageSubresourceLayers")]
		public VkImageSubresourceLayers DstSubresource;
		[NativeName(NativeNameType.Field, "dstOffsets")]
		[NativeName(NativeNameType.Type, "VkOffset3D[2]")]
		public VkOffset3D DstOffsets_0;
		public VkOffset3D DstOffsets_1;

		public unsafe VkImageBlit2(VkStructureType sType = default, void* pNext = default, VkImageSubresourceLayers srcSubresource = default, VkOffset3D* srcOffsets = default, VkImageSubresourceLayers dstSubresource = default, VkOffset3D* dstOffsets = default)
		{
			SType = sType;
			PNext = pNext;
			SrcSubresource = srcSubresource;
			if (srcOffsets != default)
			{
				SrcOffsets_0 = srcOffsets[0];
				SrcOffsets_1 = srcOffsets[1];
			}
			DstSubresource = dstSubresource;
			if (dstOffsets != default)
			{
				DstOffsets_0 = dstOffsets[0];
				DstOffsets_1 = dstOffsets[1];
			}
		}

		public unsafe VkImageBlit2(VkStructureType sType = default, void* pNext = default, VkImageSubresourceLayers srcSubresource = default, Span<VkOffset3D> srcOffsets = default, VkImageSubresourceLayers dstSubresource = default, Span<VkOffset3D> dstOffsets = default)
		{
			SType = sType;
			PNext = pNext;
			SrcSubresource = srcSubresource;
			if (srcOffsets != default)
			{
				SrcOffsets_0 = srcOffsets[0];
				SrcOffsets_1 = srcOffsets[1];
			}
			DstSubresource = dstSubresource;
			if (dstOffsets != default)
			{
				DstOffsets_0 = dstOffsets[0];
				DstOffsets_1 = dstOffsets[1];
			}
		}


		public unsafe Span<VkOffset3D> SrcOffsets
		
		{
			get
			{
				fixed (VkOffset3D* p = &this.SrcOffsets_0)
				{
					return new Span<VkOffset3D>(p, 2);
				}
			}
		}
		public unsafe Span<VkOffset3D> DstOffsets
		
		{
			get
			{
				fixed (VkOffset3D* p = &this.DstOffsets_0)
				{
					return new Span<VkOffset3D>(p, 2);
				}
			}
		}
	}

	[NativeName(NativeNameType.StructOrClass, "VkBlitImageInfo2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBlitImageInfo2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcImage")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage SrcImage;
		[NativeName(NativeNameType.Field, "srcImageLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout SrcImageLayout;
		[NativeName(NativeNameType.Field, "dstImage")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage DstImage;
		[NativeName(NativeNameType.Field, "dstImageLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout DstImageLayout;
		[NativeName(NativeNameType.Field, "regionCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint RegionCount;
		[NativeName(NativeNameType.Field, "pRegions")]
		[NativeName(NativeNameType.Type, "const VkImageBlit2*")]
		public unsafe VkImageBlit2* PRegions;
		[NativeName(NativeNameType.Field, "filter")]
		[NativeName(NativeNameType.Type, "VkFilter")]
		public VkFilter Filter;

		public unsafe VkBlitImageInfo2(VkStructureType sType = default, void* pNext = default, VkImage srcImage = default, VkImageLayout srcImageLayout = default, VkImage dstImage = default, VkImageLayout dstImageLayout = default, uint regionCount = default, VkImageBlit2* pRegions = default, VkFilter filter = default)
		{
			SType = sType;
			PNext = pNext;
			SrcImage = srcImage;
			SrcImageLayout = srcImageLayout;
			DstImage = dstImage;
			DstImageLayout = dstImageLayout;
			RegionCount = regionCount;
			PRegions = pRegions;
			Filter = filter;
		}


	}
}
