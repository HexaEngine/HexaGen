// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Daxa
{

	[NativeName(NativeNameType.StructOrClass, "VkExternalSemaphoreProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkExternalSemaphoreProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "exportFromImportedHandleTypes")]
		[NativeName(NativeNameType.Type, "VkExternalSemaphoreHandleTypeFlags")]
		public uint ExportFromImportedHandleTypes;
		[NativeName(NativeNameType.Field, "compatibleHandleTypes")]
		[NativeName(NativeNameType.Type, "VkExternalSemaphoreHandleTypeFlags")]
		public uint CompatibleHandleTypes;
		[NativeName(NativeNameType.Field, "externalSemaphoreFeatures")]
		[NativeName(NativeNameType.Type, "VkExternalSemaphoreFeatureFlags")]
		public uint ExternalSemaphoreFeatures;

		public unsafe VkExternalSemaphoreProperties(VkStructureType sType = default, void* pNext = default, uint exportFromImportedHandleTypes = default, uint compatibleHandleTypes = default, uint externalSemaphoreFeatures = default)
		{
			SType = sType;
			PNext = pNext;
			ExportFromImportedHandleTypes = exportFromImportedHandleTypes;
			CompatibleHandleTypes = compatibleHandleTypes;
			ExternalSemaphoreFeatures = externalSemaphoreFeatures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMaintenance3Properties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMaintenance3Properties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxPerSetDescriptors")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerSetDescriptors;
		[NativeName(NativeNameType.Field, "maxMemoryAllocationSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MaxMemoryAllocationSize;

		public unsafe VkPhysicalDeviceMaintenance3Properties(VkStructureType sType = default, void* pNext = default, uint maxPerSetDescriptors = default, ulong maxMemoryAllocationSize = default)
		{
			SType = sType;
			PNext = pNext;
			MaxPerSetDescriptors = maxPerSetDescriptors;
			MaxMemoryAllocationSize = maxMemoryAllocationSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorSetLayoutSupport")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorSetLayoutSupport
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "supported")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Supported;

		public unsafe VkDescriptorSetLayoutSupport(VkStructureType sType = default, void* pNext = default, uint supported = default)
		{
			SType = sType;
			PNext = pNext;
			Supported = supported;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderDrawParametersFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderDrawParametersFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderDrawParameters")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDrawParameters;

		public unsafe VkPhysicalDeviceShaderDrawParametersFeatures(VkStructureType sType = default, void* pNext = default, uint shaderDrawParameters = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderDrawParameters = shaderDrawParameters;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVulkan11Features")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVulkan11Features
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "storageBuffer16BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StorageBuffer16BitAccess;
		[NativeName(NativeNameType.Field, "uniformAndStorageBuffer16BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint UniformAndStorageBuffer16BitAccess;
		[NativeName(NativeNameType.Field, "storagePushConstant16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StoragePushConstant16;
		[NativeName(NativeNameType.Field, "storageInputOutput16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StorageInputOutput16;
		[NativeName(NativeNameType.Field, "multiview")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Multiview;
		[NativeName(NativeNameType.Field, "multiviewGeometryShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MultiviewGeometryShader;
		[NativeName(NativeNameType.Field, "multiviewTessellationShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MultiviewTessellationShader;
		[NativeName(NativeNameType.Field, "variablePointersStorageBuffer")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VariablePointersStorageBuffer;
		[NativeName(NativeNameType.Field, "variablePointers")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VariablePointers;
		[NativeName(NativeNameType.Field, "protectedMemory")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ProtectedMemory;
		[NativeName(NativeNameType.Field, "samplerYcbcrConversion")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SamplerYcbcrConversion;
		[NativeName(NativeNameType.Field, "shaderDrawParameters")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDrawParameters;

		public unsafe VkPhysicalDeviceVulkan11Features(VkStructureType sType = default, void* pNext = default, uint storageBuffer16BitAccess = default, uint uniformAndStorageBuffer16BitAccess = default, uint storagePushConstant16 = default, uint storageInputOutput16 = default, uint multiview = default, uint multiviewGeometryShader = default, uint multiviewTessellationShader = default, uint variablePointersStorageBuffer = default, uint variablePointers = default, uint protectedMemory = default, uint samplerYcbcrConversion = default, uint shaderDrawParameters = default)
		{
			SType = sType;
			PNext = pNext;
			StorageBuffer16BitAccess = storageBuffer16BitAccess;
			UniformAndStorageBuffer16BitAccess = uniformAndStorageBuffer16BitAccess;
			StoragePushConstant16 = storagePushConstant16;
			StorageInputOutput16 = storageInputOutput16;
			Multiview = multiview;
			MultiviewGeometryShader = multiviewGeometryShader;
			MultiviewTessellationShader = multiviewTessellationShader;
			VariablePointersStorageBuffer = variablePointersStorageBuffer;
			VariablePointers = variablePointers;
			ProtectedMemory = protectedMemory;
			SamplerYcbcrConversion = samplerYcbcrConversion;
			ShaderDrawParameters = shaderDrawParameters;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVulkan11Properties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVulkan11Properties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceUUID")]
		[NativeName(NativeNameType.Type, "uint8_t[16]")]
		public byte DeviceUUID_0;
		public byte DeviceUUID_1;
		public byte DeviceUUID_2;
		public byte DeviceUUID_3;
		public byte DeviceUUID_4;
		public byte DeviceUUID_5;
		public byte DeviceUUID_6;
		public byte DeviceUUID_7;
		public byte DeviceUUID_8;
		public byte DeviceUUID_9;
		public byte DeviceUUID_10;
		public byte DeviceUUID_11;
		public byte DeviceUUID_12;
		public byte DeviceUUID_13;
		public byte DeviceUUID_14;
		public byte DeviceUUID_15;
		[NativeName(NativeNameType.Field, "driverUUID")]
		[NativeName(NativeNameType.Type, "uint8_t[16]")]
		public byte DriverUUID_0;
		public byte DriverUUID_1;
		public byte DriverUUID_2;
		public byte DriverUUID_3;
		public byte DriverUUID_4;
		public byte DriverUUID_5;
		public byte DriverUUID_6;
		public byte DriverUUID_7;
		public byte DriverUUID_8;
		public byte DriverUUID_9;
		public byte DriverUUID_10;
		public byte DriverUUID_11;
		public byte DriverUUID_12;
		public byte DriverUUID_13;
		public byte DriverUUID_14;
		public byte DriverUUID_15;
		[NativeName(NativeNameType.Field, "deviceLUID")]
		[NativeName(NativeNameType.Type, "uint8_t[8]")]
		public byte DeviceLUID_0;
		public byte DeviceLUID_1;
		public byte DeviceLUID_2;
		public byte DeviceLUID_3;
		public byte DeviceLUID_4;
		public byte DeviceLUID_5;
		public byte DeviceLUID_6;
		public byte DeviceLUID_7;
		[NativeName(NativeNameType.Field, "deviceNodeMask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DeviceNodeMask;
		[NativeName(NativeNameType.Field, "deviceLUIDValid")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceLUIDValid;
		[NativeName(NativeNameType.Field, "subgroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SubgroupSize;
		[NativeName(NativeNameType.Field, "subgroupSupportedStages")]
		[NativeName(NativeNameType.Type, "VkShaderStageFlags")]
		public uint SubgroupSupportedStages;
		[NativeName(NativeNameType.Field, "subgroupSupportedOperations")]
		[NativeName(NativeNameType.Type, "VkSubgroupFeatureFlags")]
		public uint SubgroupSupportedOperations;
		[NativeName(NativeNameType.Field, "subgroupQuadOperationsInAllStages")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SubgroupQuadOperationsInAllStages;
		[NativeName(NativeNameType.Field, "pointClippingBehavior")]
		[NativeName(NativeNameType.Type, "VkPointClippingBehavior")]
		public VkPointClippingBehavior PointClippingBehavior;
		[NativeName(NativeNameType.Field, "maxMultiviewViewCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMultiviewViewCount;
		[NativeName(NativeNameType.Field, "maxMultiviewInstanceIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMultiviewInstanceIndex;
		[NativeName(NativeNameType.Field, "protectedNoFault")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ProtectedNoFault;
		[NativeName(NativeNameType.Field, "maxPerSetDescriptors")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerSetDescriptors;
		[NativeName(NativeNameType.Field, "maxMemoryAllocationSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MaxMemoryAllocationSize;

		public unsafe VkPhysicalDeviceVulkan11Properties(VkStructureType sType = default, void* pNext = default, byte* deviceUUID = default, byte* driverUUID = default, byte* deviceLUID = default, uint deviceNodeMask = default, uint deviceLUIDValid = default, uint subgroupSize = default, uint subgroupSupportedStages = default, uint subgroupSupportedOperations = default, uint subgroupQuadOperationsInAllStages = default, VkPointClippingBehavior pointClippingBehavior = default, uint maxMultiviewViewCount = default, uint maxMultiviewInstanceIndex = default, uint protectedNoFault = default, uint maxPerSetDescriptors = default, ulong maxMemoryAllocationSize = default)
		{
			SType = sType;
			PNext = pNext;
			if (deviceUUID != default)
			{
				DeviceUUID_0 = deviceUUID[0];
				DeviceUUID_1 = deviceUUID[1];
				DeviceUUID_2 = deviceUUID[2];
				DeviceUUID_3 = deviceUUID[3];
				DeviceUUID_4 = deviceUUID[4];
				DeviceUUID_5 = deviceUUID[5];
				DeviceUUID_6 = deviceUUID[6];
				DeviceUUID_7 = deviceUUID[7];
				DeviceUUID_8 = deviceUUID[8];
				DeviceUUID_9 = deviceUUID[9];
				DeviceUUID_10 = deviceUUID[10];
				DeviceUUID_11 = deviceUUID[11];
				DeviceUUID_12 = deviceUUID[12];
				DeviceUUID_13 = deviceUUID[13];
				DeviceUUID_14 = deviceUUID[14];
				DeviceUUID_15 = deviceUUID[15];
			}
			if (driverUUID != default)
			{
				DriverUUID_0 = driverUUID[0];
				DriverUUID_1 = driverUUID[1];
				DriverUUID_2 = driverUUID[2];
				DriverUUID_3 = driverUUID[3];
				DriverUUID_4 = driverUUID[4];
				DriverUUID_5 = driverUUID[5];
				DriverUUID_6 = driverUUID[6];
				DriverUUID_7 = driverUUID[7];
				DriverUUID_8 = driverUUID[8];
				DriverUUID_9 = driverUUID[9];
				DriverUUID_10 = driverUUID[10];
				DriverUUID_11 = driverUUID[11];
				DriverUUID_12 = driverUUID[12];
				DriverUUID_13 = driverUUID[13];
				DriverUUID_14 = driverUUID[14];
				DriverUUID_15 = driverUUID[15];
			}
			if (deviceLUID != default)
			{
				DeviceLUID_0 = deviceLUID[0];
				DeviceLUID_1 = deviceLUID[1];
				DeviceLUID_2 = deviceLUID[2];
				DeviceLUID_3 = deviceLUID[3];
				DeviceLUID_4 = deviceLUID[4];
				DeviceLUID_5 = deviceLUID[5];
				DeviceLUID_6 = deviceLUID[6];
				DeviceLUID_7 = deviceLUID[7];
			}
			DeviceNodeMask = deviceNodeMask;
			DeviceLUIDValid = deviceLUIDValid;
			SubgroupSize = subgroupSize;
			SubgroupSupportedStages = subgroupSupportedStages;
			SubgroupSupportedOperations = subgroupSupportedOperations;
			SubgroupQuadOperationsInAllStages = subgroupQuadOperationsInAllStages;
			PointClippingBehavior = pointClippingBehavior;
			MaxMultiviewViewCount = maxMultiviewViewCount;
			MaxMultiviewInstanceIndex = maxMultiviewInstanceIndex;
			ProtectedNoFault = protectedNoFault;
			MaxPerSetDescriptors = maxPerSetDescriptors;
			MaxMemoryAllocationSize = maxMemoryAllocationSize;
		}

		public unsafe VkPhysicalDeviceVulkan11Properties(VkStructureType sType = default, void* pNext = default, Span<byte> deviceUUID = default, Span<byte> driverUUID = default, Span<byte> deviceLUID = default, uint deviceNodeMask = default, uint deviceLUIDValid = default, uint subgroupSize = default, uint subgroupSupportedStages = default, uint subgroupSupportedOperations = default, uint subgroupQuadOperationsInAllStages = default, VkPointClippingBehavior pointClippingBehavior = default, uint maxMultiviewViewCount = default, uint maxMultiviewInstanceIndex = default, uint protectedNoFault = default, uint maxPerSetDescriptors = default, ulong maxMemoryAllocationSize = default)
		{
			SType = sType;
			PNext = pNext;
			if (deviceUUID != default)
			{
				DeviceUUID_0 = deviceUUID[0];
				DeviceUUID_1 = deviceUUID[1];
				DeviceUUID_2 = deviceUUID[2];
				DeviceUUID_3 = deviceUUID[3];
				DeviceUUID_4 = deviceUUID[4];
				DeviceUUID_5 = deviceUUID[5];
				DeviceUUID_6 = deviceUUID[6];
				DeviceUUID_7 = deviceUUID[7];
				DeviceUUID_8 = deviceUUID[8];
				DeviceUUID_9 = deviceUUID[9];
				DeviceUUID_10 = deviceUUID[10];
				DeviceUUID_11 = deviceUUID[11];
				DeviceUUID_12 = deviceUUID[12];
				DeviceUUID_13 = deviceUUID[13];
				DeviceUUID_14 = deviceUUID[14];
				DeviceUUID_15 = deviceUUID[15];
			}
			if (driverUUID != default)
			{
				DriverUUID_0 = driverUUID[0];
				DriverUUID_1 = driverUUID[1];
				DriverUUID_2 = driverUUID[2];
				DriverUUID_3 = driverUUID[3];
				DriverUUID_4 = driverUUID[4];
				DriverUUID_5 = driverUUID[5];
				DriverUUID_6 = driverUUID[6];
				DriverUUID_7 = driverUUID[7];
				DriverUUID_8 = driverUUID[8];
				DriverUUID_9 = driverUUID[9];
				DriverUUID_10 = driverUUID[10];
				DriverUUID_11 = driverUUID[11];
				DriverUUID_12 = driverUUID[12];
				DriverUUID_13 = driverUUID[13];
				DriverUUID_14 = driverUUID[14];
				DriverUUID_15 = driverUUID[15];
			}
			if (deviceLUID != default)
			{
				DeviceLUID_0 = deviceLUID[0];
				DeviceLUID_1 = deviceLUID[1];
				DeviceLUID_2 = deviceLUID[2];
				DeviceLUID_3 = deviceLUID[3];
				DeviceLUID_4 = deviceLUID[4];
				DeviceLUID_5 = deviceLUID[5];
				DeviceLUID_6 = deviceLUID[6];
				DeviceLUID_7 = deviceLUID[7];
			}
			DeviceNodeMask = deviceNodeMask;
			DeviceLUIDValid = deviceLUIDValid;
			SubgroupSize = subgroupSize;
			SubgroupSupportedStages = subgroupSupportedStages;
			SubgroupSupportedOperations = subgroupSupportedOperations;
			SubgroupQuadOperationsInAllStages = subgroupQuadOperationsInAllStages;
			PointClippingBehavior = pointClippingBehavior;
			MaxMultiviewViewCount = maxMultiviewViewCount;
			MaxMultiviewInstanceIndex = maxMultiviewInstanceIndex;
			ProtectedNoFault = protectedNoFault;
			MaxPerSetDescriptors = maxPerSetDescriptors;
			MaxMemoryAllocationSize = maxMemoryAllocationSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVulkan12Features")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVulkan12Features
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "samplerMirrorClampToEdge")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SamplerMirrorClampToEdge;
		[NativeName(NativeNameType.Field, "drawIndirectCount")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DrawIndirectCount;
		[NativeName(NativeNameType.Field, "storageBuffer8BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StorageBuffer8BitAccess;
		[NativeName(NativeNameType.Field, "uniformAndStorageBuffer8BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint UniformAndStorageBuffer8BitAccess;
		[NativeName(NativeNameType.Field, "storagePushConstant8")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StoragePushConstant8;
		[NativeName(NativeNameType.Field, "shaderBufferInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferInt64Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedInt64Atomics;
		[NativeName(NativeNameType.Field, "shaderFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderFloat16;
		[NativeName(NativeNameType.Field, "shaderInt8")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInt8;
		[NativeName(NativeNameType.Field, "descriptorIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorIndexing;
		[NativeName(NativeNameType.Field, "shaderInputAttachmentArrayDynamicIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInputAttachmentArrayDynamicIndexing;
		[NativeName(NativeNameType.Field, "shaderUniformTexelBufferArrayDynamicIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformTexelBufferArrayDynamicIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageTexelBufferArrayDynamicIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageTexelBufferArrayDynamicIndexing;
		[NativeName(NativeNameType.Field, "shaderUniformBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderSampledImageArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSampledImageArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageImageArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageImageArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderInputAttachmentArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInputAttachmentArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderUniformTexelBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformTexelBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageTexelBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageTexelBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "descriptorBindingUniformBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingUniformBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingSampledImageUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingSampledImageUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingStorageImageUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingStorageImageUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingStorageBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingStorageBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingUniformTexelBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingUniformTexelBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingStorageTexelBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingStorageTexelBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingUpdateUnusedWhilePending")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingUpdateUnusedWhilePending;
		[NativeName(NativeNameType.Field, "descriptorBindingPartiallyBound")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingPartiallyBound;
		[NativeName(NativeNameType.Field, "descriptorBindingVariableDescriptorCount")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingVariableDescriptorCount;
		[NativeName(NativeNameType.Field, "runtimeDescriptorArray")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RuntimeDescriptorArray;
		[NativeName(NativeNameType.Field, "samplerFilterMinmax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SamplerFilterMinmax;
		[NativeName(NativeNameType.Field, "scalarBlockLayout")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ScalarBlockLayout;
		[NativeName(NativeNameType.Field, "imagelessFramebuffer")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ImagelessFramebuffer;
		[NativeName(NativeNameType.Field, "uniformBufferStandardLayout")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint UniformBufferStandardLayout;
		[NativeName(NativeNameType.Field, "shaderSubgroupExtendedTypes")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSubgroupExtendedTypes;
		[NativeName(NativeNameType.Field, "separateDepthStencilLayouts")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SeparateDepthStencilLayouts;
		[NativeName(NativeNameType.Field, "hostQueryReset")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint HostQueryReset;
		[NativeName(NativeNameType.Field, "timelineSemaphore")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TimelineSemaphore;
		[NativeName(NativeNameType.Field, "bufferDeviceAddress")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddress;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressCaptureReplay")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressCaptureReplay;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressMultiDevice")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressMultiDevice;
		[NativeName(NativeNameType.Field, "vulkanMemoryModel")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VulkanMemoryModel;
		[NativeName(NativeNameType.Field, "vulkanMemoryModelDeviceScope")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VulkanMemoryModelDeviceScope;
		[NativeName(NativeNameType.Field, "vulkanMemoryModelAvailabilityVisibilityChains")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VulkanMemoryModelAvailabilityVisibilityChains;
		[NativeName(NativeNameType.Field, "shaderOutputViewportIndex")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderOutputViewportIndex;
		[NativeName(NativeNameType.Field, "shaderOutputLayer")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderOutputLayer;
		[NativeName(NativeNameType.Field, "subgroupBroadcastDynamicId")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SubgroupBroadcastDynamicId;

		public unsafe VkPhysicalDeviceVulkan12Features(VkStructureType sType = default, void* pNext = default, uint samplerMirrorClampToEdge = default, uint drawIndirectCount = default, uint storageBuffer8BitAccess = default, uint uniformAndStorageBuffer8BitAccess = default, uint storagePushConstant8 = default, uint shaderBufferInt64Atomics = default, uint shaderSharedInt64Atomics = default, uint shaderFloat16 = default, uint shaderInt8 = default, uint descriptorIndexing = default, uint shaderInputAttachmentArrayDynamicIndexing = default, uint shaderUniformTexelBufferArrayDynamicIndexing = default, uint shaderStorageTexelBufferArrayDynamicIndexing = default, uint shaderUniformBufferArrayNonUniformIndexing = default, uint shaderSampledImageArrayNonUniformIndexing = default, uint shaderStorageBufferArrayNonUniformIndexing = default, uint shaderStorageImageArrayNonUniformIndexing = default, uint shaderInputAttachmentArrayNonUniformIndexing = default, uint shaderUniformTexelBufferArrayNonUniformIndexing = default, uint shaderStorageTexelBufferArrayNonUniformIndexing = default, uint descriptorBindingUniformBufferUpdateAfterBind = default, uint descriptorBindingSampledImageUpdateAfterBind = default, uint descriptorBindingStorageImageUpdateAfterBind = default, uint descriptorBindingStorageBufferUpdateAfterBind = default, uint descriptorBindingUniformTexelBufferUpdateAfterBind = default, uint descriptorBindingStorageTexelBufferUpdateAfterBind = default, uint descriptorBindingUpdateUnusedWhilePending = default, uint descriptorBindingPartiallyBound = default, uint descriptorBindingVariableDescriptorCount = default, uint runtimeDescriptorArray = default, uint samplerFilterMinmax = default, uint scalarBlockLayout = default, uint imagelessFramebuffer = default, uint uniformBufferStandardLayout = default, uint shaderSubgroupExtendedTypes = default, uint separateDepthStencilLayouts = default, uint hostQueryReset = default, uint timelineSemaphore = default, uint bufferDeviceAddress = default, uint bufferDeviceAddressCaptureReplay = default, uint bufferDeviceAddressMultiDevice = default, uint vulkanMemoryModel = default, uint vulkanMemoryModelDeviceScope = default, uint vulkanMemoryModelAvailabilityVisibilityChains = default, uint shaderOutputViewportIndex = default, uint shaderOutputLayer = default, uint subgroupBroadcastDynamicId = default)
		{
			SType = sType;
			PNext = pNext;
			SamplerMirrorClampToEdge = samplerMirrorClampToEdge;
			DrawIndirectCount = drawIndirectCount;
			StorageBuffer8BitAccess = storageBuffer8BitAccess;
			UniformAndStorageBuffer8BitAccess = uniformAndStorageBuffer8BitAccess;
			StoragePushConstant8 = storagePushConstant8;
			ShaderBufferInt64Atomics = shaderBufferInt64Atomics;
			ShaderSharedInt64Atomics = shaderSharedInt64Atomics;
			ShaderFloat16 = shaderFloat16;
			ShaderInt8 = shaderInt8;
			DescriptorIndexing = descriptorIndexing;
			ShaderInputAttachmentArrayDynamicIndexing = shaderInputAttachmentArrayDynamicIndexing;
			ShaderUniformTexelBufferArrayDynamicIndexing = shaderUniformTexelBufferArrayDynamicIndexing;
			ShaderStorageTexelBufferArrayDynamicIndexing = shaderStorageTexelBufferArrayDynamicIndexing;
			ShaderUniformBufferArrayNonUniformIndexing = shaderUniformBufferArrayNonUniformIndexing;
			ShaderSampledImageArrayNonUniformIndexing = shaderSampledImageArrayNonUniformIndexing;
			ShaderStorageBufferArrayNonUniformIndexing = shaderStorageBufferArrayNonUniformIndexing;
			ShaderStorageImageArrayNonUniformIndexing = shaderStorageImageArrayNonUniformIndexing;
			ShaderInputAttachmentArrayNonUniformIndexing = shaderInputAttachmentArrayNonUniformIndexing;
			ShaderUniformTexelBufferArrayNonUniformIndexing = shaderUniformTexelBufferArrayNonUniformIndexing;
			ShaderStorageTexelBufferArrayNonUniformIndexing = shaderStorageTexelBufferArrayNonUniformIndexing;
			DescriptorBindingUniformBufferUpdateAfterBind = descriptorBindingUniformBufferUpdateAfterBind;
			DescriptorBindingSampledImageUpdateAfterBind = descriptorBindingSampledImageUpdateAfterBind;
			DescriptorBindingStorageImageUpdateAfterBind = descriptorBindingStorageImageUpdateAfterBind;
			DescriptorBindingStorageBufferUpdateAfterBind = descriptorBindingStorageBufferUpdateAfterBind;
			DescriptorBindingUniformTexelBufferUpdateAfterBind = descriptorBindingUniformTexelBufferUpdateAfterBind;
			DescriptorBindingStorageTexelBufferUpdateAfterBind = descriptorBindingStorageTexelBufferUpdateAfterBind;
			DescriptorBindingUpdateUnusedWhilePending = descriptorBindingUpdateUnusedWhilePending;
			DescriptorBindingPartiallyBound = descriptorBindingPartiallyBound;
			DescriptorBindingVariableDescriptorCount = descriptorBindingVariableDescriptorCount;
			RuntimeDescriptorArray = runtimeDescriptorArray;
			SamplerFilterMinmax = samplerFilterMinmax;
			ScalarBlockLayout = scalarBlockLayout;
			ImagelessFramebuffer = imagelessFramebuffer;
			UniformBufferStandardLayout = uniformBufferStandardLayout;
			ShaderSubgroupExtendedTypes = shaderSubgroupExtendedTypes;
			SeparateDepthStencilLayouts = separateDepthStencilLayouts;
			HostQueryReset = hostQueryReset;
			TimelineSemaphore = timelineSemaphore;
			BufferDeviceAddress = bufferDeviceAddress;
			BufferDeviceAddressCaptureReplay = bufferDeviceAddressCaptureReplay;
			BufferDeviceAddressMultiDevice = bufferDeviceAddressMultiDevice;
			VulkanMemoryModel = vulkanMemoryModel;
			VulkanMemoryModelDeviceScope = vulkanMemoryModelDeviceScope;
			VulkanMemoryModelAvailabilityVisibilityChains = vulkanMemoryModelAvailabilityVisibilityChains;
			ShaderOutputViewportIndex = shaderOutputViewportIndex;
			ShaderOutputLayer = shaderOutputLayer;
			SubgroupBroadcastDynamicId = subgroupBroadcastDynamicId;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkConformanceVersion")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkConformanceVersion
	{
		[NativeName(NativeNameType.Field, "major")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte Major;
		[NativeName(NativeNameType.Field, "minor")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte Minor;
		[NativeName(NativeNameType.Field, "subminor")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte Subminor;
		[NativeName(NativeNameType.Field, "patch")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte Patch;

		public unsafe VkConformanceVersion(byte major = default, byte minor = default, byte subminor = default, byte patch = default)
		{
			Major = major;
			Minor = minor;
			Subminor = subminor;
			Patch = patch;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVulkan12Properties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVulkan12Properties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "driverID")]
		[NativeName(NativeNameType.Type, "VkDriverId")]
		public VkDriverId DriverID;
		[NativeName(NativeNameType.Field, "driverName")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte DriverName_0;
		public byte DriverName_1;
		public byte DriverName_2;
		public byte DriverName_3;
		public byte DriverName_4;
		public byte DriverName_5;
		public byte DriverName_6;
		public byte DriverName_7;
		public byte DriverName_8;
		public byte DriverName_9;
		public byte DriverName_10;
		public byte DriverName_11;
		public byte DriverName_12;
		public byte DriverName_13;
		public byte DriverName_14;
		public byte DriverName_15;
		public byte DriverName_16;
		public byte DriverName_17;
		public byte DriverName_18;
		public byte DriverName_19;
		public byte DriverName_20;
		public byte DriverName_21;
		public byte DriverName_22;
		public byte DriverName_23;
		public byte DriverName_24;
		public byte DriverName_25;
		public byte DriverName_26;
		public byte DriverName_27;
		public byte DriverName_28;
		public byte DriverName_29;
		public byte DriverName_30;
		public byte DriverName_31;
		public byte DriverName_32;
		public byte DriverName_33;
		public byte DriverName_34;
		public byte DriverName_35;
		public byte DriverName_36;
		public byte DriverName_37;
		public byte DriverName_38;
		public byte DriverName_39;
		public byte DriverName_40;
		public byte DriverName_41;
		public byte DriverName_42;
		public byte DriverName_43;
		public byte DriverName_44;
		public byte DriverName_45;
		public byte DriverName_46;
		public byte DriverName_47;
		public byte DriverName_48;
		public byte DriverName_49;
		public byte DriverName_50;
		public byte DriverName_51;
		public byte DriverName_52;
		public byte DriverName_53;
		public byte DriverName_54;
		public byte DriverName_55;
		public byte DriverName_56;
		public byte DriverName_57;
		public byte DriverName_58;
		public byte DriverName_59;
		public byte DriverName_60;
		public byte DriverName_61;
		public byte DriverName_62;
		public byte DriverName_63;
		public byte DriverName_64;
		public byte DriverName_65;
		public byte DriverName_66;
		public byte DriverName_67;
		public byte DriverName_68;
		public byte DriverName_69;
		public byte DriverName_70;
		public byte DriverName_71;
		public byte DriverName_72;
		public byte DriverName_73;
		public byte DriverName_74;
		public byte DriverName_75;
		public byte DriverName_76;
		public byte DriverName_77;
		public byte DriverName_78;
		public byte DriverName_79;
		public byte DriverName_80;
		public byte DriverName_81;
		public byte DriverName_82;
		public byte DriverName_83;
		public byte DriverName_84;
		public byte DriverName_85;
		public byte DriverName_86;
		public byte DriverName_87;
		public byte DriverName_88;
		public byte DriverName_89;
		public byte DriverName_90;
		public byte DriverName_91;
		public byte DriverName_92;
		public byte DriverName_93;
		public byte DriverName_94;
		public byte DriverName_95;
		public byte DriverName_96;
		public byte DriverName_97;
		public byte DriverName_98;
		public byte DriverName_99;
		public byte DriverName_100;
		public byte DriverName_101;
		public byte DriverName_102;
		public byte DriverName_103;
		public byte DriverName_104;
		public byte DriverName_105;
		public byte DriverName_106;
		public byte DriverName_107;
		public byte DriverName_108;
		public byte DriverName_109;
		public byte DriverName_110;
		public byte DriverName_111;
		public byte DriverName_112;
		public byte DriverName_113;
		public byte DriverName_114;
		public byte DriverName_115;
		public byte DriverName_116;
		public byte DriverName_117;
		public byte DriverName_118;
		public byte DriverName_119;
		public byte DriverName_120;
		public byte DriverName_121;
		public byte DriverName_122;
		public byte DriverName_123;
		public byte DriverName_124;
		public byte DriverName_125;
		public byte DriverName_126;
		public byte DriverName_127;
		public byte DriverName_128;
		public byte DriverName_129;
		public byte DriverName_130;
		public byte DriverName_131;
		public byte DriverName_132;
		public byte DriverName_133;
		public byte DriverName_134;
		public byte DriverName_135;
		public byte DriverName_136;
		public byte DriverName_137;
		public byte DriverName_138;
		public byte DriverName_139;
		public byte DriverName_140;
		public byte DriverName_141;
		public byte DriverName_142;
		public byte DriverName_143;
		public byte DriverName_144;
		public byte DriverName_145;
		public byte DriverName_146;
		public byte DriverName_147;
		public byte DriverName_148;
		public byte DriverName_149;
		public byte DriverName_150;
		public byte DriverName_151;
		public byte DriverName_152;
		public byte DriverName_153;
		public byte DriverName_154;
		public byte DriverName_155;
		public byte DriverName_156;
		public byte DriverName_157;
		public byte DriverName_158;
		public byte DriverName_159;
		public byte DriverName_160;
		public byte DriverName_161;
		public byte DriverName_162;
		public byte DriverName_163;
		public byte DriverName_164;
		public byte DriverName_165;
		public byte DriverName_166;
		public byte DriverName_167;
		public byte DriverName_168;
		public byte DriverName_169;
		public byte DriverName_170;
		public byte DriverName_171;
		public byte DriverName_172;
		public byte DriverName_173;
		public byte DriverName_174;
		public byte DriverName_175;
		public byte DriverName_176;
		public byte DriverName_177;
		public byte DriverName_178;
		public byte DriverName_179;
		public byte DriverName_180;
		public byte DriverName_181;
		public byte DriverName_182;
		public byte DriverName_183;
		public byte DriverName_184;
		public byte DriverName_185;
		public byte DriverName_186;
		public byte DriverName_187;
		public byte DriverName_188;
		public byte DriverName_189;
		public byte DriverName_190;
		public byte DriverName_191;
		public byte DriverName_192;
		public byte DriverName_193;
		public byte DriverName_194;
		public byte DriverName_195;
		public byte DriverName_196;
		public byte DriverName_197;
		public byte DriverName_198;
		public byte DriverName_199;
		public byte DriverName_200;
		public byte DriverName_201;
		public byte DriverName_202;
		public byte DriverName_203;
		public byte DriverName_204;
		public byte DriverName_205;
		public byte DriverName_206;
		public byte DriverName_207;
		public byte DriverName_208;
		public byte DriverName_209;
		public byte DriverName_210;
		public byte DriverName_211;
		public byte DriverName_212;
		public byte DriverName_213;
		public byte DriverName_214;
		public byte DriverName_215;
		public byte DriverName_216;
		public byte DriverName_217;
		public byte DriverName_218;
		public byte DriverName_219;
		public byte DriverName_220;
		public byte DriverName_221;
		public byte DriverName_222;
		public byte DriverName_223;
		public byte DriverName_224;
		public byte DriverName_225;
		public byte DriverName_226;
		public byte DriverName_227;
		public byte DriverName_228;
		public byte DriverName_229;
		public byte DriverName_230;
		public byte DriverName_231;
		public byte DriverName_232;
		public byte DriverName_233;
		public byte DriverName_234;
		public byte DriverName_235;
		public byte DriverName_236;
		public byte DriverName_237;
		public byte DriverName_238;
		public byte DriverName_239;
		public byte DriverName_240;
		public byte DriverName_241;
		public byte DriverName_242;
		public byte DriverName_243;
		public byte DriverName_244;
		public byte DriverName_245;
		public byte DriverName_246;
		public byte DriverName_247;
		public byte DriverName_248;
		public byte DriverName_249;
		public byte DriverName_250;
		public byte DriverName_251;
		public byte DriverName_252;
		public byte DriverName_253;
		public byte DriverName_254;
		public byte DriverName_255;
		[NativeName(NativeNameType.Field, "driverInfo")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte DriverInfo_0;
		public byte DriverInfo_1;
		public byte DriverInfo_2;
		public byte DriverInfo_3;
		public byte DriverInfo_4;
		public byte DriverInfo_5;
		public byte DriverInfo_6;
		public byte DriverInfo_7;
		public byte DriverInfo_8;
		public byte DriverInfo_9;
		public byte DriverInfo_10;
		public byte DriverInfo_11;
		public byte DriverInfo_12;
		public byte DriverInfo_13;
		public byte DriverInfo_14;
		public byte DriverInfo_15;
		public byte DriverInfo_16;
		public byte DriverInfo_17;
		public byte DriverInfo_18;
		public byte DriverInfo_19;
		public byte DriverInfo_20;
		public byte DriverInfo_21;
		public byte DriverInfo_22;
		public byte DriverInfo_23;
		public byte DriverInfo_24;
		public byte DriverInfo_25;
		public byte DriverInfo_26;
		public byte DriverInfo_27;
		public byte DriverInfo_28;
		public byte DriverInfo_29;
		public byte DriverInfo_30;
		public byte DriverInfo_31;
		public byte DriverInfo_32;
		public byte DriverInfo_33;
		public byte DriverInfo_34;
		public byte DriverInfo_35;
		public byte DriverInfo_36;
		public byte DriverInfo_37;
		public byte DriverInfo_38;
		public byte DriverInfo_39;
		public byte DriverInfo_40;
		public byte DriverInfo_41;
		public byte DriverInfo_42;
		public byte DriverInfo_43;
		public byte DriverInfo_44;
		public byte DriverInfo_45;
		public byte DriverInfo_46;
		public byte DriverInfo_47;
		public byte DriverInfo_48;
		public byte DriverInfo_49;
		public byte DriverInfo_50;
		public byte DriverInfo_51;
		public byte DriverInfo_52;
		public byte DriverInfo_53;
		public byte DriverInfo_54;
		public byte DriverInfo_55;
		public byte DriverInfo_56;
		public byte DriverInfo_57;
		public byte DriverInfo_58;
		public byte DriverInfo_59;
		public byte DriverInfo_60;
		public byte DriverInfo_61;
		public byte DriverInfo_62;
		public byte DriverInfo_63;
		public byte DriverInfo_64;
		public byte DriverInfo_65;
		public byte DriverInfo_66;
		public byte DriverInfo_67;
		public byte DriverInfo_68;
		public byte DriverInfo_69;
		public byte DriverInfo_70;
		public byte DriverInfo_71;
		public byte DriverInfo_72;
		public byte DriverInfo_73;
		public byte DriverInfo_74;
		public byte DriverInfo_75;
		public byte DriverInfo_76;
		public byte DriverInfo_77;
		public byte DriverInfo_78;
		public byte DriverInfo_79;
		public byte DriverInfo_80;
		public byte DriverInfo_81;
		public byte DriverInfo_82;
		public byte DriverInfo_83;
		public byte DriverInfo_84;
		public byte DriverInfo_85;
		public byte DriverInfo_86;
		public byte DriverInfo_87;
		public byte DriverInfo_88;
		public byte DriverInfo_89;
		public byte DriverInfo_90;
		public byte DriverInfo_91;
		public byte DriverInfo_92;
		public byte DriverInfo_93;
		public byte DriverInfo_94;
		public byte DriverInfo_95;
		public byte DriverInfo_96;
		public byte DriverInfo_97;
		public byte DriverInfo_98;
		public byte DriverInfo_99;
		public byte DriverInfo_100;
		public byte DriverInfo_101;
		public byte DriverInfo_102;
		public byte DriverInfo_103;
		public byte DriverInfo_104;
		public byte DriverInfo_105;
		public byte DriverInfo_106;
		public byte DriverInfo_107;
		public byte DriverInfo_108;
		public byte DriverInfo_109;
		public byte DriverInfo_110;
		public byte DriverInfo_111;
		public byte DriverInfo_112;
		public byte DriverInfo_113;
		public byte DriverInfo_114;
		public byte DriverInfo_115;
		public byte DriverInfo_116;
		public byte DriverInfo_117;
		public byte DriverInfo_118;
		public byte DriverInfo_119;
		public byte DriverInfo_120;
		public byte DriverInfo_121;
		public byte DriverInfo_122;
		public byte DriverInfo_123;
		public byte DriverInfo_124;
		public byte DriverInfo_125;
		public byte DriverInfo_126;
		public byte DriverInfo_127;
		public byte DriverInfo_128;
		public byte DriverInfo_129;
		public byte DriverInfo_130;
		public byte DriverInfo_131;
		public byte DriverInfo_132;
		public byte DriverInfo_133;
		public byte DriverInfo_134;
		public byte DriverInfo_135;
		public byte DriverInfo_136;
		public byte DriverInfo_137;
		public byte DriverInfo_138;
		public byte DriverInfo_139;
		public byte DriverInfo_140;
		public byte DriverInfo_141;
		public byte DriverInfo_142;
		public byte DriverInfo_143;
		public byte DriverInfo_144;
		public byte DriverInfo_145;
		public byte DriverInfo_146;
		public byte DriverInfo_147;
		public byte DriverInfo_148;
		public byte DriverInfo_149;
		public byte DriverInfo_150;
		public byte DriverInfo_151;
		public byte DriverInfo_152;
		public byte DriverInfo_153;
		public byte DriverInfo_154;
		public byte DriverInfo_155;
		public byte DriverInfo_156;
		public byte DriverInfo_157;
		public byte DriverInfo_158;
		public byte DriverInfo_159;
		public byte DriverInfo_160;
		public byte DriverInfo_161;
		public byte DriverInfo_162;
		public byte DriverInfo_163;
		public byte DriverInfo_164;
		public byte DriverInfo_165;
		public byte DriverInfo_166;
		public byte DriverInfo_167;
		public byte DriverInfo_168;
		public byte DriverInfo_169;
		public byte DriverInfo_170;
		public byte DriverInfo_171;
		public byte DriverInfo_172;
		public byte DriverInfo_173;
		public byte DriverInfo_174;
		public byte DriverInfo_175;
		public byte DriverInfo_176;
		public byte DriverInfo_177;
		public byte DriverInfo_178;
		public byte DriverInfo_179;
		public byte DriverInfo_180;
		public byte DriverInfo_181;
		public byte DriverInfo_182;
		public byte DriverInfo_183;
		public byte DriverInfo_184;
		public byte DriverInfo_185;
		public byte DriverInfo_186;
		public byte DriverInfo_187;
		public byte DriverInfo_188;
		public byte DriverInfo_189;
		public byte DriverInfo_190;
		public byte DriverInfo_191;
		public byte DriverInfo_192;
		public byte DriverInfo_193;
		public byte DriverInfo_194;
		public byte DriverInfo_195;
		public byte DriverInfo_196;
		public byte DriverInfo_197;
		public byte DriverInfo_198;
		public byte DriverInfo_199;
		public byte DriverInfo_200;
		public byte DriverInfo_201;
		public byte DriverInfo_202;
		public byte DriverInfo_203;
		public byte DriverInfo_204;
		public byte DriverInfo_205;
		public byte DriverInfo_206;
		public byte DriverInfo_207;
		public byte DriverInfo_208;
		public byte DriverInfo_209;
		public byte DriverInfo_210;
		public byte DriverInfo_211;
		public byte DriverInfo_212;
		public byte DriverInfo_213;
		public byte DriverInfo_214;
		public byte DriverInfo_215;
		public byte DriverInfo_216;
		public byte DriverInfo_217;
		public byte DriverInfo_218;
		public byte DriverInfo_219;
		public byte DriverInfo_220;
		public byte DriverInfo_221;
		public byte DriverInfo_222;
		public byte DriverInfo_223;
		public byte DriverInfo_224;
		public byte DriverInfo_225;
		public byte DriverInfo_226;
		public byte DriverInfo_227;
		public byte DriverInfo_228;
		public byte DriverInfo_229;
		public byte DriverInfo_230;
		public byte DriverInfo_231;
		public byte DriverInfo_232;
		public byte DriverInfo_233;
		public byte DriverInfo_234;
		public byte DriverInfo_235;
		public byte DriverInfo_236;
		public byte DriverInfo_237;
		public byte DriverInfo_238;
		public byte DriverInfo_239;
		public byte DriverInfo_240;
		public byte DriverInfo_241;
		public byte DriverInfo_242;
		public byte DriverInfo_243;
		public byte DriverInfo_244;
		public byte DriverInfo_245;
		public byte DriverInfo_246;
		public byte DriverInfo_247;
		public byte DriverInfo_248;
		public byte DriverInfo_249;
		public byte DriverInfo_250;
		public byte DriverInfo_251;
		public byte DriverInfo_252;
		public byte DriverInfo_253;
		public byte DriverInfo_254;
		public byte DriverInfo_255;
		[NativeName(NativeNameType.Field, "conformanceVersion")]
		[NativeName(NativeNameType.Type, "VkConformanceVersion")]
		public VkConformanceVersion ConformanceVersion;
		[NativeName(NativeNameType.Field, "denormBehaviorIndependence")]
		[NativeName(NativeNameType.Type, "VkShaderFloatControlsIndependence")]
		public VkShaderFloatControlsIndependence DenormBehaviorIndependence;
		[NativeName(NativeNameType.Field, "roundingModeIndependence")]
		[NativeName(NativeNameType.Type, "VkShaderFloatControlsIndependence")]
		public VkShaderFloatControlsIndependence RoundingModeIndependence;
		[NativeName(NativeNameType.Field, "shaderSignedZeroInfNanPreserveFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSignedZeroInfNanPreserveFloat16;
		[NativeName(NativeNameType.Field, "shaderSignedZeroInfNanPreserveFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSignedZeroInfNanPreserveFloat32;
		[NativeName(NativeNameType.Field, "shaderSignedZeroInfNanPreserveFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSignedZeroInfNanPreserveFloat64;
		[NativeName(NativeNameType.Field, "shaderDenormPreserveFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormPreserveFloat16;
		[NativeName(NativeNameType.Field, "shaderDenormPreserveFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormPreserveFloat32;
		[NativeName(NativeNameType.Field, "shaderDenormPreserveFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormPreserveFloat64;
		[NativeName(NativeNameType.Field, "shaderDenormFlushToZeroFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormFlushToZeroFloat16;
		[NativeName(NativeNameType.Field, "shaderDenormFlushToZeroFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormFlushToZeroFloat32;
		[NativeName(NativeNameType.Field, "shaderDenormFlushToZeroFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormFlushToZeroFloat64;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTEFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTEFloat16;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTEFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTEFloat32;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTEFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTEFloat64;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTZFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTZFloat16;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTZFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTZFloat32;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTZFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTZFloat64;
		[NativeName(NativeNameType.Field, "maxUpdateAfterBindDescriptorsInAllPools")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxUpdateAfterBindDescriptorsInAllPools;
		[NativeName(NativeNameType.Field, "shaderUniformBufferArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformBufferArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderSampledImageArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSampledImageArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderStorageBufferArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageBufferArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderStorageImageArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageImageArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderInputAttachmentArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInputAttachmentArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "robustBufferAccessUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RobustBufferAccessUpdateAfterBind;
		[NativeName(NativeNameType.Field, "quadDivergentImplicitLod")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint QuadDivergentImplicitLod;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindSamplers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindSamplers;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindUniformBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindUniformBuffers;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindStorageBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindStorageBuffers;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindSampledImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindSampledImages;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindStorageImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindStorageImages;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindInputAttachments")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindInputAttachments;
		[NativeName(NativeNameType.Field, "maxPerStageUpdateAfterBindResources")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageUpdateAfterBindResources;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindSamplers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindSamplers;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindUniformBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindUniformBuffers;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindStorageBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindStorageBuffers;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindSampledImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindSampledImages;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindStorageImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindStorageImages;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindInputAttachments")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindInputAttachments;
		[NativeName(NativeNameType.Field, "supportedDepthResolveModes")]
		[NativeName(NativeNameType.Type, "VkResolveModeFlags")]
		public uint SupportedDepthResolveModes;
		[NativeName(NativeNameType.Field, "supportedStencilResolveModes")]
		[NativeName(NativeNameType.Type, "VkResolveModeFlags")]
		public uint SupportedStencilResolveModes;
		[NativeName(NativeNameType.Field, "independentResolveNone")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IndependentResolveNone;
		[NativeName(NativeNameType.Field, "independentResolve")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IndependentResolve;
		[NativeName(NativeNameType.Field, "filterMinmaxSingleComponentFormats")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterMinmaxSingleComponentFormats;
		[NativeName(NativeNameType.Field, "filterMinmaxImageComponentMapping")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterMinmaxImageComponentMapping;
		[NativeName(NativeNameType.Field, "maxTimelineSemaphoreValueDifference")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxTimelineSemaphoreValueDifference;
		[NativeName(NativeNameType.Field, "framebufferIntegerColorSampleCounts")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlags")]
		public uint FramebufferIntegerColorSampleCounts;

		public unsafe VkPhysicalDeviceVulkan12Properties(VkStructureType sType = default, void* pNext = default, VkDriverId driverID = default, byte* driverName = default, byte* driverInfo = default, VkConformanceVersion conformanceVersion = default, VkShaderFloatControlsIndependence denormBehaviorIndependence = default, VkShaderFloatControlsIndependence roundingModeIndependence = default, uint shaderSignedZeroInfNanPreserveFloat16 = default, uint shaderSignedZeroInfNanPreserveFloat32 = default, uint shaderSignedZeroInfNanPreserveFloat64 = default, uint shaderDenormPreserveFloat16 = default, uint shaderDenormPreserveFloat32 = default, uint shaderDenormPreserveFloat64 = default, uint shaderDenormFlushToZeroFloat16 = default, uint shaderDenormFlushToZeroFloat32 = default, uint shaderDenormFlushToZeroFloat64 = default, uint shaderRoundingModeRTEFloat16 = default, uint shaderRoundingModeRTEFloat32 = default, uint shaderRoundingModeRTEFloat64 = default, uint shaderRoundingModeRTZFloat16 = default, uint shaderRoundingModeRTZFloat32 = default, uint shaderRoundingModeRTZFloat64 = default, uint maxUpdateAfterBindDescriptorsInAllPools = default, uint shaderUniformBufferArrayNonUniformIndexingNative = default, uint shaderSampledImageArrayNonUniformIndexingNative = default, uint shaderStorageBufferArrayNonUniformIndexingNative = default, uint shaderStorageImageArrayNonUniformIndexingNative = default, uint shaderInputAttachmentArrayNonUniformIndexingNative = default, uint robustBufferAccessUpdateAfterBind = default, uint quadDivergentImplicitLod = default, uint maxPerStageDescriptorUpdateAfterBindSamplers = default, uint maxPerStageDescriptorUpdateAfterBindUniformBuffers = default, uint maxPerStageDescriptorUpdateAfterBindStorageBuffers = default, uint maxPerStageDescriptorUpdateAfterBindSampledImages = default, uint maxPerStageDescriptorUpdateAfterBindStorageImages = default, uint maxPerStageDescriptorUpdateAfterBindInputAttachments = default, uint maxPerStageUpdateAfterBindResources = default, uint maxDescriptorSetUpdateAfterBindSamplers = default, uint maxDescriptorSetUpdateAfterBindUniformBuffers = default, uint maxDescriptorSetUpdateAfterBindUniformBuffersDynamic = default, uint maxDescriptorSetUpdateAfterBindStorageBuffers = default, uint maxDescriptorSetUpdateAfterBindStorageBuffersDynamic = default, uint maxDescriptorSetUpdateAfterBindSampledImages = default, uint maxDescriptorSetUpdateAfterBindStorageImages = default, uint maxDescriptorSetUpdateAfterBindInputAttachments = default, uint supportedDepthResolveModes = default, uint supportedStencilResolveModes = default, uint independentResolveNone = default, uint independentResolve = default, uint filterMinmaxSingleComponentFormats = default, uint filterMinmaxImageComponentMapping = default, ulong maxTimelineSemaphoreValueDifference = default, uint framebufferIntegerColorSampleCounts = default)
		{
			SType = sType;
			PNext = pNext;
			DriverID = driverID;
			if (driverName != default)
			{
				DriverName_0 = driverName[0];
				DriverName_1 = driverName[1];
				DriverName_2 = driverName[2];
				DriverName_3 = driverName[3];
				DriverName_4 = driverName[4];
				DriverName_5 = driverName[5];
				DriverName_6 = driverName[6];
				DriverName_7 = driverName[7];
				DriverName_8 = driverName[8];
				DriverName_9 = driverName[9];
				DriverName_10 = driverName[10];
				DriverName_11 = driverName[11];
				DriverName_12 = driverName[12];
				DriverName_13 = driverName[13];
				DriverName_14 = driverName[14];
				DriverName_15 = driverName[15];
				DriverName_16 = driverName[16];
				DriverName_17 = driverName[17];
				DriverName_18 = driverName[18];
				DriverName_19 = driverName[19];
				DriverName_20 = driverName[20];
				DriverName_21 = driverName[21];
				DriverName_22 = driverName[22];
				DriverName_23 = driverName[23];
				DriverName_24 = driverName[24];
				DriverName_25 = driverName[25];
				DriverName_26 = driverName[26];
				DriverName_27 = driverName[27];
				DriverName_28 = driverName[28];
				DriverName_29 = driverName[29];
				DriverName_30 = driverName[30];
				DriverName_31 = driverName[31];
				DriverName_32 = driverName[32];
				DriverName_33 = driverName[33];
				DriverName_34 = driverName[34];
				DriverName_35 = driverName[35];
				DriverName_36 = driverName[36];
				DriverName_37 = driverName[37];
				DriverName_38 = driverName[38];
				DriverName_39 = driverName[39];
				DriverName_40 = driverName[40];
				DriverName_41 = driverName[41];
				DriverName_42 = driverName[42];
				DriverName_43 = driverName[43];
				DriverName_44 = driverName[44];
				DriverName_45 = driverName[45];
				DriverName_46 = driverName[46];
				DriverName_47 = driverName[47];
				DriverName_48 = driverName[48];
				DriverName_49 = driverName[49];
				DriverName_50 = driverName[50];
				DriverName_51 = driverName[51];
				DriverName_52 = driverName[52];
				DriverName_53 = driverName[53];
				DriverName_54 = driverName[54];
				DriverName_55 = driverName[55];
				DriverName_56 = driverName[56];
				DriverName_57 = driverName[57];
				DriverName_58 = driverName[58];
				DriverName_59 = driverName[59];
				DriverName_60 = driverName[60];
				DriverName_61 = driverName[61];
				DriverName_62 = driverName[62];
				DriverName_63 = driverName[63];
				DriverName_64 = driverName[64];
				DriverName_65 = driverName[65];
				DriverName_66 = driverName[66];
				DriverName_67 = driverName[67];
				DriverName_68 = driverName[68];
				DriverName_69 = driverName[69];
				DriverName_70 = driverName[70];
				DriverName_71 = driverName[71];
				DriverName_72 = driverName[72];
				DriverName_73 = driverName[73];
				DriverName_74 = driverName[74];
				DriverName_75 = driverName[75];
				DriverName_76 = driverName[76];
				DriverName_77 = driverName[77];
				DriverName_78 = driverName[78];
				DriverName_79 = driverName[79];
				DriverName_80 = driverName[80];
				DriverName_81 = driverName[81];
				DriverName_82 = driverName[82];
				DriverName_83 = driverName[83];
				DriverName_84 = driverName[84];
				DriverName_85 = driverName[85];
				DriverName_86 = driverName[86];
				DriverName_87 = driverName[87];
				DriverName_88 = driverName[88];
				DriverName_89 = driverName[89];
				DriverName_90 = driverName[90];
				DriverName_91 = driverName[91];
				DriverName_92 = driverName[92];
				DriverName_93 = driverName[93];
				DriverName_94 = driverName[94];
				DriverName_95 = driverName[95];
				DriverName_96 = driverName[96];
				DriverName_97 = driverName[97];
				DriverName_98 = driverName[98];
				DriverName_99 = driverName[99];
				DriverName_100 = driverName[100];
				DriverName_101 = driverName[101];
				DriverName_102 = driverName[102];
				DriverName_103 = driverName[103];
				DriverName_104 = driverName[104];
				DriverName_105 = driverName[105];
				DriverName_106 = driverName[106];
				DriverName_107 = driverName[107];
				DriverName_108 = driverName[108];
				DriverName_109 = driverName[109];
				DriverName_110 = driverName[110];
				DriverName_111 = driverName[111];
				DriverName_112 = driverName[112];
				DriverName_113 = driverName[113];
				DriverName_114 = driverName[114];
				DriverName_115 = driverName[115];
				DriverName_116 = driverName[116];
				DriverName_117 = driverName[117];
				DriverName_118 = driverName[118];
				DriverName_119 = driverName[119];
				DriverName_120 = driverName[120];
				DriverName_121 = driverName[121];
				DriverName_122 = driverName[122];
				DriverName_123 = driverName[123];
				DriverName_124 = driverName[124];
				DriverName_125 = driverName[125];
				DriverName_126 = driverName[126];
				DriverName_127 = driverName[127];
				DriverName_128 = driverName[128];
				DriverName_129 = driverName[129];
				DriverName_130 = driverName[130];
				DriverName_131 = driverName[131];
				DriverName_132 = driverName[132];
				DriverName_133 = driverName[133];
				DriverName_134 = driverName[134];
				DriverName_135 = driverName[135];
				DriverName_136 = driverName[136];
				DriverName_137 = driverName[137];
				DriverName_138 = driverName[138];
				DriverName_139 = driverName[139];
				DriverName_140 = driverName[140];
				DriverName_141 = driverName[141];
				DriverName_142 = driverName[142];
				DriverName_143 = driverName[143];
				DriverName_144 = driverName[144];
				DriverName_145 = driverName[145];
				DriverName_146 = driverName[146];
				DriverName_147 = driverName[147];
				DriverName_148 = driverName[148];
				DriverName_149 = driverName[149];
				DriverName_150 = driverName[150];
				DriverName_151 = driverName[151];
				DriverName_152 = driverName[152];
				DriverName_153 = driverName[153];
				DriverName_154 = driverName[154];
				DriverName_155 = driverName[155];
				DriverName_156 = driverName[156];
				DriverName_157 = driverName[157];
				DriverName_158 = driverName[158];
				DriverName_159 = driverName[159];
				DriverName_160 = driverName[160];
				DriverName_161 = driverName[161];
				DriverName_162 = driverName[162];
				DriverName_163 = driverName[163];
				DriverName_164 = driverName[164];
				DriverName_165 = driverName[165];
				DriverName_166 = driverName[166];
				DriverName_167 = driverName[167];
				DriverName_168 = driverName[168];
				DriverName_169 = driverName[169];
				DriverName_170 = driverName[170];
				DriverName_171 = driverName[171];
				DriverName_172 = driverName[172];
				DriverName_173 = driverName[173];
				DriverName_174 = driverName[174];
				DriverName_175 = driverName[175];
				DriverName_176 = driverName[176];
				DriverName_177 = driverName[177];
				DriverName_178 = driverName[178];
				DriverName_179 = driverName[179];
				DriverName_180 = driverName[180];
				DriverName_181 = driverName[181];
				DriverName_182 = driverName[182];
				DriverName_183 = driverName[183];
				DriverName_184 = driverName[184];
				DriverName_185 = driverName[185];
				DriverName_186 = driverName[186];
				DriverName_187 = driverName[187];
				DriverName_188 = driverName[188];
				DriverName_189 = driverName[189];
				DriverName_190 = driverName[190];
				DriverName_191 = driverName[191];
				DriverName_192 = driverName[192];
				DriverName_193 = driverName[193];
				DriverName_194 = driverName[194];
				DriverName_195 = driverName[195];
				DriverName_196 = driverName[196];
				DriverName_197 = driverName[197];
				DriverName_198 = driverName[198];
				DriverName_199 = driverName[199];
				DriverName_200 = driverName[200];
				DriverName_201 = driverName[201];
				DriverName_202 = driverName[202];
				DriverName_203 = driverName[203];
				DriverName_204 = driverName[204];
				DriverName_205 = driverName[205];
				DriverName_206 = driverName[206];
				DriverName_207 = driverName[207];
				DriverName_208 = driverName[208];
				DriverName_209 = driverName[209];
				DriverName_210 = driverName[210];
				DriverName_211 = driverName[211];
				DriverName_212 = driverName[212];
				DriverName_213 = driverName[213];
				DriverName_214 = driverName[214];
				DriverName_215 = driverName[215];
				DriverName_216 = driverName[216];
				DriverName_217 = driverName[217];
				DriverName_218 = driverName[218];
				DriverName_219 = driverName[219];
				DriverName_220 = driverName[220];
				DriverName_221 = driverName[221];
				DriverName_222 = driverName[222];
				DriverName_223 = driverName[223];
				DriverName_224 = driverName[224];
				DriverName_225 = driverName[225];
				DriverName_226 = driverName[226];
				DriverName_227 = driverName[227];
				DriverName_228 = driverName[228];
				DriverName_229 = driverName[229];
				DriverName_230 = driverName[230];
				DriverName_231 = driverName[231];
				DriverName_232 = driverName[232];
				DriverName_233 = driverName[233];
				DriverName_234 = driverName[234];
				DriverName_235 = driverName[235];
				DriverName_236 = driverName[236];
				DriverName_237 = driverName[237];
				DriverName_238 = driverName[238];
				DriverName_239 = driverName[239];
				DriverName_240 = driverName[240];
				DriverName_241 = driverName[241];
				DriverName_242 = driverName[242];
				DriverName_243 = driverName[243];
				DriverName_244 = driverName[244];
				DriverName_245 = driverName[245];
				DriverName_246 = driverName[246];
				DriverName_247 = driverName[247];
				DriverName_248 = driverName[248];
				DriverName_249 = driverName[249];
				DriverName_250 = driverName[250];
				DriverName_251 = driverName[251];
				DriverName_252 = driverName[252];
				DriverName_253 = driverName[253];
				DriverName_254 = driverName[254];
				DriverName_255 = driverName[255];
			}
			if (driverInfo != default)
			{
				DriverInfo_0 = driverInfo[0];
				DriverInfo_1 = driverInfo[1];
				DriverInfo_2 = driverInfo[2];
				DriverInfo_3 = driverInfo[3];
				DriverInfo_4 = driverInfo[4];
				DriverInfo_5 = driverInfo[5];
				DriverInfo_6 = driverInfo[6];
				DriverInfo_7 = driverInfo[7];
				DriverInfo_8 = driverInfo[8];
				DriverInfo_9 = driverInfo[9];
				DriverInfo_10 = driverInfo[10];
				DriverInfo_11 = driverInfo[11];
				DriverInfo_12 = driverInfo[12];
				DriverInfo_13 = driverInfo[13];
				DriverInfo_14 = driverInfo[14];
				DriverInfo_15 = driverInfo[15];
				DriverInfo_16 = driverInfo[16];
				DriverInfo_17 = driverInfo[17];
				DriverInfo_18 = driverInfo[18];
				DriverInfo_19 = driverInfo[19];
				DriverInfo_20 = driverInfo[20];
				DriverInfo_21 = driverInfo[21];
				DriverInfo_22 = driverInfo[22];
				DriverInfo_23 = driverInfo[23];
				DriverInfo_24 = driverInfo[24];
				DriverInfo_25 = driverInfo[25];
				DriverInfo_26 = driverInfo[26];
				DriverInfo_27 = driverInfo[27];
				DriverInfo_28 = driverInfo[28];
				DriverInfo_29 = driverInfo[29];
				DriverInfo_30 = driverInfo[30];
				DriverInfo_31 = driverInfo[31];
				DriverInfo_32 = driverInfo[32];
				DriverInfo_33 = driverInfo[33];
				DriverInfo_34 = driverInfo[34];
				DriverInfo_35 = driverInfo[35];
				DriverInfo_36 = driverInfo[36];
				DriverInfo_37 = driverInfo[37];
				DriverInfo_38 = driverInfo[38];
				DriverInfo_39 = driverInfo[39];
				DriverInfo_40 = driverInfo[40];
				DriverInfo_41 = driverInfo[41];
				DriverInfo_42 = driverInfo[42];
				DriverInfo_43 = driverInfo[43];
				DriverInfo_44 = driverInfo[44];
				DriverInfo_45 = driverInfo[45];
				DriverInfo_46 = driverInfo[46];
				DriverInfo_47 = driverInfo[47];
				DriverInfo_48 = driverInfo[48];
				DriverInfo_49 = driverInfo[49];
				DriverInfo_50 = driverInfo[50];
				DriverInfo_51 = driverInfo[51];
				DriverInfo_52 = driverInfo[52];
				DriverInfo_53 = driverInfo[53];
				DriverInfo_54 = driverInfo[54];
				DriverInfo_55 = driverInfo[55];
				DriverInfo_56 = driverInfo[56];
				DriverInfo_57 = driverInfo[57];
				DriverInfo_58 = driverInfo[58];
				DriverInfo_59 = driverInfo[59];
				DriverInfo_60 = driverInfo[60];
				DriverInfo_61 = driverInfo[61];
				DriverInfo_62 = driverInfo[62];
				DriverInfo_63 = driverInfo[63];
				DriverInfo_64 = driverInfo[64];
				DriverInfo_65 = driverInfo[65];
				DriverInfo_66 = driverInfo[66];
				DriverInfo_67 = driverInfo[67];
				DriverInfo_68 = driverInfo[68];
				DriverInfo_69 = driverInfo[69];
				DriverInfo_70 = driverInfo[70];
				DriverInfo_71 = driverInfo[71];
				DriverInfo_72 = driverInfo[72];
				DriverInfo_73 = driverInfo[73];
				DriverInfo_74 = driverInfo[74];
				DriverInfo_75 = driverInfo[75];
				DriverInfo_76 = driverInfo[76];
				DriverInfo_77 = driverInfo[77];
				DriverInfo_78 = driverInfo[78];
				DriverInfo_79 = driverInfo[79];
				DriverInfo_80 = driverInfo[80];
				DriverInfo_81 = driverInfo[81];
				DriverInfo_82 = driverInfo[82];
				DriverInfo_83 = driverInfo[83];
				DriverInfo_84 = driverInfo[84];
				DriverInfo_85 = driverInfo[85];
				DriverInfo_86 = driverInfo[86];
				DriverInfo_87 = driverInfo[87];
				DriverInfo_88 = driverInfo[88];
				DriverInfo_89 = driverInfo[89];
				DriverInfo_90 = driverInfo[90];
				DriverInfo_91 = driverInfo[91];
				DriverInfo_92 = driverInfo[92];
				DriverInfo_93 = driverInfo[93];
				DriverInfo_94 = driverInfo[94];
				DriverInfo_95 = driverInfo[95];
				DriverInfo_96 = driverInfo[96];
				DriverInfo_97 = driverInfo[97];
				DriverInfo_98 = driverInfo[98];
				DriverInfo_99 = driverInfo[99];
				DriverInfo_100 = driverInfo[100];
				DriverInfo_101 = driverInfo[101];
				DriverInfo_102 = driverInfo[102];
				DriverInfo_103 = driverInfo[103];
				DriverInfo_104 = driverInfo[104];
				DriverInfo_105 = driverInfo[105];
				DriverInfo_106 = driverInfo[106];
				DriverInfo_107 = driverInfo[107];
				DriverInfo_108 = driverInfo[108];
				DriverInfo_109 = driverInfo[109];
				DriverInfo_110 = driverInfo[110];
				DriverInfo_111 = driverInfo[111];
				DriverInfo_112 = driverInfo[112];
				DriverInfo_113 = driverInfo[113];
				DriverInfo_114 = driverInfo[114];
				DriverInfo_115 = driverInfo[115];
				DriverInfo_116 = driverInfo[116];
				DriverInfo_117 = driverInfo[117];
				DriverInfo_118 = driverInfo[118];
				DriverInfo_119 = driverInfo[119];
				DriverInfo_120 = driverInfo[120];
				DriverInfo_121 = driverInfo[121];
				DriverInfo_122 = driverInfo[122];
				DriverInfo_123 = driverInfo[123];
				DriverInfo_124 = driverInfo[124];
				DriverInfo_125 = driverInfo[125];
				DriverInfo_126 = driverInfo[126];
				DriverInfo_127 = driverInfo[127];
				DriverInfo_128 = driverInfo[128];
				DriverInfo_129 = driverInfo[129];
				DriverInfo_130 = driverInfo[130];
				DriverInfo_131 = driverInfo[131];
				DriverInfo_132 = driverInfo[132];
				DriverInfo_133 = driverInfo[133];
				DriverInfo_134 = driverInfo[134];
				DriverInfo_135 = driverInfo[135];
				DriverInfo_136 = driverInfo[136];
				DriverInfo_137 = driverInfo[137];
				DriverInfo_138 = driverInfo[138];
				DriverInfo_139 = driverInfo[139];
				DriverInfo_140 = driverInfo[140];
				DriverInfo_141 = driverInfo[141];
				DriverInfo_142 = driverInfo[142];
				DriverInfo_143 = driverInfo[143];
				DriverInfo_144 = driverInfo[144];
				DriverInfo_145 = driverInfo[145];
				DriverInfo_146 = driverInfo[146];
				DriverInfo_147 = driverInfo[147];
				DriverInfo_148 = driverInfo[148];
				DriverInfo_149 = driverInfo[149];
				DriverInfo_150 = driverInfo[150];
				DriverInfo_151 = driverInfo[151];
				DriverInfo_152 = driverInfo[152];
				DriverInfo_153 = driverInfo[153];
				DriverInfo_154 = driverInfo[154];
				DriverInfo_155 = driverInfo[155];
				DriverInfo_156 = driverInfo[156];
				DriverInfo_157 = driverInfo[157];
				DriverInfo_158 = driverInfo[158];
				DriverInfo_159 = driverInfo[159];
				DriverInfo_160 = driverInfo[160];
				DriverInfo_161 = driverInfo[161];
				DriverInfo_162 = driverInfo[162];
				DriverInfo_163 = driverInfo[163];
				DriverInfo_164 = driverInfo[164];
				DriverInfo_165 = driverInfo[165];
				DriverInfo_166 = driverInfo[166];
				DriverInfo_167 = driverInfo[167];
				DriverInfo_168 = driverInfo[168];
				DriverInfo_169 = driverInfo[169];
				DriverInfo_170 = driverInfo[170];
				DriverInfo_171 = driverInfo[171];
				DriverInfo_172 = driverInfo[172];
				DriverInfo_173 = driverInfo[173];
				DriverInfo_174 = driverInfo[174];
				DriverInfo_175 = driverInfo[175];
				DriverInfo_176 = driverInfo[176];
				DriverInfo_177 = driverInfo[177];
				DriverInfo_178 = driverInfo[178];
				DriverInfo_179 = driverInfo[179];
				DriverInfo_180 = driverInfo[180];
				DriverInfo_181 = driverInfo[181];
				DriverInfo_182 = driverInfo[182];
				DriverInfo_183 = driverInfo[183];
				DriverInfo_184 = driverInfo[184];
				DriverInfo_185 = driverInfo[185];
				DriverInfo_186 = driverInfo[186];
				DriverInfo_187 = driverInfo[187];
				DriverInfo_188 = driverInfo[188];
				DriverInfo_189 = driverInfo[189];
				DriverInfo_190 = driverInfo[190];
				DriverInfo_191 = driverInfo[191];
				DriverInfo_192 = driverInfo[192];
				DriverInfo_193 = driverInfo[193];
				DriverInfo_194 = driverInfo[194];
				DriverInfo_195 = driverInfo[195];
				DriverInfo_196 = driverInfo[196];
				DriverInfo_197 = driverInfo[197];
				DriverInfo_198 = driverInfo[198];
				DriverInfo_199 = driverInfo[199];
				DriverInfo_200 = driverInfo[200];
				DriverInfo_201 = driverInfo[201];
				DriverInfo_202 = driverInfo[202];
				DriverInfo_203 = driverInfo[203];
				DriverInfo_204 = driverInfo[204];
				DriverInfo_205 = driverInfo[205];
				DriverInfo_206 = driverInfo[206];
				DriverInfo_207 = driverInfo[207];
				DriverInfo_208 = driverInfo[208];
				DriverInfo_209 = driverInfo[209];
				DriverInfo_210 = driverInfo[210];
				DriverInfo_211 = driverInfo[211];
				DriverInfo_212 = driverInfo[212];
				DriverInfo_213 = driverInfo[213];
				DriverInfo_214 = driverInfo[214];
				DriverInfo_215 = driverInfo[215];
				DriverInfo_216 = driverInfo[216];
				DriverInfo_217 = driverInfo[217];
				DriverInfo_218 = driverInfo[218];
				DriverInfo_219 = driverInfo[219];
				DriverInfo_220 = driverInfo[220];
				DriverInfo_221 = driverInfo[221];
				DriverInfo_222 = driverInfo[222];
				DriverInfo_223 = driverInfo[223];
				DriverInfo_224 = driverInfo[224];
				DriverInfo_225 = driverInfo[225];
				DriverInfo_226 = driverInfo[226];
				DriverInfo_227 = driverInfo[227];
				DriverInfo_228 = driverInfo[228];
				DriverInfo_229 = driverInfo[229];
				DriverInfo_230 = driverInfo[230];
				DriverInfo_231 = driverInfo[231];
				DriverInfo_232 = driverInfo[232];
				DriverInfo_233 = driverInfo[233];
				DriverInfo_234 = driverInfo[234];
				DriverInfo_235 = driverInfo[235];
				DriverInfo_236 = driverInfo[236];
				DriverInfo_237 = driverInfo[237];
				DriverInfo_238 = driverInfo[238];
				DriverInfo_239 = driverInfo[239];
				DriverInfo_240 = driverInfo[240];
				DriverInfo_241 = driverInfo[241];
				DriverInfo_242 = driverInfo[242];
				DriverInfo_243 = driverInfo[243];
				DriverInfo_244 = driverInfo[244];
				DriverInfo_245 = driverInfo[245];
				DriverInfo_246 = driverInfo[246];
				DriverInfo_247 = driverInfo[247];
				DriverInfo_248 = driverInfo[248];
				DriverInfo_249 = driverInfo[249];
				DriverInfo_250 = driverInfo[250];
				DriverInfo_251 = driverInfo[251];
				DriverInfo_252 = driverInfo[252];
				DriverInfo_253 = driverInfo[253];
				DriverInfo_254 = driverInfo[254];
				DriverInfo_255 = driverInfo[255];
			}
			ConformanceVersion = conformanceVersion;
			DenormBehaviorIndependence = denormBehaviorIndependence;
			RoundingModeIndependence = roundingModeIndependence;
			ShaderSignedZeroInfNanPreserveFloat16 = shaderSignedZeroInfNanPreserveFloat16;
			ShaderSignedZeroInfNanPreserveFloat32 = shaderSignedZeroInfNanPreserveFloat32;
			ShaderSignedZeroInfNanPreserveFloat64 = shaderSignedZeroInfNanPreserveFloat64;
			ShaderDenormPreserveFloat16 = shaderDenormPreserveFloat16;
			ShaderDenormPreserveFloat32 = shaderDenormPreserveFloat32;
			ShaderDenormPreserveFloat64 = shaderDenormPreserveFloat64;
			ShaderDenormFlushToZeroFloat16 = shaderDenormFlushToZeroFloat16;
			ShaderDenormFlushToZeroFloat32 = shaderDenormFlushToZeroFloat32;
			ShaderDenormFlushToZeroFloat64 = shaderDenormFlushToZeroFloat64;
			ShaderRoundingModeRTEFloat16 = shaderRoundingModeRTEFloat16;
			ShaderRoundingModeRTEFloat32 = shaderRoundingModeRTEFloat32;
			ShaderRoundingModeRTEFloat64 = shaderRoundingModeRTEFloat64;
			ShaderRoundingModeRTZFloat16 = shaderRoundingModeRTZFloat16;
			ShaderRoundingModeRTZFloat32 = shaderRoundingModeRTZFloat32;
			ShaderRoundingModeRTZFloat64 = shaderRoundingModeRTZFloat64;
			MaxUpdateAfterBindDescriptorsInAllPools = maxUpdateAfterBindDescriptorsInAllPools;
			ShaderUniformBufferArrayNonUniformIndexingNative = shaderUniformBufferArrayNonUniformIndexingNative;
			ShaderSampledImageArrayNonUniformIndexingNative = shaderSampledImageArrayNonUniformIndexingNative;
			ShaderStorageBufferArrayNonUniformIndexingNative = shaderStorageBufferArrayNonUniformIndexingNative;
			ShaderStorageImageArrayNonUniformIndexingNative = shaderStorageImageArrayNonUniformIndexingNative;
			ShaderInputAttachmentArrayNonUniformIndexingNative = shaderInputAttachmentArrayNonUniformIndexingNative;
			RobustBufferAccessUpdateAfterBind = robustBufferAccessUpdateAfterBind;
			QuadDivergentImplicitLod = quadDivergentImplicitLod;
			MaxPerStageDescriptorUpdateAfterBindSamplers = maxPerStageDescriptorUpdateAfterBindSamplers;
			MaxPerStageDescriptorUpdateAfterBindUniformBuffers = maxPerStageDescriptorUpdateAfterBindUniformBuffers;
			MaxPerStageDescriptorUpdateAfterBindStorageBuffers = maxPerStageDescriptorUpdateAfterBindStorageBuffers;
			MaxPerStageDescriptorUpdateAfterBindSampledImages = maxPerStageDescriptorUpdateAfterBindSampledImages;
			MaxPerStageDescriptorUpdateAfterBindStorageImages = maxPerStageDescriptorUpdateAfterBindStorageImages;
			MaxPerStageDescriptorUpdateAfterBindInputAttachments = maxPerStageDescriptorUpdateAfterBindInputAttachments;
			MaxPerStageUpdateAfterBindResources = maxPerStageUpdateAfterBindResources;
			MaxDescriptorSetUpdateAfterBindSamplers = maxDescriptorSetUpdateAfterBindSamplers;
			MaxDescriptorSetUpdateAfterBindUniformBuffers = maxDescriptorSetUpdateAfterBindUniformBuffers;
			MaxDescriptorSetUpdateAfterBindUniformBuffersDynamic = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
			MaxDescriptorSetUpdateAfterBindStorageBuffers = maxDescriptorSetUpdateAfterBindStorageBuffers;
			MaxDescriptorSetUpdateAfterBindStorageBuffersDynamic = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
			MaxDescriptorSetUpdateAfterBindSampledImages = maxDescriptorSetUpdateAfterBindSampledImages;
			MaxDescriptorSetUpdateAfterBindStorageImages = maxDescriptorSetUpdateAfterBindStorageImages;
			MaxDescriptorSetUpdateAfterBindInputAttachments = maxDescriptorSetUpdateAfterBindInputAttachments;
			SupportedDepthResolveModes = supportedDepthResolveModes;
			SupportedStencilResolveModes = supportedStencilResolveModes;
			IndependentResolveNone = independentResolveNone;
			IndependentResolve = independentResolve;
			FilterMinmaxSingleComponentFormats = filterMinmaxSingleComponentFormats;
			FilterMinmaxImageComponentMapping = filterMinmaxImageComponentMapping;
			MaxTimelineSemaphoreValueDifference = maxTimelineSemaphoreValueDifference;
			FramebufferIntegerColorSampleCounts = framebufferIntegerColorSampleCounts;
		}

		public unsafe VkPhysicalDeviceVulkan12Properties(VkStructureType sType = default, void* pNext = default, VkDriverId driverID = default, Span<byte> driverName = default, Span<byte> driverInfo = default, VkConformanceVersion conformanceVersion = default, VkShaderFloatControlsIndependence denormBehaviorIndependence = default, VkShaderFloatControlsIndependence roundingModeIndependence = default, uint shaderSignedZeroInfNanPreserveFloat16 = default, uint shaderSignedZeroInfNanPreserveFloat32 = default, uint shaderSignedZeroInfNanPreserveFloat64 = default, uint shaderDenormPreserveFloat16 = default, uint shaderDenormPreserveFloat32 = default, uint shaderDenormPreserveFloat64 = default, uint shaderDenormFlushToZeroFloat16 = default, uint shaderDenormFlushToZeroFloat32 = default, uint shaderDenormFlushToZeroFloat64 = default, uint shaderRoundingModeRTEFloat16 = default, uint shaderRoundingModeRTEFloat32 = default, uint shaderRoundingModeRTEFloat64 = default, uint shaderRoundingModeRTZFloat16 = default, uint shaderRoundingModeRTZFloat32 = default, uint shaderRoundingModeRTZFloat64 = default, uint maxUpdateAfterBindDescriptorsInAllPools = default, uint shaderUniformBufferArrayNonUniformIndexingNative = default, uint shaderSampledImageArrayNonUniformIndexingNative = default, uint shaderStorageBufferArrayNonUniformIndexingNative = default, uint shaderStorageImageArrayNonUniformIndexingNative = default, uint shaderInputAttachmentArrayNonUniformIndexingNative = default, uint robustBufferAccessUpdateAfterBind = default, uint quadDivergentImplicitLod = default, uint maxPerStageDescriptorUpdateAfterBindSamplers = default, uint maxPerStageDescriptorUpdateAfterBindUniformBuffers = default, uint maxPerStageDescriptorUpdateAfterBindStorageBuffers = default, uint maxPerStageDescriptorUpdateAfterBindSampledImages = default, uint maxPerStageDescriptorUpdateAfterBindStorageImages = default, uint maxPerStageDescriptorUpdateAfterBindInputAttachments = default, uint maxPerStageUpdateAfterBindResources = default, uint maxDescriptorSetUpdateAfterBindSamplers = default, uint maxDescriptorSetUpdateAfterBindUniformBuffers = default, uint maxDescriptorSetUpdateAfterBindUniformBuffersDynamic = default, uint maxDescriptorSetUpdateAfterBindStorageBuffers = default, uint maxDescriptorSetUpdateAfterBindStorageBuffersDynamic = default, uint maxDescriptorSetUpdateAfterBindSampledImages = default, uint maxDescriptorSetUpdateAfterBindStorageImages = default, uint maxDescriptorSetUpdateAfterBindInputAttachments = default, uint supportedDepthResolveModes = default, uint supportedStencilResolveModes = default, uint independentResolveNone = default, uint independentResolve = default, uint filterMinmaxSingleComponentFormats = default, uint filterMinmaxImageComponentMapping = default, ulong maxTimelineSemaphoreValueDifference = default, uint framebufferIntegerColorSampleCounts = default)
		{
			SType = sType;
			PNext = pNext;
			DriverID = driverID;
			if (driverName != default)
			{
				DriverName_0 = driverName[0];
				DriverName_1 = driverName[1];
				DriverName_2 = driverName[2];
				DriverName_3 = driverName[3];
				DriverName_4 = driverName[4];
				DriverName_5 = driverName[5];
				DriverName_6 = driverName[6];
				DriverName_7 = driverName[7];
				DriverName_8 = driverName[8];
				DriverName_9 = driverName[9];
				DriverName_10 = driverName[10];
				DriverName_11 = driverName[11];
				DriverName_12 = driverName[12];
				DriverName_13 = driverName[13];
				DriverName_14 = driverName[14];
				DriverName_15 = driverName[15];
				DriverName_16 = driverName[16];
				DriverName_17 = driverName[17];
				DriverName_18 = driverName[18];
				DriverName_19 = driverName[19];
				DriverName_20 = driverName[20];
				DriverName_21 = driverName[21];
				DriverName_22 = driverName[22];
				DriverName_23 = driverName[23];
				DriverName_24 = driverName[24];
				DriverName_25 = driverName[25];
				DriverName_26 = driverName[26];
				DriverName_27 = driverName[27];
				DriverName_28 = driverName[28];
				DriverName_29 = driverName[29];
				DriverName_30 = driverName[30];
				DriverName_31 = driverName[31];
				DriverName_32 = driverName[32];
				DriverName_33 = driverName[33];
				DriverName_34 = driverName[34];
				DriverName_35 = driverName[35];
				DriverName_36 = driverName[36];
				DriverName_37 = driverName[37];
				DriverName_38 = driverName[38];
				DriverName_39 = driverName[39];
				DriverName_40 = driverName[40];
				DriverName_41 = driverName[41];
				DriverName_42 = driverName[42];
				DriverName_43 = driverName[43];
				DriverName_44 = driverName[44];
				DriverName_45 = driverName[45];
				DriverName_46 = driverName[46];
				DriverName_47 = driverName[47];
				DriverName_48 = driverName[48];
				DriverName_49 = driverName[49];
				DriverName_50 = driverName[50];
				DriverName_51 = driverName[51];
				DriverName_52 = driverName[52];
				DriverName_53 = driverName[53];
				DriverName_54 = driverName[54];
				DriverName_55 = driverName[55];
				DriverName_56 = driverName[56];
				DriverName_57 = driverName[57];
				DriverName_58 = driverName[58];
				DriverName_59 = driverName[59];
				DriverName_60 = driverName[60];
				DriverName_61 = driverName[61];
				DriverName_62 = driverName[62];
				DriverName_63 = driverName[63];
				DriverName_64 = driverName[64];
				DriverName_65 = driverName[65];
				DriverName_66 = driverName[66];
				DriverName_67 = driverName[67];
				DriverName_68 = driverName[68];
				DriverName_69 = driverName[69];
				DriverName_70 = driverName[70];
				DriverName_71 = driverName[71];
				DriverName_72 = driverName[72];
				DriverName_73 = driverName[73];
				DriverName_74 = driverName[74];
				DriverName_75 = driverName[75];
				DriverName_76 = driverName[76];
				DriverName_77 = driverName[77];
				DriverName_78 = driverName[78];
				DriverName_79 = driverName[79];
				DriverName_80 = driverName[80];
				DriverName_81 = driverName[81];
				DriverName_82 = driverName[82];
				DriverName_83 = driverName[83];
				DriverName_84 = driverName[84];
				DriverName_85 = driverName[85];
				DriverName_86 = driverName[86];
				DriverName_87 = driverName[87];
				DriverName_88 = driverName[88];
				DriverName_89 = driverName[89];
				DriverName_90 = driverName[90];
				DriverName_91 = driverName[91];
				DriverName_92 = driverName[92];
				DriverName_93 = driverName[93];
				DriverName_94 = driverName[94];
				DriverName_95 = driverName[95];
				DriverName_96 = driverName[96];
				DriverName_97 = driverName[97];
				DriverName_98 = driverName[98];
				DriverName_99 = driverName[99];
				DriverName_100 = driverName[100];
				DriverName_101 = driverName[101];
				DriverName_102 = driverName[102];
				DriverName_103 = driverName[103];
				DriverName_104 = driverName[104];
				DriverName_105 = driverName[105];
				DriverName_106 = driverName[106];
				DriverName_107 = driverName[107];
				DriverName_108 = driverName[108];
				DriverName_109 = driverName[109];
				DriverName_110 = driverName[110];
				DriverName_111 = driverName[111];
				DriverName_112 = driverName[112];
				DriverName_113 = driverName[113];
				DriverName_114 = driverName[114];
				DriverName_115 = driverName[115];
				DriverName_116 = driverName[116];
				DriverName_117 = driverName[117];
				DriverName_118 = driverName[118];
				DriverName_119 = driverName[119];
				DriverName_120 = driverName[120];
				DriverName_121 = driverName[121];
				DriverName_122 = driverName[122];
				DriverName_123 = driverName[123];
				DriverName_124 = driverName[124];
				DriverName_125 = driverName[125];
				DriverName_126 = driverName[126];
				DriverName_127 = driverName[127];
				DriverName_128 = driverName[128];
				DriverName_129 = driverName[129];
				DriverName_130 = driverName[130];
				DriverName_131 = driverName[131];
				DriverName_132 = driverName[132];
				DriverName_133 = driverName[133];
				DriverName_134 = driverName[134];
				DriverName_135 = driverName[135];
				DriverName_136 = driverName[136];
				DriverName_137 = driverName[137];
				DriverName_138 = driverName[138];
				DriverName_139 = driverName[139];
				DriverName_140 = driverName[140];
				DriverName_141 = driverName[141];
				DriverName_142 = driverName[142];
				DriverName_143 = driverName[143];
				DriverName_144 = driverName[144];
				DriverName_145 = driverName[145];
				DriverName_146 = driverName[146];
				DriverName_147 = driverName[147];
				DriverName_148 = driverName[148];
				DriverName_149 = driverName[149];
				DriverName_150 = driverName[150];
				DriverName_151 = driverName[151];
				DriverName_152 = driverName[152];
				DriverName_153 = driverName[153];
				DriverName_154 = driverName[154];
				DriverName_155 = driverName[155];
				DriverName_156 = driverName[156];
				DriverName_157 = driverName[157];
				DriverName_158 = driverName[158];
				DriverName_159 = driverName[159];
				DriverName_160 = driverName[160];
				DriverName_161 = driverName[161];
				DriverName_162 = driverName[162];
				DriverName_163 = driverName[163];
				DriverName_164 = driverName[164];
				DriverName_165 = driverName[165];
				DriverName_166 = driverName[166];
				DriverName_167 = driverName[167];
				DriverName_168 = driverName[168];
				DriverName_169 = driverName[169];
				DriverName_170 = driverName[170];
				DriverName_171 = driverName[171];
				DriverName_172 = driverName[172];
				DriverName_173 = driverName[173];
				DriverName_174 = driverName[174];
				DriverName_175 = driverName[175];
				DriverName_176 = driverName[176];
				DriverName_177 = driverName[177];
				DriverName_178 = driverName[178];
				DriverName_179 = driverName[179];
				DriverName_180 = driverName[180];
				DriverName_181 = driverName[181];
				DriverName_182 = driverName[182];
				DriverName_183 = driverName[183];
				DriverName_184 = driverName[184];
				DriverName_185 = driverName[185];
				DriverName_186 = driverName[186];
				DriverName_187 = driverName[187];
				DriverName_188 = driverName[188];
				DriverName_189 = driverName[189];
				DriverName_190 = driverName[190];
				DriverName_191 = driverName[191];
				DriverName_192 = driverName[192];
				DriverName_193 = driverName[193];
				DriverName_194 = driverName[194];
				DriverName_195 = driverName[195];
				DriverName_196 = driverName[196];
				DriverName_197 = driverName[197];
				DriverName_198 = driverName[198];
				DriverName_199 = driverName[199];
				DriverName_200 = driverName[200];
				DriverName_201 = driverName[201];
				DriverName_202 = driverName[202];
				DriverName_203 = driverName[203];
				DriverName_204 = driverName[204];
				DriverName_205 = driverName[205];
				DriverName_206 = driverName[206];
				DriverName_207 = driverName[207];
				DriverName_208 = driverName[208];
				DriverName_209 = driverName[209];
				DriverName_210 = driverName[210];
				DriverName_211 = driverName[211];
				DriverName_212 = driverName[212];
				DriverName_213 = driverName[213];
				DriverName_214 = driverName[214];
				DriverName_215 = driverName[215];
				DriverName_216 = driverName[216];
				DriverName_217 = driverName[217];
				DriverName_218 = driverName[218];
				DriverName_219 = driverName[219];
				DriverName_220 = driverName[220];
				DriverName_221 = driverName[221];
				DriverName_222 = driverName[222];
				DriverName_223 = driverName[223];
				DriverName_224 = driverName[224];
				DriverName_225 = driverName[225];
				DriverName_226 = driverName[226];
				DriverName_227 = driverName[227];
				DriverName_228 = driverName[228];
				DriverName_229 = driverName[229];
				DriverName_230 = driverName[230];
				DriverName_231 = driverName[231];
				DriverName_232 = driverName[232];
				DriverName_233 = driverName[233];
				DriverName_234 = driverName[234];
				DriverName_235 = driverName[235];
				DriverName_236 = driverName[236];
				DriverName_237 = driverName[237];
				DriverName_238 = driverName[238];
				DriverName_239 = driverName[239];
				DriverName_240 = driverName[240];
				DriverName_241 = driverName[241];
				DriverName_242 = driverName[242];
				DriverName_243 = driverName[243];
				DriverName_244 = driverName[244];
				DriverName_245 = driverName[245];
				DriverName_246 = driverName[246];
				DriverName_247 = driverName[247];
				DriverName_248 = driverName[248];
				DriverName_249 = driverName[249];
				DriverName_250 = driverName[250];
				DriverName_251 = driverName[251];
				DriverName_252 = driverName[252];
				DriverName_253 = driverName[253];
				DriverName_254 = driverName[254];
				DriverName_255 = driverName[255];
			}
			if (driverInfo != default)
			{
				DriverInfo_0 = driverInfo[0];
				DriverInfo_1 = driverInfo[1];
				DriverInfo_2 = driverInfo[2];
				DriverInfo_3 = driverInfo[3];
				DriverInfo_4 = driverInfo[4];
				DriverInfo_5 = driverInfo[5];
				DriverInfo_6 = driverInfo[6];
				DriverInfo_7 = driverInfo[7];
				DriverInfo_8 = driverInfo[8];
				DriverInfo_9 = driverInfo[9];
				DriverInfo_10 = driverInfo[10];
				DriverInfo_11 = driverInfo[11];
				DriverInfo_12 = driverInfo[12];
				DriverInfo_13 = driverInfo[13];
				DriverInfo_14 = driverInfo[14];
				DriverInfo_15 = driverInfo[15];
				DriverInfo_16 = driverInfo[16];
				DriverInfo_17 = driverInfo[17];
				DriverInfo_18 = driverInfo[18];
				DriverInfo_19 = driverInfo[19];
				DriverInfo_20 = driverInfo[20];
				DriverInfo_21 = driverInfo[21];
				DriverInfo_22 = driverInfo[22];
				DriverInfo_23 = driverInfo[23];
				DriverInfo_24 = driverInfo[24];
				DriverInfo_25 = driverInfo[25];
				DriverInfo_26 = driverInfo[26];
				DriverInfo_27 = driverInfo[27];
				DriverInfo_28 = driverInfo[28];
				DriverInfo_29 = driverInfo[29];
				DriverInfo_30 = driverInfo[30];
				DriverInfo_31 = driverInfo[31];
				DriverInfo_32 = driverInfo[32];
				DriverInfo_33 = driverInfo[33];
				DriverInfo_34 = driverInfo[34];
				DriverInfo_35 = driverInfo[35];
				DriverInfo_36 = driverInfo[36];
				DriverInfo_37 = driverInfo[37];
				DriverInfo_38 = driverInfo[38];
				DriverInfo_39 = driverInfo[39];
				DriverInfo_40 = driverInfo[40];
				DriverInfo_41 = driverInfo[41];
				DriverInfo_42 = driverInfo[42];
				DriverInfo_43 = driverInfo[43];
				DriverInfo_44 = driverInfo[44];
				DriverInfo_45 = driverInfo[45];
				DriverInfo_46 = driverInfo[46];
				DriverInfo_47 = driverInfo[47];
				DriverInfo_48 = driverInfo[48];
				DriverInfo_49 = driverInfo[49];
				DriverInfo_50 = driverInfo[50];
				DriverInfo_51 = driverInfo[51];
				DriverInfo_52 = driverInfo[52];
				DriverInfo_53 = driverInfo[53];
				DriverInfo_54 = driverInfo[54];
				DriverInfo_55 = driverInfo[55];
				DriverInfo_56 = driverInfo[56];
				DriverInfo_57 = driverInfo[57];
				DriverInfo_58 = driverInfo[58];
				DriverInfo_59 = driverInfo[59];
				DriverInfo_60 = driverInfo[60];
				DriverInfo_61 = driverInfo[61];
				DriverInfo_62 = driverInfo[62];
				DriverInfo_63 = driverInfo[63];
				DriverInfo_64 = driverInfo[64];
				DriverInfo_65 = driverInfo[65];
				DriverInfo_66 = driverInfo[66];
				DriverInfo_67 = driverInfo[67];
				DriverInfo_68 = driverInfo[68];
				DriverInfo_69 = driverInfo[69];
				DriverInfo_70 = driverInfo[70];
				DriverInfo_71 = driverInfo[71];
				DriverInfo_72 = driverInfo[72];
				DriverInfo_73 = driverInfo[73];
				DriverInfo_74 = driverInfo[74];
				DriverInfo_75 = driverInfo[75];
				DriverInfo_76 = driverInfo[76];
				DriverInfo_77 = driverInfo[77];
				DriverInfo_78 = driverInfo[78];
				DriverInfo_79 = driverInfo[79];
				DriverInfo_80 = driverInfo[80];
				DriverInfo_81 = driverInfo[81];
				DriverInfo_82 = driverInfo[82];
				DriverInfo_83 = driverInfo[83];
				DriverInfo_84 = driverInfo[84];
				DriverInfo_85 = driverInfo[85];
				DriverInfo_86 = driverInfo[86];
				DriverInfo_87 = driverInfo[87];
				DriverInfo_88 = driverInfo[88];
				DriverInfo_89 = driverInfo[89];
				DriverInfo_90 = driverInfo[90];
				DriverInfo_91 = driverInfo[91];
				DriverInfo_92 = driverInfo[92];
				DriverInfo_93 = driverInfo[93];
				DriverInfo_94 = driverInfo[94];
				DriverInfo_95 = driverInfo[95];
				DriverInfo_96 = driverInfo[96];
				DriverInfo_97 = driverInfo[97];
				DriverInfo_98 = driverInfo[98];
				DriverInfo_99 = driverInfo[99];
				DriverInfo_100 = driverInfo[100];
				DriverInfo_101 = driverInfo[101];
				DriverInfo_102 = driverInfo[102];
				DriverInfo_103 = driverInfo[103];
				DriverInfo_104 = driverInfo[104];
				DriverInfo_105 = driverInfo[105];
				DriverInfo_106 = driverInfo[106];
				DriverInfo_107 = driverInfo[107];
				DriverInfo_108 = driverInfo[108];
				DriverInfo_109 = driverInfo[109];
				DriverInfo_110 = driverInfo[110];
				DriverInfo_111 = driverInfo[111];
				DriverInfo_112 = driverInfo[112];
				DriverInfo_113 = driverInfo[113];
				DriverInfo_114 = driverInfo[114];
				DriverInfo_115 = driverInfo[115];
				DriverInfo_116 = driverInfo[116];
				DriverInfo_117 = driverInfo[117];
				DriverInfo_118 = driverInfo[118];
				DriverInfo_119 = driverInfo[119];
				DriverInfo_120 = driverInfo[120];
				DriverInfo_121 = driverInfo[121];
				DriverInfo_122 = driverInfo[122];
				DriverInfo_123 = driverInfo[123];
				DriverInfo_124 = driverInfo[124];
				DriverInfo_125 = driverInfo[125];
				DriverInfo_126 = driverInfo[126];
				DriverInfo_127 = driverInfo[127];
				DriverInfo_128 = driverInfo[128];
				DriverInfo_129 = driverInfo[129];
				DriverInfo_130 = driverInfo[130];
				DriverInfo_131 = driverInfo[131];
				DriverInfo_132 = driverInfo[132];
				DriverInfo_133 = driverInfo[133];
				DriverInfo_134 = driverInfo[134];
				DriverInfo_135 = driverInfo[135];
				DriverInfo_136 = driverInfo[136];
				DriverInfo_137 = driverInfo[137];
				DriverInfo_138 = driverInfo[138];
				DriverInfo_139 = driverInfo[139];
				DriverInfo_140 = driverInfo[140];
				DriverInfo_141 = driverInfo[141];
				DriverInfo_142 = driverInfo[142];
				DriverInfo_143 = driverInfo[143];
				DriverInfo_144 = driverInfo[144];
				DriverInfo_145 = driverInfo[145];
				DriverInfo_146 = driverInfo[146];
				DriverInfo_147 = driverInfo[147];
				DriverInfo_148 = driverInfo[148];
				DriverInfo_149 = driverInfo[149];
				DriverInfo_150 = driverInfo[150];
				DriverInfo_151 = driverInfo[151];
				DriverInfo_152 = driverInfo[152];
				DriverInfo_153 = driverInfo[153];
				DriverInfo_154 = driverInfo[154];
				DriverInfo_155 = driverInfo[155];
				DriverInfo_156 = driverInfo[156];
				DriverInfo_157 = driverInfo[157];
				DriverInfo_158 = driverInfo[158];
				DriverInfo_159 = driverInfo[159];
				DriverInfo_160 = driverInfo[160];
				DriverInfo_161 = driverInfo[161];
				DriverInfo_162 = driverInfo[162];
				DriverInfo_163 = driverInfo[163];
				DriverInfo_164 = driverInfo[164];
				DriverInfo_165 = driverInfo[165];
				DriverInfo_166 = driverInfo[166];
				DriverInfo_167 = driverInfo[167];
				DriverInfo_168 = driverInfo[168];
				DriverInfo_169 = driverInfo[169];
				DriverInfo_170 = driverInfo[170];
				DriverInfo_171 = driverInfo[171];
				DriverInfo_172 = driverInfo[172];
				DriverInfo_173 = driverInfo[173];
				DriverInfo_174 = driverInfo[174];
				DriverInfo_175 = driverInfo[175];
				DriverInfo_176 = driverInfo[176];
				DriverInfo_177 = driverInfo[177];
				DriverInfo_178 = driverInfo[178];
				DriverInfo_179 = driverInfo[179];
				DriverInfo_180 = driverInfo[180];
				DriverInfo_181 = driverInfo[181];
				DriverInfo_182 = driverInfo[182];
				DriverInfo_183 = driverInfo[183];
				DriverInfo_184 = driverInfo[184];
				DriverInfo_185 = driverInfo[185];
				DriverInfo_186 = driverInfo[186];
				DriverInfo_187 = driverInfo[187];
				DriverInfo_188 = driverInfo[188];
				DriverInfo_189 = driverInfo[189];
				DriverInfo_190 = driverInfo[190];
				DriverInfo_191 = driverInfo[191];
				DriverInfo_192 = driverInfo[192];
				DriverInfo_193 = driverInfo[193];
				DriverInfo_194 = driverInfo[194];
				DriverInfo_195 = driverInfo[195];
				DriverInfo_196 = driverInfo[196];
				DriverInfo_197 = driverInfo[197];
				DriverInfo_198 = driverInfo[198];
				DriverInfo_199 = driverInfo[199];
				DriverInfo_200 = driverInfo[200];
				DriverInfo_201 = driverInfo[201];
				DriverInfo_202 = driverInfo[202];
				DriverInfo_203 = driverInfo[203];
				DriverInfo_204 = driverInfo[204];
				DriverInfo_205 = driverInfo[205];
				DriverInfo_206 = driverInfo[206];
				DriverInfo_207 = driverInfo[207];
				DriverInfo_208 = driverInfo[208];
				DriverInfo_209 = driverInfo[209];
				DriverInfo_210 = driverInfo[210];
				DriverInfo_211 = driverInfo[211];
				DriverInfo_212 = driverInfo[212];
				DriverInfo_213 = driverInfo[213];
				DriverInfo_214 = driverInfo[214];
				DriverInfo_215 = driverInfo[215];
				DriverInfo_216 = driverInfo[216];
				DriverInfo_217 = driverInfo[217];
				DriverInfo_218 = driverInfo[218];
				DriverInfo_219 = driverInfo[219];
				DriverInfo_220 = driverInfo[220];
				DriverInfo_221 = driverInfo[221];
				DriverInfo_222 = driverInfo[222];
				DriverInfo_223 = driverInfo[223];
				DriverInfo_224 = driverInfo[224];
				DriverInfo_225 = driverInfo[225];
				DriverInfo_226 = driverInfo[226];
				DriverInfo_227 = driverInfo[227];
				DriverInfo_228 = driverInfo[228];
				DriverInfo_229 = driverInfo[229];
				DriverInfo_230 = driverInfo[230];
				DriverInfo_231 = driverInfo[231];
				DriverInfo_232 = driverInfo[232];
				DriverInfo_233 = driverInfo[233];
				DriverInfo_234 = driverInfo[234];
				DriverInfo_235 = driverInfo[235];
				DriverInfo_236 = driverInfo[236];
				DriverInfo_237 = driverInfo[237];
				DriverInfo_238 = driverInfo[238];
				DriverInfo_239 = driverInfo[239];
				DriverInfo_240 = driverInfo[240];
				DriverInfo_241 = driverInfo[241];
				DriverInfo_242 = driverInfo[242];
				DriverInfo_243 = driverInfo[243];
				DriverInfo_244 = driverInfo[244];
				DriverInfo_245 = driverInfo[245];
				DriverInfo_246 = driverInfo[246];
				DriverInfo_247 = driverInfo[247];
				DriverInfo_248 = driverInfo[248];
				DriverInfo_249 = driverInfo[249];
				DriverInfo_250 = driverInfo[250];
				DriverInfo_251 = driverInfo[251];
				DriverInfo_252 = driverInfo[252];
				DriverInfo_253 = driverInfo[253];
				DriverInfo_254 = driverInfo[254];
				DriverInfo_255 = driverInfo[255];
			}
			ConformanceVersion = conformanceVersion;
			DenormBehaviorIndependence = denormBehaviorIndependence;
			RoundingModeIndependence = roundingModeIndependence;
			ShaderSignedZeroInfNanPreserveFloat16 = shaderSignedZeroInfNanPreserveFloat16;
			ShaderSignedZeroInfNanPreserveFloat32 = shaderSignedZeroInfNanPreserveFloat32;
			ShaderSignedZeroInfNanPreserveFloat64 = shaderSignedZeroInfNanPreserveFloat64;
			ShaderDenormPreserveFloat16 = shaderDenormPreserveFloat16;
			ShaderDenormPreserveFloat32 = shaderDenormPreserveFloat32;
			ShaderDenormPreserveFloat64 = shaderDenormPreserveFloat64;
			ShaderDenormFlushToZeroFloat16 = shaderDenormFlushToZeroFloat16;
			ShaderDenormFlushToZeroFloat32 = shaderDenormFlushToZeroFloat32;
			ShaderDenormFlushToZeroFloat64 = shaderDenormFlushToZeroFloat64;
			ShaderRoundingModeRTEFloat16 = shaderRoundingModeRTEFloat16;
			ShaderRoundingModeRTEFloat32 = shaderRoundingModeRTEFloat32;
			ShaderRoundingModeRTEFloat64 = shaderRoundingModeRTEFloat64;
			ShaderRoundingModeRTZFloat16 = shaderRoundingModeRTZFloat16;
			ShaderRoundingModeRTZFloat32 = shaderRoundingModeRTZFloat32;
			ShaderRoundingModeRTZFloat64 = shaderRoundingModeRTZFloat64;
			MaxUpdateAfterBindDescriptorsInAllPools = maxUpdateAfterBindDescriptorsInAllPools;
			ShaderUniformBufferArrayNonUniformIndexingNative = shaderUniformBufferArrayNonUniformIndexingNative;
			ShaderSampledImageArrayNonUniformIndexingNative = shaderSampledImageArrayNonUniformIndexingNative;
			ShaderStorageBufferArrayNonUniformIndexingNative = shaderStorageBufferArrayNonUniformIndexingNative;
			ShaderStorageImageArrayNonUniformIndexingNative = shaderStorageImageArrayNonUniformIndexingNative;
			ShaderInputAttachmentArrayNonUniformIndexingNative = shaderInputAttachmentArrayNonUniformIndexingNative;
			RobustBufferAccessUpdateAfterBind = robustBufferAccessUpdateAfterBind;
			QuadDivergentImplicitLod = quadDivergentImplicitLod;
			MaxPerStageDescriptorUpdateAfterBindSamplers = maxPerStageDescriptorUpdateAfterBindSamplers;
			MaxPerStageDescriptorUpdateAfterBindUniformBuffers = maxPerStageDescriptorUpdateAfterBindUniformBuffers;
			MaxPerStageDescriptorUpdateAfterBindStorageBuffers = maxPerStageDescriptorUpdateAfterBindStorageBuffers;
			MaxPerStageDescriptorUpdateAfterBindSampledImages = maxPerStageDescriptorUpdateAfterBindSampledImages;
			MaxPerStageDescriptorUpdateAfterBindStorageImages = maxPerStageDescriptorUpdateAfterBindStorageImages;
			MaxPerStageDescriptorUpdateAfterBindInputAttachments = maxPerStageDescriptorUpdateAfterBindInputAttachments;
			MaxPerStageUpdateAfterBindResources = maxPerStageUpdateAfterBindResources;
			MaxDescriptorSetUpdateAfterBindSamplers = maxDescriptorSetUpdateAfterBindSamplers;
			MaxDescriptorSetUpdateAfterBindUniformBuffers = maxDescriptorSetUpdateAfterBindUniformBuffers;
			MaxDescriptorSetUpdateAfterBindUniformBuffersDynamic = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
			MaxDescriptorSetUpdateAfterBindStorageBuffers = maxDescriptorSetUpdateAfterBindStorageBuffers;
			MaxDescriptorSetUpdateAfterBindStorageBuffersDynamic = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
			MaxDescriptorSetUpdateAfterBindSampledImages = maxDescriptorSetUpdateAfterBindSampledImages;
			MaxDescriptorSetUpdateAfterBindStorageImages = maxDescriptorSetUpdateAfterBindStorageImages;
			MaxDescriptorSetUpdateAfterBindInputAttachments = maxDescriptorSetUpdateAfterBindInputAttachments;
			SupportedDepthResolveModes = supportedDepthResolveModes;
			SupportedStencilResolveModes = supportedStencilResolveModes;
			IndependentResolveNone = independentResolveNone;
			IndependentResolve = independentResolve;
			FilterMinmaxSingleComponentFormats = filterMinmaxSingleComponentFormats;
			FilterMinmaxImageComponentMapping = filterMinmaxImageComponentMapping;
			MaxTimelineSemaphoreValueDifference = maxTimelineSemaphoreValueDifference;
			FramebufferIntegerColorSampleCounts = framebufferIntegerColorSampleCounts;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageFormatListCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageFormatListCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "viewFormatCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewFormatCount;
		[NativeName(NativeNameType.Field, "pViewFormats")]
		[NativeName(NativeNameType.Type, "const VkFormat*")]
		public unsafe VkFormat* PViewFormats;

		public unsafe VkImageFormatListCreateInfo(VkStructureType sType = default, void* pNext = default, uint viewFormatCount = default, VkFormat* pViewFormats = default)
		{
			SType = sType;
			PNext = pNext;
			ViewFormatCount = viewFormatCount;
			PViewFormats = pViewFormats;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAttachmentDescription2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAttachmentDescription2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkAttachmentDescriptionFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "format")]
		[NativeName(NativeNameType.Type, "VkFormat")]
		public VkFormat Format;
		[NativeName(NativeNameType.Field, "samples")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlagBits")]
		public VkSampleCountFlagBits Samples;
		[NativeName(NativeNameType.Field, "loadOp")]
		[NativeName(NativeNameType.Type, "VkAttachmentLoadOp")]
		public VkAttachmentLoadOp LoadOp;
		[NativeName(NativeNameType.Field, "storeOp")]
		[NativeName(NativeNameType.Type, "VkAttachmentStoreOp")]
		public VkAttachmentStoreOp StoreOp;
		[NativeName(NativeNameType.Field, "stencilLoadOp")]
		[NativeName(NativeNameType.Type, "VkAttachmentLoadOp")]
		public VkAttachmentLoadOp StencilLoadOp;
		[NativeName(NativeNameType.Field, "stencilStoreOp")]
		[NativeName(NativeNameType.Type, "VkAttachmentStoreOp")]
		public VkAttachmentStoreOp StencilStoreOp;
		[NativeName(NativeNameType.Field, "initialLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout InitialLayout;
		[NativeName(NativeNameType.Field, "finalLayout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout FinalLayout;

		public unsafe VkAttachmentDescription2(VkStructureType sType = default, void* pNext = default, uint flags = default, VkFormat format = default, VkSampleCountFlagBits samples = default, VkAttachmentLoadOp loadOp = default, VkAttachmentStoreOp storeOp = default, VkAttachmentLoadOp stencilLoadOp = default, VkAttachmentStoreOp stencilStoreOp = default, VkImageLayout initialLayout = default, VkImageLayout finalLayout = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			Format = format;
			Samples = samples;
			LoadOp = loadOp;
			StoreOp = storeOp;
			StencilLoadOp = stencilLoadOp;
			StencilStoreOp = stencilStoreOp;
			InitialLayout = initialLayout;
			FinalLayout = finalLayout;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAttachmentReference2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAttachmentReference2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "attachment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Attachment;
		[NativeName(NativeNameType.Field, "layout")]
		[NativeName(NativeNameType.Type, "VkImageLayout")]
		public VkImageLayout Layout;
		[NativeName(NativeNameType.Field, "aspectMask")]
		[NativeName(NativeNameType.Type, "VkImageAspectFlags")]
		public uint AspectMask;

		public unsafe VkAttachmentReference2(VkStructureType sType = default, void* pNext = default, uint attachment = default, VkImageLayout layout = default, uint aspectMask = default)
		{
			SType = sType;
			PNext = pNext;
			Attachment = attachment;
			Layout = layout;
			AspectMask = aspectMask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubpassDescription2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubpassDescription2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkSubpassDescriptionFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "pipelineBindPoint")]
		[NativeName(NativeNameType.Type, "VkPipelineBindPoint")]
		public VkPipelineBindPoint PipelineBindPoint;
		[NativeName(NativeNameType.Field, "viewMask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewMask;
		[NativeName(NativeNameType.Field, "inputAttachmentCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InputAttachmentCount;
		[NativeName(NativeNameType.Field, "pInputAttachments")]
		[NativeName(NativeNameType.Type, "const VkAttachmentReference2*")]
		public unsafe VkAttachmentReference2* PInputAttachments;
		[NativeName(NativeNameType.Field, "colorAttachmentCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ColorAttachmentCount;
		[NativeName(NativeNameType.Field, "pColorAttachments")]
		[NativeName(NativeNameType.Type, "const VkAttachmentReference2*")]
		public unsafe VkAttachmentReference2* PColorAttachments;
		[NativeName(NativeNameType.Field, "pResolveAttachments")]
		[NativeName(NativeNameType.Type, "const VkAttachmentReference2*")]
		public unsafe VkAttachmentReference2* PResolveAttachments;
		[NativeName(NativeNameType.Field, "pDepthStencilAttachment")]
		[NativeName(NativeNameType.Type, "const VkAttachmentReference2*")]
		public unsafe VkAttachmentReference2* PDepthStencilAttachment;
		[NativeName(NativeNameType.Field, "preserveAttachmentCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PreserveAttachmentCount;
		[NativeName(NativeNameType.Field, "pPreserveAttachments")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PPreserveAttachments;

		public unsafe VkSubpassDescription2(VkStructureType sType = default, void* pNext = default, uint flags = default, VkPipelineBindPoint pipelineBindPoint = default, uint viewMask = default, uint inputAttachmentCount = default, VkAttachmentReference2* pInputAttachments = default, uint colorAttachmentCount = default, VkAttachmentReference2* pColorAttachments = default, VkAttachmentReference2* pResolveAttachments = default, VkAttachmentReference2* pDepthStencilAttachment = default, uint preserveAttachmentCount = default, uint* pPreserveAttachments = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			PipelineBindPoint = pipelineBindPoint;
			ViewMask = viewMask;
			InputAttachmentCount = inputAttachmentCount;
			PInputAttachments = pInputAttachments;
			ColorAttachmentCount = colorAttachmentCount;
			PColorAttachments = pColorAttachments;
			PResolveAttachments = pResolveAttachments;
			PDepthStencilAttachment = pDepthStencilAttachment;
			PreserveAttachmentCount = preserveAttachmentCount;
			PPreserveAttachments = pPreserveAttachments;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubpassDependency2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubpassDependency2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcSubpass")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SrcSubpass;
		[NativeName(NativeNameType.Field, "dstSubpass")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DstSubpass;
		[NativeName(NativeNameType.Field, "srcStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags")]
		public uint SrcStageMask;
		[NativeName(NativeNameType.Field, "dstStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags")]
		public uint DstStageMask;
		[NativeName(NativeNameType.Field, "srcAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags")]
		public uint SrcAccessMask;
		[NativeName(NativeNameType.Field, "dstAccessMask")]
		[NativeName(NativeNameType.Type, "VkAccessFlags")]
		public uint DstAccessMask;
		[NativeName(NativeNameType.Field, "dependencyFlags")]
		[NativeName(NativeNameType.Type, "VkDependencyFlags")]
		public uint DependencyFlags;
		[NativeName(NativeNameType.Field, "viewOffset")]
		[NativeName(NativeNameType.Type, "int32_t")]
		public int ViewOffset;

		public unsafe VkSubpassDependency2(VkStructureType sType = default, void* pNext = default, uint srcSubpass = default, uint dstSubpass = default, uint srcStageMask = default, uint dstStageMask = default, uint srcAccessMask = default, uint dstAccessMask = default, uint dependencyFlags = default, int viewOffset = default)
		{
			SType = sType;
			PNext = pNext;
			SrcSubpass = srcSubpass;
			DstSubpass = dstSubpass;
			SrcStageMask = srcStageMask;
			DstStageMask = dstStageMask;
			SrcAccessMask = srcAccessMask;
			DstAccessMask = dstAccessMask;
			DependencyFlags = dependencyFlags;
			ViewOffset = viewOffset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRenderPassCreateInfo2")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRenderPassCreateInfo2
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkRenderPassCreateFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "attachmentCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AttachmentCount;
		[NativeName(NativeNameType.Field, "pAttachments")]
		[NativeName(NativeNameType.Type, "const VkAttachmentDescription2*")]
		public unsafe VkAttachmentDescription2* PAttachments;
		[NativeName(NativeNameType.Field, "subpassCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SubpassCount;
		[NativeName(NativeNameType.Field, "pSubpasses")]
		[NativeName(NativeNameType.Type, "const VkSubpassDescription2*")]
		public unsafe VkSubpassDescription2* PSubpasses;
		[NativeName(NativeNameType.Field, "dependencyCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DependencyCount;
		[NativeName(NativeNameType.Field, "pDependencies")]
		[NativeName(NativeNameType.Type, "const VkSubpassDependency2*")]
		public unsafe VkSubpassDependency2* PDependencies;
		[NativeName(NativeNameType.Field, "correlatedViewMaskCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CorrelatedViewMaskCount;
		[NativeName(NativeNameType.Field, "pCorrelatedViewMasks")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PCorrelatedViewMasks;

		public unsafe VkRenderPassCreateInfo2(VkStructureType sType = default, void* pNext = default, uint flags = default, uint attachmentCount = default, VkAttachmentDescription2* pAttachments = default, uint subpassCount = default, VkSubpassDescription2* pSubpasses = default, uint dependencyCount = default, VkSubpassDependency2* pDependencies = default, uint correlatedViewMaskCount = default, uint* pCorrelatedViewMasks = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			AttachmentCount = attachmentCount;
			PAttachments = pAttachments;
			SubpassCount = subpassCount;
			PSubpasses = pSubpasses;
			DependencyCount = dependencyCount;
			PDependencies = pDependencies;
			CorrelatedViewMaskCount = correlatedViewMaskCount;
			PCorrelatedViewMasks = pCorrelatedViewMasks;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubpassBeginInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubpassBeginInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "contents")]
		[NativeName(NativeNameType.Type, "VkSubpassContents")]
		public VkSubpassContents Contents;

		public unsafe VkSubpassBeginInfo(VkStructureType sType = default, void* pNext = default, VkSubpassContents contents = default)
		{
			SType = sType;
			PNext = pNext;
			Contents = contents;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubpassEndInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubpassEndInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;

		public unsafe VkSubpassEndInfo(VkStructureType sType = default, void* pNext = default)
		{
			SType = sType;
			PNext = pNext;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevice8BitStorageFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevice8BitStorageFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "storageBuffer8BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StorageBuffer8BitAccess;
		[NativeName(NativeNameType.Field, "uniformAndStorageBuffer8BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint UniformAndStorageBuffer8BitAccess;
		[NativeName(NativeNameType.Field, "storagePushConstant8")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StoragePushConstant8;

		public unsafe VkPhysicalDevice8BitStorageFeatures(VkStructureType sType = default, void* pNext = default, uint storageBuffer8BitAccess = default, uint uniformAndStorageBuffer8BitAccess = default, uint storagePushConstant8 = default)
		{
			SType = sType;
			PNext = pNext;
			StorageBuffer8BitAccess = storageBuffer8BitAccess;
			UniformAndStorageBuffer8BitAccess = uniformAndStorageBuffer8BitAccess;
			StoragePushConstant8 = storagePushConstant8;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDriverProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDriverProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "driverID")]
		[NativeName(NativeNameType.Type, "VkDriverId")]
		public VkDriverId DriverID;
		[NativeName(NativeNameType.Field, "driverName")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte DriverName_0;
		public byte DriverName_1;
		public byte DriverName_2;
		public byte DriverName_3;
		public byte DriverName_4;
		public byte DriverName_5;
		public byte DriverName_6;
		public byte DriverName_7;
		public byte DriverName_8;
		public byte DriverName_9;
		public byte DriverName_10;
		public byte DriverName_11;
		public byte DriverName_12;
		public byte DriverName_13;
		public byte DriverName_14;
		public byte DriverName_15;
		public byte DriverName_16;
		public byte DriverName_17;
		public byte DriverName_18;
		public byte DriverName_19;
		public byte DriverName_20;
		public byte DriverName_21;
		public byte DriverName_22;
		public byte DriverName_23;
		public byte DriverName_24;
		public byte DriverName_25;
		public byte DriverName_26;
		public byte DriverName_27;
		public byte DriverName_28;
		public byte DriverName_29;
		public byte DriverName_30;
		public byte DriverName_31;
		public byte DriverName_32;
		public byte DriverName_33;
		public byte DriverName_34;
		public byte DriverName_35;
		public byte DriverName_36;
		public byte DriverName_37;
		public byte DriverName_38;
		public byte DriverName_39;
		public byte DriverName_40;
		public byte DriverName_41;
		public byte DriverName_42;
		public byte DriverName_43;
		public byte DriverName_44;
		public byte DriverName_45;
		public byte DriverName_46;
		public byte DriverName_47;
		public byte DriverName_48;
		public byte DriverName_49;
		public byte DriverName_50;
		public byte DriverName_51;
		public byte DriverName_52;
		public byte DriverName_53;
		public byte DriverName_54;
		public byte DriverName_55;
		public byte DriverName_56;
		public byte DriverName_57;
		public byte DriverName_58;
		public byte DriverName_59;
		public byte DriverName_60;
		public byte DriverName_61;
		public byte DriverName_62;
		public byte DriverName_63;
		public byte DriverName_64;
		public byte DriverName_65;
		public byte DriverName_66;
		public byte DriverName_67;
		public byte DriverName_68;
		public byte DriverName_69;
		public byte DriverName_70;
		public byte DriverName_71;
		public byte DriverName_72;
		public byte DriverName_73;
		public byte DriverName_74;
		public byte DriverName_75;
		public byte DriverName_76;
		public byte DriverName_77;
		public byte DriverName_78;
		public byte DriverName_79;
		public byte DriverName_80;
		public byte DriverName_81;
		public byte DriverName_82;
		public byte DriverName_83;
		public byte DriverName_84;
		public byte DriverName_85;
		public byte DriverName_86;
		public byte DriverName_87;
		public byte DriverName_88;
		public byte DriverName_89;
		public byte DriverName_90;
		public byte DriverName_91;
		public byte DriverName_92;
		public byte DriverName_93;
		public byte DriverName_94;
		public byte DriverName_95;
		public byte DriverName_96;
		public byte DriverName_97;
		public byte DriverName_98;
		public byte DriverName_99;
		public byte DriverName_100;
		public byte DriverName_101;
		public byte DriverName_102;
		public byte DriverName_103;
		public byte DriverName_104;
		public byte DriverName_105;
		public byte DriverName_106;
		public byte DriverName_107;
		public byte DriverName_108;
		public byte DriverName_109;
		public byte DriverName_110;
		public byte DriverName_111;
		public byte DriverName_112;
		public byte DriverName_113;
		public byte DriverName_114;
		public byte DriverName_115;
		public byte DriverName_116;
		public byte DriverName_117;
		public byte DriverName_118;
		public byte DriverName_119;
		public byte DriverName_120;
		public byte DriverName_121;
		public byte DriverName_122;
		public byte DriverName_123;
		public byte DriverName_124;
		public byte DriverName_125;
		public byte DriverName_126;
		public byte DriverName_127;
		public byte DriverName_128;
		public byte DriverName_129;
		public byte DriverName_130;
		public byte DriverName_131;
		public byte DriverName_132;
		public byte DriverName_133;
		public byte DriverName_134;
		public byte DriverName_135;
		public byte DriverName_136;
		public byte DriverName_137;
		public byte DriverName_138;
		public byte DriverName_139;
		public byte DriverName_140;
		public byte DriverName_141;
		public byte DriverName_142;
		public byte DriverName_143;
		public byte DriverName_144;
		public byte DriverName_145;
		public byte DriverName_146;
		public byte DriverName_147;
		public byte DriverName_148;
		public byte DriverName_149;
		public byte DriverName_150;
		public byte DriverName_151;
		public byte DriverName_152;
		public byte DriverName_153;
		public byte DriverName_154;
		public byte DriverName_155;
		public byte DriverName_156;
		public byte DriverName_157;
		public byte DriverName_158;
		public byte DriverName_159;
		public byte DriverName_160;
		public byte DriverName_161;
		public byte DriverName_162;
		public byte DriverName_163;
		public byte DriverName_164;
		public byte DriverName_165;
		public byte DriverName_166;
		public byte DriverName_167;
		public byte DriverName_168;
		public byte DriverName_169;
		public byte DriverName_170;
		public byte DriverName_171;
		public byte DriverName_172;
		public byte DriverName_173;
		public byte DriverName_174;
		public byte DriverName_175;
		public byte DriverName_176;
		public byte DriverName_177;
		public byte DriverName_178;
		public byte DriverName_179;
		public byte DriverName_180;
		public byte DriverName_181;
		public byte DriverName_182;
		public byte DriverName_183;
		public byte DriverName_184;
		public byte DriverName_185;
		public byte DriverName_186;
		public byte DriverName_187;
		public byte DriverName_188;
		public byte DriverName_189;
		public byte DriverName_190;
		public byte DriverName_191;
		public byte DriverName_192;
		public byte DriverName_193;
		public byte DriverName_194;
		public byte DriverName_195;
		public byte DriverName_196;
		public byte DriverName_197;
		public byte DriverName_198;
		public byte DriverName_199;
		public byte DriverName_200;
		public byte DriverName_201;
		public byte DriverName_202;
		public byte DriverName_203;
		public byte DriverName_204;
		public byte DriverName_205;
		public byte DriverName_206;
		public byte DriverName_207;
		public byte DriverName_208;
		public byte DriverName_209;
		public byte DriverName_210;
		public byte DriverName_211;
		public byte DriverName_212;
		public byte DriverName_213;
		public byte DriverName_214;
		public byte DriverName_215;
		public byte DriverName_216;
		public byte DriverName_217;
		public byte DriverName_218;
		public byte DriverName_219;
		public byte DriverName_220;
		public byte DriverName_221;
		public byte DriverName_222;
		public byte DriverName_223;
		public byte DriverName_224;
		public byte DriverName_225;
		public byte DriverName_226;
		public byte DriverName_227;
		public byte DriverName_228;
		public byte DriverName_229;
		public byte DriverName_230;
		public byte DriverName_231;
		public byte DriverName_232;
		public byte DriverName_233;
		public byte DriverName_234;
		public byte DriverName_235;
		public byte DriverName_236;
		public byte DriverName_237;
		public byte DriverName_238;
		public byte DriverName_239;
		public byte DriverName_240;
		public byte DriverName_241;
		public byte DriverName_242;
		public byte DriverName_243;
		public byte DriverName_244;
		public byte DriverName_245;
		public byte DriverName_246;
		public byte DriverName_247;
		public byte DriverName_248;
		public byte DriverName_249;
		public byte DriverName_250;
		public byte DriverName_251;
		public byte DriverName_252;
		public byte DriverName_253;
		public byte DriverName_254;
		public byte DriverName_255;
		[NativeName(NativeNameType.Field, "driverInfo")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte DriverInfo_0;
		public byte DriverInfo_1;
		public byte DriverInfo_2;
		public byte DriverInfo_3;
		public byte DriverInfo_4;
		public byte DriverInfo_5;
		public byte DriverInfo_6;
		public byte DriverInfo_7;
		public byte DriverInfo_8;
		public byte DriverInfo_9;
		public byte DriverInfo_10;
		public byte DriverInfo_11;
		public byte DriverInfo_12;
		public byte DriverInfo_13;
		public byte DriverInfo_14;
		public byte DriverInfo_15;
		public byte DriverInfo_16;
		public byte DriverInfo_17;
		public byte DriverInfo_18;
		public byte DriverInfo_19;
		public byte DriverInfo_20;
		public byte DriverInfo_21;
		public byte DriverInfo_22;
		public byte DriverInfo_23;
		public byte DriverInfo_24;
		public byte DriverInfo_25;
		public byte DriverInfo_26;
		public byte DriverInfo_27;
		public byte DriverInfo_28;
		public byte DriverInfo_29;
		public byte DriverInfo_30;
		public byte DriverInfo_31;
		public byte DriverInfo_32;
		public byte DriverInfo_33;
		public byte DriverInfo_34;
		public byte DriverInfo_35;
		public byte DriverInfo_36;
		public byte DriverInfo_37;
		public byte DriverInfo_38;
		public byte DriverInfo_39;
		public byte DriverInfo_40;
		public byte DriverInfo_41;
		public byte DriverInfo_42;
		public byte DriverInfo_43;
		public byte DriverInfo_44;
		public byte DriverInfo_45;
		public byte DriverInfo_46;
		public byte DriverInfo_47;
		public byte DriverInfo_48;
		public byte DriverInfo_49;
		public byte DriverInfo_50;
		public byte DriverInfo_51;
		public byte DriverInfo_52;
		public byte DriverInfo_53;
		public byte DriverInfo_54;
		public byte DriverInfo_55;
		public byte DriverInfo_56;
		public byte DriverInfo_57;
		public byte DriverInfo_58;
		public byte DriverInfo_59;
		public byte DriverInfo_60;
		public byte DriverInfo_61;
		public byte DriverInfo_62;
		public byte DriverInfo_63;
		public byte DriverInfo_64;
		public byte DriverInfo_65;
		public byte DriverInfo_66;
		public byte DriverInfo_67;
		public byte DriverInfo_68;
		public byte DriverInfo_69;
		public byte DriverInfo_70;
		public byte DriverInfo_71;
		public byte DriverInfo_72;
		public byte DriverInfo_73;
		public byte DriverInfo_74;
		public byte DriverInfo_75;
		public byte DriverInfo_76;
		public byte DriverInfo_77;
		public byte DriverInfo_78;
		public byte DriverInfo_79;
		public byte DriverInfo_80;
		public byte DriverInfo_81;
		public byte DriverInfo_82;
		public byte DriverInfo_83;
		public byte DriverInfo_84;
		public byte DriverInfo_85;
		public byte DriverInfo_86;
		public byte DriverInfo_87;
		public byte DriverInfo_88;
		public byte DriverInfo_89;
		public byte DriverInfo_90;
		public byte DriverInfo_91;
		public byte DriverInfo_92;
		public byte DriverInfo_93;
		public byte DriverInfo_94;
		public byte DriverInfo_95;
		public byte DriverInfo_96;
		public byte DriverInfo_97;
		public byte DriverInfo_98;
		public byte DriverInfo_99;
		public byte DriverInfo_100;
		public byte DriverInfo_101;
		public byte DriverInfo_102;
		public byte DriverInfo_103;
		public byte DriverInfo_104;
		public byte DriverInfo_105;
		public byte DriverInfo_106;
		public byte DriverInfo_107;
		public byte DriverInfo_108;
		public byte DriverInfo_109;
		public byte DriverInfo_110;
		public byte DriverInfo_111;
		public byte DriverInfo_112;
		public byte DriverInfo_113;
		public byte DriverInfo_114;
		public byte DriverInfo_115;
		public byte DriverInfo_116;
		public byte DriverInfo_117;
		public byte DriverInfo_118;
		public byte DriverInfo_119;
		public byte DriverInfo_120;
		public byte DriverInfo_121;
		public byte DriverInfo_122;
		public byte DriverInfo_123;
		public byte DriverInfo_124;
		public byte DriverInfo_125;
		public byte DriverInfo_126;
		public byte DriverInfo_127;
		public byte DriverInfo_128;
		public byte DriverInfo_129;
		public byte DriverInfo_130;
		public byte DriverInfo_131;
		public byte DriverInfo_132;
		public byte DriverInfo_133;
		public byte DriverInfo_134;
		public byte DriverInfo_135;
		public byte DriverInfo_136;
		public byte DriverInfo_137;
		public byte DriverInfo_138;
		public byte DriverInfo_139;
		public byte DriverInfo_140;
		public byte DriverInfo_141;
		public byte DriverInfo_142;
		public byte DriverInfo_143;
		public byte DriverInfo_144;
		public byte DriverInfo_145;
		public byte DriverInfo_146;
		public byte DriverInfo_147;
		public byte DriverInfo_148;
		public byte DriverInfo_149;
		public byte DriverInfo_150;
		public byte DriverInfo_151;
		public byte DriverInfo_152;
		public byte DriverInfo_153;
		public byte DriverInfo_154;
		public byte DriverInfo_155;
		public byte DriverInfo_156;
		public byte DriverInfo_157;
		public byte DriverInfo_158;
		public byte DriverInfo_159;
		public byte DriverInfo_160;
		public byte DriverInfo_161;
		public byte DriverInfo_162;
		public byte DriverInfo_163;
		public byte DriverInfo_164;
		public byte DriverInfo_165;
		public byte DriverInfo_166;
		public byte DriverInfo_167;
		public byte DriverInfo_168;
		public byte DriverInfo_169;
		public byte DriverInfo_170;
		public byte DriverInfo_171;
		public byte DriverInfo_172;
		public byte DriverInfo_173;
		public byte DriverInfo_174;
		public byte DriverInfo_175;
		public byte DriverInfo_176;
		public byte DriverInfo_177;
		public byte DriverInfo_178;
		public byte DriverInfo_179;
		public byte DriverInfo_180;
		public byte DriverInfo_181;
		public byte DriverInfo_182;
		public byte DriverInfo_183;
		public byte DriverInfo_184;
		public byte DriverInfo_185;
		public byte DriverInfo_186;
		public byte DriverInfo_187;
		public byte DriverInfo_188;
		public byte DriverInfo_189;
		public byte DriverInfo_190;
		public byte DriverInfo_191;
		public byte DriverInfo_192;
		public byte DriverInfo_193;
		public byte DriverInfo_194;
		public byte DriverInfo_195;
		public byte DriverInfo_196;
		public byte DriverInfo_197;
		public byte DriverInfo_198;
		public byte DriverInfo_199;
		public byte DriverInfo_200;
		public byte DriverInfo_201;
		public byte DriverInfo_202;
		public byte DriverInfo_203;
		public byte DriverInfo_204;
		public byte DriverInfo_205;
		public byte DriverInfo_206;
		public byte DriverInfo_207;
		public byte DriverInfo_208;
		public byte DriverInfo_209;
		public byte DriverInfo_210;
		public byte DriverInfo_211;
		public byte DriverInfo_212;
		public byte DriverInfo_213;
		public byte DriverInfo_214;
		public byte DriverInfo_215;
		public byte DriverInfo_216;
		public byte DriverInfo_217;
		public byte DriverInfo_218;
		public byte DriverInfo_219;
		public byte DriverInfo_220;
		public byte DriverInfo_221;
		public byte DriverInfo_222;
		public byte DriverInfo_223;
		public byte DriverInfo_224;
		public byte DriverInfo_225;
		public byte DriverInfo_226;
		public byte DriverInfo_227;
		public byte DriverInfo_228;
		public byte DriverInfo_229;
		public byte DriverInfo_230;
		public byte DriverInfo_231;
		public byte DriverInfo_232;
		public byte DriverInfo_233;
		public byte DriverInfo_234;
		public byte DriverInfo_235;
		public byte DriverInfo_236;
		public byte DriverInfo_237;
		public byte DriverInfo_238;
		public byte DriverInfo_239;
		public byte DriverInfo_240;
		public byte DriverInfo_241;
		public byte DriverInfo_242;
		public byte DriverInfo_243;
		public byte DriverInfo_244;
		public byte DriverInfo_245;
		public byte DriverInfo_246;
		public byte DriverInfo_247;
		public byte DriverInfo_248;
		public byte DriverInfo_249;
		public byte DriverInfo_250;
		public byte DriverInfo_251;
		public byte DriverInfo_252;
		public byte DriverInfo_253;
		public byte DriverInfo_254;
		public byte DriverInfo_255;
		[NativeName(NativeNameType.Field, "conformanceVersion")]
		[NativeName(NativeNameType.Type, "VkConformanceVersion")]
		public VkConformanceVersion ConformanceVersion;

		public unsafe VkPhysicalDeviceDriverProperties(VkStructureType sType = default, void* pNext = default, VkDriverId driverID = default, byte* driverName = default, byte* driverInfo = default, VkConformanceVersion conformanceVersion = default)
		{
			SType = sType;
			PNext = pNext;
			DriverID = driverID;
			if (driverName != default)
			{
				DriverName_0 = driverName[0];
				DriverName_1 = driverName[1];
				DriverName_2 = driverName[2];
				DriverName_3 = driverName[3];
				DriverName_4 = driverName[4];
				DriverName_5 = driverName[5];
				DriverName_6 = driverName[6];
				DriverName_7 = driverName[7];
				DriverName_8 = driverName[8];
				DriverName_9 = driverName[9];
				DriverName_10 = driverName[10];
				DriverName_11 = driverName[11];
				DriverName_12 = driverName[12];
				DriverName_13 = driverName[13];
				DriverName_14 = driverName[14];
				DriverName_15 = driverName[15];
				DriverName_16 = driverName[16];
				DriverName_17 = driverName[17];
				DriverName_18 = driverName[18];
				DriverName_19 = driverName[19];
				DriverName_20 = driverName[20];
				DriverName_21 = driverName[21];
				DriverName_22 = driverName[22];
				DriverName_23 = driverName[23];
				DriverName_24 = driverName[24];
				DriverName_25 = driverName[25];
				DriverName_26 = driverName[26];
				DriverName_27 = driverName[27];
				DriverName_28 = driverName[28];
				DriverName_29 = driverName[29];
				DriverName_30 = driverName[30];
				DriverName_31 = driverName[31];
				DriverName_32 = driverName[32];
				DriverName_33 = driverName[33];
				DriverName_34 = driverName[34];
				DriverName_35 = driverName[35];
				DriverName_36 = driverName[36];
				DriverName_37 = driverName[37];
				DriverName_38 = driverName[38];
				DriverName_39 = driverName[39];
				DriverName_40 = driverName[40];
				DriverName_41 = driverName[41];
				DriverName_42 = driverName[42];
				DriverName_43 = driverName[43];
				DriverName_44 = driverName[44];
				DriverName_45 = driverName[45];
				DriverName_46 = driverName[46];
				DriverName_47 = driverName[47];
				DriverName_48 = driverName[48];
				DriverName_49 = driverName[49];
				DriverName_50 = driverName[50];
				DriverName_51 = driverName[51];
				DriverName_52 = driverName[52];
				DriverName_53 = driverName[53];
				DriverName_54 = driverName[54];
				DriverName_55 = driverName[55];
				DriverName_56 = driverName[56];
				DriverName_57 = driverName[57];
				DriverName_58 = driverName[58];
				DriverName_59 = driverName[59];
				DriverName_60 = driverName[60];
				DriverName_61 = driverName[61];
				DriverName_62 = driverName[62];
				DriverName_63 = driverName[63];
				DriverName_64 = driverName[64];
				DriverName_65 = driverName[65];
				DriverName_66 = driverName[66];
				DriverName_67 = driverName[67];
				DriverName_68 = driverName[68];
				DriverName_69 = driverName[69];
				DriverName_70 = driverName[70];
				DriverName_71 = driverName[71];
				DriverName_72 = driverName[72];
				DriverName_73 = driverName[73];
				DriverName_74 = driverName[74];
				DriverName_75 = driverName[75];
				DriverName_76 = driverName[76];
				DriverName_77 = driverName[77];
				DriverName_78 = driverName[78];
				DriverName_79 = driverName[79];
				DriverName_80 = driverName[80];
				DriverName_81 = driverName[81];
				DriverName_82 = driverName[82];
				DriverName_83 = driverName[83];
				DriverName_84 = driverName[84];
				DriverName_85 = driverName[85];
				DriverName_86 = driverName[86];
				DriverName_87 = driverName[87];
				DriverName_88 = driverName[88];
				DriverName_89 = driverName[89];
				DriverName_90 = driverName[90];
				DriverName_91 = driverName[91];
				DriverName_92 = driverName[92];
				DriverName_93 = driverName[93];
				DriverName_94 = driverName[94];
				DriverName_95 = driverName[95];
				DriverName_96 = driverName[96];
				DriverName_97 = driverName[97];
				DriverName_98 = driverName[98];
				DriverName_99 = driverName[99];
				DriverName_100 = driverName[100];
				DriverName_101 = driverName[101];
				DriverName_102 = driverName[102];
				DriverName_103 = driverName[103];
				DriverName_104 = driverName[104];
				DriverName_105 = driverName[105];
				DriverName_106 = driverName[106];
				DriverName_107 = driverName[107];
				DriverName_108 = driverName[108];
				DriverName_109 = driverName[109];
				DriverName_110 = driverName[110];
				DriverName_111 = driverName[111];
				DriverName_112 = driverName[112];
				DriverName_113 = driverName[113];
				DriverName_114 = driverName[114];
				DriverName_115 = driverName[115];
				DriverName_116 = driverName[116];
				DriverName_117 = driverName[117];
				DriverName_118 = driverName[118];
				DriverName_119 = driverName[119];
				DriverName_120 = driverName[120];
				DriverName_121 = driverName[121];
				DriverName_122 = driverName[122];
				DriverName_123 = driverName[123];
				DriverName_124 = driverName[124];
				DriverName_125 = driverName[125];
				DriverName_126 = driverName[126];
				DriverName_127 = driverName[127];
				DriverName_128 = driverName[128];
				DriverName_129 = driverName[129];
				DriverName_130 = driverName[130];
				DriverName_131 = driverName[131];
				DriverName_132 = driverName[132];
				DriverName_133 = driverName[133];
				DriverName_134 = driverName[134];
				DriverName_135 = driverName[135];
				DriverName_136 = driverName[136];
				DriverName_137 = driverName[137];
				DriverName_138 = driverName[138];
				DriverName_139 = driverName[139];
				DriverName_140 = driverName[140];
				DriverName_141 = driverName[141];
				DriverName_142 = driverName[142];
				DriverName_143 = driverName[143];
				DriverName_144 = driverName[144];
				DriverName_145 = driverName[145];
				DriverName_146 = driverName[146];
				DriverName_147 = driverName[147];
				DriverName_148 = driverName[148];
				DriverName_149 = driverName[149];
				DriverName_150 = driverName[150];
				DriverName_151 = driverName[151];
				DriverName_152 = driverName[152];
				DriverName_153 = driverName[153];
				DriverName_154 = driverName[154];
				DriverName_155 = driverName[155];
				DriverName_156 = driverName[156];
				DriverName_157 = driverName[157];
				DriverName_158 = driverName[158];
				DriverName_159 = driverName[159];
				DriverName_160 = driverName[160];
				DriverName_161 = driverName[161];
				DriverName_162 = driverName[162];
				DriverName_163 = driverName[163];
				DriverName_164 = driverName[164];
				DriverName_165 = driverName[165];
				DriverName_166 = driverName[166];
				DriverName_167 = driverName[167];
				DriverName_168 = driverName[168];
				DriverName_169 = driverName[169];
				DriverName_170 = driverName[170];
				DriverName_171 = driverName[171];
				DriverName_172 = driverName[172];
				DriverName_173 = driverName[173];
				DriverName_174 = driverName[174];
				DriverName_175 = driverName[175];
				DriverName_176 = driverName[176];
				DriverName_177 = driverName[177];
				DriverName_178 = driverName[178];
				DriverName_179 = driverName[179];
				DriverName_180 = driverName[180];
				DriverName_181 = driverName[181];
				DriverName_182 = driverName[182];
				DriverName_183 = driverName[183];
				DriverName_184 = driverName[184];
				DriverName_185 = driverName[185];
				DriverName_186 = driverName[186];
				DriverName_187 = driverName[187];
				DriverName_188 = driverName[188];
				DriverName_189 = driverName[189];
				DriverName_190 = driverName[190];
				DriverName_191 = driverName[191];
				DriverName_192 = driverName[192];
				DriverName_193 = driverName[193];
				DriverName_194 = driverName[194];
				DriverName_195 = driverName[195];
				DriverName_196 = driverName[196];
				DriverName_197 = driverName[197];
				DriverName_198 = driverName[198];
				DriverName_199 = driverName[199];
				DriverName_200 = driverName[200];
				DriverName_201 = driverName[201];
				DriverName_202 = driverName[202];
				DriverName_203 = driverName[203];
				DriverName_204 = driverName[204];
				DriverName_205 = driverName[205];
				DriverName_206 = driverName[206];
				DriverName_207 = driverName[207];
				DriverName_208 = driverName[208];
				DriverName_209 = driverName[209];
				DriverName_210 = driverName[210];
				DriverName_211 = driverName[211];
				DriverName_212 = driverName[212];
				DriverName_213 = driverName[213];
				DriverName_214 = driverName[214];
				DriverName_215 = driverName[215];
				DriverName_216 = driverName[216];
				DriverName_217 = driverName[217];
				DriverName_218 = driverName[218];
				DriverName_219 = driverName[219];
				DriverName_220 = driverName[220];
				DriverName_221 = driverName[221];
				DriverName_222 = driverName[222];
				DriverName_223 = driverName[223];
				DriverName_224 = driverName[224];
				DriverName_225 = driverName[225];
				DriverName_226 = driverName[226];
				DriverName_227 = driverName[227];
				DriverName_228 = driverName[228];
				DriverName_229 = driverName[229];
				DriverName_230 = driverName[230];
				DriverName_231 = driverName[231];
				DriverName_232 = driverName[232];
				DriverName_233 = driverName[233];
				DriverName_234 = driverName[234];
				DriverName_235 = driverName[235];
				DriverName_236 = driverName[236];
				DriverName_237 = driverName[237];
				DriverName_238 = driverName[238];
				DriverName_239 = driverName[239];
				DriverName_240 = driverName[240];
				DriverName_241 = driverName[241];
				DriverName_242 = driverName[242];
				DriverName_243 = driverName[243];
				DriverName_244 = driverName[244];
				DriverName_245 = driverName[245];
				DriverName_246 = driverName[246];
				DriverName_247 = driverName[247];
				DriverName_248 = driverName[248];
				DriverName_249 = driverName[249];
				DriverName_250 = driverName[250];
				DriverName_251 = driverName[251];
				DriverName_252 = driverName[252];
				DriverName_253 = driverName[253];
				DriverName_254 = driverName[254];
				DriverName_255 = driverName[255];
			}
			if (driverInfo != default)
			{
				DriverInfo_0 = driverInfo[0];
				DriverInfo_1 = driverInfo[1];
				DriverInfo_2 = driverInfo[2];
				DriverInfo_3 = driverInfo[3];
				DriverInfo_4 = driverInfo[4];
				DriverInfo_5 = driverInfo[5];
				DriverInfo_6 = driverInfo[6];
				DriverInfo_7 = driverInfo[7];
				DriverInfo_8 = driverInfo[8];
				DriverInfo_9 = driverInfo[9];
				DriverInfo_10 = driverInfo[10];
				DriverInfo_11 = driverInfo[11];
				DriverInfo_12 = driverInfo[12];
				DriverInfo_13 = driverInfo[13];
				DriverInfo_14 = driverInfo[14];
				DriverInfo_15 = driverInfo[15];
				DriverInfo_16 = driverInfo[16];
				DriverInfo_17 = driverInfo[17];
				DriverInfo_18 = driverInfo[18];
				DriverInfo_19 = driverInfo[19];
				DriverInfo_20 = driverInfo[20];
				DriverInfo_21 = driverInfo[21];
				DriverInfo_22 = driverInfo[22];
				DriverInfo_23 = driverInfo[23];
				DriverInfo_24 = driverInfo[24];
				DriverInfo_25 = driverInfo[25];
				DriverInfo_26 = driverInfo[26];
				DriverInfo_27 = driverInfo[27];
				DriverInfo_28 = driverInfo[28];
				DriverInfo_29 = driverInfo[29];
				DriverInfo_30 = driverInfo[30];
				DriverInfo_31 = driverInfo[31];
				DriverInfo_32 = driverInfo[32];
				DriverInfo_33 = driverInfo[33];
				DriverInfo_34 = driverInfo[34];
				DriverInfo_35 = driverInfo[35];
				DriverInfo_36 = driverInfo[36];
				DriverInfo_37 = driverInfo[37];
				DriverInfo_38 = driverInfo[38];
				DriverInfo_39 = driverInfo[39];
				DriverInfo_40 = driverInfo[40];
				DriverInfo_41 = driverInfo[41];
				DriverInfo_42 = driverInfo[42];
				DriverInfo_43 = driverInfo[43];
				DriverInfo_44 = driverInfo[44];
				DriverInfo_45 = driverInfo[45];
				DriverInfo_46 = driverInfo[46];
				DriverInfo_47 = driverInfo[47];
				DriverInfo_48 = driverInfo[48];
				DriverInfo_49 = driverInfo[49];
				DriverInfo_50 = driverInfo[50];
				DriverInfo_51 = driverInfo[51];
				DriverInfo_52 = driverInfo[52];
				DriverInfo_53 = driverInfo[53];
				DriverInfo_54 = driverInfo[54];
				DriverInfo_55 = driverInfo[55];
				DriverInfo_56 = driverInfo[56];
				DriverInfo_57 = driverInfo[57];
				DriverInfo_58 = driverInfo[58];
				DriverInfo_59 = driverInfo[59];
				DriverInfo_60 = driverInfo[60];
				DriverInfo_61 = driverInfo[61];
				DriverInfo_62 = driverInfo[62];
				DriverInfo_63 = driverInfo[63];
				DriverInfo_64 = driverInfo[64];
				DriverInfo_65 = driverInfo[65];
				DriverInfo_66 = driverInfo[66];
				DriverInfo_67 = driverInfo[67];
				DriverInfo_68 = driverInfo[68];
				DriverInfo_69 = driverInfo[69];
				DriverInfo_70 = driverInfo[70];
				DriverInfo_71 = driverInfo[71];
				DriverInfo_72 = driverInfo[72];
				DriverInfo_73 = driverInfo[73];
				DriverInfo_74 = driverInfo[74];
				DriverInfo_75 = driverInfo[75];
				DriverInfo_76 = driverInfo[76];
				DriverInfo_77 = driverInfo[77];
				DriverInfo_78 = driverInfo[78];
				DriverInfo_79 = driverInfo[79];
				DriverInfo_80 = driverInfo[80];
				DriverInfo_81 = driverInfo[81];
				DriverInfo_82 = driverInfo[82];
				DriverInfo_83 = driverInfo[83];
				DriverInfo_84 = driverInfo[84];
				DriverInfo_85 = driverInfo[85];
				DriverInfo_86 = driverInfo[86];
				DriverInfo_87 = driverInfo[87];
				DriverInfo_88 = driverInfo[88];
				DriverInfo_89 = driverInfo[89];
				DriverInfo_90 = driverInfo[90];
				DriverInfo_91 = driverInfo[91];
				DriverInfo_92 = driverInfo[92];
				DriverInfo_93 = driverInfo[93];
				DriverInfo_94 = driverInfo[94];
				DriverInfo_95 = driverInfo[95];
				DriverInfo_96 = driverInfo[96];
				DriverInfo_97 = driverInfo[97];
				DriverInfo_98 = driverInfo[98];
				DriverInfo_99 = driverInfo[99];
				DriverInfo_100 = driverInfo[100];
				DriverInfo_101 = driverInfo[101];
				DriverInfo_102 = driverInfo[102];
				DriverInfo_103 = driverInfo[103];
				DriverInfo_104 = driverInfo[104];
				DriverInfo_105 = driverInfo[105];
				DriverInfo_106 = driverInfo[106];
				DriverInfo_107 = driverInfo[107];
				DriverInfo_108 = driverInfo[108];
				DriverInfo_109 = driverInfo[109];
				DriverInfo_110 = driverInfo[110];
				DriverInfo_111 = driverInfo[111];
				DriverInfo_112 = driverInfo[112];
				DriverInfo_113 = driverInfo[113];
				DriverInfo_114 = driverInfo[114];
				DriverInfo_115 = driverInfo[115];
				DriverInfo_116 = driverInfo[116];
				DriverInfo_117 = driverInfo[117];
				DriverInfo_118 = driverInfo[118];
				DriverInfo_119 = driverInfo[119];
				DriverInfo_120 = driverInfo[120];
				DriverInfo_121 = driverInfo[121];
				DriverInfo_122 = driverInfo[122];
				DriverInfo_123 = driverInfo[123];
				DriverInfo_124 = driverInfo[124];
				DriverInfo_125 = driverInfo[125];
				DriverInfo_126 = driverInfo[126];
				DriverInfo_127 = driverInfo[127];
				DriverInfo_128 = driverInfo[128];
				DriverInfo_129 = driverInfo[129];
				DriverInfo_130 = driverInfo[130];
				DriverInfo_131 = driverInfo[131];
				DriverInfo_132 = driverInfo[132];
				DriverInfo_133 = driverInfo[133];
				DriverInfo_134 = driverInfo[134];
				DriverInfo_135 = driverInfo[135];
				DriverInfo_136 = driverInfo[136];
				DriverInfo_137 = driverInfo[137];
				DriverInfo_138 = driverInfo[138];
				DriverInfo_139 = driverInfo[139];
				DriverInfo_140 = driverInfo[140];
				DriverInfo_141 = driverInfo[141];
				DriverInfo_142 = driverInfo[142];
				DriverInfo_143 = driverInfo[143];
				DriverInfo_144 = driverInfo[144];
				DriverInfo_145 = driverInfo[145];
				DriverInfo_146 = driverInfo[146];
				DriverInfo_147 = driverInfo[147];
				DriverInfo_148 = driverInfo[148];
				DriverInfo_149 = driverInfo[149];
				DriverInfo_150 = driverInfo[150];
				DriverInfo_151 = driverInfo[151];
				DriverInfo_152 = driverInfo[152];
				DriverInfo_153 = driverInfo[153];
				DriverInfo_154 = driverInfo[154];
				DriverInfo_155 = driverInfo[155];
				DriverInfo_156 = driverInfo[156];
				DriverInfo_157 = driverInfo[157];
				DriverInfo_158 = driverInfo[158];
				DriverInfo_159 = driverInfo[159];
				DriverInfo_160 = driverInfo[160];
				DriverInfo_161 = driverInfo[161];
				DriverInfo_162 = driverInfo[162];
				DriverInfo_163 = driverInfo[163];
				DriverInfo_164 = driverInfo[164];
				DriverInfo_165 = driverInfo[165];
				DriverInfo_166 = driverInfo[166];
				DriverInfo_167 = driverInfo[167];
				DriverInfo_168 = driverInfo[168];
				DriverInfo_169 = driverInfo[169];
				DriverInfo_170 = driverInfo[170];
				DriverInfo_171 = driverInfo[171];
				DriverInfo_172 = driverInfo[172];
				DriverInfo_173 = driverInfo[173];
				DriverInfo_174 = driverInfo[174];
				DriverInfo_175 = driverInfo[175];
				DriverInfo_176 = driverInfo[176];
				DriverInfo_177 = driverInfo[177];
				DriverInfo_178 = driverInfo[178];
				DriverInfo_179 = driverInfo[179];
				DriverInfo_180 = driverInfo[180];
				DriverInfo_181 = driverInfo[181];
				DriverInfo_182 = driverInfo[182];
				DriverInfo_183 = driverInfo[183];
				DriverInfo_184 = driverInfo[184];
				DriverInfo_185 = driverInfo[185];
				DriverInfo_186 = driverInfo[186];
				DriverInfo_187 = driverInfo[187];
				DriverInfo_188 = driverInfo[188];
				DriverInfo_189 = driverInfo[189];
				DriverInfo_190 = driverInfo[190];
				DriverInfo_191 = driverInfo[191];
				DriverInfo_192 = driverInfo[192];
				DriverInfo_193 = driverInfo[193];
				DriverInfo_194 = driverInfo[194];
				DriverInfo_195 = driverInfo[195];
				DriverInfo_196 = driverInfo[196];
				DriverInfo_197 = driverInfo[197];
				DriverInfo_198 = driverInfo[198];
				DriverInfo_199 = driverInfo[199];
				DriverInfo_200 = driverInfo[200];
				DriverInfo_201 = driverInfo[201];
				DriverInfo_202 = driverInfo[202];
				DriverInfo_203 = driverInfo[203];
				DriverInfo_204 = driverInfo[204];
				DriverInfo_205 = driverInfo[205];
				DriverInfo_206 = driverInfo[206];
				DriverInfo_207 = driverInfo[207];
				DriverInfo_208 = driverInfo[208];
				DriverInfo_209 = driverInfo[209];
				DriverInfo_210 = driverInfo[210];
				DriverInfo_211 = driverInfo[211];
				DriverInfo_212 = driverInfo[212];
				DriverInfo_213 = driverInfo[213];
				DriverInfo_214 = driverInfo[214];
				DriverInfo_215 = driverInfo[215];
				DriverInfo_216 = driverInfo[216];
				DriverInfo_217 = driverInfo[217];
				DriverInfo_218 = driverInfo[218];
				DriverInfo_219 = driverInfo[219];
				DriverInfo_220 = driverInfo[220];
				DriverInfo_221 = driverInfo[221];
				DriverInfo_222 = driverInfo[222];
				DriverInfo_223 = driverInfo[223];
				DriverInfo_224 = driverInfo[224];
				DriverInfo_225 = driverInfo[225];
				DriverInfo_226 = driverInfo[226];
				DriverInfo_227 = driverInfo[227];
				DriverInfo_228 = driverInfo[228];
				DriverInfo_229 = driverInfo[229];
				DriverInfo_230 = driverInfo[230];
				DriverInfo_231 = driverInfo[231];
				DriverInfo_232 = driverInfo[232];
				DriverInfo_233 = driverInfo[233];
				DriverInfo_234 = driverInfo[234];
				DriverInfo_235 = driverInfo[235];
				DriverInfo_236 = driverInfo[236];
				DriverInfo_237 = driverInfo[237];
				DriverInfo_238 = driverInfo[238];
				DriverInfo_239 = driverInfo[239];
				DriverInfo_240 = driverInfo[240];
				DriverInfo_241 = driverInfo[241];
				DriverInfo_242 = driverInfo[242];
				DriverInfo_243 = driverInfo[243];
				DriverInfo_244 = driverInfo[244];
				DriverInfo_245 = driverInfo[245];
				DriverInfo_246 = driverInfo[246];
				DriverInfo_247 = driverInfo[247];
				DriverInfo_248 = driverInfo[248];
				DriverInfo_249 = driverInfo[249];
				DriverInfo_250 = driverInfo[250];
				DriverInfo_251 = driverInfo[251];
				DriverInfo_252 = driverInfo[252];
				DriverInfo_253 = driverInfo[253];
				DriverInfo_254 = driverInfo[254];
				DriverInfo_255 = driverInfo[255];
			}
			ConformanceVersion = conformanceVersion;
		}

		public unsafe VkPhysicalDeviceDriverProperties(VkStructureType sType = default, void* pNext = default, VkDriverId driverID = default, Span<byte> driverName = default, Span<byte> driverInfo = default, VkConformanceVersion conformanceVersion = default)
		{
			SType = sType;
			PNext = pNext;
			DriverID = driverID;
			if (driverName != default)
			{
				DriverName_0 = driverName[0];
				DriverName_1 = driverName[1];
				DriverName_2 = driverName[2];
				DriverName_3 = driverName[3];
				DriverName_4 = driverName[4];
				DriverName_5 = driverName[5];
				DriverName_6 = driverName[6];
				DriverName_7 = driverName[7];
				DriverName_8 = driverName[8];
				DriverName_9 = driverName[9];
				DriverName_10 = driverName[10];
				DriverName_11 = driverName[11];
				DriverName_12 = driverName[12];
				DriverName_13 = driverName[13];
				DriverName_14 = driverName[14];
				DriverName_15 = driverName[15];
				DriverName_16 = driverName[16];
				DriverName_17 = driverName[17];
				DriverName_18 = driverName[18];
				DriverName_19 = driverName[19];
				DriverName_20 = driverName[20];
				DriverName_21 = driverName[21];
				DriverName_22 = driverName[22];
				DriverName_23 = driverName[23];
				DriverName_24 = driverName[24];
				DriverName_25 = driverName[25];
				DriverName_26 = driverName[26];
				DriverName_27 = driverName[27];
				DriverName_28 = driverName[28];
				DriverName_29 = driverName[29];
				DriverName_30 = driverName[30];
				DriverName_31 = driverName[31];
				DriverName_32 = driverName[32];
				DriverName_33 = driverName[33];
				DriverName_34 = driverName[34];
				DriverName_35 = driverName[35];
				DriverName_36 = driverName[36];
				DriverName_37 = driverName[37];
				DriverName_38 = driverName[38];
				DriverName_39 = driverName[39];
				DriverName_40 = driverName[40];
				DriverName_41 = driverName[41];
				DriverName_42 = driverName[42];
				DriverName_43 = driverName[43];
				DriverName_44 = driverName[44];
				DriverName_45 = driverName[45];
				DriverName_46 = driverName[46];
				DriverName_47 = driverName[47];
				DriverName_48 = driverName[48];
				DriverName_49 = driverName[49];
				DriverName_50 = driverName[50];
				DriverName_51 = driverName[51];
				DriverName_52 = driverName[52];
				DriverName_53 = driverName[53];
				DriverName_54 = driverName[54];
				DriverName_55 = driverName[55];
				DriverName_56 = driverName[56];
				DriverName_57 = driverName[57];
				DriverName_58 = driverName[58];
				DriverName_59 = driverName[59];
				DriverName_60 = driverName[60];
				DriverName_61 = driverName[61];
				DriverName_62 = driverName[62];
				DriverName_63 = driverName[63];
				DriverName_64 = driverName[64];
				DriverName_65 = driverName[65];
				DriverName_66 = driverName[66];
				DriverName_67 = driverName[67];
				DriverName_68 = driverName[68];
				DriverName_69 = driverName[69];
				DriverName_70 = driverName[70];
				DriverName_71 = driverName[71];
				DriverName_72 = driverName[72];
				DriverName_73 = driverName[73];
				DriverName_74 = driverName[74];
				DriverName_75 = driverName[75];
				DriverName_76 = driverName[76];
				DriverName_77 = driverName[77];
				DriverName_78 = driverName[78];
				DriverName_79 = driverName[79];
				DriverName_80 = driverName[80];
				DriverName_81 = driverName[81];
				DriverName_82 = driverName[82];
				DriverName_83 = driverName[83];
				DriverName_84 = driverName[84];
				DriverName_85 = driverName[85];
				DriverName_86 = driverName[86];
				DriverName_87 = driverName[87];
				DriverName_88 = driverName[88];
				DriverName_89 = driverName[89];
				DriverName_90 = driverName[90];
				DriverName_91 = driverName[91];
				DriverName_92 = driverName[92];
				DriverName_93 = driverName[93];
				DriverName_94 = driverName[94];
				DriverName_95 = driverName[95];
				DriverName_96 = driverName[96];
				DriverName_97 = driverName[97];
				DriverName_98 = driverName[98];
				DriverName_99 = driverName[99];
				DriverName_100 = driverName[100];
				DriverName_101 = driverName[101];
				DriverName_102 = driverName[102];
				DriverName_103 = driverName[103];
				DriverName_104 = driverName[104];
				DriverName_105 = driverName[105];
				DriverName_106 = driverName[106];
				DriverName_107 = driverName[107];
				DriverName_108 = driverName[108];
				DriverName_109 = driverName[109];
				DriverName_110 = driverName[110];
				DriverName_111 = driverName[111];
				DriverName_112 = driverName[112];
				DriverName_113 = driverName[113];
				DriverName_114 = driverName[114];
				DriverName_115 = driverName[115];
				DriverName_116 = driverName[116];
				DriverName_117 = driverName[117];
				DriverName_118 = driverName[118];
				DriverName_119 = driverName[119];
				DriverName_120 = driverName[120];
				DriverName_121 = driverName[121];
				DriverName_122 = driverName[122];
				DriverName_123 = driverName[123];
				DriverName_124 = driverName[124];
				DriverName_125 = driverName[125];
				DriverName_126 = driverName[126];
				DriverName_127 = driverName[127];
				DriverName_128 = driverName[128];
				DriverName_129 = driverName[129];
				DriverName_130 = driverName[130];
				DriverName_131 = driverName[131];
				DriverName_132 = driverName[132];
				DriverName_133 = driverName[133];
				DriverName_134 = driverName[134];
				DriverName_135 = driverName[135];
				DriverName_136 = driverName[136];
				DriverName_137 = driverName[137];
				DriverName_138 = driverName[138];
				DriverName_139 = driverName[139];
				DriverName_140 = driverName[140];
				DriverName_141 = driverName[141];
				DriverName_142 = driverName[142];
				DriverName_143 = driverName[143];
				DriverName_144 = driverName[144];
				DriverName_145 = driverName[145];
				DriverName_146 = driverName[146];
				DriverName_147 = driverName[147];
				DriverName_148 = driverName[148];
				DriverName_149 = driverName[149];
				DriverName_150 = driverName[150];
				DriverName_151 = driverName[151];
				DriverName_152 = driverName[152];
				DriverName_153 = driverName[153];
				DriverName_154 = driverName[154];
				DriverName_155 = driverName[155];
				DriverName_156 = driverName[156];
				DriverName_157 = driverName[157];
				DriverName_158 = driverName[158];
				DriverName_159 = driverName[159];
				DriverName_160 = driverName[160];
				DriverName_161 = driverName[161];
				DriverName_162 = driverName[162];
				DriverName_163 = driverName[163];
				DriverName_164 = driverName[164];
				DriverName_165 = driverName[165];
				DriverName_166 = driverName[166];
				DriverName_167 = driverName[167];
				DriverName_168 = driverName[168];
				DriverName_169 = driverName[169];
				DriverName_170 = driverName[170];
				DriverName_171 = driverName[171];
				DriverName_172 = driverName[172];
				DriverName_173 = driverName[173];
				DriverName_174 = driverName[174];
				DriverName_175 = driverName[175];
				DriverName_176 = driverName[176];
				DriverName_177 = driverName[177];
				DriverName_178 = driverName[178];
				DriverName_179 = driverName[179];
				DriverName_180 = driverName[180];
				DriverName_181 = driverName[181];
				DriverName_182 = driverName[182];
				DriverName_183 = driverName[183];
				DriverName_184 = driverName[184];
				DriverName_185 = driverName[185];
				DriverName_186 = driverName[186];
				DriverName_187 = driverName[187];
				DriverName_188 = driverName[188];
				DriverName_189 = driverName[189];
				DriverName_190 = driverName[190];
				DriverName_191 = driverName[191];
				DriverName_192 = driverName[192];
				DriverName_193 = driverName[193];
				DriverName_194 = driverName[194];
				DriverName_195 = driverName[195];
				DriverName_196 = driverName[196];
				DriverName_197 = driverName[197];
				DriverName_198 = driverName[198];
				DriverName_199 = driverName[199];
				DriverName_200 = driverName[200];
				DriverName_201 = driverName[201];
				DriverName_202 = driverName[202];
				DriverName_203 = driverName[203];
				DriverName_204 = driverName[204];
				DriverName_205 = driverName[205];
				DriverName_206 = driverName[206];
				DriverName_207 = driverName[207];
				DriverName_208 = driverName[208];
				DriverName_209 = driverName[209];
				DriverName_210 = driverName[210];
				DriverName_211 = driverName[211];
				DriverName_212 = driverName[212];
				DriverName_213 = driverName[213];
				DriverName_214 = driverName[214];
				DriverName_215 = driverName[215];
				DriverName_216 = driverName[216];
				DriverName_217 = driverName[217];
				DriverName_218 = driverName[218];
				DriverName_219 = driverName[219];
				DriverName_220 = driverName[220];
				DriverName_221 = driverName[221];
				DriverName_222 = driverName[222];
				DriverName_223 = driverName[223];
				DriverName_224 = driverName[224];
				DriverName_225 = driverName[225];
				DriverName_226 = driverName[226];
				DriverName_227 = driverName[227];
				DriverName_228 = driverName[228];
				DriverName_229 = driverName[229];
				DriverName_230 = driverName[230];
				DriverName_231 = driverName[231];
				DriverName_232 = driverName[232];
				DriverName_233 = driverName[233];
				DriverName_234 = driverName[234];
				DriverName_235 = driverName[235];
				DriverName_236 = driverName[236];
				DriverName_237 = driverName[237];
				DriverName_238 = driverName[238];
				DriverName_239 = driverName[239];
				DriverName_240 = driverName[240];
				DriverName_241 = driverName[241];
				DriverName_242 = driverName[242];
				DriverName_243 = driverName[243];
				DriverName_244 = driverName[244];
				DriverName_245 = driverName[245];
				DriverName_246 = driverName[246];
				DriverName_247 = driverName[247];
				DriverName_248 = driverName[248];
				DriverName_249 = driverName[249];
				DriverName_250 = driverName[250];
				DriverName_251 = driverName[251];
				DriverName_252 = driverName[252];
				DriverName_253 = driverName[253];
				DriverName_254 = driverName[254];
				DriverName_255 = driverName[255];
			}
			if (driverInfo != default)
			{
				DriverInfo_0 = driverInfo[0];
				DriverInfo_1 = driverInfo[1];
				DriverInfo_2 = driverInfo[2];
				DriverInfo_3 = driverInfo[3];
				DriverInfo_4 = driverInfo[4];
				DriverInfo_5 = driverInfo[5];
				DriverInfo_6 = driverInfo[6];
				DriverInfo_7 = driverInfo[7];
				DriverInfo_8 = driverInfo[8];
				DriverInfo_9 = driverInfo[9];
				DriverInfo_10 = driverInfo[10];
				DriverInfo_11 = driverInfo[11];
				DriverInfo_12 = driverInfo[12];
				DriverInfo_13 = driverInfo[13];
				DriverInfo_14 = driverInfo[14];
				DriverInfo_15 = driverInfo[15];
				DriverInfo_16 = driverInfo[16];
				DriverInfo_17 = driverInfo[17];
				DriverInfo_18 = driverInfo[18];
				DriverInfo_19 = driverInfo[19];
				DriverInfo_20 = driverInfo[20];
				DriverInfo_21 = driverInfo[21];
				DriverInfo_22 = driverInfo[22];
				DriverInfo_23 = driverInfo[23];
				DriverInfo_24 = driverInfo[24];
				DriverInfo_25 = driverInfo[25];
				DriverInfo_26 = driverInfo[26];
				DriverInfo_27 = driverInfo[27];
				DriverInfo_28 = driverInfo[28];
				DriverInfo_29 = driverInfo[29];
				DriverInfo_30 = driverInfo[30];
				DriverInfo_31 = driverInfo[31];
				DriverInfo_32 = driverInfo[32];
				DriverInfo_33 = driverInfo[33];
				DriverInfo_34 = driverInfo[34];
				DriverInfo_35 = driverInfo[35];
				DriverInfo_36 = driverInfo[36];
				DriverInfo_37 = driverInfo[37];
				DriverInfo_38 = driverInfo[38];
				DriverInfo_39 = driverInfo[39];
				DriverInfo_40 = driverInfo[40];
				DriverInfo_41 = driverInfo[41];
				DriverInfo_42 = driverInfo[42];
				DriverInfo_43 = driverInfo[43];
				DriverInfo_44 = driverInfo[44];
				DriverInfo_45 = driverInfo[45];
				DriverInfo_46 = driverInfo[46];
				DriverInfo_47 = driverInfo[47];
				DriverInfo_48 = driverInfo[48];
				DriverInfo_49 = driverInfo[49];
				DriverInfo_50 = driverInfo[50];
				DriverInfo_51 = driverInfo[51];
				DriverInfo_52 = driverInfo[52];
				DriverInfo_53 = driverInfo[53];
				DriverInfo_54 = driverInfo[54];
				DriverInfo_55 = driverInfo[55];
				DriverInfo_56 = driverInfo[56];
				DriverInfo_57 = driverInfo[57];
				DriverInfo_58 = driverInfo[58];
				DriverInfo_59 = driverInfo[59];
				DriverInfo_60 = driverInfo[60];
				DriverInfo_61 = driverInfo[61];
				DriverInfo_62 = driverInfo[62];
				DriverInfo_63 = driverInfo[63];
				DriverInfo_64 = driverInfo[64];
				DriverInfo_65 = driverInfo[65];
				DriverInfo_66 = driverInfo[66];
				DriverInfo_67 = driverInfo[67];
				DriverInfo_68 = driverInfo[68];
				DriverInfo_69 = driverInfo[69];
				DriverInfo_70 = driverInfo[70];
				DriverInfo_71 = driverInfo[71];
				DriverInfo_72 = driverInfo[72];
				DriverInfo_73 = driverInfo[73];
				DriverInfo_74 = driverInfo[74];
				DriverInfo_75 = driverInfo[75];
				DriverInfo_76 = driverInfo[76];
				DriverInfo_77 = driverInfo[77];
				DriverInfo_78 = driverInfo[78];
				DriverInfo_79 = driverInfo[79];
				DriverInfo_80 = driverInfo[80];
				DriverInfo_81 = driverInfo[81];
				DriverInfo_82 = driverInfo[82];
				DriverInfo_83 = driverInfo[83];
				DriverInfo_84 = driverInfo[84];
				DriverInfo_85 = driverInfo[85];
				DriverInfo_86 = driverInfo[86];
				DriverInfo_87 = driverInfo[87];
				DriverInfo_88 = driverInfo[88];
				DriverInfo_89 = driverInfo[89];
				DriverInfo_90 = driverInfo[90];
				DriverInfo_91 = driverInfo[91];
				DriverInfo_92 = driverInfo[92];
				DriverInfo_93 = driverInfo[93];
				DriverInfo_94 = driverInfo[94];
				DriverInfo_95 = driverInfo[95];
				DriverInfo_96 = driverInfo[96];
				DriverInfo_97 = driverInfo[97];
				DriverInfo_98 = driverInfo[98];
				DriverInfo_99 = driverInfo[99];
				DriverInfo_100 = driverInfo[100];
				DriverInfo_101 = driverInfo[101];
				DriverInfo_102 = driverInfo[102];
				DriverInfo_103 = driverInfo[103];
				DriverInfo_104 = driverInfo[104];
				DriverInfo_105 = driverInfo[105];
				DriverInfo_106 = driverInfo[106];
				DriverInfo_107 = driverInfo[107];
				DriverInfo_108 = driverInfo[108];
				DriverInfo_109 = driverInfo[109];
				DriverInfo_110 = driverInfo[110];
				DriverInfo_111 = driverInfo[111];
				DriverInfo_112 = driverInfo[112];
				DriverInfo_113 = driverInfo[113];
				DriverInfo_114 = driverInfo[114];
				DriverInfo_115 = driverInfo[115];
				DriverInfo_116 = driverInfo[116];
				DriverInfo_117 = driverInfo[117];
				DriverInfo_118 = driverInfo[118];
				DriverInfo_119 = driverInfo[119];
				DriverInfo_120 = driverInfo[120];
				DriverInfo_121 = driverInfo[121];
				DriverInfo_122 = driverInfo[122];
				DriverInfo_123 = driverInfo[123];
				DriverInfo_124 = driverInfo[124];
				DriverInfo_125 = driverInfo[125];
				DriverInfo_126 = driverInfo[126];
				DriverInfo_127 = driverInfo[127];
				DriverInfo_128 = driverInfo[128];
				DriverInfo_129 = driverInfo[129];
				DriverInfo_130 = driverInfo[130];
				DriverInfo_131 = driverInfo[131];
				DriverInfo_132 = driverInfo[132];
				DriverInfo_133 = driverInfo[133];
				DriverInfo_134 = driverInfo[134];
				DriverInfo_135 = driverInfo[135];
				DriverInfo_136 = driverInfo[136];
				DriverInfo_137 = driverInfo[137];
				DriverInfo_138 = driverInfo[138];
				DriverInfo_139 = driverInfo[139];
				DriverInfo_140 = driverInfo[140];
				DriverInfo_141 = driverInfo[141];
				DriverInfo_142 = driverInfo[142];
				DriverInfo_143 = driverInfo[143];
				DriverInfo_144 = driverInfo[144];
				DriverInfo_145 = driverInfo[145];
				DriverInfo_146 = driverInfo[146];
				DriverInfo_147 = driverInfo[147];
				DriverInfo_148 = driverInfo[148];
				DriverInfo_149 = driverInfo[149];
				DriverInfo_150 = driverInfo[150];
				DriverInfo_151 = driverInfo[151];
				DriverInfo_152 = driverInfo[152];
				DriverInfo_153 = driverInfo[153];
				DriverInfo_154 = driverInfo[154];
				DriverInfo_155 = driverInfo[155];
				DriverInfo_156 = driverInfo[156];
				DriverInfo_157 = driverInfo[157];
				DriverInfo_158 = driverInfo[158];
				DriverInfo_159 = driverInfo[159];
				DriverInfo_160 = driverInfo[160];
				DriverInfo_161 = driverInfo[161];
				DriverInfo_162 = driverInfo[162];
				DriverInfo_163 = driverInfo[163];
				DriverInfo_164 = driverInfo[164];
				DriverInfo_165 = driverInfo[165];
				DriverInfo_166 = driverInfo[166];
				DriverInfo_167 = driverInfo[167];
				DriverInfo_168 = driverInfo[168];
				DriverInfo_169 = driverInfo[169];
				DriverInfo_170 = driverInfo[170];
				DriverInfo_171 = driverInfo[171];
				DriverInfo_172 = driverInfo[172];
				DriverInfo_173 = driverInfo[173];
				DriverInfo_174 = driverInfo[174];
				DriverInfo_175 = driverInfo[175];
				DriverInfo_176 = driverInfo[176];
				DriverInfo_177 = driverInfo[177];
				DriverInfo_178 = driverInfo[178];
				DriverInfo_179 = driverInfo[179];
				DriverInfo_180 = driverInfo[180];
				DriverInfo_181 = driverInfo[181];
				DriverInfo_182 = driverInfo[182];
				DriverInfo_183 = driverInfo[183];
				DriverInfo_184 = driverInfo[184];
				DriverInfo_185 = driverInfo[185];
				DriverInfo_186 = driverInfo[186];
				DriverInfo_187 = driverInfo[187];
				DriverInfo_188 = driverInfo[188];
				DriverInfo_189 = driverInfo[189];
				DriverInfo_190 = driverInfo[190];
				DriverInfo_191 = driverInfo[191];
				DriverInfo_192 = driverInfo[192];
				DriverInfo_193 = driverInfo[193];
				DriverInfo_194 = driverInfo[194];
				DriverInfo_195 = driverInfo[195];
				DriverInfo_196 = driverInfo[196];
				DriverInfo_197 = driverInfo[197];
				DriverInfo_198 = driverInfo[198];
				DriverInfo_199 = driverInfo[199];
				DriverInfo_200 = driverInfo[200];
				DriverInfo_201 = driverInfo[201];
				DriverInfo_202 = driverInfo[202];
				DriverInfo_203 = driverInfo[203];
				DriverInfo_204 = driverInfo[204];
				DriverInfo_205 = driverInfo[205];
				DriverInfo_206 = driverInfo[206];
				DriverInfo_207 = driverInfo[207];
				DriverInfo_208 = driverInfo[208];
				DriverInfo_209 = driverInfo[209];
				DriverInfo_210 = driverInfo[210];
				DriverInfo_211 = driverInfo[211];
				DriverInfo_212 = driverInfo[212];
				DriverInfo_213 = driverInfo[213];
				DriverInfo_214 = driverInfo[214];
				DriverInfo_215 = driverInfo[215];
				DriverInfo_216 = driverInfo[216];
				DriverInfo_217 = driverInfo[217];
				DriverInfo_218 = driverInfo[218];
				DriverInfo_219 = driverInfo[219];
				DriverInfo_220 = driverInfo[220];
				DriverInfo_221 = driverInfo[221];
				DriverInfo_222 = driverInfo[222];
				DriverInfo_223 = driverInfo[223];
				DriverInfo_224 = driverInfo[224];
				DriverInfo_225 = driverInfo[225];
				DriverInfo_226 = driverInfo[226];
				DriverInfo_227 = driverInfo[227];
				DriverInfo_228 = driverInfo[228];
				DriverInfo_229 = driverInfo[229];
				DriverInfo_230 = driverInfo[230];
				DriverInfo_231 = driverInfo[231];
				DriverInfo_232 = driverInfo[232];
				DriverInfo_233 = driverInfo[233];
				DriverInfo_234 = driverInfo[234];
				DriverInfo_235 = driverInfo[235];
				DriverInfo_236 = driverInfo[236];
				DriverInfo_237 = driverInfo[237];
				DriverInfo_238 = driverInfo[238];
				DriverInfo_239 = driverInfo[239];
				DriverInfo_240 = driverInfo[240];
				DriverInfo_241 = driverInfo[241];
				DriverInfo_242 = driverInfo[242];
				DriverInfo_243 = driverInfo[243];
				DriverInfo_244 = driverInfo[244];
				DriverInfo_245 = driverInfo[245];
				DriverInfo_246 = driverInfo[246];
				DriverInfo_247 = driverInfo[247];
				DriverInfo_248 = driverInfo[248];
				DriverInfo_249 = driverInfo[249];
				DriverInfo_250 = driverInfo[250];
				DriverInfo_251 = driverInfo[251];
				DriverInfo_252 = driverInfo[252];
				DriverInfo_253 = driverInfo[253];
				DriverInfo_254 = driverInfo[254];
				DriverInfo_255 = driverInfo[255];
			}
			ConformanceVersion = conformanceVersion;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderAtomicInt64Features")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderAtomicInt64Features
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderBufferInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferInt64Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedInt64Atomics;

		public unsafe VkPhysicalDeviceShaderAtomicInt64Features(VkStructureType sType = default, void* pNext = default, uint shaderBufferInt64Atomics = default, uint shaderSharedInt64Atomics = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderBufferInt64Atomics = shaderBufferInt64Atomics;
			ShaderSharedInt64Atomics = shaderSharedInt64Atomics;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderFloat16Int8Features")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderFloat16Int8Features
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderFloat16;
		[NativeName(NativeNameType.Field, "shaderInt8")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInt8;

		public unsafe VkPhysicalDeviceShaderFloat16Int8Features(VkStructureType sType = default, void* pNext = default, uint shaderFloat16 = default, uint shaderInt8 = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderFloat16 = shaderFloat16;
			ShaderInt8 = shaderInt8;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFloatControlsProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFloatControlsProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "denormBehaviorIndependence")]
		[NativeName(NativeNameType.Type, "VkShaderFloatControlsIndependence")]
		public VkShaderFloatControlsIndependence DenormBehaviorIndependence;
		[NativeName(NativeNameType.Field, "roundingModeIndependence")]
		[NativeName(NativeNameType.Type, "VkShaderFloatControlsIndependence")]
		public VkShaderFloatControlsIndependence RoundingModeIndependence;
		[NativeName(NativeNameType.Field, "shaderSignedZeroInfNanPreserveFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSignedZeroInfNanPreserveFloat16;
		[NativeName(NativeNameType.Field, "shaderSignedZeroInfNanPreserveFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSignedZeroInfNanPreserveFloat32;
		[NativeName(NativeNameType.Field, "shaderSignedZeroInfNanPreserveFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSignedZeroInfNanPreserveFloat64;
		[NativeName(NativeNameType.Field, "shaderDenormPreserveFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormPreserveFloat16;
		[NativeName(NativeNameType.Field, "shaderDenormPreserveFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormPreserveFloat32;
		[NativeName(NativeNameType.Field, "shaderDenormPreserveFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormPreserveFloat64;
		[NativeName(NativeNameType.Field, "shaderDenormFlushToZeroFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormFlushToZeroFloat16;
		[NativeName(NativeNameType.Field, "shaderDenormFlushToZeroFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormFlushToZeroFloat32;
		[NativeName(NativeNameType.Field, "shaderDenormFlushToZeroFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderDenormFlushToZeroFloat64;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTEFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTEFloat16;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTEFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTEFloat32;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTEFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTEFloat64;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTZFloat16")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTZFloat16;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTZFloat32")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTZFloat32;
		[NativeName(NativeNameType.Field, "shaderRoundingModeRTZFloat64")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderRoundingModeRTZFloat64;

		public unsafe VkPhysicalDeviceFloatControlsProperties(VkStructureType sType = default, void* pNext = default, VkShaderFloatControlsIndependence denormBehaviorIndependence = default, VkShaderFloatControlsIndependence roundingModeIndependence = default, uint shaderSignedZeroInfNanPreserveFloat16 = default, uint shaderSignedZeroInfNanPreserveFloat32 = default, uint shaderSignedZeroInfNanPreserveFloat64 = default, uint shaderDenormPreserveFloat16 = default, uint shaderDenormPreserveFloat32 = default, uint shaderDenormPreserveFloat64 = default, uint shaderDenormFlushToZeroFloat16 = default, uint shaderDenormFlushToZeroFloat32 = default, uint shaderDenormFlushToZeroFloat64 = default, uint shaderRoundingModeRTEFloat16 = default, uint shaderRoundingModeRTEFloat32 = default, uint shaderRoundingModeRTEFloat64 = default, uint shaderRoundingModeRTZFloat16 = default, uint shaderRoundingModeRTZFloat32 = default, uint shaderRoundingModeRTZFloat64 = default)
		{
			SType = sType;
			PNext = pNext;
			DenormBehaviorIndependence = denormBehaviorIndependence;
			RoundingModeIndependence = roundingModeIndependence;
			ShaderSignedZeroInfNanPreserveFloat16 = shaderSignedZeroInfNanPreserveFloat16;
			ShaderSignedZeroInfNanPreserveFloat32 = shaderSignedZeroInfNanPreserveFloat32;
			ShaderSignedZeroInfNanPreserveFloat64 = shaderSignedZeroInfNanPreserveFloat64;
			ShaderDenormPreserveFloat16 = shaderDenormPreserveFloat16;
			ShaderDenormPreserveFloat32 = shaderDenormPreserveFloat32;
			ShaderDenormPreserveFloat64 = shaderDenormPreserveFloat64;
			ShaderDenormFlushToZeroFloat16 = shaderDenormFlushToZeroFloat16;
			ShaderDenormFlushToZeroFloat32 = shaderDenormFlushToZeroFloat32;
			ShaderDenormFlushToZeroFloat64 = shaderDenormFlushToZeroFloat64;
			ShaderRoundingModeRTEFloat16 = shaderRoundingModeRTEFloat16;
			ShaderRoundingModeRTEFloat32 = shaderRoundingModeRTEFloat32;
			ShaderRoundingModeRTEFloat64 = shaderRoundingModeRTEFloat64;
			ShaderRoundingModeRTZFloat16 = shaderRoundingModeRTZFloat16;
			ShaderRoundingModeRTZFloat32 = shaderRoundingModeRTZFloat32;
			ShaderRoundingModeRTZFloat64 = shaderRoundingModeRTZFloat64;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorSetLayoutBindingFlagsCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorSetLayoutBindingFlagsCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "bindingCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint BindingCount;
		[NativeName(NativeNameType.Field, "pBindingFlags")]
		[NativeName(NativeNameType.Type, "const VkDescriptorBindingFlags*")]
		public unsafe uint* PBindingFlags;

		public unsafe VkDescriptorSetLayoutBindingFlagsCreateInfo(VkStructureType sType = default, void* pNext = default, uint bindingCount = default, uint* pBindingFlags = default)
		{
			SType = sType;
			PNext = pNext;
			BindingCount = bindingCount;
			PBindingFlags = pBindingFlags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDescriptorIndexingFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDescriptorIndexingFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderInputAttachmentArrayDynamicIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInputAttachmentArrayDynamicIndexing;
		[NativeName(NativeNameType.Field, "shaderUniformTexelBufferArrayDynamicIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformTexelBufferArrayDynamicIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageTexelBufferArrayDynamicIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageTexelBufferArrayDynamicIndexing;
		[NativeName(NativeNameType.Field, "shaderUniformBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderSampledImageArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSampledImageArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageImageArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageImageArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderInputAttachmentArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInputAttachmentArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderUniformTexelBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformTexelBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "shaderStorageTexelBufferArrayNonUniformIndexing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageTexelBufferArrayNonUniformIndexing;
		[NativeName(NativeNameType.Field, "descriptorBindingUniformBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingUniformBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingSampledImageUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingSampledImageUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingStorageImageUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingStorageImageUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingStorageBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingStorageBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingUniformTexelBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingUniformTexelBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingStorageTexelBufferUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingStorageTexelBufferUpdateAfterBind;
		[NativeName(NativeNameType.Field, "descriptorBindingUpdateUnusedWhilePending")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingUpdateUnusedWhilePending;
		[NativeName(NativeNameType.Field, "descriptorBindingPartiallyBound")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingPartiallyBound;
		[NativeName(NativeNameType.Field, "descriptorBindingVariableDescriptorCount")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingVariableDescriptorCount;
		[NativeName(NativeNameType.Field, "runtimeDescriptorArray")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RuntimeDescriptorArray;

		public unsafe VkPhysicalDeviceDescriptorIndexingFeatures(VkStructureType sType = default, void* pNext = default, uint shaderInputAttachmentArrayDynamicIndexing = default, uint shaderUniformTexelBufferArrayDynamicIndexing = default, uint shaderStorageTexelBufferArrayDynamicIndexing = default, uint shaderUniformBufferArrayNonUniformIndexing = default, uint shaderSampledImageArrayNonUniformIndexing = default, uint shaderStorageBufferArrayNonUniformIndexing = default, uint shaderStorageImageArrayNonUniformIndexing = default, uint shaderInputAttachmentArrayNonUniformIndexing = default, uint shaderUniformTexelBufferArrayNonUniformIndexing = default, uint shaderStorageTexelBufferArrayNonUniformIndexing = default, uint descriptorBindingUniformBufferUpdateAfterBind = default, uint descriptorBindingSampledImageUpdateAfterBind = default, uint descriptorBindingStorageImageUpdateAfterBind = default, uint descriptorBindingStorageBufferUpdateAfterBind = default, uint descriptorBindingUniformTexelBufferUpdateAfterBind = default, uint descriptorBindingStorageTexelBufferUpdateAfterBind = default, uint descriptorBindingUpdateUnusedWhilePending = default, uint descriptorBindingPartiallyBound = default, uint descriptorBindingVariableDescriptorCount = default, uint runtimeDescriptorArray = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderInputAttachmentArrayDynamicIndexing = shaderInputAttachmentArrayDynamicIndexing;
			ShaderUniformTexelBufferArrayDynamicIndexing = shaderUniformTexelBufferArrayDynamicIndexing;
			ShaderStorageTexelBufferArrayDynamicIndexing = shaderStorageTexelBufferArrayDynamicIndexing;
			ShaderUniformBufferArrayNonUniformIndexing = shaderUniformBufferArrayNonUniformIndexing;
			ShaderSampledImageArrayNonUniformIndexing = shaderSampledImageArrayNonUniformIndexing;
			ShaderStorageBufferArrayNonUniformIndexing = shaderStorageBufferArrayNonUniformIndexing;
			ShaderStorageImageArrayNonUniformIndexing = shaderStorageImageArrayNonUniformIndexing;
			ShaderInputAttachmentArrayNonUniformIndexing = shaderInputAttachmentArrayNonUniformIndexing;
			ShaderUniformTexelBufferArrayNonUniformIndexing = shaderUniformTexelBufferArrayNonUniformIndexing;
			ShaderStorageTexelBufferArrayNonUniformIndexing = shaderStorageTexelBufferArrayNonUniformIndexing;
			DescriptorBindingUniformBufferUpdateAfterBind = descriptorBindingUniformBufferUpdateAfterBind;
			DescriptorBindingSampledImageUpdateAfterBind = descriptorBindingSampledImageUpdateAfterBind;
			DescriptorBindingStorageImageUpdateAfterBind = descriptorBindingStorageImageUpdateAfterBind;
			DescriptorBindingStorageBufferUpdateAfterBind = descriptorBindingStorageBufferUpdateAfterBind;
			DescriptorBindingUniformTexelBufferUpdateAfterBind = descriptorBindingUniformTexelBufferUpdateAfterBind;
			DescriptorBindingStorageTexelBufferUpdateAfterBind = descriptorBindingStorageTexelBufferUpdateAfterBind;
			DescriptorBindingUpdateUnusedWhilePending = descriptorBindingUpdateUnusedWhilePending;
			DescriptorBindingPartiallyBound = descriptorBindingPartiallyBound;
			DescriptorBindingVariableDescriptorCount = descriptorBindingVariableDescriptorCount;
			RuntimeDescriptorArray = runtimeDescriptorArray;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDescriptorIndexingProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDescriptorIndexingProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxUpdateAfterBindDescriptorsInAllPools")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxUpdateAfterBindDescriptorsInAllPools;
		[NativeName(NativeNameType.Field, "shaderUniformBufferArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderUniformBufferArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderSampledImageArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSampledImageArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderStorageBufferArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageBufferArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderStorageImageArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderStorageImageArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "shaderInputAttachmentArrayNonUniformIndexingNative")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderInputAttachmentArrayNonUniformIndexingNative;
		[NativeName(NativeNameType.Field, "robustBufferAccessUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RobustBufferAccessUpdateAfterBind;
		[NativeName(NativeNameType.Field, "quadDivergentImplicitLod")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint QuadDivergentImplicitLod;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindSamplers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindSamplers;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindUniformBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindUniformBuffers;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindStorageBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindStorageBuffers;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindSampledImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindSampledImages;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindStorageImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindStorageImages;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindInputAttachments")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindInputAttachments;
		[NativeName(NativeNameType.Field, "maxPerStageUpdateAfterBindResources")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageUpdateAfterBindResources;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindSamplers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindSamplers;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindUniformBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindUniformBuffers;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindStorageBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindStorageBuffers;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindSampledImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindSampledImages;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindStorageImages")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindStorageImages;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindInputAttachments")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindInputAttachments;

		public unsafe VkPhysicalDeviceDescriptorIndexingProperties(VkStructureType sType = default, void* pNext = default, uint maxUpdateAfterBindDescriptorsInAllPools = default, uint shaderUniformBufferArrayNonUniformIndexingNative = default, uint shaderSampledImageArrayNonUniformIndexingNative = default, uint shaderStorageBufferArrayNonUniformIndexingNative = default, uint shaderStorageImageArrayNonUniformIndexingNative = default, uint shaderInputAttachmentArrayNonUniformIndexingNative = default, uint robustBufferAccessUpdateAfterBind = default, uint quadDivergentImplicitLod = default, uint maxPerStageDescriptorUpdateAfterBindSamplers = default, uint maxPerStageDescriptorUpdateAfterBindUniformBuffers = default, uint maxPerStageDescriptorUpdateAfterBindStorageBuffers = default, uint maxPerStageDescriptorUpdateAfterBindSampledImages = default, uint maxPerStageDescriptorUpdateAfterBindStorageImages = default, uint maxPerStageDescriptorUpdateAfterBindInputAttachments = default, uint maxPerStageUpdateAfterBindResources = default, uint maxDescriptorSetUpdateAfterBindSamplers = default, uint maxDescriptorSetUpdateAfterBindUniformBuffers = default, uint maxDescriptorSetUpdateAfterBindUniformBuffersDynamic = default, uint maxDescriptorSetUpdateAfterBindStorageBuffers = default, uint maxDescriptorSetUpdateAfterBindStorageBuffersDynamic = default, uint maxDescriptorSetUpdateAfterBindSampledImages = default, uint maxDescriptorSetUpdateAfterBindStorageImages = default, uint maxDescriptorSetUpdateAfterBindInputAttachments = default)
		{
			SType = sType;
			PNext = pNext;
			MaxUpdateAfterBindDescriptorsInAllPools = maxUpdateAfterBindDescriptorsInAllPools;
			ShaderUniformBufferArrayNonUniformIndexingNative = shaderUniformBufferArrayNonUniformIndexingNative;
			ShaderSampledImageArrayNonUniformIndexingNative = shaderSampledImageArrayNonUniformIndexingNative;
			ShaderStorageBufferArrayNonUniformIndexingNative = shaderStorageBufferArrayNonUniformIndexingNative;
			ShaderStorageImageArrayNonUniformIndexingNative = shaderStorageImageArrayNonUniformIndexingNative;
			ShaderInputAttachmentArrayNonUniformIndexingNative = shaderInputAttachmentArrayNonUniformIndexingNative;
			RobustBufferAccessUpdateAfterBind = robustBufferAccessUpdateAfterBind;
			QuadDivergentImplicitLod = quadDivergentImplicitLod;
			MaxPerStageDescriptorUpdateAfterBindSamplers = maxPerStageDescriptorUpdateAfterBindSamplers;
			MaxPerStageDescriptorUpdateAfterBindUniformBuffers = maxPerStageDescriptorUpdateAfterBindUniformBuffers;
			MaxPerStageDescriptorUpdateAfterBindStorageBuffers = maxPerStageDescriptorUpdateAfterBindStorageBuffers;
			MaxPerStageDescriptorUpdateAfterBindSampledImages = maxPerStageDescriptorUpdateAfterBindSampledImages;
			MaxPerStageDescriptorUpdateAfterBindStorageImages = maxPerStageDescriptorUpdateAfterBindStorageImages;
			MaxPerStageDescriptorUpdateAfterBindInputAttachments = maxPerStageDescriptorUpdateAfterBindInputAttachments;
			MaxPerStageUpdateAfterBindResources = maxPerStageUpdateAfterBindResources;
			MaxDescriptorSetUpdateAfterBindSamplers = maxDescriptorSetUpdateAfterBindSamplers;
			MaxDescriptorSetUpdateAfterBindUniformBuffers = maxDescriptorSetUpdateAfterBindUniformBuffers;
			MaxDescriptorSetUpdateAfterBindUniformBuffersDynamic = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
			MaxDescriptorSetUpdateAfterBindStorageBuffers = maxDescriptorSetUpdateAfterBindStorageBuffers;
			MaxDescriptorSetUpdateAfterBindStorageBuffersDynamic = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
			MaxDescriptorSetUpdateAfterBindSampledImages = maxDescriptorSetUpdateAfterBindSampledImages;
			MaxDescriptorSetUpdateAfterBindStorageImages = maxDescriptorSetUpdateAfterBindStorageImages;
			MaxDescriptorSetUpdateAfterBindInputAttachments = maxDescriptorSetUpdateAfterBindInputAttachments;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorSetVariableDescriptorCountAllocateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorSetVariableDescriptorCountAllocateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "descriptorSetCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DescriptorSetCount;
		[NativeName(NativeNameType.Field, "pDescriptorCounts")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PDescriptorCounts;

		public unsafe VkDescriptorSetVariableDescriptorCountAllocateInfo(VkStructureType sType = default, void* pNext = default, uint descriptorSetCount = default, uint* pDescriptorCounts = default)
		{
			SType = sType;
			PNext = pNext;
			DescriptorSetCount = descriptorSetCount;
			PDescriptorCounts = pDescriptorCounts;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorSetVariableDescriptorCountLayoutSupport")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorSetVariableDescriptorCountLayoutSupport
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxVariableDescriptorCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxVariableDescriptorCount;

		public unsafe VkDescriptorSetVariableDescriptorCountLayoutSupport(VkStructureType sType = default, void* pNext = default, uint maxVariableDescriptorCount = default)
		{
			SType = sType;
			PNext = pNext;
			MaxVariableDescriptorCount = maxVariableDescriptorCount;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubpassDescriptionDepthStencilResolve")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubpassDescriptionDepthStencilResolve
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "depthResolveMode")]
		[NativeName(NativeNameType.Type, "VkResolveModeFlagBits")]
		public VkResolveModeFlagBits DepthResolveMode;
		[NativeName(NativeNameType.Field, "stencilResolveMode")]
		[NativeName(NativeNameType.Type, "VkResolveModeFlagBits")]
		public VkResolveModeFlagBits StencilResolveMode;
		[NativeName(NativeNameType.Field, "pDepthStencilResolveAttachment")]
		[NativeName(NativeNameType.Type, "const VkAttachmentReference2*")]
		public unsafe VkAttachmentReference2* PDepthStencilResolveAttachment;

		public unsafe VkSubpassDescriptionDepthStencilResolve(VkStructureType sType = default, void* pNext = default, VkResolveModeFlagBits depthResolveMode = default, VkResolveModeFlagBits stencilResolveMode = default, VkAttachmentReference2* pDepthStencilResolveAttachment = default)
		{
			SType = sType;
			PNext = pNext;
			DepthResolveMode = depthResolveMode;
			StencilResolveMode = stencilResolveMode;
			PDepthStencilResolveAttachment = pDepthStencilResolveAttachment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDepthStencilResolveProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDepthStencilResolveProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "supportedDepthResolveModes")]
		[NativeName(NativeNameType.Type, "VkResolveModeFlags")]
		public uint SupportedDepthResolveModes;
		[NativeName(NativeNameType.Field, "supportedStencilResolveModes")]
		[NativeName(NativeNameType.Type, "VkResolveModeFlags")]
		public uint SupportedStencilResolveModes;
		[NativeName(NativeNameType.Field, "independentResolveNone")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IndependentResolveNone;
		[NativeName(NativeNameType.Field, "independentResolve")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IndependentResolve;

		public unsafe VkPhysicalDeviceDepthStencilResolveProperties(VkStructureType sType = default, void* pNext = default, uint supportedDepthResolveModes = default, uint supportedStencilResolveModes = default, uint independentResolveNone = default, uint independentResolve = default)
		{
			SType = sType;
			PNext = pNext;
			SupportedDepthResolveModes = supportedDepthResolveModes;
			SupportedStencilResolveModes = supportedStencilResolveModes;
			IndependentResolveNone = independentResolveNone;
			IndependentResolve = independentResolve;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceScalarBlockLayoutFeatures")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceScalarBlockLayoutFeatures
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "scalarBlockLayout")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ScalarBlockLayout;

		public unsafe VkPhysicalDeviceScalarBlockLayoutFeatures(VkStructureType sType = default, void* pNext = default, uint scalarBlockLayout = default)
		{
			SType = sType;
			PNext = pNext;
			ScalarBlockLayout = scalarBlockLayout;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageStencilUsageCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageStencilUsageCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stencilUsage")]
		[NativeName(NativeNameType.Type, "VkImageUsageFlags")]
		public uint StencilUsage;

		public unsafe VkImageStencilUsageCreateInfo(VkStructureType sType = default, void* pNext = default, uint stencilUsage = default)
		{
			SType = sType;
			PNext = pNext;
			StencilUsage = stencilUsage;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSamplerReductionModeCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSamplerReductionModeCreateInfo
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "reductionMode")]
		[NativeName(NativeNameType.Type, "VkSamplerReductionMode")]
		public VkSamplerReductionMode ReductionMode;

		public unsafe VkSamplerReductionModeCreateInfo(VkStructureType sType = default, void* pNext = default, VkSamplerReductionMode reductionMode = default)
		{
			SType = sType;
			PNext = pNext;
			ReductionMode = reductionMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceSamplerFilterMinmaxProperties")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceSamplerFilterMinmaxProperties
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "filterMinmaxSingleComponentFormats")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterMinmaxSingleComponentFormats;
		[NativeName(NativeNameType.Field, "filterMinmaxImageComponentMapping")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterMinmaxImageComponentMapping;

		public unsafe VkPhysicalDeviceSamplerFilterMinmaxProperties(VkStructureType sType = default, void* pNext = default, uint filterMinmaxSingleComponentFormats = default, uint filterMinmaxImageComponentMapping = default)
		{
			SType = sType;
			PNext = pNext;
			FilterMinmaxSingleComponentFormats = filterMinmaxSingleComponentFormats;
			FilterMinmaxImageComponentMapping = filterMinmaxImageComponentMapping;
		}


	}
}
