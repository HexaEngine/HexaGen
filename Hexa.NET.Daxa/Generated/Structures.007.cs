// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Daxa
{

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "perViewPositionAllComponents")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PerViewPositionAllComponents;

		public unsafe VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkStructureType sType = default, void* pNext = default, uint perViewPositionAllComponents = default)
		{
			SType = sType;
			PNext = pNext;
			PerViewPositionAllComponents = perViewPositionAllComponents;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkViewportSwizzleNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkViewportSwizzleNV
	{
		[NativeName(NativeNameType.Field, "x")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV X;
		[NativeName(NativeNameType.Field, "y")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV Y;
		[NativeName(NativeNameType.Field, "z")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV Z;
		[NativeName(NativeNameType.Field, "w")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV W;

		public unsafe VkViewportSwizzleNV(VkViewportCoordinateSwizzleNV x = default, VkViewportCoordinateSwizzleNV y = default, VkViewportCoordinateSwizzleNV z = default, VkViewportCoordinateSwizzleNV w = default)
		{
			X = x;
			Y = y;
			Z = z;
			W = w;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportSwizzleStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportSwizzleStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineViewportSwizzleStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "viewportCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewportCount;
		[NativeName(NativeNameType.Field, "pViewportSwizzles")]
		[NativeName(NativeNameType.Type, "const VkViewportSwizzleNV*")]
		public unsafe VkViewportSwizzleNV* PViewportSwizzles;

		public unsafe VkPipelineViewportSwizzleStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, uint viewportCount = default, VkViewportSwizzleNV* pViewportSwizzles = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			ViewportCount = viewportCount;
			PViewportSwizzles = pViewportSwizzles;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDiscardRectanglePropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDiscardRectanglePropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxDiscardRectangles")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDiscardRectangles;

		public unsafe VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxDiscardRectangles = default)
		{
			SType = sType;
			PNext = pNext;
			MaxDiscardRectangles = maxDiscardRectangles;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineDiscardRectangleStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineDiscardRectangleStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineDiscardRectangleStateCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "discardRectangleMode")]
		[NativeName(NativeNameType.Type, "VkDiscardRectangleModeEXT")]
		public VkDiscardRectangleModeEXT DiscardRectangleMode;
		[NativeName(NativeNameType.Field, "discardRectangleCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DiscardRectangleCount;
		[NativeName(NativeNameType.Field, "pDiscardRectangles")]
		[NativeName(NativeNameType.Type, "const VkRect2D*")]
		public unsafe VkRect2D* PDiscardRectangles;

		public unsafe VkPipelineDiscardRectangleStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, VkDiscardRectangleModeEXT discardRectangleMode = default, uint discardRectangleCount = default, VkRect2D* pDiscardRectangles = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			DiscardRectangleMode = discardRectangleMode;
			DiscardRectangleCount = discardRectangleCount;
			PDiscardRectangles = pDiscardRectangles;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceConservativeRasterizationPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceConservativeRasterizationPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "primitiveOverestimationSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float PrimitiveOverestimationSize;
		[NativeName(NativeNameType.Field, "maxExtraPrimitiveOverestimationSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxExtraPrimitiveOverestimationSize;
		[NativeName(NativeNameType.Field, "extraPrimitiveOverestimationSizeGranularity")]
		[NativeName(NativeNameType.Type, "float")]
		public float ExtraPrimitiveOverestimationSizeGranularity;
		[NativeName(NativeNameType.Field, "primitiveUnderestimation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrimitiveUnderestimation;
		[NativeName(NativeNameType.Field, "conservativePointAndLineRasterization")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ConservativePointAndLineRasterization;
		[NativeName(NativeNameType.Field, "degenerateTrianglesRasterized")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DegenerateTrianglesRasterized;
		[NativeName(NativeNameType.Field, "degenerateLinesRasterized")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DegenerateLinesRasterized;
		[NativeName(NativeNameType.Field, "fullyCoveredFragmentShaderInputVariable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FullyCoveredFragmentShaderInputVariable;
		[NativeName(NativeNameType.Field, "conservativeRasterizationPostDepthCoverage")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ConservativeRasterizationPostDepthCoverage;

		public unsafe VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkStructureType sType = default, void* pNext = default, float primitiveOverestimationSize = default, float maxExtraPrimitiveOverestimationSize = default, float extraPrimitiveOverestimationSizeGranularity = default, uint primitiveUnderestimation = default, uint conservativePointAndLineRasterization = default, uint degenerateTrianglesRasterized = default, uint degenerateLinesRasterized = default, uint fullyCoveredFragmentShaderInputVariable = default, uint conservativeRasterizationPostDepthCoverage = default)
		{
			SType = sType;
			PNext = pNext;
			PrimitiveOverestimationSize = primitiveOverestimationSize;
			MaxExtraPrimitiveOverestimationSize = maxExtraPrimitiveOverestimationSize;
			ExtraPrimitiveOverestimationSizeGranularity = extraPrimitiveOverestimationSizeGranularity;
			PrimitiveUnderestimation = primitiveUnderestimation;
			ConservativePointAndLineRasterization = conservativePointAndLineRasterization;
			DegenerateTrianglesRasterized = degenerateTrianglesRasterized;
			DegenerateLinesRasterized = degenerateLinesRasterized;
			FullyCoveredFragmentShaderInputVariable = fullyCoveredFragmentShaderInputVariable;
			ConservativeRasterizationPostDepthCoverage = conservativeRasterizationPostDepthCoverage;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationConservativeStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationConservativeStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineRasterizationConservativeStateCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "conservativeRasterizationMode")]
		[NativeName(NativeNameType.Type, "VkConservativeRasterizationModeEXT")]
		public VkConservativeRasterizationModeEXT ConservativeRasterizationMode;
		[NativeName(NativeNameType.Field, "extraPrimitiveOverestimationSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float ExtraPrimitiveOverestimationSize;

		public unsafe VkPipelineRasterizationConservativeStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, VkConservativeRasterizationModeEXT conservativeRasterizationMode = default, float extraPrimitiveOverestimationSize = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			ConservativeRasterizationMode = conservativeRasterizationMode;
			ExtraPrimitiveOverestimationSize = extraPrimitiveOverestimationSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDepthClipEnableFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDepthClipEnableFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "depthClipEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DepthClipEnable;

		public unsafe VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint depthClipEnable = default)
		{
			SType = sType;
			PNext = pNext;
			DepthClipEnable = depthClipEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationDepthClipStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationDepthClipStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineRasterizationDepthClipStateCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "depthClipEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DepthClipEnable;

		public unsafe VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, uint depthClipEnable = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			DepthClipEnable = depthClipEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkXYColorEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkXYColorEXT
	{
		[NativeName(NativeNameType.Field, "x")]
		[NativeName(NativeNameType.Type, "float")]
		public float X;
		[NativeName(NativeNameType.Field, "y")]
		[NativeName(NativeNameType.Type, "float")]
		public float Y;

		public unsafe VkXYColorEXT(float x = default, float y = default)
		{
			X = x;
			Y = y;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkHdrMetadataEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkHdrMetadataEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "displayPrimaryRed")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT DisplayPrimaryRed;
		[NativeName(NativeNameType.Field, "displayPrimaryGreen")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT DisplayPrimaryGreen;
		[NativeName(NativeNameType.Field, "displayPrimaryBlue")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT DisplayPrimaryBlue;
		[NativeName(NativeNameType.Field, "whitePoint")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT WhitePoint;
		[NativeName(NativeNameType.Field, "maxLuminance")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxLuminance;
		[NativeName(NativeNameType.Field, "minLuminance")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinLuminance;
		[NativeName(NativeNameType.Field, "maxContentLightLevel")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxContentLightLevel;
		[NativeName(NativeNameType.Field, "maxFrameAverageLightLevel")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxFrameAverageLightLevel;

		public unsafe VkHdrMetadataEXT(VkStructureType sType = default, void* pNext = default, VkXYColorEXT displayPrimaryRed = default, VkXYColorEXT displayPrimaryGreen = default, VkXYColorEXT displayPrimaryBlue = default, VkXYColorEXT whitePoint = default, float maxLuminance = default, float minLuminance = default, float maxContentLightLevel = default, float maxFrameAverageLightLevel = default)
		{
			SType = sType;
			PNext = pNext;
			DisplayPrimaryRed = displayPrimaryRed;
			DisplayPrimaryGreen = displayPrimaryGreen;
			DisplayPrimaryBlue = displayPrimaryBlue;
			WhitePoint = whitePoint;
			MaxLuminance = maxLuminance;
			MinLuminance = minLuminance;
			MaxContentLightLevel = maxContentLightLevel;
			MaxFrameAverageLightLevel = maxFrameAverageLightLevel;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsLabelEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsLabelEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pLabelName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PLabelName;
		[NativeName(NativeNameType.Field, "color")]
		[NativeName(NativeNameType.Type, "float[4]")]
		public float Color_0;
		public float Color_1;
		public float Color_2;
		public float Color_3;

		public unsafe VkDebugUtilsLabelEXT(VkStructureType sType = default, void* pNext = default, byte* pLabelName = default, float* color = default)
		{
			SType = sType;
			PNext = pNext;
			PLabelName = pLabelName;
			if (color != default)
			{
				Color_0 = color[0];
				Color_1 = color[1];
				Color_2 = color[2];
				Color_3 = color[3];
			}
		}

		public unsafe VkDebugUtilsLabelEXT(VkStructureType sType = default, void* pNext = default, byte* pLabelName = default, Span<float> color = default)
		{
			SType = sType;
			PNext = pNext;
			PLabelName = pLabelName;
			if (color != default)
			{
				Color_0 = color[0];
				Color_1 = color[1];
				Color_2 = color[2];
				Color_3 = color[3];
			}
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsObjectNameInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsObjectNameInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "objectType")]
		[NativeName(NativeNameType.Type, "VkObjectType")]
		public VkObjectType ObjectType;
		[NativeName(NativeNameType.Field, "objectHandle")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong ObjectHandle;
		[NativeName(NativeNameType.Field, "pObjectName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PObjectName;

		public unsafe VkDebugUtilsObjectNameInfoEXT(VkStructureType sType = default, void* pNext = default, VkObjectType objectType = default, ulong objectHandle = default, byte* pObjectName = default)
		{
			SType = sType;
			PNext = pNext;
			ObjectType = objectType;
			ObjectHandle = objectHandle;
			PObjectName = pObjectName;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsMessengerCallbackDataEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsMessengerCallbackDataEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessengerCallbackDataFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "pMessageIdName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PMessageIdName;
		[NativeName(NativeNameType.Field, "messageIdNumber")]
		[NativeName(NativeNameType.Type, "int32_t")]
		public int MessageIdNumber;
		[NativeName(NativeNameType.Field, "pMessage")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PMessage;
		[NativeName(NativeNameType.Field, "queueLabelCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint QueueLabelCount;
		[NativeName(NativeNameType.Field, "pQueueLabels")]
		[NativeName(NativeNameType.Type, "const VkDebugUtilsLabelEXT*")]
		public unsafe VkDebugUtilsLabelEXT* PQueueLabels;
		[NativeName(NativeNameType.Field, "cmdBufLabelCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CmdBufLabelCount;
		[NativeName(NativeNameType.Field, "pCmdBufLabels")]
		[NativeName(NativeNameType.Type, "const VkDebugUtilsLabelEXT*")]
		public unsafe VkDebugUtilsLabelEXT* PCmdBufLabels;
		[NativeName(NativeNameType.Field, "objectCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ObjectCount;
		[NativeName(NativeNameType.Field, "pObjects")]
		[NativeName(NativeNameType.Type, "const VkDebugUtilsObjectNameInfoEXT*")]
		public unsafe VkDebugUtilsObjectNameInfoEXT* PObjects;

		public unsafe VkDebugUtilsMessengerCallbackDataEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, byte* pMessageIdName = default, int messageIdNumber = default, byte* pMessage = default, uint queueLabelCount = default, VkDebugUtilsLabelEXT* pQueueLabels = default, uint cmdBufLabelCount = default, VkDebugUtilsLabelEXT* pCmdBufLabels = default, uint objectCount = default, VkDebugUtilsObjectNameInfoEXT* pObjects = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			PMessageIdName = pMessageIdName;
			MessageIdNumber = messageIdNumber;
			PMessage = pMessage;
			QueueLabelCount = queueLabelCount;
			PQueueLabels = pQueueLabels;
			CmdBufLabelCount = cmdBufLabelCount;
			PCmdBufLabels = pCmdBufLabels;
			ObjectCount = objectCount;
			PObjects = pObjects;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsMessengerCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsMessengerCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessengerCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "messageSeverity")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessageSeverityFlagsEXT")]
		public uint MessageSeverity;
		[NativeName(NativeNameType.Field, "messageType")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessageTypeFlagsEXT")]
		public uint MessageType;
		[NativeName(NativeNameType.Field, "pfnUserCallback")]
		[NativeName(NativeNameType.Type, "PFN_vkDebugUtilsMessengerCallbackEXT")]
		public unsafe void* PfnUserCallback;
		[NativeName(NativeNameType.Field, "pUserData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PUserData;

		public unsafe VkDebugUtilsMessengerCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, uint messageSeverity = default, uint messageType = default, PFNVkDebugUtilsMessengerCallbackEXT pfnUserCallback = default, void* pUserData = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			MessageSeverity = messageSeverity;
			MessageType = messageType;
			PfnUserCallback = (void*)Marshal.GetFunctionPointerForDelegate(pfnUserCallback);
			PUserData = pUserData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsObjectTagInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsObjectTagInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "objectType")]
		[NativeName(NativeNameType.Type, "VkObjectType")]
		public VkObjectType ObjectType;
		[NativeName(NativeNameType.Field, "objectHandle")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong ObjectHandle;
		[NativeName(NativeNameType.Field, "tagName")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong TagName;
		[NativeName(NativeNameType.Field, "tagSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong TagSize;
		[NativeName(NativeNameType.Field, "pTag")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PTag;

		public unsafe VkDebugUtilsObjectTagInfoEXT(VkStructureType sType = default, void* pNext = default, VkObjectType objectType = default, ulong objectHandle = default, ulong tagName = default, ulong tagSize = default, void* pTag = default)
		{
			SType = sType;
			PNext = pNext;
			ObjectType = objectType;
			ObjectHandle = objectHandle;
			TagName = tagName;
			TagSize = tagSize;
			PTag = pTag;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSampleLocationEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSampleLocationEXT
	{
		[NativeName(NativeNameType.Field, "x")]
		[NativeName(NativeNameType.Type, "float")]
		public float X;
		[NativeName(NativeNameType.Field, "y")]
		[NativeName(NativeNameType.Type, "float")]
		public float Y;

		public unsafe VkSampleLocationEXT(float x = default, float y = default)
		{
			X = x;
			Y = y;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSampleLocationsInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSampleLocationsInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleLocationsPerPixel")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlagBits")]
		public VkSampleCountFlagBits SampleLocationsPerPixel;
		[NativeName(NativeNameType.Field, "sampleLocationGridSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D SampleLocationGridSize;
		[NativeName(NativeNameType.Field, "sampleLocationsCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleLocationsCount;
		[NativeName(NativeNameType.Field, "pSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkSampleLocationEXT*")]
		public unsafe VkSampleLocationEXT* PSampleLocations;

		public unsafe VkSampleLocationsInfoEXT(VkStructureType sType = default, void* pNext = default, VkSampleCountFlagBits sampleLocationsPerPixel = default, VkExtent2D sampleLocationGridSize = default, uint sampleLocationsCount = default, VkSampleLocationEXT* pSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationsPerPixel = sampleLocationsPerPixel;
			SampleLocationGridSize = sampleLocationGridSize;
			SampleLocationsCount = sampleLocationsCount;
			PSampleLocations = pSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAttachmentSampleLocationsEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAttachmentSampleLocationsEXT
	{
		[NativeName(NativeNameType.Field, "attachmentIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AttachmentIndex;
		[NativeName(NativeNameType.Field, "sampleLocationsInfo")]
		[NativeName(NativeNameType.Type, "VkSampleLocationsInfoEXT")]
		public VkSampleLocationsInfoEXT SampleLocationsInfo;

		public unsafe VkAttachmentSampleLocationsEXT(uint attachmentIndex = default, VkSampleLocationsInfoEXT sampleLocationsInfo = default)
		{
			AttachmentIndex = attachmentIndex;
			SampleLocationsInfo = sampleLocationsInfo;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubpassSampleLocationsEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubpassSampleLocationsEXT
	{
		[NativeName(NativeNameType.Field, "subpassIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SubpassIndex;
		[NativeName(NativeNameType.Field, "sampleLocationsInfo")]
		[NativeName(NativeNameType.Type, "VkSampleLocationsInfoEXT")]
		public VkSampleLocationsInfoEXT SampleLocationsInfo;

		public unsafe VkSubpassSampleLocationsEXT(uint subpassIndex = default, VkSampleLocationsInfoEXT sampleLocationsInfo = default)
		{
			SubpassIndex = subpassIndex;
			SampleLocationsInfo = sampleLocationsInfo;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRenderPassSampleLocationsBeginInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRenderPassSampleLocationsBeginInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "attachmentInitialSampleLocationsCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AttachmentInitialSampleLocationsCount;
		[NativeName(NativeNameType.Field, "pAttachmentInitialSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkAttachmentSampleLocationsEXT*")]
		public unsafe VkAttachmentSampleLocationsEXT* PAttachmentInitialSampleLocations;
		[NativeName(NativeNameType.Field, "postSubpassSampleLocationsCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PostSubpassSampleLocationsCount;
		[NativeName(NativeNameType.Field, "pPostSubpassSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkSubpassSampleLocationsEXT*")]
		public unsafe VkSubpassSampleLocationsEXT* PPostSubpassSampleLocations;

		public unsafe VkRenderPassSampleLocationsBeginInfoEXT(VkStructureType sType = default, void* pNext = default, uint attachmentInitialSampleLocationsCount = default, VkAttachmentSampleLocationsEXT* pAttachmentInitialSampleLocations = default, uint postSubpassSampleLocationsCount = default, VkSubpassSampleLocationsEXT* pPostSubpassSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			AttachmentInitialSampleLocationsCount = attachmentInitialSampleLocationsCount;
			PAttachmentInitialSampleLocations = pAttachmentInitialSampleLocations;
			PostSubpassSampleLocationsCount = postSubpassSampleLocationsCount;
			PPostSubpassSampleLocations = pPostSubpassSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineSampleLocationsStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineSampleLocationsStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleLocationsEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SampleLocationsEnable;
		[NativeName(NativeNameType.Field, "sampleLocationsInfo")]
		[NativeName(NativeNameType.Type, "VkSampleLocationsInfoEXT")]
		public VkSampleLocationsInfoEXT SampleLocationsInfo;

		public unsafe VkPipelineSampleLocationsStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint sampleLocationsEnable = default, VkSampleLocationsInfoEXT sampleLocationsInfo = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationsEnable = sampleLocationsEnable;
			SampleLocationsInfo = sampleLocationsInfo;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceSampleLocationsPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceSampleLocationsPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleLocationSampleCounts")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlags")]
		public uint SampleLocationSampleCounts;
		[NativeName(NativeNameType.Field, "maxSampleLocationGridSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxSampleLocationGridSize;
		[NativeName(NativeNameType.Field, "sampleLocationCoordinateRange")]
		[NativeName(NativeNameType.Type, "float[2]")]
		public float SampleLocationCoordinateRange_0;
		public float SampleLocationCoordinateRange_1;
		[NativeName(NativeNameType.Field, "sampleLocationSubPixelBits")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleLocationSubPixelBits;
		[NativeName(NativeNameType.Field, "variableSampleLocations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VariableSampleLocations;

		public unsafe VkPhysicalDeviceSampleLocationsPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint sampleLocationSampleCounts = default, VkExtent2D maxSampleLocationGridSize = default, float* sampleLocationCoordinateRange = default, uint sampleLocationSubPixelBits = default, uint variableSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationSampleCounts = sampleLocationSampleCounts;
			MaxSampleLocationGridSize = maxSampleLocationGridSize;
			if (sampleLocationCoordinateRange != default)
			{
				SampleLocationCoordinateRange_0 = sampleLocationCoordinateRange[0];
				SampleLocationCoordinateRange_1 = sampleLocationCoordinateRange[1];
			}
			SampleLocationSubPixelBits = sampleLocationSubPixelBits;
			VariableSampleLocations = variableSampleLocations;
		}

		public unsafe VkPhysicalDeviceSampleLocationsPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint sampleLocationSampleCounts = default, VkExtent2D maxSampleLocationGridSize = default, Span<float> sampleLocationCoordinateRange = default, uint sampleLocationSubPixelBits = default, uint variableSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationSampleCounts = sampleLocationSampleCounts;
			MaxSampleLocationGridSize = maxSampleLocationGridSize;
			if (sampleLocationCoordinateRange != default)
			{
				SampleLocationCoordinateRange_0 = sampleLocationCoordinateRange[0];
				SampleLocationCoordinateRange_1 = sampleLocationCoordinateRange[1];
			}
			SampleLocationSubPixelBits = sampleLocationSubPixelBits;
			VariableSampleLocations = variableSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMultisamplePropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMultisamplePropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxSampleLocationGridSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxSampleLocationGridSize;

		public unsafe VkMultisamplePropertiesEXT(VkStructureType sType = default, void* pNext = default, VkExtent2D maxSampleLocationGridSize = default)
		{
			SType = sType;
			PNext = pNext;
			MaxSampleLocationGridSize = maxSampleLocationGridSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "advancedBlendCoherentOperations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendCoherentOperations;

		public unsafe VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint advancedBlendCoherentOperations = default)
		{
			SType = sType;
			PNext = pNext;
			AdvancedBlendCoherentOperations = advancedBlendCoherentOperations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "advancedBlendMaxColorAttachments")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AdvancedBlendMaxColorAttachments;
		[NativeName(NativeNameType.Field, "advancedBlendIndependentBlend")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendIndependentBlend;
		[NativeName(NativeNameType.Field, "advancedBlendNonPremultipliedSrcColor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendNonPremultipliedSrcColor;
		[NativeName(NativeNameType.Field, "advancedBlendNonPremultipliedDstColor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendNonPremultipliedDstColor;
		[NativeName(NativeNameType.Field, "advancedBlendCorrelatedOverlap")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendCorrelatedOverlap;
		[NativeName(NativeNameType.Field, "advancedBlendAllOperations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendAllOperations;

		public unsafe VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint advancedBlendMaxColorAttachments = default, uint advancedBlendIndependentBlend = default, uint advancedBlendNonPremultipliedSrcColor = default, uint advancedBlendNonPremultipliedDstColor = default, uint advancedBlendCorrelatedOverlap = default, uint advancedBlendAllOperations = default)
		{
			SType = sType;
			PNext = pNext;
			AdvancedBlendMaxColorAttachments = advancedBlendMaxColorAttachments;
			AdvancedBlendIndependentBlend = advancedBlendIndependentBlend;
			AdvancedBlendNonPremultipliedSrcColor = advancedBlendNonPremultipliedSrcColor;
			AdvancedBlendNonPremultipliedDstColor = advancedBlendNonPremultipliedDstColor;
			AdvancedBlendCorrelatedOverlap = advancedBlendCorrelatedOverlap;
			AdvancedBlendAllOperations = advancedBlendAllOperations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineColorBlendAdvancedStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineColorBlendAdvancedStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcPremultiplied")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SrcPremultiplied;
		[NativeName(NativeNameType.Field, "dstPremultiplied")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DstPremultiplied;
		[NativeName(NativeNameType.Field, "blendOverlap")]
		[NativeName(NativeNameType.Type, "VkBlendOverlapEXT")]
		public VkBlendOverlapEXT BlendOverlap;

		public unsafe VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint srcPremultiplied = default, uint dstPremultiplied = default, VkBlendOverlapEXT blendOverlap = default)
		{
			SType = sType;
			PNext = pNext;
			SrcPremultiplied = srcPremultiplied;
			DstPremultiplied = dstPremultiplied;
			BlendOverlap = blendOverlap;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCoverageToColorStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCoverageToColorStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCoverageToColorStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "coverageToColorEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CoverageToColorEnable;
		[NativeName(NativeNameType.Field, "coverageToColorLocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CoverageToColorLocation;

		public unsafe VkPipelineCoverageToColorStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, uint coverageToColorEnable = default, uint coverageToColorLocation = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			CoverageToColorEnable = coverageToColorEnable;
			CoverageToColorLocation = coverageToColorLocation;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCoverageModulationStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCoverageModulationStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCoverageModulationStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "coverageModulationMode")]
		[NativeName(NativeNameType.Type, "VkCoverageModulationModeNV")]
		public VkCoverageModulationModeNV CoverageModulationMode;
		[NativeName(NativeNameType.Field, "coverageModulationTableEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CoverageModulationTableEnable;
		[NativeName(NativeNameType.Field, "coverageModulationTableCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CoverageModulationTableCount;
		[NativeName(NativeNameType.Field, "pCoverageModulationTable")]
		[NativeName(NativeNameType.Type, "const float*")]
		public unsafe float* PCoverageModulationTable;

		public unsafe VkPipelineCoverageModulationStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, VkCoverageModulationModeNV coverageModulationMode = default, uint coverageModulationTableEnable = default, uint coverageModulationTableCount = default, float* pCoverageModulationTable = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			CoverageModulationMode = coverageModulationMode;
			CoverageModulationTableEnable = coverageModulationTableEnable;
			CoverageModulationTableCount = coverageModulationTableCount;
			PCoverageModulationTable = pCoverageModulationTable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderSMBuiltinsPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderSMCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderSMCount;
		[NativeName(NativeNameType.Field, "shaderWarpsPerSM")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderWarpsPerSM;

		public unsafe VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkStructureType sType = default, void* pNext = default, uint shaderSMCount = default, uint shaderWarpsPerSM = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderSMCount = shaderSMCount;
			ShaderWarpsPerSM = shaderWarpsPerSM;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderSMBuiltinsFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderSMBuiltins")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSMBuiltins;

		public unsafe VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkStructureType sType = default, void* pNext = default, uint shaderSMBuiltins = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderSMBuiltins = shaderSMBuiltins;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "drmFormatModifierPlaneCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierPlaneCount;
		[NativeName(NativeNameType.Field, "drmFormatModifierTilingFeatures")]
		[NativeName(NativeNameType.Type, "VkFormatFeatureFlags")]
		public uint DrmFormatModifierTilingFeatures;

		public unsafe VkDrmFormatModifierPropertiesEXT(ulong drmFormatModifier = default, uint drmFormatModifierPlaneCount = default, uint drmFormatModifierTilingFeatures = default)
		{
			DrmFormatModifier = drmFormatModifier;
			DrmFormatModifierPlaneCount = drmFormatModifierPlaneCount;
			DrmFormatModifierTilingFeatures = drmFormatModifierTilingFeatures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierPropertiesListEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierPropertiesListEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierCount;
		[NativeName(NativeNameType.Field, "pDrmFormatModifierProperties")]
		[NativeName(NativeNameType.Type, "VkDrmFormatModifierPropertiesEXT*")]
		public unsafe VkDrmFormatModifierPropertiesEXT* PDrmFormatModifierProperties;

		public unsafe VkDrmFormatModifierPropertiesListEXT(VkStructureType sType = default, void* pNext = default, uint drmFormatModifierCount = default, VkDrmFormatModifierPropertiesEXT* pDrmFormatModifierProperties = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifierCount = drmFormatModifierCount;
			PDrmFormatModifierProperties = pDrmFormatModifierProperties;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceImageDrmFormatModifierInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceImageDrmFormatModifierInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "sharingMode")]
		[NativeName(NativeNameType.Type, "VkSharingMode")]
		public VkSharingMode SharingMode;
		[NativeName(NativeNameType.Field, "queueFamilyIndexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint QueueFamilyIndexCount;
		[NativeName(NativeNameType.Field, "pQueueFamilyIndices")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PQueueFamilyIndices;

		public unsafe VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkStructureType sType = default, void* pNext = default, ulong drmFormatModifier = default, VkSharingMode sharingMode = default, uint queueFamilyIndexCount = default, uint* pQueueFamilyIndices = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifier = drmFormatModifier;
			SharingMode = sharingMode;
			QueueFamilyIndexCount = queueFamilyIndexCount;
			PQueueFamilyIndices = pQueueFamilyIndices;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageDrmFormatModifierListCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageDrmFormatModifierListCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierCount;
		[NativeName(NativeNameType.Field, "pDrmFormatModifiers")]
		[NativeName(NativeNameType.Type, "const uint64_t*")]
		public unsafe ulong* PDrmFormatModifiers;

		public unsafe VkImageDrmFormatModifierListCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint drmFormatModifierCount = default, ulong* pDrmFormatModifiers = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifierCount = drmFormatModifierCount;
			PDrmFormatModifiers = pDrmFormatModifiers;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageDrmFormatModifierExplicitCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageDrmFormatModifierExplicitCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "drmFormatModifierPlaneCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierPlaneCount;
		[NativeName(NativeNameType.Field, "pPlaneLayouts")]
		[NativeName(NativeNameType.Type, "const VkSubresourceLayout*")]
		public unsafe VkSubresourceLayout* PPlaneLayouts;

		public unsafe VkImageDrmFormatModifierExplicitCreateInfoEXT(VkStructureType sType = default, void* pNext = default, ulong drmFormatModifier = default, uint drmFormatModifierPlaneCount = default, VkSubresourceLayout* pPlaneLayouts = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifier = drmFormatModifier;
			DrmFormatModifierPlaneCount = drmFormatModifierPlaneCount;
			PPlaneLayouts = pPlaneLayouts;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageDrmFormatModifierPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageDrmFormatModifierPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;

		public unsafe VkImageDrmFormatModifierPropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong drmFormatModifier = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifier = drmFormatModifier;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierProperties2EXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierProperties2EXT
	{
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "drmFormatModifierPlaneCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierPlaneCount;
		[NativeName(NativeNameType.Field, "drmFormatModifierTilingFeatures")]
		[NativeName(NativeNameType.Type, "VkFormatFeatureFlags2")]
		public uint DrmFormatModifierTilingFeatures;

		public unsafe VkDrmFormatModifierProperties2EXT(ulong drmFormatModifier = default, uint drmFormatModifierPlaneCount = default, uint drmFormatModifierTilingFeatures = default)
		{
			DrmFormatModifier = drmFormatModifier;
			DrmFormatModifierPlaneCount = drmFormatModifierPlaneCount;
			DrmFormatModifierTilingFeatures = drmFormatModifierTilingFeatures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierPropertiesList2EXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierPropertiesList2EXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierCount;
		[NativeName(NativeNameType.Field, "pDrmFormatModifierProperties")]
		[NativeName(NativeNameType.Type, "VkDrmFormatModifierProperties2EXT*")]
		public unsafe VkDrmFormatModifierProperties2EXT* PDrmFormatModifierProperties;

		public unsafe VkDrmFormatModifierPropertiesList2EXT(VkStructureType sType = default, void* pNext = default, uint drmFormatModifierCount = default, VkDrmFormatModifierProperties2EXT* pDrmFormatModifierProperties = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifierCount = drmFormatModifierCount;
			PDrmFormatModifierProperties = pDrmFormatModifierProperties;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkValidationCacheCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkValidationCacheCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkValidationCacheCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "initialDataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong InitialDataSize;
		[NativeName(NativeNameType.Field, "pInitialData")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PInitialData;

		public unsafe VkValidationCacheCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, ulong initialDataSize = default, void* pInitialData = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			InitialDataSize = initialDataSize;
			PInitialData = pInitialData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkShaderModuleValidationCacheCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkShaderModuleValidationCacheCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "validationCache")]
		[NativeName(NativeNameType.Type, "VkValidationCacheEXT")]
		public VkValidationCacheEXT ValidationCache;

		public unsafe VkShaderModuleValidationCacheCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkValidationCacheEXT validationCache = default)
		{
			SType = sType;
			PNext = pNext;
			ValidationCache = validationCache;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkShadingRatePaletteNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkShadingRatePaletteNV
	{
		[NativeName(NativeNameType.Field, "shadingRatePaletteEntryCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShadingRatePaletteEntryCount;
		[NativeName(NativeNameType.Field, "pShadingRatePaletteEntries")]
		[NativeName(NativeNameType.Type, "const VkShadingRatePaletteEntryNV*")]
		public unsafe VkShadingRatePaletteEntryNV* PShadingRatePaletteEntries;

		public unsafe VkShadingRatePaletteNV(uint shadingRatePaletteEntryCount = default, VkShadingRatePaletteEntryNV* pShadingRatePaletteEntries = default)
		{
			ShadingRatePaletteEntryCount = shadingRatePaletteEntryCount;
			PShadingRatePaletteEntries = pShadingRatePaletteEntries;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportShadingRateImageStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportShadingRateImageStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shadingRateImageEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShadingRateImageEnable;
		[NativeName(NativeNameType.Field, "viewportCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewportCount;
		[NativeName(NativeNameType.Field, "pShadingRatePalettes")]
		[NativeName(NativeNameType.Type, "const VkShadingRatePaletteNV*")]
		public unsafe VkShadingRatePaletteNV* PShadingRatePalettes;

		public unsafe VkPipelineViewportShadingRateImageStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint shadingRateImageEnable = default, uint viewportCount = default, VkShadingRatePaletteNV* pShadingRatePalettes = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateImageEnable = shadingRateImageEnable;
			ViewportCount = viewportCount;
			PShadingRatePalettes = pShadingRatePalettes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShadingRateImageFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShadingRateImageFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shadingRateImage")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShadingRateImage;
		[NativeName(NativeNameType.Field, "shadingRateCoarseSampleOrder")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShadingRateCoarseSampleOrder;

		public unsafe VkPhysicalDeviceShadingRateImageFeaturesNV(VkStructureType sType = default, void* pNext = default, uint shadingRateImage = default, uint shadingRateCoarseSampleOrder = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateImage = shadingRateImage;
			ShadingRateCoarseSampleOrder = shadingRateCoarseSampleOrder;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShadingRateImagePropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShadingRateImagePropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shadingRateTexelSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D ShadingRateTexelSize;
		[NativeName(NativeNameType.Field, "shadingRatePaletteSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShadingRatePaletteSize;
		[NativeName(NativeNameType.Field, "shadingRateMaxCoarseSamples")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShadingRateMaxCoarseSamples;

		public unsafe VkPhysicalDeviceShadingRateImagePropertiesNV(VkStructureType sType = default, void* pNext = default, VkExtent2D shadingRateTexelSize = default, uint shadingRatePaletteSize = default, uint shadingRateMaxCoarseSamples = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateTexelSize = shadingRateTexelSize;
			ShadingRatePaletteSize = shadingRatePaletteSize;
			ShadingRateMaxCoarseSamples = shadingRateMaxCoarseSamples;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCoarseSampleLocationNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCoarseSampleLocationNV
	{
		[NativeName(NativeNameType.Field, "pixelX")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PixelX;
		[NativeName(NativeNameType.Field, "pixelY")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PixelY;
		[NativeName(NativeNameType.Field, "sample")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Sample;

		public unsafe VkCoarseSampleLocationNV(uint pixelX = default, uint pixelY = default, uint sample = default)
		{
			PixelX = pixelX;
			PixelY = pixelY;
			Sample = sample;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCoarseSampleOrderCustomNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCoarseSampleOrderCustomNV
	{
		[NativeName(NativeNameType.Field, "shadingRate")]
		[NativeName(NativeNameType.Type, "VkShadingRatePaletteEntryNV")]
		public VkShadingRatePaletteEntryNV ShadingRate;
		[NativeName(NativeNameType.Field, "sampleCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleCount;
		[NativeName(NativeNameType.Field, "sampleLocationCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleLocationCount;
		[NativeName(NativeNameType.Field, "pSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkCoarseSampleLocationNV*")]
		public unsafe VkCoarseSampleLocationNV* PSampleLocations;

		public unsafe VkCoarseSampleOrderCustomNV(VkShadingRatePaletteEntryNV shadingRate = default, uint sampleCount = default, uint sampleLocationCount = default, VkCoarseSampleLocationNV* pSampleLocations = default)
		{
			ShadingRate = shadingRate;
			SampleCount = sampleCount;
			SampleLocationCount = sampleLocationCount;
			PSampleLocations = pSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportCoarseSampleOrderStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleOrderType")]
		[NativeName(NativeNameType.Type, "VkCoarseSampleOrderTypeNV")]
		public VkCoarseSampleOrderTypeNV SampleOrderType;
		[NativeName(NativeNameType.Field, "customSampleOrderCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CustomSampleOrderCount;
		[NativeName(NativeNameType.Field, "pCustomSampleOrders")]
		[NativeName(NativeNameType.Type, "const VkCoarseSampleOrderCustomNV*")]
		public unsafe VkCoarseSampleOrderCustomNV* PCustomSampleOrders;

		public unsafe VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, VkCoarseSampleOrderTypeNV sampleOrderType = default, uint customSampleOrderCount = default, VkCoarseSampleOrderCustomNV* pCustomSampleOrders = default)
		{
			SType = sType;
			PNext = pNext;
			SampleOrderType = sampleOrderType;
			CustomSampleOrderCount = customSampleOrderCount;
			PCustomSampleOrders = pCustomSampleOrders;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRayTracingShaderGroupCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRayTracingShaderGroupCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkRayTracingShaderGroupTypeKHR")]
		public VkRayTracingShaderGroupTypeKHR Type;
		[NativeName(NativeNameType.Field, "generalShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GeneralShader;
		[NativeName(NativeNameType.Field, "closestHitShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ClosestHitShader;
		[NativeName(NativeNameType.Field, "anyHitShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AnyHitShader;
		[NativeName(NativeNameType.Field, "intersectionShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint IntersectionShader;

		public unsafe VkRayTracingShaderGroupCreateInfoNV(VkStructureType sType = default, void* pNext = default, VkRayTracingShaderGroupTypeKHR type = default, uint generalShader = default, uint closestHitShader = default, uint anyHitShader = default, uint intersectionShader = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			GeneralShader = generalShader;
			ClosestHitShader = closestHitShader;
			AnyHitShader = anyHitShader;
			IntersectionShader = intersectionShader;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRayTracingPipelineCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRayTracingPipelineCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCreateFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "stageCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StageCount;
		[NativeName(NativeNameType.Field, "pStages")]
		[NativeName(NativeNameType.Type, "const VkPipelineShaderStageCreateInfo*")]
		public unsafe VkPipelineShaderStageCreateInfo* PStages;
		[NativeName(NativeNameType.Field, "groupCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCount;
		[NativeName(NativeNameType.Field, "pGroups")]
		[NativeName(NativeNameType.Type, "const VkRayTracingShaderGroupCreateInfoNV*")]
		public unsafe VkRayTracingShaderGroupCreateInfoNV* PGroups;
		[NativeName(NativeNameType.Field, "maxRecursionDepth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxRecursionDepth;
		[NativeName(NativeNameType.Field, "layout")]
		[NativeName(NativeNameType.Type, "VkPipelineLayout")]
		public VkPipelineLayout Layout;
		[NativeName(NativeNameType.Field, "basePipelineHandle")]
		[NativeName(NativeNameType.Type, "VkPipeline")]
		public VkPipeline BasePipelineHandle;
		[NativeName(NativeNameType.Field, "basePipelineIndex")]
		[NativeName(NativeNameType.Type, "int32_t")]
		public int BasePipelineIndex;

		public unsafe VkRayTracingPipelineCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, uint stageCount = default, VkPipelineShaderStageCreateInfo* pStages = default, uint groupCount = default, VkRayTracingShaderGroupCreateInfoNV* pGroups = default, uint maxRecursionDepth = default, VkPipelineLayout layout = default, VkPipeline basePipelineHandle = default, int basePipelineIndex = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			StageCount = stageCount;
			PStages = pStages;
			GroupCount = groupCount;
			PGroups = pGroups;
			MaxRecursionDepth = maxRecursionDepth;
			Layout = layout;
			BasePipelineHandle = basePipelineHandle;
			BasePipelineIndex = basePipelineIndex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryTrianglesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryTrianglesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vertexData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer VertexData;
		[NativeName(NativeNameType.Field, "vertexOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong VertexOffset;
		[NativeName(NativeNameType.Field, "vertexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VertexCount;
		[NativeName(NativeNameType.Field, "vertexStride")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong VertexStride;
		[NativeName(NativeNameType.Field, "vertexFormat")]
		[NativeName(NativeNameType.Type, "VkFormat")]
		public VkFormat VertexFormat;
		[NativeName(NativeNameType.Field, "indexData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer IndexData;
		[NativeName(NativeNameType.Field, "indexOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong IndexOffset;
		[NativeName(NativeNameType.Field, "indexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint IndexCount;
		[NativeName(NativeNameType.Field, "indexType")]
		[NativeName(NativeNameType.Type, "VkIndexType")]
		public VkIndexType IndexType;
		[NativeName(NativeNameType.Field, "transformData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer TransformData;
		[NativeName(NativeNameType.Field, "transformOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong TransformOffset;

		public unsafe VkGeometryTrianglesNV(VkStructureType sType = default, void* pNext = default, VkBuffer vertexData = default, ulong vertexOffset = default, uint vertexCount = default, ulong vertexStride = default, VkFormat vertexFormat = default, VkBuffer indexData = default, ulong indexOffset = default, uint indexCount = default, VkIndexType indexType = default, VkBuffer transformData = default, ulong transformOffset = default)
		{
			SType = sType;
			PNext = pNext;
			VertexData = vertexData;
			VertexOffset = vertexOffset;
			VertexCount = vertexCount;
			VertexStride = vertexStride;
			VertexFormat = vertexFormat;
			IndexData = indexData;
			IndexOffset = indexOffset;
			IndexCount = indexCount;
			IndexType = indexType;
			TransformData = transformData;
			TransformOffset = transformOffset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryAABBNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryAABBNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "aabbData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer AabbData;
		[NativeName(NativeNameType.Field, "numAABBs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumAABBs;
		[NativeName(NativeNameType.Field, "stride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Stride;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;

		public unsafe VkGeometryAABBNV(VkStructureType sType = default, void* pNext = default, VkBuffer aabbData = default, uint numAABBs = default, uint stride = default, ulong offset = default)
		{
			SType = sType;
			PNext = pNext;
			AabbData = aabbData;
			NumAABBs = numAABBs;
			Stride = stride;
			Offset = offset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryDataNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryDataNV
	{
		[NativeName(NativeNameType.Field, "triangles")]
		[NativeName(NativeNameType.Type, "VkGeometryTrianglesNV")]
		public VkGeometryTrianglesNV Triangles;
		[NativeName(NativeNameType.Field, "aabbs")]
		[NativeName(NativeNameType.Type, "VkGeometryAABBNV")]
		public VkGeometryAABBNV Aabbs;

		public unsafe VkGeometryDataNV(VkGeometryTrianglesNV triangles = default, VkGeometryAABBNV aabbs = default)
		{
			Triangles = triangles;
			Aabbs = aabbs;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "geometryType")]
		[NativeName(NativeNameType.Type, "VkGeometryTypeKHR")]
		public VkGeometryTypeKHR GeometryType;
		[NativeName(NativeNameType.Field, "geometry")]
		[NativeName(NativeNameType.Type, "VkGeometryDataNV")]
		public VkGeometryDataNV Geometry;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkGeometryFlagsKHR")]
		public uint Flags;

		public unsafe VkGeometryNV(VkStructureType sType = default, void* pNext = default, VkGeometryTypeKHR geometryType = default, VkGeometryDataNV geometry = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			GeometryType = geometryType;
			Geometry = geometry;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureTypeNV")]
		public uint Type;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkBuildAccelerationStructureFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "instanceCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceCount;
		[NativeName(NativeNameType.Field, "geometryCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GeometryCount;
		[NativeName(NativeNameType.Field, "pGeometries")]
		[NativeName(NativeNameType.Type, "const VkGeometryNV*")]
		public unsafe VkGeometryNV* PGeometries;

		public unsafe VkAccelerationStructureInfoNV(VkStructureType sType = default, void* pNext = default, uint type = default, uint flags = default, uint instanceCount = default, uint geometryCount = default, VkGeometryNV* pGeometries = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			Flags = flags;
			InstanceCount = instanceCount;
			GeometryCount = geometryCount;
			PGeometries = pGeometries;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "compactedSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong CompactedSize;
		[NativeName(NativeNameType.Field, "info")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureInfoNV")]
		public VkAccelerationStructureInfoNV Info;

		public unsafe VkAccelerationStructureCreateInfoNV(VkStructureType sType = default, void* pNext = default, ulong compactedSize = default, VkAccelerationStructureInfoNV info = default)
		{
			SType = sType;
			PNext = pNext;
			CompactedSize = compactedSize;
			Info = info;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindAccelerationStructureMemoryInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindAccelerationStructureMemoryInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureNV")]
		public VkAccelerationStructureNV AccelerationStructure;
		[NativeName(NativeNameType.Field, "memory")]
		[NativeName(NativeNameType.Type, "VkDeviceMemory")]
		public VkDeviceMemory Memory;
		[NativeName(NativeNameType.Field, "memoryOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MemoryOffset;
		[NativeName(NativeNameType.Field, "deviceIndexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DeviceIndexCount;
		[NativeName(NativeNameType.Field, "pDeviceIndices")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PDeviceIndices;

		public unsafe VkBindAccelerationStructureMemoryInfoNV(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureNV accelerationStructure = default, VkDeviceMemory memory = default, ulong memoryOffset = default, uint deviceIndexCount = default, uint* pDeviceIndices = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructure = accelerationStructure;
			Memory = memory;
			MemoryOffset = memoryOffset;
			DeviceIndexCount = deviceIndexCount;
			PDeviceIndices = pDeviceIndices;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkWriteDescriptorSetAccelerationStructureNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkWriteDescriptorSetAccelerationStructureNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructureCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AccelerationStructureCount;
		[NativeName(NativeNameType.Field, "pAccelerationStructures")]
		[NativeName(NativeNameType.Type, "const VkAccelerationStructureNV*")]
		public unsafe VkAccelerationStructureNV* PAccelerationStructures;

		public unsafe VkWriteDescriptorSetAccelerationStructureNV(VkStructureType sType = default, void* pNext = default, uint accelerationStructureCount = default, VkAccelerationStructureNV* pAccelerationStructures = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructureCount = accelerationStructureCount;
			PAccelerationStructures = pAccelerationStructures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureMemoryRequirementsInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureMemoryRequirementsInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureMemoryRequirementsTypeNV")]
		public VkAccelerationStructureMemoryRequirementsTypeNV Type;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureNV")]
		public VkAccelerationStructureNV AccelerationStructure;

		public unsafe VkAccelerationStructureMemoryRequirementsInfoNV(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureMemoryRequirementsTypeNV type = default, VkAccelerationStructureNV accelerationStructure = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			AccelerationStructure = accelerationStructure;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayTracingPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayTracingPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderGroupHandleSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupHandleSize;
		[NativeName(NativeNameType.Field, "maxRecursionDepth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxRecursionDepth;
		[NativeName(NativeNameType.Field, "maxShaderGroupStride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxShaderGroupStride;
		[NativeName(NativeNameType.Field, "shaderGroupBaseAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupBaseAlignment;
		[NativeName(NativeNameType.Field, "maxGeometryCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxGeometryCount;
		[NativeName(NativeNameType.Field, "maxInstanceCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxInstanceCount;
		[NativeName(NativeNameType.Field, "maxTriangleCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxTriangleCount;
		[NativeName(NativeNameType.Field, "maxDescriptorSetAccelerationStructures")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetAccelerationStructures;

		public unsafe VkPhysicalDeviceRayTracingPropertiesNV(VkStructureType sType = default, void* pNext = default, uint shaderGroupHandleSize = default, uint maxRecursionDepth = default, uint maxShaderGroupStride = default, uint shaderGroupBaseAlignment = default, ulong maxGeometryCount = default, ulong maxInstanceCount = default, ulong maxTriangleCount = default, uint maxDescriptorSetAccelerationStructures = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderGroupHandleSize = shaderGroupHandleSize;
			MaxRecursionDepth = maxRecursionDepth;
			MaxShaderGroupStride = maxShaderGroupStride;
			ShaderGroupBaseAlignment = shaderGroupBaseAlignment;
			MaxGeometryCount = maxGeometryCount;
			MaxInstanceCount = maxInstanceCount;
			MaxTriangleCount = maxTriangleCount;
			MaxDescriptorSetAccelerationStructures = maxDescriptorSetAccelerationStructures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkTransformMatrixKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkTransformMatrixKHR
	{
		[NativeName(NativeNameType.Field, "matrix")]
		[NativeName(NativeNameType.Type, "float[4][3]")]
		public unsafe float* Matrix_0;
		public unsafe float* Matrix_1;
		public unsafe float* Matrix_2;

		public unsafe VkTransformMatrixKHR(float** matrix = default)
		{
			if (matrix != default)
			{
				Matrix_0 = matrix[0];
				Matrix_1 = matrix[1];
				Matrix_2 = matrix[2];
			}
		}

		public unsafe VkTransformMatrixKHR(Span<Pointer<float>> matrix = default)
		{
			if (matrix != default)
			{
				Matrix_0 = matrix[0];
				Matrix_1 = matrix[1];
				Matrix_2 = matrix[2];
			}
		}


		public unsafe Span<Pointer<float>> Matrix
		
		{
			get
			{
				fixed (float** p = &this.Matrix_0)
				{
					return new Span<Pointer<float>>(p, 3);
				}
			}
		}
	}

	[NativeName(NativeNameType.StructOrClass, "VkAabbPositionsKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAabbPositionsKHR
	{
		[NativeName(NativeNameType.Field, "minX")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinX;
		[NativeName(NativeNameType.Field, "minY")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinY;
		[NativeName(NativeNameType.Field, "minZ")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinZ;
		[NativeName(NativeNameType.Field, "maxX")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxX;
		[NativeName(NativeNameType.Field, "maxY")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxY;
		[NativeName(NativeNameType.Field, "maxZ")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxZ;

		public unsafe VkAabbPositionsKHR(float minX = default, float minY = default, float minZ = default, float maxX = default, float maxY = default, float maxZ = default)
		{
			MinX = minX;
			MinY = minY;
			MinZ = minZ;
			MaxX = maxX;
			MaxY = maxY;
			MaxZ = maxZ;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureInstanceKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureInstanceKHR
	{
		[NativeName(NativeNameType.Field, "transform")]
		[NativeName(NativeNameType.Type, "VkTransformMatrixKHR")]
		public VkTransformMatrixKHR Transform;
		[NativeName(NativeNameType.Field, "instanceCustomIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceCustomIndex;
		[NativeName(NativeNameType.Field, "mask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Mask;
		[NativeName(NativeNameType.Field, "instanceShaderBindingTableRecordOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceShaderBindingTableRecordOffset;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkGeometryInstanceFlagsKHR")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "accelerationStructureReference")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong AccelerationStructureReference;

		public unsafe VkAccelerationStructureInstanceKHR(VkTransformMatrixKHR transform = default, uint instanceCustomIndex = default, uint mask = default, uint instanceShaderBindingTableRecordOffset = default, uint flags = default, ulong accelerationStructureReference = default)
		{
			Transform = transform;
			InstanceCustomIndex = instanceCustomIndex;
			Mask = mask;
			InstanceShaderBindingTableRecordOffset = instanceShaderBindingTableRecordOffset;
			Flags = flags;
			AccelerationStructureReference = accelerationStructureReference;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "representativeFragmentTest")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RepresentativeFragmentTest;

		public unsafe VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkStructureType sType = default, void* pNext = default, uint representativeFragmentTest = default)
		{
			SType = sType;
			PNext = pNext;
			RepresentativeFragmentTest = representativeFragmentTest;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRepresentativeFragmentTestStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRepresentativeFragmentTestStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "representativeFragmentTestEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RepresentativeFragmentTestEnable;

		public unsafe VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint representativeFragmentTestEnable = default)
		{
			SType = sType;
			PNext = pNext;
			RepresentativeFragmentTestEnable = representativeFragmentTestEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceImageViewImageFormatInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceImageViewImageFormatInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageViewType")]
		[NativeName(NativeNameType.Type, "VkImageViewType")]
		public VkImageViewType ImageViewType;

		public unsafe VkPhysicalDeviceImageViewImageFormatInfoEXT(VkStructureType sType = default, void* pNext = default, VkImageViewType imageViewType = default)
		{
			SType = sType;
			PNext = pNext;
			ImageViewType = imageViewType;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkFilterCubicImageViewImageFormatPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkFilterCubicImageViewImageFormatPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "filterCubic")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterCubic;
		[NativeName(NativeNameType.Field, "filterCubicMinmax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterCubicMinmax;

		public unsafe VkFilterCubicImageViewImageFormatPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint filterCubic = default, uint filterCubicMinmax = default)
		{
			SType = sType;
			PNext = pNext;
			FilterCubic = filterCubic;
			FilterCubicMinmax = filterCubicMinmax;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImportMemoryHostPointerInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImportMemoryHostPointerInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "handleType")]
		[NativeName(NativeNameType.Type, "VkExternalMemoryHandleTypeFlagBits")]
		public VkExternalMemoryHandleTypeFlagBits HandleType;
		[NativeName(NativeNameType.Field, "pHostPointer")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PHostPointer;

		public unsafe VkImportMemoryHostPointerInfoEXT(VkStructureType sType = default, void* pNext = default, VkExternalMemoryHandleTypeFlagBits handleType = default, void* pHostPointer = default)
		{
			SType = sType;
			PNext = pNext;
			HandleType = handleType;
			PHostPointer = pHostPointer;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMemoryHostPointerPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryHostPointerPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "memoryTypeBits")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MemoryTypeBits;

		public unsafe VkMemoryHostPointerPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint memoryTypeBits = default)
		{
			SType = sType;
			PNext = pNext;
			MemoryTypeBits = memoryTypeBits;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceExternalMemoryHostPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceExternalMemoryHostPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "minImportedHostPointerAlignment")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MinImportedHostPointerAlignment;

		public unsafe VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong minImportedHostPointerAlignment = default)
		{
			SType = sType;
			PNext = pNext;
			MinImportedHostPointerAlignment = minImportedHostPointerAlignment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCompilerControlCreateInfoAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCompilerControlCreateInfoAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "compilerControlFlags")]
		[NativeName(NativeNameType.Type, "VkPipelineCompilerControlFlagsAMD")]
		public uint CompilerControlFlags;

		public unsafe VkPipelineCompilerControlCreateInfoAMD(VkStructureType sType = default, void* pNext = default, uint compilerControlFlags = default)
		{
			SType = sType;
			PNext = pNext;
			CompilerControlFlags = compilerControlFlags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCalibratedTimestampInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCalibratedTimestampInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "timeDomain")]
		[NativeName(NativeNameType.Type, "VkTimeDomainEXT")]
		public VkTimeDomainEXT TimeDomain;

		public unsafe VkCalibratedTimestampInfoEXT(VkStructureType sType = default, void* pNext = default, VkTimeDomainEXT timeDomain = default)
		{
			SType = sType;
			PNext = pNext;
			TimeDomain = timeDomain;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderCorePropertiesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderCorePropertiesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderEngineCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderEngineCount;
		[NativeName(NativeNameType.Field, "shaderArraysPerEngineCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderArraysPerEngineCount;
		[NativeName(NativeNameType.Field, "computeUnitsPerShaderArray")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ComputeUnitsPerShaderArray;
		[NativeName(NativeNameType.Field, "simdPerComputeUnit")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SimdPerComputeUnit;
		[NativeName(NativeNameType.Field, "wavefrontsPerSimd")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint WavefrontsPerSimd;
		[NativeName(NativeNameType.Field, "wavefrontSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint WavefrontSize;
		[NativeName(NativeNameType.Field, "sgprsPerSimd")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SgprsPerSimd;
		[NativeName(NativeNameType.Field, "minSgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinSgprAllocation;
		[NativeName(NativeNameType.Field, "maxSgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxSgprAllocation;
		[NativeName(NativeNameType.Field, "sgprAllocationGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SgprAllocationGranularity;
		[NativeName(NativeNameType.Field, "vgprsPerSimd")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VgprsPerSimd;
		[NativeName(NativeNameType.Field, "minVgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinVgprAllocation;
		[NativeName(NativeNameType.Field, "maxVgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxVgprAllocation;
		[NativeName(NativeNameType.Field, "vgprAllocationGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VgprAllocationGranularity;

		public unsafe VkPhysicalDeviceShaderCorePropertiesAMD(VkStructureType sType = default, void* pNext = default, uint shaderEngineCount = default, uint shaderArraysPerEngineCount = default, uint computeUnitsPerShaderArray = default, uint simdPerComputeUnit = default, uint wavefrontsPerSimd = default, uint wavefrontSize = default, uint sgprsPerSimd = default, uint minSgprAllocation = default, uint maxSgprAllocation = default, uint sgprAllocationGranularity = default, uint vgprsPerSimd = default, uint minVgprAllocation = default, uint maxVgprAllocation = default, uint vgprAllocationGranularity = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderEngineCount = shaderEngineCount;
			ShaderArraysPerEngineCount = shaderArraysPerEngineCount;
			ComputeUnitsPerShaderArray = computeUnitsPerShaderArray;
			SimdPerComputeUnit = simdPerComputeUnit;
			WavefrontsPerSimd = wavefrontsPerSimd;
			WavefrontSize = wavefrontSize;
			SgprsPerSimd = sgprsPerSimd;
			MinSgprAllocation = minSgprAllocation;
			MaxSgprAllocation = maxSgprAllocation;
			SgprAllocationGranularity = sgprAllocationGranularity;
			VgprsPerSimd = vgprsPerSimd;
			MinVgprAllocation = minVgprAllocation;
			MaxVgprAllocation = maxVgprAllocation;
			VgprAllocationGranularity = vgprAllocationGranularity;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceMemoryOverallocationCreateInfoAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceMemoryOverallocationCreateInfoAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "overallocationBehavior")]
		[NativeName(NativeNameType.Type, "VkMemoryOverallocationBehaviorAMD")]
		public VkMemoryOverallocationBehaviorAMD OverallocationBehavior;

		public unsafe VkDeviceMemoryOverallocationCreateInfoAMD(VkStructureType sType = default, void* pNext = default, VkMemoryOverallocationBehaviorAMD overallocationBehavior = default)
		{
			SType = sType;
			PNext = pNext;
			OverallocationBehavior = overallocationBehavior;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxVertexAttribDivisor")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxVertexAttribDivisor;

		public unsafe VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxVertexAttribDivisor = default)
		{
			SType = sType;
			PNext = pNext;
			MaxVertexAttribDivisor = maxVertexAttribDivisor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkVertexInputBindingDivisorDescriptionEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkVertexInputBindingDivisorDescriptionEXT
	{
		[NativeName(NativeNameType.Field, "binding")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Binding;
		[NativeName(NativeNameType.Field, "divisor")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Divisor;

		public unsafe VkVertexInputBindingDivisorDescriptionEXT(uint binding = default, uint divisor = default)
		{
			Binding = binding;
			Divisor = divisor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineVertexInputDivisorStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineVertexInputDivisorStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vertexBindingDivisorCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VertexBindingDivisorCount;
		[NativeName(NativeNameType.Field, "pVertexBindingDivisors")]
		[NativeName(NativeNameType.Type, "const VkVertexInputBindingDivisorDescriptionEXT*")]
		public unsafe VkVertexInputBindingDivisorDescriptionEXT* PVertexBindingDivisors;

		public unsafe VkPipelineVertexInputDivisorStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint vertexBindingDivisorCount = default, VkVertexInputBindingDivisorDescriptionEXT* pVertexBindingDivisors = default)
		{
			SType = sType;
			PNext = pNext;
			VertexBindingDivisorCount = vertexBindingDivisorCount;
			PVertexBindingDivisors = pVertexBindingDivisors;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vertexAttributeInstanceRateDivisor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VertexAttributeInstanceRateDivisor;
		[NativeName(NativeNameType.Field, "vertexAttributeInstanceRateZeroDivisor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VertexAttributeInstanceRateZeroDivisor;

		public unsafe VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint vertexAttributeInstanceRateDivisor = default, uint vertexAttributeInstanceRateZeroDivisor = default)
		{
			SType = sType;
			PNext = pNext;
			VertexAttributeInstanceRateDivisor = vertexAttributeInstanceRateDivisor;
			VertexAttributeInstanceRateZeroDivisor = vertexAttributeInstanceRateZeroDivisor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceComputeShaderDerivativesFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "computeDerivativeGroupQuads")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ComputeDerivativeGroupQuads;
		[NativeName(NativeNameType.Field, "computeDerivativeGroupLinear")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ComputeDerivativeGroupLinear;

		public unsafe VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkStructureType sType = default, void* pNext = default, uint computeDerivativeGroupQuads = default, uint computeDerivativeGroupLinear = default)
		{
			SType = sType;
			PNext = pNext;
			ComputeDerivativeGroupQuads = computeDerivativeGroupQuads;
			ComputeDerivativeGroupLinear = computeDerivativeGroupLinear;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMeshShaderFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMeshShaderFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "taskShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TaskShader;
		[NativeName(NativeNameType.Field, "meshShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MeshShader;

		public unsafe VkPhysicalDeviceMeshShaderFeaturesNV(VkStructureType sType = default, void* pNext = default, uint taskShader = default, uint meshShader = default)
		{
			SType = sType;
			PNext = pNext;
			TaskShader = taskShader;
			MeshShader = meshShader;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMeshShaderPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMeshShaderPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxDrawMeshTasksCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDrawMeshTasksCount;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxTaskWorkGroupSize_0;
		public uint MaxTaskWorkGroupSize_1;
		public uint MaxTaskWorkGroupSize_2;
		[NativeName(NativeNameType.Field, "maxTaskTotalMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskTotalMemorySize;
		[NativeName(NativeNameType.Field, "maxTaskOutputCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskOutputCount;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxMeshWorkGroupSize_0;
		public uint MaxMeshWorkGroupSize_1;
		public uint MaxMeshWorkGroupSize_2;
		[NativeName(NativeNameType.Field, "maxMeshTotalMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshTotalMemorySize;
		[NativeName(NativeNameType.Field, "maxMeshOutputVertices")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputVertices;
		[NativeName(NativeNameType.Field, "maxMeshOutputPrimitives")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputPrimitives;
		[NativeName(NativeNameType.Field, "maxMeshMultiviewViewCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshMultiviewViewCount;
		[NativeName(NativeNameType.Field, "meshOutputPerVertexGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MeshOutputPerVertexGranularity;
		[NativeName(NativeNameType.Field, "meshOutputPerPrimitiveGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MeshOutputPerPrimitiveGranularity;

		public unsafe VkPhysicalDeviceMeshShaderPropertiesNV(VkStructureType sType = default, void* pNext = default, uint maxDrawMeshTasksCount = default, uint maxTaskWorkGroupInvocations = default, uint* maxTaskWorkGroupSize = default, uint maxTaskTotalMemorySize = default, uint maxTaskOutputCount = default, uint maxMeshWorkGroupInvocations = default, uint* maxMeshWorkGroupSize = default, uint maxMeshTotalMemorySize = default, uint maxMeshOutputVertices = default, uint maxMeshOutputPrimitives = default, uint maxMeshMultiviewViewCount = default, uint meshOutputPerVertexGranularity = default, uint meshOutputPerPrimitiveGranularity = default)
		{
			SType = sType;
			PNext = pNext;
			MaxDrawMeshTasksCount = maxDrawMeshTasksCount;
			MaxTaskWorkGroupInvocations = maxTaskWorkGroupInvocations;
			if (maxTaskWorkGroupSize != default)
			{
				MaxTaskWorkGroupSize_0 = maxTaskWorkGroupSize[0];
				MaxTaskWorkGroupSize_1 = maxTaskWorkGroupSize[1];
				MaxTaskWorkGroupSize_2 = maxTaskWorkGroupSize[2];
			}
			MaxTaskTotalMemorySize = maxTaskTotalMemorySize;
			MaxTaskOutputCount = maxTaskOutputCount;
			MaxMeshWorkGroupInvocations = maxMeshWorkGroupInvocations;
			if (maxMeshWorkGroupSize != default)
			{
				MaxMeshWorkGroupSize_0 = maxMeshWorkGroupSize[0];
				MaxMeshWorkGroupSize_1 = maxMeshWorkGroupSize[1];
				MaxMeshWorkGroupSize_2 = maxMeshWorkGroupSize[2];
			}
			MaxMeshTotalMemorySize = maxMeshTotalMemorySize;
			MaxMeshOutputVertices = maxMeshOutputVertices;
			MaxMeshOutputPrimitives = maxMeshOutputPrimitives;
			MaxMeshMultiviewViewCount = maxMeshMultiviewViewCount;
			MeshOutputPerVertexGranularity = meshOutputPerVertexGranularity;
			MeshOutputPerPrimitiveGranularity = meshOutputPerPrimitiveGranularity;
		}

		public unsafe VkPhysicalDeviceMeshShaderPropertiesNV(VkStructureType sType = default, void* pNext = default, uint maxDrawMeshTasksCount = default, uint maxTaskWorkGroupInvocations = default, Span<uint> maxTaskWorkGroupSize = default, uint maxTaskTotalMemorySize = default, uint maxTaskOutputCount = default, uint maxMeshWorkGroupInvocations = default, Span<uint> maxMeshWorkGroupSize = default, uint maxMeshTotalMemorySize = default, uint maxMeshOutputVertices = default, uint maxMeshOutputPrimitives = default, uint maxMeshMultiviewViewCount = default, uint meshOutputPerVertexGranularity = default, uint meshOutputPerPrimitiveGranularity = default)
		{
			SType = sType;
			PNext = pNext;
			MaxDrawMeshTasksCount = maxDrawMeshTasksCount;
			MaxTaskWorkGroupInvocations = maxTaskWorkGroupInvocations;
			if (maxTaskWorkGroupSize != default)
			{
				MaxTaskWorkGroupSize_0 = maxTaskWorkGroupSize[0];
				MaxTaskWorkGroupSize_1 = maxTaskWorkGroupSize[1];
				MaxTaskWorkGroupSize_2 = maxTaskWorkGroupSize[2];
			}
			MaxTaskTotalMemorySize = maxTaskTotalMemorySize;
			MaxTaskOutputCount = maxTaskOutputCount;
			MaxMeshWorkGroupInvocations = maxMeshWorkGroupInvocations;
			if (maxMeshWorkGroupSize != default)
			{
				MaxMeshWorkGroupSize_0 = maxMeshWorkGroupSize[0];
				MaxMeshWorkGroupSize_1 = maxMeshWorkGroupSize[1];
				MaxMeshWorkGroupSize_2 = maxMeshWorkGroupSize[2];
			}
			MaxMeshTotalMemorySize = maxMeshTotalMemorySize;
			MaxMeshOutputVertices = maxMeshOutputVertices;
			MaxMeshOutputPrimitives = maxMeshOutputPrimitives;
			MaxMeshMultiviewViewCount = maxMeshMultiviewViewCount;
			MeshOutputPerVertexGranularity = meshOutputPerVertexGranularity;
			MeshOutputPerPrimitiveGranularity = meshOutputPerPrimitiveGranularity;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrawMeshTasksIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrawMeshTasksIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "taskCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint TaskCount;
		[NativeName(NativeNameType.Field, "firstTask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint FirstTask;

		public unsafe VkDrawMeshTasksIndirectCommandNV(uint taskCount = default, uint firstTask = default)
		{
			TaskCount = taskCount;
			FirstTask = firstTask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderImageFootprintFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderImageFootprintFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageFootprint")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ImageFootprint;

		public unsafe VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkStructureType sType = default, void* pNext = default, uint imageFootprint = default)
		{
			SType = sType;
			PNext = pNext;
			ImageFootprint = imageFootprint;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportExclusiveScissorStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportExclusiveScissorStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "exclusiveScissorCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ExclusiveScissorCount;
		[NativeName(NativeNameType.Field, "pExclusiveScissors")]
		[NativeName(NativeNameType.Type, "const VkRect2D*")]
		public unsafe VkRect2D* PExclusiveScissors;

		public unsafe VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint exclusiveScissorCount = default, VkRect2D* pExclusiveScissors = default)
		{
			SType = sType;
			PNext = pNext;
			ExclusiveScissorCount = exclusiveScissorCount;
			PExclusiveScissors = pExclusiveScissors;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceExclusiveScissorFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceExclusiveScissorFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "exclusiveScissor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ExclusiveScissor;

		public unsafe VkPhysicalDeviceExclusiveScissorFeaturesNV(VkStructureType sType = default, void* pNext = default, uint exclusiveScissor = default)
		{
			SType = sType;
			PNext = pNext;
			ExclusiveScissor = exclusiveScissor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkQueueFamilyCheckpointPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkQueueFamilyCheckpointPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "checkpointExecutionStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags")]
		public uint CheckpointExecutionStageMask;

		public unsafe VkQueueFamilyCheckpointPropertiesNV(VkStructureType sType = default, void* pNext = default, uint checkpointExecutionStageMask = default)
		{
			SType = sType;
			PNext = pNext;
			CheckpointExecutionStageMask = checkpointExecutionStageMask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCheckpointDataNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCheckpointDataNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stage")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlagBits")]
		public VkPipelineStageFlagBits Stage;
		[NativeName(NativeNameType.Field, "pCheckpointMarker")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PCheckpointMarker;

		public unsafe VkCheckpointDataNV(VkStructureType sType = default, void* pNext = default, VkPipelineStageFlagBits stage = default, void* pCheckpointMarker = default)
		{
			SType = sType;
			PNext = pNext;
			Stage = stage;
			PCheckpointMarker = pCheckpointMarker;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderIntegerFunctions2")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderIntegerFunctions2;

		public unsafe VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkStructureType sType = default, void* pNext = default, uint shaderIntegerFunctions2 = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderIntegerFunctions2 = shaderIntegerFunctions2;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceValueDataINTEL")]
	[StructLayout(LayoutKind.Explicit)]
	public partial struct VkPerformanceValueDataINTEL
	{
		[NativeName(NativeNameType.Field, "value32")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		[FieldOffset(0)]
		public uint Value32;
		[NativeName(NativeNameType.Field, "value64")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		[FieldOffset(0)]
		public ulong Value64;
		[NativeName(NativeNameType.Field, "valueFloat")]
		[NativeName(NativeNameType.Type, "float")]
		[FieldOffset(0)]
		public float ValueFloat;
		[NativeName(NativeNameType.Field, "valueBool")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		[FieldOffset(0)]
		public uint ValueBool;
		[NativeName(NativeNameType.Field, "valueString")]
		[NativeName(NativeNameType.Type, "const char*")]
		[FieldOffset(0)]
		public unsafe byte* ValueString;

		public unsafe VkPerformanceValueDataINTEL(uint value32 = default, ulong value64 = default, float valueFloat = default, uint valueBool = default, byte* valueString = default)
		{
			Value32 = value32;
			Value64 = value64;
			ValueFloat = valueFloat;
			ValueBool = valueBool;
			ValueString = valueString;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceValueINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceValueINTEL
	{
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkPerformanceValueTypeINTEL")]
		public VkPerformanceValueTypeINTEL Type;
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "VkPerformanceValueDataINTEL")]
		public VkPerformanceValueDataINTEL Data;

		public unsafe VkPerformanceValueINTEL(VkPerformanceValueTypeINTEL type = default, VkPerformanceValueDataINTEL data = default)
		{
			Type = type;
			Data = data;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkInitializePerformanceApiInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkInitializePerformanceApiInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pUserData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PUserData;

		public unsafe VkInitializePerformanceApiInfoINTEL(VkStructureType sType = default, void* pNext = default, void* pUserData = default)
		{
			SType = sType;
			PNext = pNext;
			PUserData = pUserData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkQueryPoolPerformanceQueryCreateInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkQueryPoolPerformanceQueryCreateInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "performanceCountersSampling")]
		[NativeName(NativeNameType.Type, "VkQueryPoolSamplingModeINTEL")]
		public VkQueryPoolSamplingModeINTEL PerformanceCountersSampling;

		public unsafe VkQueryPoolPerformanceQueryCreateInfoINTEL(VkStructureType sType = default, void* pNext = default, VkQueryPoolSamplingModeINTEL performanceCountersSampling = default)
		{
			SType = sType;
			PNext = pNext;
			PerformanceCountersSampling = performanceCountersSampling;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceMarkerInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceMarkerInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "marker")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Marker;

		public unsafe VkPerformanceMarkerInfoINTEL(VkStructureType sType = default, void* pNext = default, ulong marker = default)
		{
			SType = sType;
			PNext = pNext;
			Marker = marker;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceStreamMarkerInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceStreamMarkerInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "marker")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Marker;

		public unsafe VkPerformanceStreamMarkerInfoINTEL(VkStructureType sType = default, void* pNext = default, uint marker = default)
		{
			SType = sType;
			PNext = pNext;
			Marker = marker;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceOverrideInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceOverrideInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkPerformanceOverrideTypeINTEL")]
		public VkPerformanceOverrideTypeINTEL Type;
		[NativeName(NativeNameType.Field, "enable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Enable;
		[NativeName(NativeNameType.Field, "parameter")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Parameter;

		public unsafe VkPerformanceOverrideInfoINTEL(VkStructureType sType = default, void* pNext = default, VkPerformanceOverrideTypeINTEL type = default, uint enable = default, ulong parameter = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			Enable = enable;
			Parameter = parameter;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceConfigurationAcquireInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceConfigurationAcquireInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkPerformanceConfigurationTypeINTEL")]
		public VkPerformanceConfigurationTypeINTEL Type;

		public unsafe VkPerformanceConfigurationAcquireInfoINTEL(VkStructureType sType = default, void* pNext = default, VkPerformanceConfigurationTypeINTEL type = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePCIBusInfoPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePCIBusInfoPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pciDomain")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciDomain;
		[NativeName(NativeNameType.Field, "pciBus")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciBus;
		[NativeName(NativeNameType.Field, "pciDevice")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciDevice;
		[NativeName(NativeNameType.Field, "pciFunction")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciFunction;

		public unsafe VkPhysicalDevicePCIBusInfoPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint pciDomain = default, uint pciBus = default, uint pciDevice = default, uint pciFunction = default)
		{
			SType = sType;
			PNext = pNext;
			PciDomain = pciDomain;
			PciBus = pciBus;
			PciDevice = pciDevice;
			PciFunction = pciFunction;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDisplayNativeHdrSurfaceCapabilitiesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDisplayNativeHdrSurfaceCapabilitiesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "localDimmingSupport")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint LocalDimmingSupport;

		public unsafe VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkStructureType sType = default, void* pNext = default, uint localDimmingSupport = default)
		{
			SType = sType;
			PNext = pNext;
			LocalDimmingSupport = localDimmingSupport;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainDisplayNativeHdrCreateInfoAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainDisplayNativeHdrCreateInfoAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "localDimmingEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint LocalDimmingEnable;

		public unsafe VkSwapchainDisplayNativeHdrCreateInfoAMD(VkStructureType sType = default, void* pNext = default, uint localDimmingEnable = default)
		{
			SType = sType;
			PNext = pNext;
			LocalDimmingEnable = localDimmingEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentDensityMapFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentDensityMapFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentDensityMap")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityMap;
		[NativeName(NativeNameType.Field, "fragmentDensityMapDynamic")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityMapDynamic;
		[NativeName(NativeNameType.Field, "fragmentDensityMapNonSubsampledImages")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityMapNonSubsampledImages;

		public unsafe VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint fragmentDensityMap = default, uint fragmentDensityMapDynamic = default, uint fragmentDensityMapNonSubsampledImages = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentDensityMap = fragmentDensityMap;
			FragmentDensityMapDynamic = fragmentDensityMapDynamic;
			FragmentDensityMapNonSubsampledImages = fragmentDensityMapNonSubsampledImages;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentDensityMapPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentDensityMapPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "minFragmentDensityTexelSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MinFragmentDensityTexelSize;
		[NativeName(NativeNameType.Field, "maxFragmentDensityTexelSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxFragmentDensityTexelSize;
		[NativeName(NativeNameType.Field, "fragmentDensityInvocations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityInvocations;

		public unsafe VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkStructureType sType = default, void* pNext = default, VkExtent2D minFragmentDensityTexelSize = default, VkExtent2D maxFragmentDensityTexelSize = default, uint fragmentDensityInvocations = default)
		{
			SType = sType;
			PNext = pNext;
			MinFragmentDensityTexelSize = minFragmentDensityTexelSize;
			MaxFragmentDensityTexelSize = maxFragmentDensityTexelSize;
			FragmentDensityInvocations = fragmentDensityInvocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRenderPassFragmentDensityMapCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRenderPassFragmentDensityMapCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentDensityMapAttachment")]
		[NativeName(NativeNameType.Type, "VkAttachmentReference")]
		public VkAttachmentReference FragmentDensityMapAttachment;

		public unsafe VkRenderPassFragmentDensityMapCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkAttachmentReference fragmentDensityMapAttachment = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentDensityMapAttachment = fragmentDensityMapAttachment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderCoreProperties2AMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderCoreProperties2AMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderCoreFeatures")]
		[NativeName(NativeNameType.Type, "VkShaderCorePropertiesFlagsAMD")]
		public uint ShaderCoreFeatures;
		[NativeName(NativeNameType.Field, "activeComputeUnitCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ActiveComputeUnitCount;

		public unsafe VkPhysicalDeviceShaderCoreProperties2AMD(VkStructureType sType = default, void* pNext = default, uint shaderCoreFeatures = default, uint activeComputeUnitCount = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderCoreFeatures = shaderCoreFeatures;
			ActiveComputeUnitCount = activeComputeUnitCount;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCoherentMemoryFeaturesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCoherentMemoryFeaturesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceCoherentMemory")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceCoherentMemory;

		public unsafe VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkStructureType sType = default, void* pNext = default, uint deviceCoherentMemory = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceCoherentMemory = deviceCoherentMemory;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderImageInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageInt64Atomics;
		[NativeName(NativeNameType.Field, "sparseImageInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageInt64Atomics;

		public unsafe VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint shaderImageInt64Atomics = default, uint sparseImageInt64Atomics = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderImageInt64Atomics = shaderImageInt64Atomics;
			SparseImageInt64Atomics = sparseImageInt64Atomics;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMemoryBudgetPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMemoryBudgetPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "heapBudget")]
		[NativeName(NativeNameType.Type, "VkDeviceSize[16]")]
		public ulong HeapBudget_0;
		public ulong HeapBudget_1;
		public ulong HeapBudget_2;
		public ulong HeapBudget_3;
		public ulong HeapBudget_4;
		public ulong HeapBudget_5;
		public ulong HeapBudget_6;
		public ulong HeapBudget_7;
		public ulong HeapBudget_8;
		public ulong HeapBudget_9;
		public ulong HeapBudget_10;
		public ulong HeapBudget_11;
		public ulong HeapBudget_12;
		public ulong HeapBudget_13;
		public ulong HeapBudget_14;
		public ulong HeapBudget_15;
		[NativeName(NativeNameType.Field, "heapUsage")]
		[NativeName(NativeNameType.Type, "VkDeviceSize[16]")]
		public ulong HeapUsage_0;
		public ulong HeapUsage_1;
		public ulong HeapUsage_2;
		public ulong HeapUsage_3;
		public ulong HeapUsage_4;
		public ulong HeapUsage_5;
		public ulong HeapUsage_6;
		public ulong HeapUsage_7;
		public ulong HeapUsage_8;
		public ulong HeapUsage_9;
		public ulong HeapUsage_10;
		public ulong HeapUsage_11;
		public ulong HeapUsage_12;
		public ulong HeapUsage_13;
		public ulong HeapUsage_14;
		public ulong HeapUsage_15;

		public unsafe VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong* heapBudget = default, ulong* heapUsage = default)
		{
			SType = sType;
			PNext = pNext;
			if (heapBudget != default)
			{
				HeapBudget_0 = heapBudget[0];
				HeapBudget_1 = heapBudget[1];
				HeapBudget_2 = heapBudget[2];
				HeapBudget_3 = heapBudget[3];
				HeapBudget_4 = heapBudget[4];
				HeapBudget_5 = heapBudget[5];
				HeapBudget_6 = heapBudget[6];
				HeapBudget_7 = heapBudget[7];
				HeapBudget_8 = heapBudget[8];
				HeapBudget_9 = heapBudget[9];
				HeapBudget_10 = heapBudget[10];
				HeapBudget_11 = heapBudget[11];
				HeapBudget_12 = heapBudget[12];
				HeapBudget_13 = heapBudget[13];
				HeapBudget_14 = heapBudget[14];
				HeapBudget_15 = heapBudget[15];
			}
			if (heapUsage != default)
			{
				HeapUsage_0 = heapUsage[0];
				HeapUsage_1 = heapUsage[1];
				HeapUsage_2 = heapUsage[2];
				HeapUsage_3 = heapUsage[3];
				HeapUsage_4 = heapUsage[4];
				HeapUsage_5 = heapUsage[5];
				HeapUsage_6 = heapUsage[6];
				HeapUsage_7 = heapUsage[7];
				HeapUsage_8 = heapUsage[8];
				HeapUsage_9 = heapUsage[9];
				HeapUsage_10 = heapUsage[10];
				HeapUsage_11 = heapUsage[11];
				HeapUsage_12 = heapUsage[12];
				HeapUsage_13 = heapUsage[13];
				HeapUsage_14 = heapUsage[14];
				HeapUsage_15 = heapUsage[15];
			}
		}

		public unsafe VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkStructureType sType = default, void* pNext = default, Span<ulong> heapBudget = default, Span<ulong> heapUsage = default)
		{
			SType = sType;
			PNext = pNext;
			if (heapBudget != default)
			{
				HeapBudget_0 = heapBudget[0];
				HeapBudget_1 = heapBudget[1];
				HeapBudget_2 = heapBudget[2];
				HeapBudget_3 = heapBudget[3];
				HeapBudget_4 = heapBudget[4];
				HeapBudget_5 = heapBudget[5];
				HeapBudget_6 = heapBudget[6];
				HeapBudget_7 = heapBudget[7];
				HeapBudget_8 = heapBudget[8];
				HeapBudget_9 = heapBudget[9];
				HeapBudget_10 = heapBudget[10];
				HeapBudget_11 = heapBudget[11];
				HeapBudget_12 = heapBudget[12];
				HeapBudget_13 = heapBudget[13];
				HeapBudget_14 = heapBudget[14];
				HeapBudget_15 = heapBudget[15];
			}
			if (heapUsage != default)
			{
				HeapUsage_0 = heapUsage[0];
				HeapUsage_1 = heapUsage[1];
				HeapUsage_2 = heapUsage[2];
				HeapUsage_3 = heapUsage[3];
				HeapUsage_4 = heapUsage[4];
				HeapUsage_5 = heapUsage[5];
				HeapUsage_6 = heapUsage[6];
				HeapUsage_7 = heapUsage[7];
				HeapUsage_8 = heapUsage[8];
				HeapUsage_9 = heapUsage[9];
				HeapUsage_10 = heapUsage[10];
				HeapUsage_11 = heapUsage[11];
				HeapUsage_12 = heapUsage[12];
				HeapUsage_13 = heapUsage[13];
				HeapUsage_14 = heapUsage[14];
				HeapUsage_15 = heapUsage[15];
			}
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMemoryPriorityFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMemoryPriorityFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "memoryPriority")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MemoryPriority;

		public unsafe VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint memoryPriority = default)
		{
			SType = sType;
			PNext = pNext;
			MemoryPriority = memoryPriority;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMemoryPriorityAllocateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryPriorityAllocateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "priority")]
		[NativeName(NativeNameType.Type, "float")]
		public float Priority;

		public unsafe VkMemoryPriorityAllocateInfoEXT(VkStructureType sType = default, void* pNext = default, float priority = default)
		{
			SType = sType;
			PNext = pNext;
			Priority = priority;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "dedicatedAllocationImageAliasing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DedicatedAllocationImageAliasing;

		public unsafe VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkStructureType sType = default, void* pNext = default, uint dedicatedAllocationImageAliasing = default)
		{
			SType = sType;
			PNext = pNext;
			DedicatedAllocationImageAliasing = dedicatedAllocationImageAliasing;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceBufferDeviceAddressFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "bufferDeviceAddress")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddress;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressCaptureReplay")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressCaptureReplay;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressMultiDevice")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressMultiDevice;

		public unsafe VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint bufferDeviceAddress = default, uint bufferDeviceAddressCaptureReplay = default, uint bufferDeviceAddressMultiDevice = default)
		{
			SType = sType;
			PNext = pNext;
			BufferDeviceAddress = bufferDeviceAddress;
			BufferDeviceAddressCaptureReplay = bufferDeviceAddressCaptureReplay;
			BufferDeviceAddressMultiDevice = bufferDeviceAddressMultiDevice;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferDeviceAddressCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferDeviceAddressCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong DeviceAddress;

		public unsafe VkBufferDeviceAddressCreateInfoEXT(VkStructureType sType = default, void* pNext = default, ulong deviceAddress = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceAddress = deviceAddress;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkValidationFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkValidationFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "enabledValidationFeatureCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint EnabledValidationFeatureCount;
		[NativeName(NativeNameType.Field, "pEnabledValidationFeatures")]
		[NativeName(NativeNameType.Type, "const VkValidationFeatureEnableEXT*")]
		public unsafe VkValidationFeatureEnableEXT* PEnabledValidationFeatures;
		[NativeName(NativeNameType.Field, "disabledValidationFeatureCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DisabledValidationFeatureCount;
		[NativeName(NativeNameType.Field, "pDisabledValidationFeatures")]
		[NativeName(NativeNameType.Type, "const VkValidationFeatureDisableEXT*")]
		public unsafe VkValidationFeatureDisableEXT* PDisabledValidationFeatures;

		public unsafe VkValidationFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint enabledValidationFeatureCount = default, VkValidationFeatureEnableEXT* pEnabledValidationFeatures = default, uint disabledValidationFeatureCount = default, VkValidationFeatureDisableEXT* pDisabledValidationFeatures = default)
		{
			SType = sType;
			PNext = pNext;
			EnabledValidationFeatureCount = enabledValidationFeatureCount;
			PEnabledValidationFeatures = pEnabledValidationFeatures;
			DisabledValidationFeatureCount = disabledValidationFeatureCount;
			PDisabledValidationFeatures = pDisabledValidationFeatures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCooperativeMatrixPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCooperativeMatrixPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "MSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MSize;
		[NativeName(NativeNameType.Field, "NSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NSize;
		[NativeName(NativeNameType.Field, "KSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint KSize;
		[NativeName(NativeNameType.Field, "AType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV AType;
		[NativeName(NativeNameType.Field, "BType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV BType;
		[NativeName(NativeNameType.Field, "CType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV CType;
		[NativeName(NativeNameType.Field, "DType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV DType;
		[NativeName(NativeNameType.Field, "scope")]
		[NativeName(NativeNameType.Type, "VkScopeNV")]
		public VkScopeNV Scope;

		public unsafe VkCooperativeMatrixPropertiesNV(VkStructureType sType = default, void* pNext = default, uint mSize = default, uint nSize = default, uint kSize = default, VkComponentTypeNV aType = default, VkComponentTypeNV bType = default, VkComponentTypeNV cType = default, VkComponentTypeNV dType = default, VkScopeNV scope = default)
		{
			SType = sType;
			PNext = pNext;
			MSize = mSize;
			NSize = nSize;
			KSize = kSize;
			AType = aType;
			BType = bType;
			CType = cType;
			DType = dType;
			Scope = scope;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCooperativeMatrixFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCooperativeMatrixFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "cooperativeMatrix")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CooperativeMatrix;
		[NativeName(NativeNameType.Field, "cooperativeMatrixRobustBufferAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CooperativeMatrixRobustBufferAccess;

		public unsafe VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkStructureType sType = default, void* pNext = default, uint cooperativeMatrix = default, uint cooperativeMatrixRobustBufferAccess = default)
		{
			SType = sType;
			PNext = pNext;
			CooperativeMatrix = cooperativeMatrix;
			CooperativeMatrixRobustBufferAccess = cooperativeMatrixRobustBufferAccess;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCooperativeMatrixPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCooperativeMatrixPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "cooperativeMatrixSupportedStages")]
		[NativeName(NativeNameType.Type, "VkShaderStageFlags")]
		public uint CooperativeMatrixSupportedStages;

		public unsafe VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkStructureType sType = default, void* pNext = default, uint cooperativeMatrixSupportedStages = default)
		{
			SType = sType;
			PNext = pNext;
			CooperativeMatrixSupportedStages = cooperativeMatrixSupportedStages;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCoverageReductionModeFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCoverageReductionModeFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "coverageReductionMode")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CoverageReductionMode;

		public unsafe VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkStructureType sType = default, void* pNext = default, uint coverageReductionMode = default)
		{
			SType = sType;
			PNext = pNext;
			CoverageReductionMode = coverageReductionMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCoverageReductionStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCoverageReductionStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCoverageReductionStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "coverageReductionMode")]
		[NativeName(NativeNameType.Type, "VkCoverageReductionModeNV")]
		public VkCoverageReductionModeNV CoverageReductionMode;

		public unsafe VkPipelineCoverageReductionStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, VkCoverageReductionModeNV coverageReductionMode = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			CoverageReductionMode = coverageReductionMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkFramebufferMixedSamplesCombinationNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkFramebufferMixedSamplesCombinationNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "coverageReductionMode")]
		[NativeName(NativeNameType.Type, "VkCoverageReductionModeNV")]
		public VkCoverageReductionModeNV CoverageReductionMode;
		[NativeName(NativeNameType.Field, "rasterizationSamples")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlagBits")]
		public VkSampleCountFlagBits RasterizationSamples;
		[NativeName(NativeNameType.Field, "depthStencilSamples")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlags")]
		public uint DepthStencilSamples;
		[NativeName(NativeNameType.Field, "colorSamples")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlags")]
		public uint ColorSamples;

		public unsafe VkFramebufferMixedSamplesCombinationNV(VkStructureType sType = default, void* pNext = default, VkCoverageReductionModeNV coverageReductionMode = default, VkSampleCountFlagBits rasterizationSamples = default, uint depthStencilSamples = default, uint colorSamples = default)
		{
			SType = sType;
			PNext = pNext;
			CoverageReductionMode = coverageReductionMode;
			RasterizationSamples = rasterizationSamples;
			DepthStencilSamples = depthStencilSamples;
			ColorSamples = colorSamples;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentShaderSampleInterlock")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShaderSampleInterlock;
		[NativeName(NativeNameType.Field, "fragmentShaderPixelInterlock")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShaderPixelInterlock;
		[NativeName(NativeNameType.Field, "fragmentShaderShadingRateInterlock")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShaderShadingRateInterlock;

		public unsafe VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint fragmentShaderSampleInterlock = default, uint fragmentShaderPixelInterlock = default, uint fragmentShaderShadingRateInterlock = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentShaderSampleInterlock = fragmentShaderSampleInterlock;
			FragmentShaderPixelInterlock = fragmentShaderPixelInterlock;
			FragmentShaderShadingRateInterlock = fragmentShaderShadingRateInterlock;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceYcbcrImageArraysFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "ycbcrImageArrays")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint YcbcrImageArrays;

		public unsafe VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint ycbcrImageArrays = default)
		{
			SType = sType;
			PNext = pNext;
			YcbcrImageArrays = ycbcrImageArrays;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceProvokingVertexFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceProvokingVertexFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "provokingVertexLast")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ProvokingVertexLast;
		[NativeName(NativeNameType.Field, "transformFeedbackPreservesProvokingVertex")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackPreservesProvokingVertex;

		public unsafe VkPhysicalDeviceProvokingVertexFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint provokingVertexLast = default, uint transformFeedbackPreservesProvokingVertex = default)
		{
			SType = sType;
			PNext = pNext;
			ProvokingVertexLast = provokingVertexLast;
			TransformFeedbackPreservesProvokingVertex = transformFeedbackPreservesProvokingVertex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceProvokingVertexPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceProvokingVertexPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "provokingVertexModePerPipeline")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ProvokingVertexModePerPipeline;
		[NativeName(NativeNameType.Field, "transformFeedbackPreservesTriangleFanProvokingVertex")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackPreservesTriangleFanProvokingVertex;

		public unsafe VkPhysicalDeviceProvokingVertexPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint provokingVertexModePerPipeline = default, uint transformFeedbackPreservesTriangleFanProvokingVertex = default)
		{
			SType = sType;
			PNext = pNext;
			ProvokingVertexModePerPipeline = provokingVertexModePerPipeline;
			TransformFeedbackPreservesTriangleFanProvokingVertex = transformFeedbackPreservesTriangleFanProvokingVertex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationProvokingVertexStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationProvokingVertexStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "provokingVertexMode")]
		[NativeName(NativeNameType.Type, "VkProvokingVertexModeEXT")]
		public VkProvokingVertexModeEXT ProvokingVertexMode;

		public unsafe VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkProvokingVertexModeEXT provokingVertexMode = default)
		{
			SType = sType;
			PNext = pNext;
			ProvokingVertexMode = provokingVertexMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkHeadlessSurfaceCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkHeadlessSurfaceCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkHeadlessSurfaceCreateFlagsEXT")]
		public uint Flags;

		public unsafe VkHeadlessSurfaceCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceLineRasterizationFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceLineRasterizationFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rectangularLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RectangularLines;
		[NativeName(NativeNameType.Field, "bresenhamLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BresenhamLines;
		[NativeName(NativeNameType.Field, "smoothLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SmoothLines;
		[NativeName(NativeNameType.Field, "stippledRectangularLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledRectangularLines;
		[NativeName(NativeNameType.Field, "stippledBresenhamLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledBresenhamLines;
		[NativeName(NativeNameType.Field, "stippledSmoothLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledSmoothLines;

		public unsafe VkPhysicalDeviceLineRasterizationFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint rectangularLines = default, uint bresenhamLines = default, uint smoothLines = default, uint stippledRectangularLines = default, uint stippledBresenhamLines = default, uint stippledSmoothLines = default)
		{
			SType = sType;
			PNext = pNext;
			RectangularLines = rectangularLines;
			BresenhamLines = bresenhamLines;
			SmoothLines = smoothLines;
			StippledRectangularLines = stippledRectangularLines;
			StippledBresenhamLines = stippledBresenhamLines;
			StippledSmoothLines = stippledSmoothLines;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceLineRasterizationPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceLineRasterizationPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "lineSubPixelPrecisionBits")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint LineSubPixelPrecisionBits;

		public unsafe VkPhysicalDeviceLineRasterizationPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint lineSubPixelPrecisionBits = default)
		{
			SType = sType;
			PNext = pNext;
			LineSubPixelPrecisionBits = lineSubPixelPrecisionBits;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationLineStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationLineStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "lineRasterizationMode")]
		[NativeName(NativeNameType.Type, "VkLineRasterizationModeEXT")]
		public VkLineRasterizationModeEXT LineRasterizationMode;
		[NativeName(NativeNameType.Field, "stippledLineEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledLineEnable;
		[NativeName(NativeNameType.Field, "lineStippleFactor")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint LineStippleFactor;
		[NativeName(NativeNameType.Field, "lineStipplePattern")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort LineStipplePattern;

		public unsafe VkPipelineRasterizationLineStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkLineRasterizationModeEXT lineRasterizationMode = default, uint stippledLineEnable = default, uint lineStippleFactor = default, ushort lineStipplePattern = default)
		{
			SType = sType;
			PNext = pNext;
			LineRasterizationMode = lineRasterizationMode;
			StippledLineEnable = stippledLineEnable;
			LineStippleFactor = lineStippleFactor;
			LineStipplePattern = lineStipplePattern;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderAtomicFloatFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderBufferFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat32Atomics;
		[NativeName(NativeNameType.Field, "shaderBufferFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat32AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderBufferFloat64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat64Atomics;
		[NativeName(NativeNameType.Field, "shaderBufferFloat64AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat64AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderSharedFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat32Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat32AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderSharedFloat64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat64Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedFloat64AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat64AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderImageFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageFloat32Atomics;
		[NativeName(NativeNameType.Field, "shaderImageFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageFloat32AtomicAdd;
		[NativeName(NativeNameType.Field, "sparseImageFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageFloat32Atomics;
		[NativeName(NativeNameType.Field, "sparseImageFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageFloat32AtomicAdd;

		public unsafe VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint shaderBufferFloat32Atomics = default, uint shaderBufferFloat32AtomicAdd = default, uint shaderBufferFloat64Atomics = default, uint shaderBufferFloat64AtomicAdd = default, uint shaderSharedFloat32Atomics = default, uint shaderSharedFloat32AtomicAdd = default, uint shaderSharedFloat64Atomics = default, uint shaderSharedFloat64AtomicAdd = default, uint shaderImageFloat32Atomics = default, uint shaderImageFloat32AtomicAdd = default, uint sparseImageFloat32Atomics = default, uint sparseImageFloat32AtomicAdd = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderBufferFloat32Atomics = shaderBufferFloat32Atomics;
			ShaderBufferFloat32AtomicAdd = shaderBufferFloat32AtomicAdd;
			ShaderBufferFloat64Atomics = shaderBufferFloat64Atomics;
			ShaderBufferFloat64AtomicAdd = shaderBufferFloat64AtomicAdd;
			ShaderSharedFloat32Atomics = shaderSharedFloat32Atomics;
			ShaderSharedFloat32AtomicAdd = shaderSharedFloat32AtomicAdd;
			ShaderSharedFloat64Atomics = shaderSharedFloat64Atomics;
			ShaderSharedFloat64AtomicAdd = shaderSharedFloat64AtomicAdd;
			ShaderImageFloat32Atomics = shaderImageFloat32Atomics;
			ShaderImageFloat32AtomicAdd = shaderImageFloat32AtomicAdd;
			SparseImageFloat32Atomics = sparseImageFloat32Atomics;
			SparseImageFloat32AtomicAdd = sparseImageFloat32AtomicAdd;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceIndexTypeUint8FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceIndexTypeUint8FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "indexTypeUint8")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IndexTypeUint8;

		public unsafe VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint indexTypeUint8 = default)
		{
			SType = sType;
			PNext = pNext;
			IndexTypeUint8 = indexTypeUint8;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceExtendedDynamicStateFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "extendedDynamicState")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ExtendedDynamicState;

		public unsafe VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint extendedDynamicState = default)
		{
			SType = sType;
			PNext = pNext;
			ExtendedDynamicState = extendedDynamicState;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderBufferFloat16Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat16Atomics;
		[NativeName(NativeNameType.Field, "shaderBufferFloat16AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat16AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderBufferFloat16AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat16AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderBufferFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat32AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderBufferFloat64AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat64AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderSharedFloat16Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat16Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedFloat16AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat16AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderSharedFloat16AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat16AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderSharedFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat32AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderSharedFloat64AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat64AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderImageFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageFloat32AtomicMinMax;
		[NativeName(NativeNameType.Field, "sparseImageFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageFloat32AtomicMinMax;

		public unsafe VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint shaderBufferFloat16Atomics = default, uint shaderBufferFloat16AtomicAdd = default, uint shaderBufferFloat16AtomicMinMax = default, uint shaderBufferFloat32AtomicMinMax = default, uint shaderBufferFloat64AtomicMinMax = default, uint shaderSharedFloat16Atomics = default, uint shaderSharedFloat16AtomicAdd = default, uint shaderSharedFloat16AtomicMinMax = default, uint shaderSharedFloat32AtomicMinMax = default, uint shaderSharedFloat64AtomicMinMax = default, uint shaderImageFloat32AtomicMinMax = default, uint sparseImageFloat32AtomicMinMax = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderBufferFloat16Atomics = shaderBufferFloat16Atomics;
			ShaderBufferFloat16AtomicAdd = shaderBufferFloat16AtomicAdd;
			ShaderBufferFloat16AtomicMinMax = shaderBufferFloat16AtomicMinMax;
			ShaderBufferFloat32AtomicMinMax = shaderBufferFloat32AtomicMinMax;
			ShaderBufferFloat64AtomicMinMax = shaderBufferFloat64AtomicMinMax;
			ShaderSharedFloat16Atomics = shaderSharedFloat16Atomics;
			ShaderSharedFloat16AtomicAdd = shaderSharedFloat16AtomicAdd;
			ShaderSharedFloat16AtomicMinMax = shaderSharedFloat16AtomicMinMax;
			ShaderSharedFloat32AtomicMinMax = shaderSharedFloat32AtomicMinMax;
			ShaderSharedFloat64AtomicMinMax = shaderSharedFloat64AtomicMinMax;
			ShaderImageFloat32AtomicMinMax = shaderImageFloat32AtomicMinMax;
			SparseImageFloat32AtomicMinMax = sparseImageFloat32AtomicMinMax;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfacePresentModeEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfacePresentModeEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentMode")]
		[NativeName(NativeNameType.Type, "VkPresentModeKHR")]
		public VkPresentModeKHR PresentMode;

		public unsafe VkSurfacePresentModeEXT(VkStructureType sType = default, void* pNext = default, VkPresentModeKHR presentMode = default)
		{
			SType = sType;
			PNext = pNext;
			PresentMode = presentMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfacePresentScalingCapabilitiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfacePresentScalingCapabilitiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "supportedPresentScaling")]
		[NativeName(NativeNameType.Type, "VkPresentScalingFlagsEXT")]
		public uint SupportedPresentScaling;
		[NativeName(NativeNameType.Field, "supportedPresentGravityX")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint SupportedPresentGravityX;
		[NativeName(NativeNameType.Field, "supportedPresentGravityY")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint SupportedPresentGravityY;
		[NativeName(NativeNameType.Field, "minScaledImageExtent")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MinScaledImageExtent;
		[NativeName(NativeNameType.Field, "maxScaledImageExtent")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxScaledImageExtent;

		public unsafe VkSurfacePresentScalingCapabilitiesEXT(VkStructureType sType = default, void* pNext = default, uint supportedPresentScaling = default, uint supportedPresentGravityX = default, uint supportedPresentGravityY = default, VkExtent2D minScaledImageExtent = default, VkExtent2D maxScaledImageExtent = default)
		{
			SType = sType;
			PNext = pNext;
			SupportedPresentScaling = supportedPresentScaling;
			SupportedPresentGravityX = supportedPresentGravityX;
			SupportedPresentGravityY = supportedPresentGravityY;
			MinScaledImageExtent = minScaledImageExtent;
			MaxScaledImageExtent = maxScaledImageExtent;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfacePresentModeCompatibilityEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfacePresentModeCompatibilityEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentModeCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PresentModeCount;
		[NativeName(NativeNameType.Field, "pPresentModes")]
		[NativeName(NativeNameType.Type, "VkPresentModeKHR*")]
		public unsafe VkPresentModeKHR* PPresentModes;

		public unsafe VkSurfacePresentModeCompatibilityEXT(VkStructureType sType = default, void* pNext = default, uint presentModeCount = default, VkPresentModeKHR* pPresentModes = default)
		{
			SType = sType;
			PNext = pNext;
			PresentModeCount = presentModeCount;
			PPresentModes = pPresentModes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainMaintenance1")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SwapchainMaintenance1;

		public unsafe VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint swapchainMaintenance1 = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainMaintenance1 = swapchainMaintenance1;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentFenceInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentFenceInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SwapchainCount;
		[NativeName(NativeNameType.Field, "pFences")]
		[NativeName(NativeNameType.Type, "const VkFence*")]
		public unsafe VkFence* PFences;

		public unsafe VkSwapchainPresentFenceInfoEXT(VkStructureType sType = default, void* pNext = default, uint swapchainCount = default, VkFence* pFences = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainCount = swapchainCount;
			PFences = pFences;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentModesCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentModesCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentModeCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PresentModeCount;
		[NativeName(NativeNameType.Field, "pPresentModes")]
		[NativeName(NativeNameType.Type, "const VkPresentModeKHR*")]
		public unsafe VkPresentModeKHR* PPresentModes;

		public unsafe VkSwapchainPresentModesCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint presentModeCount = default, VkPresentModeKHR* pPresentModes = default)
		{
			SType = sType;
			PNext = pNext;
			PresentModeCount = presentModeCount;
			PPresentModes = pPresentModes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentModeInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentModeInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SwapchainCount;
		[NativeName(NativeNameType.Field, "pPresentModes")]
		[NativeName(NativeNameType.Type, "const VkPresentModeKHR*")]
		public unsafe VkPresentModeKHR* PPresentModes;

		public unsafe VkSwapchainPresentModeInfoEXT(VkStructureType sType = default, void* pNext = default, uint swapchainCount = default, VkPresentModeKHR* pPresentModes = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainCount = swapchainCount;
			PPresentModes = pPresentModes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentScalingCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentScalingCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "scalingBehavior")]
		[NativeName(NativeNameType.Type, "VkPresentScalingFlagsEXT")]
		public uint ScalingBehavior;
		[NativeName(NativeNameType.Field, "presentGravityX")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint PresentGravityX;
		[NativeName(NativeNameType.Field, "presentGravityY")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint PresentGravityY;

		public unsafe VkSwapchainPresentScalingCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint scalingBehavior = default, uint presentGravityX = default, uint presentGravityY = default)
		{
			SType = sType;
			PNext = pNext;
			ScalingBehavior = scalingBehavior;
			PresentGravityX = presentGravityX;
			PresentGravityY = presentGravityY;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkReleaseSwapchainImagesInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkReleaseSwapchainImagesInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchain")]
		[NativeName(NativeNameType.Type, "VkSwapchainKHR")]
		public VkSwapchainKHR Swapchain;
		[NativeName(NativeNameType.Field, "imageIndexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ImageIndexCount;
		[NativeName(NativeNameType.Field, "pImageIndices")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PImageIndices;

		public unsafe VkReleaseSwapchainImagesInfoEXT(VkStructureType sType = default, void* pNext = default, VkSwapchainKHR swapchain = default, uint imageIndexCount = default, uint* pImageIndices = default)
		{
			SType = sType;
			PNext = pNext;
			Swapchain = swapchain;
			ImageIndexCount = imageIndexCount;
			PImageIndices = pImageIndices;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxGraphicsShaderGroupCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxGraphicsShaderGroupCount;
		[NativeName(NativeNameType.Field, "maxIndirectSequenceCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectSequenceCount;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsTokenCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsTokenCount;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsStreamCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsStreamCount;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsTokenOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsTokenOffset;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsStreamStride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsStreamStride;
		[NativeName(NativeNameType.Field, "minSequencesCountBufferOffsetAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinSequencesCountBufferOffsetAlignment;
		[NativeName(NativeNameType.Field, "minSequencesIndexBufferOffsetAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinSequencesIndexBufferOffsetAlignment;
		[NativeName(NativeNameType.Field, "minIndirectCommandsBufferOffsetAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinIndirectCommandsBufferOffsetAlignment;

		public unsafe VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkStructureType sType = default, void* pNext = default, uint maxGraphicsShaderGroupCount = default, uint maxIndirectSequenceCount = default, uint maxIndirectCommandsTokenCount = default, uint maxIndirectCommandsStreamCount = default, uint maxIndirectCommandsTokenOffset = default, uint maxIndirectCommandsStreamStride = default, uint minSequencesCountBufferOffsetAlignment = default, uint minSequencesIndexBufferOffsetAlignment = default, uint minIndirectCommandsBufferOffsetAlignment = default)
		{
			SType = sType;
			PNext = pNext;
			MaxGraphicsShaderGroupCount = maxGraphicsShaderGroupCount;
			MaxIndirectSequenceCount = maxIndirectSequenceCount;
			MaxIndirectCommandsTokenCount = maxIndirectCommandsTokenCount;
			MaxIndirectCommandsStreamCount = maxIndirectCommandsStreamCount;
			MaxIndirectCommandsTokenOffset = maxIndirectCommandsTokenOffset;
			MaxIndirectCommandsStreamStride = maxIndirectCommandsStreamStride;
			MinSequencesCountBufferOffsetAlignment = minSequencesCountBufferOffsetAlignment;
			MinSequencesIndexBufferOffsetAlignment = minSequencesIndexBufferOffsetAlignment;
			MinIndirectCommandsBufferOffsetAlignment = minIndirectCommandsBufferOffsetAlignment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceGeneratedCommands")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceGeneratedCommands;

		public unsafe VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkStructureType sType = default, void* pNext = default, uint deviceGeneratedCommands = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceGeneratedCommands = deviceGeneratedCommands;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGraphicsShaderGroupCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGraphicsShaderGroupCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stageCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StageCount;
		[NativeName(NativeNameType.Field, "pStages")]
		[NativeName(NativeNameType.Type, "const VkPipelineShaderStageCreateInfo*")]
		public unsafe VkPipelineShaderStageCreateInfo* PStages;
		[NativeName(NativeNameType.Field, "pVertexInputState")]
		[NativeName(NativeNameType.Type, "const VkPipelineVertexInputStateCreateInfo*")]
		public unsafe VkPipelineVertexInputStateCreateInfo* PVertexInputState;
		[NativeName(NativeNameType.Field, "pTessellationState")]
		[NativeName(NativeNameType.Type, "const VkPipelineTessellationStateCreateInfo*")]
		public unsafe VkPipelineTessellationStateCreateInfo* PTessellationState;

		public unsafe VkGraphicsShaderGroupCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint stageCount = default, VkPipelineShaderStageCreateInfo* pStages = default, VkPipelineVertexInputStateCreateInfo* pVertexInputState = default, VkPipelineTessellationStateCreateInfo* pTessellationState = default)
		{
			SType = sType;
			PNext = pNext;
			StageCount = stageCount;
			PStages = pStages;
			PVertexInputState = pVertexInputState;
			PTessellationState = pTessellationState;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGraphicsPipelineShaderGroupsCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGraphicsPipelineShaderGroupsCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "groupCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCount;
		[NativeName(NativeNameType.Field, "pGroups")]
		[NativeName(NativeNameType.Type, "const VkGraphicsShaderGroupCreateInfoNV*")]
		public unsafe VkGraphicsShaderGroupCreateInfoNV* PGroups;
		[NativeName(NativeNameType.Field, "pipelineCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PipelineCount;
		[NativeName(NativeNameType.Field, "pPipelines")]
		[NativeName(NativeNameType.Type, "const VkPipeline*")]
		public unsafe VkPipeline* PPipelines;

		public unsafe VkGraphicsPipelineShaderGroupsCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint groupCount = default, VkGraphicsShaderGroupCreateInfoNV* pGroups = default, uint pipelineCount = default, VkPipeline* pPipelines = default)
		{
			SType = sType;
			PNext = pNext;
			GroupCount = groupCount;
			PGroups = pGroups;
			PipelineCount = pipelineCount;
			PPipelines = pPipelines;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindShaderGroupIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindShaderGroupIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "groupIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupIndex;

		public unsafe VkBindShaderGroupIndirectCommandNV(uint groupIndex = default)
		{
			GroupIndex = groupIndex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindIndexBufferIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindIndexBufferIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "bufferAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong BufferAddress;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Size;
		[NativeName(NativeNameType.Field, "indexType")]
		[NativeName(NativeNameType.Type, "VkIndexType")]
		public VkIndexType IndexType;

		public unsafe VkBindIndexBufferIndirectCommandNV(ulong bufferAddress = default, uint size = default, VkIndexType indexType = default)
		{
			BufferAddress = bufferAddress;
			Size = size;
			IndexType = indexType;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindVertexBufferIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindVertexBufferIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "bufferAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong BufferAddress;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Size;
		[NativeName(NativeNameType.Field, "stride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Stride;

		public unsafe VkBindVertexBufferIndirectCommandNV(ulong bufferAddress = default, uint size = default, uint stride = default)
		{
			BufferAddress = bufferAddress;
			Size = size;
			Stride = stride;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSetStateFlagsIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSetStateFlagsIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Data;

		public unsafe VkSetStateFlagsIndirectCommandNV(uint data = default)
		{
			Data = data;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkIndirectCommandsStreamNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkIndirectCommandsStreamNV
	{
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;

		public unsafe VkIndirectCommandsStreamNV(VkBuffer buffer = default, ulong offset = default)
		{
			Buffer = buffer;
			Offset = offset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkIndirectCommandsLayoutTokenNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkIndirectCommandsLayoutTokenNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "tokenType")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsTokenTypeNV")]
		public VkIndirectCommandsTokenTypeNV TokenType;
		[NativeName(NativeNameType.Field, "stream")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Stream;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Offset;
		[NativeName(NativeNameType.Field, "vertexBindingUnit")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VertexBindingUnit;
		[NativeName(NativeNameType.Field, "vertexDynamicStride")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VertexDynamicStride;
		[NativeName(NativeNameType.Field, "pushconstantPipelineLayout")]
		[NativeName(NativeNameType.Type, "VkPipelineLayout")]
		public VkPipelineLayout PushconstantPipelineLayout;
		[NativeName(NativeNameType.Field, "pushconstantShaderStageFlags")]
		[NativeName(NativeNameType.Type, "VkShaderStageFlags")]
		public uint PushconstantShaderStageFlags;
		[NativeName(NativeNameType.Field, "pushconstantOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PushconstantOffset;
		[NativeName(NativeNameType.Field, "pushconstantSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PushconstantSize;
		[NativeName(NativeNameType.Field, "indirectStateFlags")]
		[NativeName(NativeNameType.Type, "VkIndirectStateFlagsNV")]
		public uint IndirectStateFlags;
		[NativeName(NativeNameType.Field, "indexTypeCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint IndexTypeCount;
		[NativeName(NativeNameType.Field, "pIndexTypes")]
		[NativeName(NativeNameType.Type, "const VkIndexType*")]
		public unsafe VkIndexType* PIndexTypes;
		[NativeName(NativeNameType.Field, "pIndexTypeValues")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PIndexTypeValues;

		public unsafe VkIndirectCommandsLayoutTokenNV(VkStructureType sType = default, void* pNext = default, VkIndirectCommandsTokenTypeNV tokenType = default, uint stream = default, uint offset = default, uint vertexBindingUnit = default, uint vertexDynamicStride = default, VkPipelineLayout pushconstantPipelineLayout = default, uint pushconstantShaderStageFlags = default, uint pushconstantOffset = default, uint pushconstantSize = default, uint indirectStateFlags = default, uint indexTypeCount = default, VkIndexType* pIndexTypes = default, uint* pIndexTypeValues = default)
		{
			SType = sType;
			PNext = pNext;
			TokenType = tokenType;
			Stream = stream;
			Offset = offset;
			VertexBindingUnit = vertexBindingUnit;
			VertexDynamicStride = vertexDynamicStride;
			PushconstantPipelineLayout = pushconstantPipelineLayout;
			PushconstantShaderStageFlags = pushconstantShaderStageFlags;
			PushconstantOffset = pushconstantOffset;
			PushconstantSize = pushconstantSize;
			IndirectStateFlags = indirectStateFlags;
			IndexTypeCount = indexTypeCount;
			PIndexTypes = pIndexTypes;
			PIndexTypeValues = pIndexTypeValues;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkIndirectCommandsLayoutCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkIndirectCommandsLayoutCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsLayoutUsageFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "pipelineBindPoint")]
		[NativeName(NativeNameType.Type, "VkPipelineBindPoint")]
		public VkPipelineBindPoint PipelineBindPoint;
		[NativeName(NativeNameType.Field, "tokenCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint TokenCount;
		[NativeName(NativeNameType.Field, "pTokens")]
		[NativeName(NativeNameType.Type, "const VkIndirectCommandsLayoutTokenNV*")]
		public unsafe VkIndirectCommandsLayoutTokenNV* PTokens;
		[NativeName(NativeNameType.Field, "streamCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StreamCount;
		[NativeName(NativeNameType.Field, "pStreamStrides")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PStreamStrides;

		public unsafe VkIndirectCommandsLayoutCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, VkPipelineBindPoint pipelineBindPoint = default, uint tokenCount = default, VkIndirectCommandsLayoutTokenNV* pTokens = default, uint streamCount = default, uint* pStreamStrides = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			PipelineBindPoint = pipelineBindPoint;
			TokenCount = tokenCount;
			PTokens = pTokens;
			StreamCount = streamCount;
			PStreamStrides = pStreamStrides;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeneratedCommandsInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeneratedCommandsInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pipelineBindPoint")]
		[NativeName(NativeNameType.Type, "VkPipelineBindPoint")]
		public VkPipelineBindPoint PipelineBindPoint;
		[NativeName(NativeNameType.Field, "pipeline")]
		[NativeName(NativeNameType.Type, "VkPipeline")]
		public VkPipeline Pipeline;
		[NativeName(NativeNameType.Field, "indirectCommandsLayout")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsLayoutNV")]
		public VkIndirectCommandsLayoutNV IndirectCommandsLayout;
		[NativeName(NativeNameType.Field, "streamCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StreamCount;
		[NativeName(NativeNameType.Field, "pStreams")]
		[NativeName(NativeNameType.Type, "const VkIndirectCommandsStreamNV*")]
		public unsafe VkIndirectCommandsStreamNV* PStreams;
		[NativeName(NativeNameType.Field, "sequencesCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SequencesCount;
		[NativeName(NativeNameType.Field, "preprocessBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer PreprocessBuffer;
		[NativeName(NativeNameType.Field, "preprocessOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong PreprocessOffset;
		[NativeName(NativeNameType.Field, "preprocessSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong PreprocessSize;
		[NativeName(NativeNameType.Field, "sequencesCountBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer SequencesCountBuffer;
		[NativeName(NativeNameType.Field, "sequencesCountOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong SequencesCountOffset;
		[NativeName(NativeNameType.Field, "sequencesIndexBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer SequencesIndexBuffer;
		[NativeName(NativeNameType.Field, "sequencesIndexOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong SequencesIndexOffset;

		public unsafe VkGeneratedCommandsInfoNV(VkStructureType sType = default, void* pNext = default, VkPipelineBindPoint pipelineBindPoint = default, VkPipeline pipeline = default, VkIndirectCommandsLayoutNV indirectCommandsLayout = default, uint streamCount = default, VkIndirectCommandsStreamNV* pStreams = default, uint sequencesCount = default, VkBuffer preprocessBuffer = default, ulong preprocessOffset = default, ulong preprocessSize = default, VkBuffer sequencesCountBuffer = default, ulong sequencesCountOffset = default, VkBuffer sequencesIndexBuffer = default, ulong sequencesIndexOffset = default)
		{
			SType = sType;
			PNext = pNext;
			PipelineBindPoint = pipelineBindPoint;
			Pipeline = pipeline;
			IndirectCommandsLayout = indirectCommandsLayout;
			StreamCount = streamCount;
			PStreams = pStreams;
			SequencesCount = sequencesCount;
			PreprocessBuffer = preprocessBuffer;
			PreprocessOffset = preprocessOffset;
			PreprocessSize = preprocessSize;
			SequencesCountBuffer = sequencesCountBuffer;
			SequencesCountOffset = sequencesCountOffset;
			SequencesIndexBuffer = sequencesIndexBuffer;
			SequencesIndexOffset = sequencesIndexOffset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeneratedCommandsMemoryRequirementsInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeneratedCommandsMemoryRequirementsInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pipelineBindPoint")]
		[NativeName(NativeNameType.Type, "VkPipelineBindPoint")]
		public VkPipelineBindPoint PipelineBindPoint;
		[NativeName(NativeNameType.Field, "pipeline")]
		[NativeName(NativeNameType.Type, "VkPipeline")]
		public VkPipeline Pipeline;
		[NativeName(NativeNameType.Field, "indirectCommandsLayout")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsLayoutNV")]
		public VkIndirectCommandsLayoutNV IndirectCommandsLayout;
		[NativeName(NativeNameType.Field, "maxSequencesCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxSequencesCount;

		public unsafe VkGeneratedCommandsMemoryRequirementsInfoNV(VkStructureType sType = default, void* pNext = default, VkPipelineBindPoint pipelineBindPoint = default, VkPipeline pipeline = default, VkIndirectCommandsLayoutNV indirectCommandsLayout = default, uint maxSequencesCount = default)
		{
			SType = sType;
			PNext = pNext;
			PipelineBindPoint = pipelineBindPoint;
			Pipeline = pipeline;
			IndirectCommandsLayout = indirectCommandsLayout;
			MaxSequencesCount = maxSequencesCount;
		}


	}
}
