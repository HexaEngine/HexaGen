// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D11_VIDEO_DECODER_BUFFER_DESC1")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11VideoDecoderBufferDesc1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BufferType")]
		[NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_BUFFER_TYPE")]
		public D3D11VideoDecoderBufferType BufferType;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DataOffset")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint DataOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DataSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint DataSize;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pIV")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PIV;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IVSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint IVSize;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pSubSampleMappingBlock")]
		[NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK*")]
		public unsafe D3D11VideoDecoderSubSampleMappingBlock* PSubSampleMappingBlock;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SubSampleMappingCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SubSampleMappingCount;


		/// <summary>/// To be documented./// </summary>		public unsafe D3D11VideoDecoderBufferDesc1(D3D11VideoDecoderBufferType bufferType = default, uint dataOffset = default, uint dataSize = default, void* piV = default, uint ivSize = default, D3D11VideoDecoderSubSampleMappingBlock* pSubSampleMappingBlock = default, uint subSampleMappingCount = default)
		{
			BufferType = bufferType;
			DataOffset = dataOffset;
			DataSize = dataSize;
			PIV = piV;
			IVSize = ivSize;
			PSubSampleMappingBlock = pSubSampleMappingBlock;
			SubSampleMappingCount = subSampleMappingCount;
		}


	}

	/// <summary>
	/// interface __MIDL_itf_d3d11_1_0000_0004 <br/>
	/// [local] <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11VideoDecoderSubSampleMappingBlock
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ClearSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint ClearSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "EncryptedSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint EncryptedSize;


		/// <summary>/// To be documented./// </summary>		public unsafe D3D11VideoDecoderSubSampleMappingBlock(uint clearSize = default, uint encryptedSize = default)
		{
			ClearSize = clearSize;
			EncryptedSize = encryptedSize;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D11_VIDEO_SAMPLE_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11VideoSampleDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Width")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Height")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Format")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT")]
		public DxgiFormat Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ColorSpace")]
		[NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")]
		public DxgiColorSpaceType ColorSpace;


		/// <summary>/// To be documented./// </summary>		public unsafe D3D11VideoSampleDesc(uint width = default, uint height = default, DxgiFormat format = default, DxgiColorSpaceType colorSpace = default)
		{
			Width = width;
			Height = height;
			Format = format;
			ColorSpace = colorSpace;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11VideoProcessorStreamBehaviorHint
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Enable")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int Enable;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Width")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Width;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Height")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Height;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Format")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT")]
		public DxgiFormat Format;


		/// <summary>/// To be documented./// </summary>		public unsafe D3D11VideoProcessorStreamBehaviorHint(int enable = default, uint width = default, uint height = default, DxgiFormat format = default)
		{
			Enable = enable;
			Width = width;
			Height = height;
			Format = format;
		}


	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("29da1d51-1321-4454-804b-f5fc9f861f0f")]
	[NativeName(NativeNameType.StructOrClass, "ID3D11VideoDevice1")]
	public partial struct ID3D11VideoDevice1 : IComObject, IComObject<ID3D11VideoDevice1>, IComObject<ID3D11VideoDevice>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("29da1d51-1321-4454-804b-f5fc9f861f0f");

		public unsafe ID3D11VideoDevice1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, pVideoDesc, pConfig, ppDecoder);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, (D3D11VideoDecoderDesc*)ppVideoDesc, pConfig, ppDecoder);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, pVideoDesc, (D3D11VideoDecoderConfig*)ppConfig, ppDecoder);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, (D3D11VideoDecoderDesc*)ppVideoDesc, (D3D11VideoDecoderConfig*)ppConfig, ppDecoder);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, pVideoDesc, pConfig, (ID3D11VideoDecoder**)pppDecoder);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDecoder = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, pVideoDesc, pConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, (D3D11VideoDecoderDesc*)ppVideoDesc, pConfig, (ID3D11VideoDecoder**)pppDecoder);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				ppDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, (D3D11VideoDecoderDesc*)ppVideoDesc, pConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
			{
				fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, pVideoDesc, (D3D11VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)pppDecoder);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
			{
				ppDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, pVideoDesc, (D3D11VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
				{
					fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, (D3D11VideoDecoderDesc*)ppVideoDesc, (D3D11VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)pppDecoder);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoder([NativeName(NativeNameType.Param, "pVideoDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pVideoDesc, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig, [NativeName(NativeNameType.Param, "ppDecoder")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoder**")] out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
				{
					ppDecoder = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, D3D11VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(LpVtbl[3]))(ptr, (D3D11VideoDecoderDesc*)ppVideoDesc, (D3D11VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessor([NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "RateConversionIndex")] [NativeName(NativeNameType.Type, "UINT")] uint rateConversionIndex, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessor**")] ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(LpVtbl[4]))(ptr, pEnum, rateConversionIndex, ppVideoProcessor);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessor([NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "RateConversionIndex")] [NativeName(NativeNameType.Type, "UINT")] uint rateConversionIndex, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessor**")] ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)ppEnum, rateConversionIndex, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessor([NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "RateConversionIndex")] [NativeName(NativeNameType.Type, "UINT")] uint rateConversionIndex, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessor**")] ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, rateConversionIndex, ppVideoProcessor);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessor([NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "RateConversionIndex")] [NativeName(NativeNameType.Type, "UINT")] uint rateConversionIndex, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessor**")] ref ID3D11VideoProcessor* ppVideoProcessor) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor** pppVideoProcessor = &ppVideoProcessor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(LpVtbl[4]))(ptr, pEnum, rateConversionIndex, (ID3D11VideoProcessor**)pppVideoProcessor);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessor([NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "RateConversionIndex")] [NativeName(NativeNameType.Type, "UINT")] uint rateConversionIndex, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessor**")] out ComPtr<ID3D11VideoProcessor> ppVideoProcessor) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(LpVtbl[4]))(ptr, pEnum, rateConversionIndex, (ID3D11VideoProcessor**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessor([NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "RateConversionIndex")] [NativeName(NativeNameType.Type, "UINT")] uint rateConversionIndex, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessor**")] ref ID3D11VideoProcessor* ppVideoProcessor) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessor** pppVideoProcessor = &ppVideoProcessor)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)ppEnum, rateConversionIndex, (ID3D11VideoProcessor**)pppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessor([NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "RateConversionIndex")] [NativeName(NativeNameType.Type, "UINT")] uint rateConversionIndex, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessor**")] out ComPtr<ID3D11VideoProcessor> ppVideoProcessor) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, rateConversionIndex, (ID3D11VideoProcessor**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateAuthenticatedChannel")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateAuthenticatedChannel([NativeName(NativeNameType.Param, "ChannelType")] [NativeName(NativeNameType.Type, "D3D11_AUTHENTICATED_CHANNEL_TYPE")] D3D11AuthenticatedChannelType channelType, [NativeName(NativeNameType.Param, "ppAuthenticatedChannel")] [NativeName(NativeNameType.Type, "ID3D11AuthenticatedChannel**")] ID3D11AuthenticatedChannel** ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11AuthenticatedChannelType, ID3D11AuthenticatedChannel**, int>)(LpVtbl[5]))(ptr, channelType, ppAuthenticatedChannel);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateAuthenticatedChannel")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateAuthenticatedChannel([NativeName(NativeNameType.Param, "ChannelType")] [NativeName(NativeNameType.Type, "D3D11_AUTHENTICATED_CHANNEL_TYPE")] D3D11AuthenticatedChannelType channelType, [NativeName(NativeNameType.Param, "ppAuthenticatedChannel")] [NativeName(NativeNameType.Type, "ID3D11AuthenticatedChannel**")] ref ID3D11AuthenticatedChannel* ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11AuthenticatedChannel** pppAuthenticatedChannel = &ppAuthenticatedChannel)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11AuthenticatedChannelType, ID3D11AuthenticatedChannel**, int>)(LpVtbl[5]))(ptr, channelType, (ID3D11AuthenticatedChannel**)pppAuthenticatedChannel);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateAuthenticatedChannel")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateAuthenticatedChannel([NativeName(NativeNameType.Param, "ChannelType")] [NativeName(NativeNameType.Type, "D3D11_AUTHENTICATED_CHANNEL_TYPE")] D3D11AuthenticatedChannelType channelType, [NativeName(NativeNameType.Param, "ppAuthenticatedChannel")] [NativeName(NativeNameType.Type, "ID3D11AuthenticatedChannel**")] out ComPtr<ID3D11AuthenticatedChannel> ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAuthenticatedChannel = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11AuthenticatedChannelType, ID3D11AuthenticatedChannel**, int>)(LpVtbl[5]))(ptr, channelType, (ID3D11AuthenticatedChannel**)ppAuthenticatedChannel.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCryptoSession = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				ppCryptoSession = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				ppCryptoSession = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					ppCryptoSession = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				ppCryptoSession = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					ppCryptoSession = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					ppCryptoSession = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateCryptoSession")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateCryptoSession([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "ppCryptoSession")] [NativeName(NativeNameType.Type, "ID3D11CryptoSession**")] out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						ppCryptoSession = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] D3D11VideoDecoderOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, pResource, pDesc, ppVDOVView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] D3D11VideoDecoderOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, pDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] D3D11VideoDecoderOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, pDesc, ppVDOVView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] ref D3D11VideoDecoderOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, pResource, (D3D11VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] ref D3D11VideoDecoderOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (D3D11VideoDecoderOutputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, (D3D11VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] ref D3D11VideoDecoderOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, (D3D11VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] D3D11VideoDecoderOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, pResource, pDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] D3D11VideoDecoderOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVDOVView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, pResource, pDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] D3D11VideoDecoderOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, pDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] D3D11VideoDecoderOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVDOVView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, pDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] ref D3D11VideoDecoderOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, pResource, (D3D11VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] ref D3D11VideoDecoderOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				ppVDOVView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, pResource, (D3D11VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] ref D3D11VideoDecoderOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (D3D11VideoDecoderOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, (D3D11VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoDecoderOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoDecoderOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*")] ref D3D11VideoDecoderOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVDOVView")] [NativeName(NativeNameType.Type, "ID3D11VideoDecoderOutputView**")] out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				ppVDOVView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, D3D11VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, (D3D11VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, pEnum, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, pEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] D3D11VideoProcessorInputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, pEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, pEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
					{
						fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorInputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorInputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*")] ref D3D11VideoProcessorInputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPIView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")] out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, pEnum, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, pEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] D3D11VideoProcessorOutputViewDesc* pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, pEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, pEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ID3D11VideoProcessorEnumerator* pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ID3D11Resource* pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ref ID3D11Resource pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ref ID3D11VideoProcessorEnumerator pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
					{
						fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorOutputView")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorOutputView([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D11Resource*")] ComPtr<ID3D11Resource> pResource, [NativeName(NativeNameType.Param, "pEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator*")] ComPtr<ID3D11VideoProcessorEnumerator> pEnum, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*")] ref D3D11VideoProcessorOutputViewDesc pDesc, [NativeName(NativeNameType.Param, "ppVPOView")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorOutputView**")] out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, D3D11VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (D3D11VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorEnumerator")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorEnumerator([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_CONTENT_DESC*")] D3D11VideoProcessorContentDesc* pDesc, [NativeName(NativeNameType.Param, "ppEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator**")] ID3D11VideoProcessorEnumerator** ppEnum) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(LpVtbl[10]))(ptr, pDesc, ppEnum);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorEnumerator")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorEnumerator([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_CONTENT_DESC*")] ref D3D11VideoProcessorContentDesc pDesc, [NativeName(NativeNameType.Param, "ppEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator**")] ID3D11VideoProcessorEnumerator** ppEnum) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(LpVtbl[10]))(ptr, (D3D11VideoProcessorContentDesc*)ppDesc, ppEnum);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorEnumerator")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorEnumerator([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_CONTENT_DESC*")] D3D11VideoProcessorContentDesc* pDesc, [NativeName(NativeNameType.Param, "ppEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator**")] ref ID3D11VideoProcessorEnumerator* ppEnum) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator** pppEnum = &ppEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(LpVtbl[10]))(ptr, pDesc, (ID3D11VideoProcessorEnumerator**)pppEnum);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorEnumerator")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorEnumerator([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_CONTENT_DESC*")] D3D11VideoProcessorContentDesc* pDesc, [NativeName(NativeNameType.Param, "ppEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator**")] out ComPtr<ID3D11VideoProcessorEnumerator> ppEnum) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppEnum = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(LpVtbl[10]))(ptr, pDesc, (ID3D11VideoProcessorEnumerator**)ppEnum.GetAddressOf());
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorEnumerator")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorEnumerator([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_CONTENT_DESC*")] ref D3D11VideoProcessorContentDesc pDesc, [NativeName(NativeNameType.Param, "ppEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator**")] ref ID3D11VideoProcessorEnumerator* ppEnum) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorEnumerator** pppEnum = &ppEnum)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(LpVtbl[10]))(ptr, (D3D11VideoProcessorContentDesc*)ppDesc, (ID3D11VideoProcessorEnumerator**)pppEnum);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CreateVideoProcessorEnumerator")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CreateVideoProcessorEnumerator([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_PROCESSOR_CONTENT_DESC*")] ref D3D11VideoProcessorContentDesc pDesc, [NativeName(NativeNameType.Param, "ppEnum")] [NativeName(NativeNameType.Type, "ID3D11VideoProcessorEnumerator**")] out ComPtr<ID3D11VideoProcessorEnumerator> ppEnum) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				ppEnum = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(LpVtbl[10]))(ptr, (D3D11VideoProcessorContentDesc*)ppDesc, (ID3D11VideoProcessorEnumerator**)ppEnum.GetAddressOf());
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderProfileCount")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetVideoDecoderProfileCount() 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint>)(LpVtbl[11]))(ptr);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderProfile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderProfile([NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "GUID*")] Guid* pDecoderProfile) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint, Guid*, int>)(LpVtbl[12]))(ptr, index, pDecoderProfile);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderProfile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderProfile([NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "GUID*")] ref Guid pDecoderProfile) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint, Guid*, int>)(LpVtbl[12]))(ptr, index, (Guid*)ppDecoderProfile);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderFormat")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderFormat([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, DxgiFormat, int*, int>)(LpVtbl[13]))(ptr, pDecoderProfile, format, pSupported);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderFormat")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderFormat([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, DxgiFormat, int*, int>)(LpVtbl[13]))(ptr, (Guid*)ppDecoderProfile, format, pSupported);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderFormat")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderFormat([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppSupported = &pSupported)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, DxgiFormat, int*, int>)(LpVtbl[13]))(ptr, pDecoderProfile, format, (int*)ppSupported);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderFormat")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderFormat([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "Format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] DxgiFormat format, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, DxgiFormat, int*, int>)(LpVtbl[13]))(ptr, (Guid*)ppDecoderProfile, format, (int*)ppSupported);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfigCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfigCount([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT*")] uint* pCount) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint*, int>)(LpVtbl[14]))(ptr, pDesc, pCount);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfigCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfigCount([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT*")] uint* pCount) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint*, int>)(LpVtbl[14]))(ptr, (D3D11VideoDecoderDesc*)ppDesc, pCount);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfigCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfigCount([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pCount) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint*, int>)(LpVtbl[14]))(ptr, pDesc, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfigCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfigCount([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pCount) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (uint* ppCount = &pCount)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint*, int>)(LpVtbl[14]))(ptr, (D3D11VideoDecoderDesc*)ppDesc, (uint*)ppCount);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfig")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfig([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint, D3D11VideoDecoderConfig*, int>)(LpVtbl[15]))(ptr, pDesc, index, pConfig);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfig")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfig([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint, D3D11VideoDecoderConfig*, int>)(LpVtbl[15]))(ptr, (D3D11VideoDecoderDesc*)ppDesc, index, pConfig);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfig")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfig([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint, D3D11VideoDecoderConfig*, int>)(LpVtbl[15]))(ptr, pDesc, index, (D3D11VideoDecoderConfig*)ppConfig);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderConfig")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderConfig([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pConfig")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppConfig = &pConfig)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, uint, D3D11VideoDecoderConfig*, int>)(LpVtbl[15]))(ptr, (D3D11VideoDecoderDesc*)ppDesc, index, (D3D11VideoDecoderConfig*)ppConfig);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] D3D11VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, pCryptoType, pDecoderProfile, pCaps);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] D3D11VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] D3D11VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] D3D11VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] ref D3D11VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoContentProtectionCaps* ppCaps = &pCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, pCryptoType, pDecoderProfile, (D3D11VideoContentProtectionCaps*)ppCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] ref D3D11VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (D3D11VideoContentProtectionCaps* ppCaps = &pCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (D3D11VideoContentProtectionCaps*)ppCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] ref D3D11VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (D3D11VideoContentProtectionCaps* ppCaps = &pCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (D3D11VideoContentProtectionCaps*)ppCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetContentProtectionCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetContentProtectionCaps([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pCaps")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_CONTENT_PROTECTION_CAPS*")] ref D3D11VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (D3D11VideoContentProtectionCaps* ppCaps = &pCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, D3D11VideoContentProtectionCaps*, int>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (D3D11VideoContentProtectionCaps*)ppCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, pCryptoType, pDecoderProfile, index, pKeyExchangeType);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, index, pKeyExchangeType);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, index, pKeyExchangeType);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, index, pKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, pCryptoType, pDecoderProfile, index, (Guid*)ppKeyExchangeType);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, index, (Guid*)ppKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, index, (Guid*)ppKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckCryptoKeyExchange")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckCryptoKeyExchange([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "GUID*")] ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, index, (Guid*)ppKeyExchangeType);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, void*, int>)(LpVtbl[18]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, void*, int>)(LpVtbl[18]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(LpVtbl[19]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(LpVtbl[19]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(LpVtbl[19]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(LpVtbl[19]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(LpVtbl[19]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(LpVtbl[19]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetCryptoSessionPrivateDataSize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetCryptoSessionPrivateDataSize([NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "pKeyExchangeType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pKeyExchangeType, [NativeName(NativeNameType.Param, "pPrivateInputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateInputSize, [NativeName(NativeNameType.Param, "pPrivateOutputSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
						{
							fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(LpVtbl[20]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, pDecoderCaps);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, pDecoderCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, pCryptoType, pDecoderCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, pCryptoType, pDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (Guid* ppCryptoType = &pCryptoType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDecoderCaps = &pDecoderCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppDecoderCaps = &pDecoderCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (uint* ppDecoderCaps = &pDecoderCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (uint* ppDecoderCaps = &pDecoderCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppDecoderCaps = &pDecoderCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					fixed (uint* ppDecoderCaps = &pDecoderCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] Guid* pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					fixed (uint* ppDecoderCaps = &pDecoderCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, pDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GetVideoDecoderCaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetVideoDecoderCaps([NativeName(NativeNameType.Param, "pDecoderProfile")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pDecoderProfile, [NativeName(NativeNameType.Param, "SampleWidth")] [NativeName(NativeNameType.Type, "UINT")] uint sampleWidth, [NativeName(NativeNameType.Param, "SampleHeight")] [NativeName(NativeNameType.Type, "UINT")] uint sampleHeight, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "BitRate")] [NativeName(NativeNameType.Type, "UINT")] uint bitRate, [NativeName(NativeNameType.Param, "pCryptoType")] [NativeName(NativeNameType.Type, "const GUID*")] ref Guid pCryptoType, [NativeName(NativeNameType.Param, "pDecoderCaps")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (Guid* ppCryptoType = &pCryptoType)
					{
						fixed (uint* ppDecoderCaps = &pDecoderCaps)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, DxgiRational*, uint, Guid*, uint*, int>)(LpVtbl[21]))(ptr, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (DxgiRational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppSupported = &pSupported)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
						{
							fixed (int* ppSupported = &pSupported)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppRealTimeHint = &pRealTimeHint)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] int* pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
						{
							fixed (int* ppRealTimeHint = &pRealTimeHint)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppSupported = &pSupported)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (int* ppSupported = &pSupported)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (int* ppSupported = &pSupported)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (int* ppSupported = &pSupported)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (int* ppSupported = &pSupported)
						{
							fixed (int* ppRealTimeHint = &pRealTimeHint)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				fixed (int* ppSupported = &pSupported)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							fixed (int* ppRealTimeHint = &pRealTimeHint)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							fixed (int* ppRealTimeHint = &pRealTimeHint)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							fixed (int* ppRealTimeHint = &pRealTimeHint)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "CheckVideoDecoderDownsampling")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int CheckVideoDecoderDownsampling([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pOutputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pOutputDesc, [NativeName(NativeNameType.Param, "pSupported")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pSupported, [NativeName(NativeNameType.Param, "pRealTimeHint")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (D3D11VideoSampleDesc* ppOutputDesc = &pOutputDesc)
						{
							fixed (int* ppSupported = &pSupported)
							{
								fixed (int* ppRealTimeHint = &pRealTimeHint)
								{
									int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int*, int*, int>)(LpVtbl[22]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pRecommendedOutputDesc);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pRecommendedOutputDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pRecommendedOutputDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, pRecommendedOutputDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pRecommendedOutputDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, pRecommendedOutputDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pRecommendedOutputDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] D3D11VideoSampleDesc* pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, pRecommendedOutputDesc);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] DxgiRational* pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, pFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DxgiRational* ppFrameRate = &pFrameRate)
			{
				fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] D3D11VideoDecoderConfig* pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] D3D11VideoDecoderDesc* pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (DxgiRational* ppFrameRate = &pFrameRate)
				{
					fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, pInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "RecommendVideoDecoderDownsampleParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int RecommendVideoDecoderDownsampleParameters([NativeName(NativeNameType.Param, "pInputDesc")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_DESC*")] ref D3D11VideoDecoderDesc pInputDesc, [NativeName(NativeNameType.Param, "InputColorSpace")] [NativeName(NativeNameType.Type, "DXGI_COLOR_SPACE_TYPE")] DxgiColorSpaceType inputColorSpace, [NativeName(NativeNameType.Param, "pInputConfig")] [NativeName(NativeNameType.Type, "const D3D11_VIDEO_DECODER_CONFIG*")] ref D3D11VideoDecoderConfig pInputConfig, [NativeName(NativeNameType.Param, "pFrameRate")] [NativeName(NativeNameType.Type, "const DXGI_RATIONAL*")] ref DxgiRational pFrameRate, [NativeName(NativeNameType.Param, "pRecommendedOutputDesc")] [NativeName(NativeNameType.Type, "D3D11_VIDEO_SAMPLE_DESC*")] ref D3D11VideoSampleDesc pRecommendedOutputDesc) 
		{
			ID3D11VideoDevice1* ptr = (ID3D11VideoDevice1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (D3D11VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (DxgiRational* ppFrameRate = &pFrameRate)
					{
						fixed (D3D11VideoSampleDesc* ppRecommendedOutputDesc = &pRecommendedOutputDesc)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, D3D11VideoDecoderDesc*, DxgiColorSpaceType, D3D11VideoDecoderConfig*, DxgiRational*, D3D11VideoSampleDesc*, int>)(LpVtbl[23]))(ptr, (D3D11VideoDecoderDesc*)ppInputDesc, inputColorSpace, (D3D11VideoDecoderConfig*)ppInputConfig, (DxgiRational*)ppFrameRate, (D3D11VideoSampleDesc*)ppRecommendedOutputDesc);
							return ret;
						}
					}
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D11VideoDevice (ID3D11VideoDevice1 value)
		{
			return Unsafe.As<ID3D11VideoDevice1, ID3D11VideoDevice>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D11VideoDevice1 value)
		{
			return Unsafe.As<ID3D11VideoDevice1, IUnknown>(ref value);
		}

	}
}
