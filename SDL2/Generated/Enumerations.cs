// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;

namespace HexaEngine.SDL2
{
	[NativeName(NativeNameType.Enum, "SDL_bool")]
	public enum SDLBool
	{
		[NativeName(NativeNameType.EnumItem, "SDL_FALSE")]
		False = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_TRUE")]
		True = unchecked(1),
	}

	/// <summary>
	/// TODO: include/SDL_stdinc.h:174: error: size of array 'SDL_dummy_enum' is negative <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_DUMMY_ENUM")]
	public enum SdlDummyEnum
	{
		[NativeName(NativeNameType.EnumItem, "DUMMY_ENUM_VALUE")]
		Value = unchecked(0),
	}

	[NativeName(NativeNameType.Enum, "SDL_AssertState")]
	public enum SDLAssertState
	{
		/// <summary>
		/// Retry the assert immediately. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ASSERTION_RETRY")]
		AssertionRetry = unchecked(0),

		/// <summary>
		/// Make the debugger trigger a breakpoint. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ASSERTION_BREAK")]
		AssertionBreak = unchecked(1),

		/// <summary>
		/// Terminate the program. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ASSERTION_ABORT")]
		AssertionAbort = unchecked(2),

		/// <summary>
		/// Ignore the assert. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ASSERTION_IGNORE")]
		AssertionIgnore = unchecked(3),

		/// <summary>
		/// Ignore the assert from now on. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ASSERTION_ALWAYS_IGNORE")]
		AssertionAlwaysIgnore = unchecked(4),

	}

	[NativeName(NativeNameType.Enum, "SDL_errorcode")]
	public enum SDLErrorcode
	{
		[NativeName(NativeNameType.EnumItem, "SDL_ENOMEM")]
		Enomem = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_EFREAD")]
		Efread = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_EFWRITE")]
		Efwrite = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_EFSEEK")]
		Efseek = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_UNSUPPORTED")]
		Unsupported = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_LASTERROR")]
		Lasterror = unchecked(5),
	}

	/// <summary>
	/// The SDL thread priority.<br/>
	/// SDL will make system changes as necessary in order to apply the thread priority.<br/>
	/// Code which attempts to control thread state related to priority should be aware<br/>
	/// that calling SDL_SetThreadPriority may alter such state.<br/>
	/// SDL_HINT_THREAD_PRIORITY_POLICY can be used to control aspects of this behavior.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_ThreadPriority")]
	public enum SDLThreadPriority
	{
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_PRIORITY_LOW")]
		Low = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_PRIORITY_NORMAL")]
		Normal = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_PRIORITY_HIGH")]
		High = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_PRIORITY_TIME_CRITICAL")]
		TimeCritical = unchecked(3),
	}

	/// <summary>
	/// <br/>
	/// Get the current audio state.<br/>
	/// <br/>
	/// @<br/>
	/// { <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_AudioStatus")]
	public enum SDLAudioStatus
	{
		[NativeName(NativeNameType.EnumItem, "SDL_AUDIO_STOPPED")]
		Stopped = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_AUDIO_PLAYING")]
		Playing = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_AUDIO_PAUSED")]
		Paused = unchecked(2),
	}

	/// <summary>
	/// Pixel type. <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_PixelType")]
	public enum SDLPixelType
	{
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_UNKNOWN")]
		PixeltypeUnknown = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_INDEX1")]
		PixeltypeIndex1 = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_INDEX4")]
		PixeltypeIndex4 = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_INDEX8")]
		PixeltypeIndex8 = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_PACKED8")]
		PixeltypePacked8 = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_PACKED16")]
		PixeltypePacked16 = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_PACKED32")]
		PixeltypePacked32 = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_ARRAYU8")]
		PixeltypeArrayu8 = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_ARRAYU16")]
		PixeltypeArrayu16 = unchecked(8),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_ARRAYU32")]
		PixeltypeArrayu32 = unchecked(9),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_ARRAYF16")]
		PixeltypeArrayf16 = unchecked(10),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELTYPE_ARRAYF32")]
		PixeltypeArrayf32 = unchecked(11),
	}

	/// <summary>
	/// Bitmap pixel order, high bit -> low bit. <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_BitmapOrder")]
	public enum SDLBitmapOrder
	{
		[NativeName(NativeNameType.EnumItem, "SDL_BITMAPORDER_NONE")]
		BitmaporderNone = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_BITMAPORDER_4321")]
		Bitmaporder4321 = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_BITMAPORDER_1234")]
		Bitmaporder1234 = unchecked(2),
	}

	/// <summary>
	/// Packed component order, high bit -> low bit. <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_PackedOrder")]
	public enum SDLPackedOrder
	{
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_NONE")]
		PackedorderNone = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_XRGB")]
		PackedorderXrgb = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_RGBX")]
		PackedorderRgbx = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_ARGB")]
		PackedorderArgb = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_RGBA")]
		PackedorderRgba = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_XBGR")]
		PackedorderXbgr = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_BGRX")]
		PackedorderBgrx = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_ABGR")]
		PackedorderAbgr = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDORDER_BGRA")]
		PackedorderBgra = unchecked(8),
	}

	/// <summary>
	/// Array component order, low byte -> high byte. <br/>
	/// !!! FIXME: in 2.1, make these not overlap differently with<br/>
	/// !!! FIXME:  SDL_PACKEDORDER_*, so we can simplify SDL_ISPIXELFORMAT_ALPHA <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_ArrayOrder")]
	public enum SDLArrayOrder
	{
		[NativeName(NativeNameType.EnumItem, "SDL_ARRAYORDER_NONE")]
		ArrayorderNone = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_ARRAYORDER_RGB")]
		ArrayorderRgb = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_ARRAYORDER_RGBA")]
		ArrayorderRgba = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_ARRAYORDER_ARGB")]
		ArrayorderArgb = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_ARRAYORDER_BGR")]
		ArrayorderBgr = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_ARRAYORDER_BGRA")]
		ArrayorderBgra = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_ARRAYORDER_ABGR")]
		ArrayorderAbgr = unchecked(6),
	}

	/// <summary>
	/// Packed component layout. <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_PackedLayout")]
	public enum SDLPackedLayout
	{
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_NONE")]
		PackedlayoutNone = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_332")]
		Packedlayout332 = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_4444")]
		Packedlayout4444 = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_1555")]
		Packedlayout1555 = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_5551")]
		Packedlayout5551 = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_565")]
		Packedlayout565 = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_8888")]
		Packedlayout8888 = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_2101010")]
		Packedlayout2101010 = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_PACKEDLAYOUT_1010102")]
		Packedlayout1010102 = unchecked(8),
	}

	/// <summary>
	/// Note: If you modify this list, update SDL_GetPixelFormatName() <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_PixelFormatEnum")]
	public enum SDLPixelFormatEnum
	{
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_UNKNOWN")]
		PixelformatUnknown = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_INDEX1LSB")]
		PixelformatIndex1Lsb = unchecked(286261504),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_INDEX1MSB")]
		PixelformatIndex1Msb = unchecked(287310080),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_INDEX4LSB")]
		PixelformatIndex4Lsb = unchecked(303039488),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_INDEX4MSB")]
		PixelformatIndex4Msb = unchecked(304088064),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_INDEX8")]
		PixelformatIndex8 = unchecked(318769153),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGB332")]
		PixelformatRgb332 = unchecked(336660481),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_XRGB4444")]
		PixelformatXrgb4444 = unchecked(353504258),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGB444")]
		PixelformatRgb444 = PixelformatXrgb4444,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_XBGR4444")]
		PixelformatXbgr4444 = unchecked(357698562),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGR444")]
		PixelformatBgr444 = PixelformatXbgr4444,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_XRGB1555")]
		PixelformatXrgb1555 = unchecked(353570562),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGB555")]
		PixelformatRgb555 = PixelformatXrgb1555,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_XBGR1555")]
		PixelformatXbgr1555 = unchecked(357764866),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGR555")]
		PixelformatBgr555 = PixelformatXbgr1555,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ARGB4444")]
		PixelformatArgb4444 = unchecked(355602434),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGBA4444")]
		PixelformatRgba4444 = unchecked(356651010),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ABGR4444")]
		PixelformatAbgr4444 = unchecked(359796738),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGRA4444")]
		PixelformatBgra4444 = unchecked(360845314),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ARGB1555")]
		PixelformatArgb1555 = unchecked(355667970),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGBA5551")]
		PixelformatRgba5551 = unchecked(356782082),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ABGR1555")]
		PixelformatAbgr1555 = unchecked(359862274),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGRA5551")]
		PixelformatBgra5551 = unchecked(360976386),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGB565")]
		PixelformatRgb565 = unchecked(353701890),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGR565")]
		PixelformatBgr565 = unchecked(357896194),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGB24")]
		PixelformatRgb24 = unchecked(386930691),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGR24")]
		PixelformatBgr24 = unchecked(390076419),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_XRGB8888")]
		PixelformatXrgb8888 = unchecked(370546692),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGB888")]
		PixelformatRgb888 = PixelformatXrgb8888,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGBX8888")]
		PixelformatRgbx8888 = unchecked(371595268),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_XBGR8888")]
		PixelformatXbgr8888 = unchecked(374740996),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGR888")]
		PixelformatBgr888 = PixelformatXbgr8888,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGRX8888")]
		PixelformatBgrx8888 = unchecked(375789572),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ARGB8888")]
		PixelformatArgb8888 = unchecked(372645892),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGBA8888")]
		PixelformatRgba8888 = unchecked(373694468),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ABGR8888")]
		PixelformatAbgr8888 = unchecked(376840196),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGRA8888")]
		PixelformatBgra8888 = unchecked(377888772),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ARGB2101010")]
		PixelformatArgb2101010 = unchecked(372711428),
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_RGBA32")]
		PixelformatRgba32 = PixelformatAbgr8888,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ARGB32")]
		PixelformatArgb32 = PixelformatBgra8888,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_BGRA32")]
		PixelformatBgra32 = PixelformatArgb8888,
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_ABGR32")]
		PixelformatAbgr32 = PixelformatRgba8888,
		/// <summary>
		/// Planar mode: Y + V + U  (3 planes) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_YV12")]
		PixelformatYv12 = unchecked(842094169),

		/// <summary>
		/// Planar mode: Y + U + V  (3 planes) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_IYUV")]
		PixelformatIyuv = unchecked(1448433993),

		/// <summary>
		/// Packed mode: Y0+U0+Y1+V0 (1 plane) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_YUY2")]
		PixelformatYuy2 = unchecked(844715353),

		/// <summary>
		/// Packed mode: U0+Y0+V0+Y1 (1 plane) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_UYVY")]
		PixelformatUyvy = unchecked(1498831189),

		/// <summary>
		/// Packed mode: Y0+V0+Y1+U0 (1 plane) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_YVYU")]
		PixelformatYvyu = unchecked(1431918169),

		/// <summary>
		/// Planar mode: Y + U/V interleaved  (2 planes) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_NV12")]
		PixelformatNv12 = unchecked(842094158),

		/// <summary>
		/// Planar mode: Y + V/U interleaved  (2 planes) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_NV21")]
		PixelformatNv21 = unchecked(825382478),

		/// <summary>
		/// Android video texture format <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_PIXELFORMAT_EXTERNAL_OES")]
		PixelformatExternalOes = unchecked(542328143),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_BlendMode")]
	public enum SDLBlendMode
	{
		/// <summary>
		/// no blending<br/>
		/// dstRGBA = srcRGBA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDMODE_NONE")]
		BlendmodeNone = unchecked(0),

		/// <summary>
		/// alpha blending<br/>
		/// dstRGB = (srcRGB * srcA) + (dstRGB * (1-srcA))<br/>
		/// dstA = srcA + (dstA * (1-srcA)) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDMODE_BLEND")]
		BlendmodeBlend = unchecked(1),

		/// <summary>
		/// additive blending<br/>
		/// dstRGB = (srcRGB * srcA) + dstRGB<br/>
		/// dstA = dstA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDMODE_ADD")]
		BlendmodeAdd = unchecked(2),

		/// <summary>
		/// color modulate<br/>
		/// dstRGB = srcRGB * dstRGB<br/>
		/// dstA = dstA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDMODE_MOD")]
		BlendmodeMod = unchecked(4),

		/// <summary>
		/// color multiply<br/>
		/// dstRGB = (srcRGB * dstRGB) + (dstRGB * (1-srcA))<br/>
		/// dstA = dstA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDMODE_MUL")]
		BlendmodeMul = unchecked(8),

		[NativeName(NativeNameType.EnumItem, "SDL_BLENDMODE_INVALID")]
		BlendmodeInvalid = unchecked(2147483647),
	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_BlendOperation")]
	public enum SDLBlendOperation
	{
		/// <summary>
		/// dst + src: supported by all renderers <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDOPERATION_ADD")]
		BlendoperationAdd = unchecked(1),

		/// <summary>
		/// dst - src : supported by D3D9, D3D11, OpenGL, OpenGLES <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDOPERATION_SUBTRACT")]
		BlendoperationSubtract = unchecked(2),

		/// <summary>
		/// src - dst : supported by D3D9, D3D11, OpenGL, OpenGLES <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDOPERATION_REV_SUBTRACT")]
		BlendoperationRevSubtract = unchecked(3),

		/// <summary>
		/// min(dst, src) : supported by D3D9, D3D11 <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDOPERATION_MINIMUM")]
		BlendoperationMinimum = unchecked(4),

		/// <summary>
		/// max(dst, src) : supported by D3D9, D3D11 <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDOPERATION_MAXIMUM")]
		BlendoperationMaximum = unchecked(5),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_BlendFactor")]
	public enum SDLBlendFactor
	{
		/// <summary>
		/// 0, 0, 0, 0 <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_ZERO")]
		BlendfactorZero = unchecked(1),

		/// <summary>
		/// 1, 1, 1, 1 <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_ONE")]
		BlendfactorOne = unchecked(2),

		/// <summary>
		/// srcR, srcG, srcB, srcA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_SRC_COLOR")]
		BlendfactorSrcColor = unchecked(3),

		/// <summary>
		/// 1-srcR, 1-srcG, 1-srcB, 1-srcA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR")]
		BlendfactorOneMinusSrcColor = unchecked(4),

		/// <summary>
		/// srcA, srcA, srcA, srcA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_SRC_ALPHA")]
		BlendfactorSrcAlpha = unchecked(5),

		/// <summary>
		/// 1-srcA, 1-srcA, 1-srcA, 1-srcA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA")]
		BlendfactorOneMinusSrcAlpha = unchecked(6),

		/// <summary>
		/// dstR, dstG, dstB, dstA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_DST_COLOR")]
		BlendfactorDstColor = unchecked(7),

		/// <summary>
		/// 1-dstR, 1-dstG, 1-dstB, 1-dstA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR")]
		BlendfactorOneMinusDstColor = unchecked(8),

		/// <summary>
		/// dstA, dstA, dstA, dstA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_DST_ALPHA")]
		BlendfactorDstAlpha = unchecked(9),

		/// <summary>
		/// 1-dstA, 1-dstA, 1-dstA, 1-dstA <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA")]
		BlendfactorOneMinusDstAlpha = unchecked(10),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_YUV_CONVERSION_MODE")]
	public enum SdlYuvConversionMode
	{
		/// <summary>
		/// Full range JPEG <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_YUV_CONVERSION_JPEG")]
		Jpeg = unchecked(0),

		/// <summary>
		/// BT.601 (the default) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_YUV_CONVERSION_BT601")]
		Bt601 = unchecked(1),

		/// <summary>
		/// BT.709 <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_YUV_CONVERSION_BT709")]
		Bt709 = unchecked(2),

		/// <summary>
		/// BT.601 for SD content, BT.709 for HD content <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_YUV_CONVERSION_AUTOMATIC")]
		Automatic = unchecked(3),

	}

	/// <summary>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_WindowFlags")]
	public enum SDLWindowFlags
	{
		/// <summary>
		/// fullscreen window <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_FULLSCREEN")]
		Fullscreen = unchecked(1),

		/// <summary>
		/// window usable with OpenGL context <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_OPENGL")]
		Opengl = unchecked(2),

		/// <summary>
		/// window is visible <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_SHOWN")]
		Shown = unchecked(4),

		/// <summary>
		/// window is not visible <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_HIDDEN")]
		Hidden = unchecked(8),

		/// <summary>
		/// no window decoration <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_BORDERLESS")]
		Borderless = unchecked(16),

		/// <summary>
		/// window can be resized <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_RESIZABLE")]
		Resizable = unchecked(32),

		/// <summary>
		/// window is minimized <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_MINIMIZED")]
		Minimized = unchecked(64),

		/// <summary>
		/// window is maximized <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_MAXIMIZED")]
		Maximized = unchecked(128),

		/// <summary>
		/// window has grabbed mouse input <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_MOUSE_GRABBED")]
		MouseGrabbed = unchecked(256),

		/// <summary>
		/// window has input focus <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_INPUT_FOCUS")]
		InputFocus = unchecked(512),

		/// <summary>
		/// window has mouse focus <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_MOUSE_FOCUS")]
		MouseFocus = unchecked(1024),

		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_FULLSCREEN_DESKTOP")]
		FullscreenDesktop = unchecked(4097),
		/// <summary>
		/// window not created by SDL <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_FOREIGN")]
		Foreign = unchecked(2048),

		/// <summary>
		/// window should be created in high-DPI mode if supported.<br/>
		/// On macOS NSHighResolutionCapable must be set true in the<br/>
		/// application's Info.plist for this to have any effect. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_ALLOW_HIGHDPI")]
		AllowHighdpi = unchecked(8192),

		/// <summary>
		/// window has mouse captured (unrelated to MOUSE_GRABBED) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_MOUSE_CAPTURE")]
		MouseCapture = unchecked(16384),

		/// <summary>
		/// window should always be above others <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_ALWAYS_ON_TOP")]
		AlwaysOnTop = unchecked(32768),

		/// <summary>
		/// window should not be added to the taskbar <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_SKIP_TASKBAR")]
		SkipTaskbar = unchecked(65536),

		/// <summary>
		/// window should be treated as a utility window <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_UTILITY")]
		Utility = unchecked(131072),

		/// <summary>
		/// window should be treated as a tooltip <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_TOOLTIP")]
		Tooltip = unchecked(262144),

		/// <summary>
		/// window should be treated as a popup menu <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_POPUP_MENU")]
		PopupMenu = unchecked(524288),

		/// <summary>
		/// window has grabbed keyboard input <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_KEYBOARD_GRABBED")]
		KeyboardGrabbed = unchecked(1048576),

		/// <summary>
		/// window usable for Vulkan surface <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_VULKAN")]
		Vulkan = unchecked(268435456),

		/// <summary>
		/// window usable for Metal view <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_METAL")]
		Metal = unchecked(536870912),

		/// <summary>
		/// equivalent to SDL_WINDOW_MOUSE_GRABBED for compatibility <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOW_INPUT_GRABBED")]
		InputGrabbed = MouseGrabbed,

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_WindowEventID")]
	public enum SDLWindowEventID
	{
		/// <summary>
		/// Never used <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_NONE")]
		WindoweventNone = unchecked(0),

		/// <summary>
		/// Window has been shown <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_SHOWN")]
		WindoweventShown = unchecked(1),

		/// <summary>
		/// Window has been hidden <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_HIDDEN")]
		WindoweventHidden = unchecked(2),

		/// <summary>
		/// Window has been exposed and should be<br/>
		/// redrawn <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_EXPOSED")]
		WindoweventExposed = unchecked(3),

		/// <summary>
		/// Window has been moved to data1, data2<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_MOVED")]
		WindoweventMoved = unchecked(4),

		/// <summary>
		/// Window has been resized to data1xdata2 <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_RESIZED")]
		WindoweventResized = unchecked(5),

		/// <summary>
		/// The window size has changed, either as<br/>
		/// a result of an API call or through the<br/>
		/// system or user changing the window size. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_SIZE_CHANGED")]
		WindoweventSizeChanged = unchecked(6),

		/// <summary>
		/// Window has been minimized <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_MINIMIZED")]
		WindoweventMinimized = unchecked(7),

		/// <summary>
		/// Window has been maximized <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_MAXIMIZED")]
		WindoweventMaximized = unchecked(8),

		/// <summary>
		/// Window has been restored to normal size<br/>
		/// and position <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_RESTORED")]
		WindoweventRestored = unchecked(9),

		/// <summary>
		/// Window has gained mouse focus <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_ENTER")]
		WindoweventEnter = unchecked(10),

		/// <summary>
		/// Window has lost mouse focus <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_LEAVE")]
		WindoweventLeave = unchecked(11),

		/// <summary>
		/// Window has gained keyboard focus <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_FOCUS_GAINED")]
		WindoweventFocusGained = unchecked(12),

		/// <summary>
		/// Window has lost keyboard focus <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_FOCUS_LOST")]
		WindoweventFocusLost = unchecked(13),

		/// <summary>
		/// The window manager requests that the window be closed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_CLOSE")]
		WindoweventClose = unchecked(14),

		/// <summary>
		/// Window is being offered a focus (should SetWindowInputFocus() on itself or a subwindow, or ignore) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_TAKE_FOCUS")]
		WindoweventTakeFocus = unchecked(15),

		/// <summary>
		/// Window had a hit test that wasn't SDL_HITTEST_NORMAL. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_HIT_TEST")]
		WindoweventHitTest = unchecked(16),

		/// <summary>
		/// The ICC profile of the window's display has changed. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_ICCPROF_CHANGED")]
		WindoweventIccprofChanged = unchecked(17),

		/// <summary>
		/// Window has been moved to display data1. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT_DISPLAY_CHANGED")]
		WindoweventDisplayChanged = unchecked(18),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_DisplayEventID")]
	public enum SDLDisplayEventID
	{
		/// <summary>
		/// Never used <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DISPLAYEVENT_NONE")]
		DisplayeventNone = unchecked(0),

		/// <summary>
		/// Display orientation has changed to data1 <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DISPLAYEVENT_ORIENTATION")]
		DisplayeventOrientation = unchecked(1),

		/// <summary>
		/// Display has been added to the system <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DISPLAYEVENT_CONNECTED")]
		DisplayeventConnected = unchecked(2),

		/// <summary>
		/// Display has been removed from the system <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DISPLAYEVENT_DISCONNECTED")]
		DisplayeventDisconnected = unchecked(3),

		/// <summary>
		/// Display has changed position <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DISPLAYEVENT_MOVED")]
		DisplayeventMoved = unchecked(4),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_DisplayOrientation")]
	public enum SDLDisplayOrientation
	{
		/// <summary>
		/// The display orientation can't be determined <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ORIENTATION_UNKNOWN")]
		Unknown = unchecked(0),

		/// <summary>
		/// The display is in landscape mode, with the right side up, relative to portrait mode <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ORIENTATION_LANDSCAPE")]
		Landscape = unchecked(1),

		/// <summary>
		/// The display is in landscape mode, with the left side up, relative to portrait mode <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ORIENTATION_LANDSCAPE_FLIPPED")]
		LandscapeFlipped = unchecked(2),

		/// <summary>
		/// The display is in portrait mode <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ORIENTATION_PORTRAIT")]
		Portrait = unchecked(3),

		/// <summary>
		/// The display is in portrait mode, upside down <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ORIENTATION_PORTRAIT_FLIPPED")]
		PortraitFlipped = unchecked(4),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_FlashOperation")]
	public enum SDLFlashOperation
	{
		/// <summary>
		/// Cancel any window flash state <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FLASH_CANCEL")]
		Cancel = unchecked(0),

		/// <summary>
		/// Flash the window briefly to get attention <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FLASH_BRIEFLY")]
		Briefly = unchecked(1),

		/// <summary>
		/// Flash the window until it gets focus <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FLASH_UNTIL_FOCUSED")]
		UntilFocused = unchecked(2),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_GLattr")]
	public enum SDLGLattr
	{
		[NativeName(NativeNameType.EnumItem, "SDL_GL_RED_SIZE")]
		SdlGlRedSize = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_GREEN_SIZE")]
		SdlGlGreenSize = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_BLUE_SIZE")]
		SdlGlBlueSize = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_ALPHA_SIZE")]
		SdlGlAlphaSize = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_BUFFER_SIZE")]
		SdlGlBufferSize = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_DOUBLEBUFFER")]
		SdlGlDoublebuffer = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_DEPTH_SIZE")]
		SdlGlDepthSize = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_STENCIL_SIZE")]
		SdlGlStencilSize = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_ACCUM_RED_SIZE")]
		SdlGlAccumRedSize = unchecked(8),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_ACCUM_GREEN_SIZE")]
		SdlGlAccumGreenSize = unchecked(9),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_ACCUM_BLUE_SIZE")]
		SdlGlAccumBlueSize = unchecked(10),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_ACCUM_ALPHA_SIZE")]
		SdlGlAccumAlphaSize = unchecked(11),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_STEREO")]
		SdlGlStereo = unchecked(12),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_MULTISAMPLEBUFFERS")]
		SdlGlMultisamplebuffers = unchecked(13),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_MULTISAMPLESAMPLES")]
		SdlGlMultisamplesamples = unchecked(14),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_ACCELERATED_VISUAL")]
		SdlGlAcceleratedVisual = unchecked(15),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_RETAINED_BACKING")]
		SdlGlRetainedBacking = unchecked(16),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_MAJOR_VERSION")]
		SdlGlContextMajorVersion = unchecked(17),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_MINOR_VERSION")]
		SdlGlContextMinorVersion = unchecked(18),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_EGL")]
		SdlGlContextEgl = unchecked(19),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_FLAGS")]
		SdlGlContextFlags = unchecked(20),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_PROFILE_MASK")]
		SdlGlContextProfileMask = unchecked(21),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_SHARE_WITH_CURRENT_CONTEXT")]
		SdlGlShareWithCurrentContext = unchecked(22),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_FRAMEBUFFER_SRGB_CAPABLE")]
		SdlGlFramebufferSrgbCapable = unchecked(23),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_RELEASE_BEHAVIOR")]
		SdlGlContextReleaseBehavior = unchecked(24),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_RESET_NOTIFICATION")]
		SdlGlContextResetNotification = unchecked(25),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_NO_ERROR")]
		SdlGlContextNoError = unchecked(26),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_FLOATBUFFERS")]
		SdlGlFloatbuffers = unchecked(27),
	}

	[NativeName(NativeNameType.Enum, "SDL_GLprofile")]
	public enum SDLGLprofile
	{
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_PROFILE_CORE")]
		SdlGlContextProfileCore = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_PROFILE_COMPATIBILITY")]
		SdlGlContextProfileCompatibility = unchecked(2),
		/// <summary>
		/// GLX_CONTEXT_ES2_PROFILE_BIT_EXT <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_PROFILE_ES")]
		SdlGlContextProfileEs = unchecked(4),

	}

	[NativeName(NativeNameType.Enum, "SDL_GLcontextFlag")]
	public enum SDLGLcontextFlag
	{
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_DEBUG_FLAG")]
		SdlGlContextDebugFlag = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG")]
		SdlGlContextForwardCompatibleFlag = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG")]
		SdlGlContextRobustAccessFlag = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_RESET_ISOLATION_FLAG")]
		SdlGlContextResetIsolationFlag = unchecked(8),
	}

	[NativeName(NativeNameType.Enum, "SDL_GLcontextReleaseFlag")]
	public enum SDLGLcontextReleaseFlag
	{
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE")]
		SdlGlContextReleaseBehaviorNone = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH")]
		SdlGlContextReleaseBehaviorFlush = unchecked(1),
	}

	[NativeName(NativeNameType.Enum, "SDL_GLContextResetNotification")]
	public enum SDLGLContextResetNotification
	{
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_RESET_NO_NOTIFICATION")]
		NoNotification = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_GL_CONTEXT_RESET_LOSE_CONTEXT")]
		LoseContext = unchecked(1),
	}

	/// <summary>
	/// Possible return values from the SDL_HitTest callback.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_HitTestResult")]
	public enum SDLHitTestResult
	{
		/// <summary>
		/// Region is normal. No special properties. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_NORMAL")]
		HittestNormal = unchecked(0),

		/// <summary>
		/// Region can drag entire window. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_DRAGGABLE")]
		HittestDraggable = unchecked(1),

		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_TOPLEFT")]
		HittestResizeTopleft = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_TOP")]
		HittestResizeTop = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_TOPRIGHT")]
		HittestResizeTopright = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_RIGHT")]
		HittestResizeRight = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_BOTTOMRIGHT")]
		HittestResizeBottomright = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_BOTTOM")]
		HittestResizeBottom = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_BOTTOMLEFT")]
		HittestResizeBottomleft = unchecked(8),
		[NativeName(NativeNameType.EnumItem, "SDL_HITTEST_RESIZE_LEFT")]
		HittestResizeLeft = unchecked(9),
	}

	/// <summary>
	/// <br/>
	/// Values of this type are used to represent keyboard keys, among other places<br/>
	/// in the <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_Scancode")]
	public enum SDLScancode
	{
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_UNKNOWN")]
		Unknown = unchecked(0),
		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_A")]
		Scancodea = unchecked(4),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_B")]
		Scancodeb = unchecked(5),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_C")]
		Scancodec = unchecked(6),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_D")]
		Scancoded = unchecked(7),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_E")]
		Scancodee = unchecked(8),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F")]
		Scancodef = unchecked(9),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_G")]
		Scancodeg = unchecked(10),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_H")]
		Scancodeh = unchecked(11),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_I")]
		Scancodei = unchecked(12),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_J")]
		Scancodej = unchecked(13),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_K")]
		Scancodek = unchecked(14),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_L")]
		Scancodel = unchecked(15),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_M")]
		Scancodem = unchecked(16),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_N")]
		Scancoden = unchecked(17),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_O")]
		Scancodeo = unchecked(18),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_P")]
		Scancodep = unchecked(19),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_Q")]
		Scancodeq = unchecked(20),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_R")]
		Scancoder = unchecked(21),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_S")]
		Scancodes = unchecked(22),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_T")]
		Scancodet = unchecked(23),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_U")]
		Scancodeu = unchecked(24),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_V")]
		Scancodev = unchecked(25),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_W")]
		Scancodew = unchecked(26),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_X")]
		Scancodex = unchecked(27),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_Y")]
		Scancodey = unchecked(28),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_Z")]
		Scancodez = unchecked(29),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_1")]
		Scancode1 = unchecked(30),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_2")]
		Scancode2 = unchecked(31),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_3")]
		Scancode3 = unchecked(32),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_4")]
		Scancode4 = unchecked(33),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_5")]
		Scancode5 = unchecked(34),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_6")]
		Scancode6 = unchecked(35),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_7")]
		Scancode7 = unchecked(36),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_8")]
		Scancode8 = unchecked(37),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_9")]
		Scancode9 = unchecked(38),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_0")]
		Scancode0 = unchecked(39),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RETURN")]
		Return = unchecked(40),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_ESCAPE")]
		Escape = unchecked(41),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_BACKSPACE")]
		Backspace = unchecked(42),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_TAB")]
		Tab = unchecked(43),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SPACE")]
		Space = unchecked(44),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_MINUS")]
		Minus = unchecked(45),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_EQUALS")]
		Equals = unchecked(46),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LEFTBRACKET")]
		Leftbracket = unchecked(47),

		/// <summary>
		/// <br/>
		/// These values are from usage page 0x07 (USB keyboard page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RIGHTBRACKET")]
		Rightbracket = unchecked(48),

		/// <summary>
		/// Located at the lower left of the return<br/>
		/// key on ISO keyboards and at the right end<br/>
		/// of the QWERTY row on ANSI keyboards.<br/>
		/// Produces REVERSE SOLIDUS (backslash) and<br/>
		/// VERTICAL LINE in a US layout, REVERSE<br/>
		/// SOLIDUS and VERTICAL LINE in a UK Mac<br/>
		/// layout, NUMBER SIGN and TILDE in a UK<br/>
		/// Windows layout, DOLLAR SIGN and POUND SIGN<br/>
		/// in a Swiss German layout, NUMBER SIGN and<br/>
		/// APOSTROPHE in a German layout, GRAVE<br/>
		/// ACCENT and POUND SIGN in a French Mac<br/>
		/// layout, and ASTERISK and MICRO SIGN in a<br/>
		/// French Windows layout.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_BACKSLASH")]
		Backslash = unchecked(49),

		/// <summary>
		/// ISO USB keyboards actually use this code<br/>
		/// instead of 49 for the same key, but all<br/>
		/// OSes I've seen treat the two codes<br/>
		/// identically. So, as an implementor, unless<br/>
		/// your keyboard generates both of those<br/>
		/// codes and your OS treats them differently,<br/>
		/// you should generate SDL_SCANCODE_BACKSLASH<br/>
		/// instead of this code. As a user, you<br/>
		/// should not rely on this code because SDL<br/>
		/// will never generate it with most (all?)<br/>
		/// keyboards.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_NONUSHASH")]
		Nonushash = unchecked(50),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SEMICOLON")]
		Semicolon = unchecked(51),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_APOSTROPHE")]
		Apostrophe = unchecked(52),
		/// <summary>
		/// Located in the top left corner (on both ANSI<br/>
		/// and ISO keyboards). Produces GRAVE ACCENT and<br/>
		/// TILDE in a US Windows layout and in US and UK<br/>
		/// Mac layouts on ANSI keyboards, GRAVE ACCENT<br/>
		/// and NOT SIGN in a UK Windows layout, SECTION<br/>
		/// SIGN and PLUS-MINUS SIGN in US and UK Mac<br/>
		/// layouts on ISO keyboards, SECTION SIGN and<br/>
		/// DEGREE SIGN in a Swiss German layout (Mac:<br/>
		/// only on ISO keyboards), CIRCUMFLEX ACCENT and<br/>
		/// DEGREE SIGN in a German layout (Mac: only on<br/>
		/// ISO keyboards), SUPERSCRIPT TWO and TILDE in a<br/>
		/// French Windows layout, COMMERCIAL AT and<br/>
		/// NUMBER SIGN in a French Mac layout on ISO<br/>
		/// keyboards, and LESS-THAN SIGN and GREATER-THAN<br/>
		/// SIGN in a Swiss German, German, or French Mac<br/>
		/// layout on ANSI keyboards.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_GRAVE")]
		Grave = unchecked(53),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_COMMA")]
		Comma = unchecked(54),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_PERIOD")]
		Period = unchecked(55),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SLASH")]
		Slash = unchecked(56),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CAPSLOCK")]
		Capslock = unchecked(57),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F1")]
		Scancodef1 = unchecked(58),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F2")]
		Scancodef2 = unchecked(59),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F3")]
		Scancodef3 = unchecked(60),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F4")]
		Scancodef4 = unchecked(61),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F5")]
		Scancodef5 = unchecked(62),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F6")]
		Scancodef6 = unchecked(63),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F7")]
		Scancodef7 = unchecked(64),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F8")]
		Scancodef8 = unchecked(65),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F9")]
		Scancodef9 = unchecked(66),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F10")]
		Scancodef10 = unchecked(67),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F11")]
		Scancodef11 = unchecked(68),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F12")]
		Scancodef12 = unchecked(69),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_PRINTSCREEN")]
		Printscreen = unchecked(70),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SCROLLLOCK")]
		Scrolllock = unchecked(71),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_PAUSE")]
		Pause = unchecked(72),
		/// <summary>
		/// insert on PC, help on some Mac keyboards (but<br/>
		/// does send code 73, not 117) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INSERT")]
		Insert = unchecked(73),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_HOME")]
		Home = unchecked(74),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_PAGEUP")]
		Pageup = unchecked(75),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_DELETE")]
		Delete = unchecked(76),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_END")]
		End = unchecked(77),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_PAGEDOWN")]
		Pagedown = unchecked(78),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RIGHT")]
		Right = unchecked(79),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LEFT")]
		Left = unchecked(80),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_DOWN")]
		Down = unchecked(81),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_UP")]
		Up = unchecked(82),
		/// <summary>
		/// num lock on PC, clear on Mac keyboards<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_NUMLOCKCLEAR")]
		Numlockclear = unchecked(83),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_DIVIDE")]
		KpDivide = unchecked(84),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MULTIPLY")]
		KpMultiply = unchecked(85),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MINUS")]
		KpMinus = unchecked(86),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_PLUS")]
		KpPlus = unchecked(87),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_ENTER")]
		KpEnter = unchecked(88),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_1")]
		Kp1 = unchecked(89),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_2")]
		Kp2 = unchecked(90),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_3")]
		Kp3 = unchecked(91),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_4")]
		Kp4 = unchecked(92),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_5")]
		Kp5 = unchecked(93),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_6")]
		Kp6 = unchecked(94),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_7")]
		Kp7 = unchecked(95),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_8")]
		Kp8 = unchecked(96),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_9")]
		Kp9 = unchecked(97),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_0")]
		Kp0 = unchecked(98),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_PERIOD")]
		KpPeriod = unchecked(99),
		/// <summary>
		/// This is the additional key that ISO<br/>
		/// keyboards have over ANSI ones,<br/>
		/// located between left shift and Y.<br/>
		/// Produces GRAVE ACCENT and TILDE in a<br/>
		/// US or UK Mac layout, REVERSE SOLIDUS<br/>
		/// (backslash) and VERTICAL LINE in a<br/>
		/// US or UK Windows layout, and<br/>
		/// LESS-THAN SIGN and GREATER-THAN SIGN<br/>
		/// in a Swiss German, German, or French<br/>
		/// layout. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_NONUSBACKSLASH")]
		Nonusbackslash = unchecked(100),

		/// <summary>
		/// windows contextual menu, compose <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_APPLICATION")]
		Application = unchecked(101),

		/// <summary>
		/// The USB document says this is a status flag,<br/>
		/// not a physical key - but some Mac keyboards<br/>
		/// do have a power key. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_POWER")]
		Power = unchecked(102),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_EQUALS")]
		KpEquals = unchecked(103),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F13")]
		Scancodef13 = unchecked(104),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F14")]
		Scancodef14 = unchecked(105),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F15")]
		Scancodef15 = unchecked(106),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F16")]
		Scancodef16 = unchecked(107),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F17")]
		Scancodef17 = unchecked(108),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F18")]
		Scancodef18 = unchecked(109),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F19")]
		Scancodef19 = unchecked(110),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F20")]
		Scancodef20 = unchecked(111),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F21")]
		Scancodef21 = unchecked(112),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F22")]
		Scancodef22 = unchecked(113),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F23")]
		Scancodef23 = unchecked(114),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_F24")]
		Scancodef24 = unchecked(115),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_EXECUTE")]
		Execute = unchecked(116),
		/// <summary>
		/// AL Integrated Help Center <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_HELP")]
		Help = unchecked(117),

		/// <summary>
		/// Menu (show menu) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_MENU")]
		Menu = unchecked(118),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SELECT")]
		Select = unchecked(119),
		/// <summary>
		/// AC Stop <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_STOP")]
		Stop = unchecked(120),

		/// <summary>
		/// AC Redo/Repeat <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AGAIN")]
		Again = unchecked(121),

		/// <summary>
		/// AC Undo <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_UNDO")]
		Undo = unchecked(122),

		/// <summary>
		/// AC Cut <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CUT")]
		Cut = unchecked(123),

		/// <summary>
		/// AC Copy <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_COPY")]
		Copy = unchecked(124),

		/// <summary>
		/// AC Paste <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_PASTE")]
		Paste = unchecked(125),

		/// <summary>
		/// AC Find <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_FIND")]
		Find = unchecked(126),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_MUTE")]
		Mute = unchecked(127),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_VOLUMEUP")]
		Volumeup = unchecked(128),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_VOLUMEDOWN")]
		Volumedown = unchecked(129),
		/// <summary>
		/// not sure whether there's a reason to enable these <br/>
		/// SDL_SCANCODE_LOCKINGCAPSLOCK = 130,  <br/>
		/// SDL_SCANCODE_LOCKINGNUMLOCK = 131, <br/>
		/// SDL_SCANCODE_LOCKINGSCROLLLOCK = 132, <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_COMMA")]
		KpComma = unchecked(133),

		/// <summary>
		/// not sure whether there's a reason to enable these <br/>
		/// SDL_SCANCODE_LOCKINGCAPSLOCK = 130,  <br/>
		/// SDL_SCANCODE_LOCKINGNUMLOCK = 131, <br/>
		/// SDL_SCANCODE_LOCKINGSCROLLLOCK = 132, <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_EQUALSAS400")]
		KpEqualsas400 = unchecked(134),

		/// <summary>
		/// used on Asian keyboards, see<br/>
		/// footnotes in USB doc <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL1")]
		International1 = unchecked(135),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL2")]
		International2 = unchecked(136),
		/// <summary>
		/// Yen <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL3")]
		International3 = unchecked(137),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL4")]
		International4 = unchecked(138),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL5")]
		International5 = unchecked(139),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL6")]
		International6 = unchecked(140),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL7")]
		International7 = unchecked(141),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL8")]
		International8 = unchecked(142),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_INTERNATIONAL9")]
		International9 = unchecked(143),
		/// <summary>
		/// Hangul/English toggle <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG1")]
		Lang1 = unchecked(144),

		/// <summary>
		/// Hanja conversion <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG2")]
		Lang2 = unchecked(145),

		/// <summary>
		/// Katakana <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG3")]
		Lang3 = unchecked(146),

		/// <summary>
		/// Hiragana <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG4")]
		Lang4 = unchecked(147),

		/// <summary>
		/// Zenkaku/Hankaku <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG5")]
		Lang5 = unchecked(148),

		/// <summary>
		/// reserved <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG6")]
		Lang6 = unchecked(149),

		/// <summary>
		/// reserved <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG7")]
		Lang7 = unchecked(150),

		/// <summary>
		/// reserved <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG8")]
		Lang8 = unchecked(151),

		/// <summary>
		/// reserved <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LANG9")]
		Lang9 = unchecked(152),

		/// <summary>
		/// Erase-Eaze <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_ALTERASE")]
		Alterase = unchecked(153),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SYSREQ")]
		Sysreq = unchecked(154),
		/// <summary>
		/// AC Cancel <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CANCEL")]
		Cancel = unchecked(155),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CLEAR")]
		Clear = unchecked(156),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_PRIOR")]
		Prior = unchecked(157),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RETURN2")]
		Return2 = unchecked(158),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SEPARATOR")]
		Separator = unchecked(159),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_OUT")]
		Out = unchecked(160),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_OPER")]
		Oper = unchecked(161),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CLEARAGAIN")]
		Clearagain = unchecked(162),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CRSEL")]
		Crsel = unchecked(163),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_EXSEL")]
		Exsel = unchecked(164),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_00")]
		Kp00 = unchecked(176),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_000")]
		Kp000 = unchecked(177),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_THOUSANDSSEPARATOR")]
		Thousandsseparator = unchecked(178),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_DECIMALSEPARATOR")]
		Decimalseparator = unchecked(179),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CURRENCYUNIT")]
		Currencyunit = unchecked(180),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CURRENCYSUBUNIT")]
		Currencysubunit = unchecked(181),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_LEFTPAREN")]
		KpLeftparen = unchecked(182),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_RIGHTPAREN")]
		KpRightparen = unchecked(183),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_LEFTBRACE")]
		KpLeftbrace = unchecked(184),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_RIGHTBRACE")]
		KpRightbrace = unchecked(185),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_TAB")]
		KpTab = unchecked(186),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_BACKSPACE")]
		KpBackspace = unchecked(187),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_A")]
		Kpa = unchecked(188),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_B")]
		Kpb = unchecked(189),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_C")]
		Kpc = unchecked(190),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_D")]
		Kpd = unchecked(191),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_E")]
		Kpe = unchecked(192),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_F")]
		Kpf = unchecked(193),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_XOR")]
		KpXor = unchecked(194),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_POWER")]
		KpPower = unchecked(195),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_PERCENT")]
		KpPercent = unchecked(196),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_LESS")]
		KpLess = unchecked(197),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_GREATER")]
		KpGreater = unchecked(198),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_AMPERSAND")]
		KpAmpersand = unchecked(199),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_DBLAMPERSAND")]
		KpDblampersand = unchecked(200),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_VERTICALBAR")]
		KpVerticalbar = unchecked(201),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_DBLVERTICALBAR")]
		KpDblverticalbar = unchecked(202),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_COLON")]
		KpColon = unchecked(203),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_HASH")]
		KpHash = unchecked(204),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_SPACE")]
		KpSpace = unchecked(205),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_AT")]
		KpAt = unchecked(206),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_EXCLAM")]
		KpExclam = unchecked(207),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MEMSTORE")]
		KpMemstore = unchecked(208),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MEMRECALL")]
		KpMemrecall = unchecked(209),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MEMCLEAR")]
		KpMemclear = unchecked(210),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MEMADD")]
		KpMemadd = unchecked(211),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MEMSUBTRACT")]
		KpMemsubtract = unchecked(212),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MEMMULTIPLY")]
		KpMemmultiply = unchecked(213),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_MEMDIVIDE")]
		KpMemdivide = unchecked(214),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_PLUSMINUS")]
		KpPlusminus = unchecked(215),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_CLEAR")]
		KpClear = unchecked(216),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_CLEARENTRY")]
		KpClearentry = unchecked(217),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_BINARY")]
		KpBinary = unchecked(218),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_OCTAL")]
		KpOctal = unchecked(219),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_DECIMAL")]
		KpDecimal = unchecked(220),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KP_HEXADECIMAL")]
		KpHexadecimal = unchecked(221),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LCTRL")]
		Lctrl = unchecked(224),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LSHIFT")]
		Lshift = unchecked(225),
		/// <summary>
		/// alt, option <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LALT")]
		Lalt = unchecked(226),

		/// <summary>
		/// windows, command (apple), meta <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_LGUI")]
		Lgui = unchecked(227),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RCTRL")]
		Rctrl = unchecked(228),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RSHIFT")]
		Rshift = unchecked(229),
		/// <summary>
		/// alt gr, option <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RALT")]
		Ralt = unchecked(230),

		/// <summary>
		/// windows, command (apple), meta <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_RGUI")]
		Rgui = unchecked(231),

		/// <summary>
		/// I'm not sure if this is really not covered<br/>
		/// by any of the above, but since there's a<br/>
		/// special KMOD_MODE for it I'm adding it here<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_MODE")]
		Mode = unchecked(257),

		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// See https://usb.org/sites/default/files/hut1_2.pdf<br/>
		/// There are way more keys in the spec than we can represent in the<br/>
		/// current scancode range, so pick the ones that commonly come up in<br/>
		/// real world usage.<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AUDIONEXT")]
		Audionext = unchecked(258),

		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// See https://usb.org/sites/default/files/hut1_2.pdf<br/>
		/// There are way more keys in the spec than we can represent in the<br/>
		/// current scancode range, so pick the ones that commonly come up in<br/>
		/// real world usage.<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AUDIOPREV")]
		Audioprev = unchecked(259),

		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// See https://usb.org/sites/default/files/hut1_2.pdf<br/>
		/// There are way more keys in the spec than we can represent in the<br/>
		/// current scancode range, so pick the ones that commonly come up in<br/>
		/// real world usage.<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AUDIOSTOP")]
		Audiostop = unchecked(260),

		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// See https://usb.org/sites/default/files/hut1_2.pdf<br/>
		/// There are way more keys in the spec than we can represent in the<br/>
		/// current scancode range, so pick the ones that commonly come up in<br/>
		/// real world usage.<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AUDIOPLAY")]
		Audioplay = unchecked(261),

		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// See https://usb.org/sites/default/files/hut1_2.pdf<br/>
		/// There are way more keys in the spec than we can represent in the<br/>
		/// current scancode range, so pick the ones that commonly come up in<br/>
		/// real world usage.<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AUDIOMUTE")]
		Audiomute = unchecked(262),

		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// See https://usb.org/sites/default/files/hut1_2.pdf<br/>
		/// There are way more keys in the spec than we can represent in the<br/>
		/// current scancode range, so pick the ones that commonly come up in<br/>
		/// real world usage.<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_MEDIASELECT")]
		Mediaselect = unchecked(263),

		/// <summary>
		/// AL Internet Browser <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_WWW")]
		Www = unchecked(264),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_MAIL")]
		Mail = unchecked(265),
		/// <summary>
		/// AL Calculator <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CALCULATOR")]
		Calculator = unchecked(266),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_COMPUTER")]
		Computer = unchecked(267),
		/// <summary>
		/// AC Search <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AC_SEARCH")]
		AcSearch = unchecked(268),

		/// <summary>
		/// AC Home <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AC_HOME")]
		AcHome = unchecked(269),

		/// <summary>
		/// AC Back <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AC_BACK")]
		AcBack = unchecked(270),

		/// <summary>
		/// AC Forward <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AC_FORWARD")]
		AcForward = unchecked(271),

		/// <summary>
		/// AC Stop <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AC_STOP")]
		AcStop = unchecked(272),

		/// <summary>
		/// AC Refresh <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AC_REFRESH")]
		AcRefresh = unchecked(273),

		/// <summary>
		/// AC Bookmarks <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AC_BOOKMARKS")]
		AcBookmarks = unchecked(274),

		/// <summary>
		/// <br/>
		/// These are values that Christian Walther added (for mac keyboard?).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_BRIGHTNESSDOWN")]
		Brightnessdown = unchecked(275),

		/// <summary>
		/// <br/>
		/// These are values that Christian Walther added (for mac keyboard?).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_BRIGHTNESSUP")]
		Brightnessup = unchecked(276),

		/// <summary>
		/// display mirroring/dual display<br/>
		/// switch, video mode switch <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_DISPLAYSWITCH")]
		Displayswitch = unchecked(277),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KBDILLUMTOGGLE")]
		Kbdillumtoggle = unchecked(278),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KBDILLUMDOWN")]
		Kbdillumdown = unchecked(279),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_KBDILLUMUP")]
		Kbdillumup = unchecked(280),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_EJECT")]
		Eject = unchecked(281),
		/// <summary>
		/// SC System Sleep <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SLEEP")]
		Sleep = unchecked(282),

		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_APP1")]
		App1 = unchecked(283),
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_APP2")]
		App2 = unchecked(284),
		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AUDIOREWIND")]
		Audiorewind = unchecked(285),

		/// <summary>
		/// <br/>
		/// These values are mapped from usage page 0x0C (USB consumer page).<br/>
		/// <br/>
		/// @<br/>
		/// { <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_AUDIOFASTFORWARD")]
		Audiofastforward = unchecked(286),

		/// <summary>
		/// Usually situated below the display on phones and<br/>
		/// used as a multi-function feature key for selecting<br/>
		/// a software defined function shown on the bottom left<br/>
		/// of the display. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SOFTLEFT")]
		Softleft = unchecked(287),

		/// <summary>
		/// Usually situated below the display on phones and<br/>
		/// used as a multi-function feature key for selecting<br/>
		/// a software defined function shown on the bottom right<br/>
		/// of the display. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_SOFTRIGHT")]
		Softright = unchecked(288),

		/// <summary>
		/// Used for accepting phone calls. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_CALL")]
		Call = unchecked(289),

		/// <summary>
		/// Used for rejecting phone calls. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SCANCODE_ENDCALL")]
		Endcall = unchecked(290),

		/// <summary>
		/// not a key, just marks the number of scancodes<br/>
		/// for array bounds <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_NUM_SCANCODES")]
		NumScancodes = unchecked(512),

	}

	[NativeName(NativeNameType.Enum, "SDL_KeyCode")]
	public enum SDLKeyCode
	{
		[NativeName(NativeNameType.EnumItem, "SDLK_UNKNOWN")]
		SdlkUnknown = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDLK_RETURN")]
		SdlkReturn = unchecked((int)'\r'),
		[NativeName(NativeNameType.EnumItem, "SDLK_ESCAPE")]
		SdlkEscape = unchecked((int)'\x1B'),
		[NativeName(NativeNameType.EnumItem, "SDLK_BACKSPACE")]
		SdlkBackspace = unchecked((int)'\b'),
		[NativeName(NativeNameType.EnumItem, "SDLK_TAB")]
		SdlkTab = unchecked((int)'\t'),
		[NativeName(NativeNameType.EnumItem, "SDLK_SPACE")]
		SdlkSpace = unchecked((int)' '),
		[NativeName(NativeNameType.EnumItem, "SDLK_EXCLAIM")]
		SdlkExclaim = unchecked((int)'!'),
		[NativeName(NativeNameType.EnumItem, "SDLK_QUOTEDBL")]
		SdlkQuotedbl = unchecked((int)'"'),
		[NativeName(NativeNameType.EnumItem, "SDLK_HASH")]
		SdlkHash = unchecked((int)'#'),
		[NativeName(NativeNameType.EnumItem, "SDLK_PERCENT")]
		SdlkPercent = unchecked((int)'%'),
		[NativeName(NativeNameType.EnumItem, "SDLK_DOLLAR")]
		SdlkDollar = unchecked((int)'$'),
		[NativeName(NativeNameType.EnumItem, "SDLK_AMPERSAND")]
		SdlkAmpersand = unchecked((int)'&'),
		[NativeName(NativeNameType.EnumItem, "SDLK_QUOTE")]
		SdlkQuote = unchecked((int)'\''),
		[NativeName(NativeNameType.EnumItem, "SDLK_LEFTPAREN")]
		SdlkLeftparen = unchecked((int)'('),
		[NativeName(NativeNameType.EnumItem, "SDLK_RIGHTPAREN")]
		SdlkRightparen = unchecked((int)')'),
		[NativeName(NativeNameType.EnumItem, "SDLK_ASTERISK")]
		SdlkAsterisk = unchecked((int)'*'),
		[NativeName(NativeNameType.EnumItem, "SDLK_PLUS")]
		SdlkPlus = unchecked((int)'+'),
		[NativeName(NativeNameType.EnumItem, "SDLK_COMMA")]
		SdlkComma = unchecked((int)','),
		[NativeName(NativeNameType.EnumItem, "SDLK_MINUS")]
		SdlkMinus = unchecked((int)'-'),
		[NativeName(NativeNameType.EnumItem, "SDLK_PERIOD")]
		SdlkPeriod = unchecked((int)'.'),
		[NativeName(NativeNameType.EnumItem, "SDLK_SLASH")]
		SdlkSlash = unchecked((int)'/'),
		[NativeName(NativeNameType.EnumItem, "SDLK_0")]
		Sdlk0 = unchecked((int)'0'),
		[NativeName(NativeNameType.EnumItem, "SDLK_1")]
		Sdlk1 = unchecked((int)'1'),
		[NativeName(NativeNameType.EnumItem, "SDLK_2")]
		Sdlk2 = unchecked((int)'2'),
		[NativeName(NativeNameType.EnumItem, "SDLK_3")]
		Sdlk3 = unchecked((int)'3'),
		[NativeName(NativeNameType.EnumItem, "SDLK_4")]
		Sdlk4 = unchecked((int)'4'),
		[NativeName(NativeNameType.EnumItem, "SDLK_5")]
		Sdlk5 = unchecked((int)'5'),
		[NativeName(NativeNameType.EnumItem, "SDLK_6")]
		Sdlk6 = unchecked((int)'6'),
		[NativeName(NativeNameType.EnumItem, "SDLK_7")]
		Sdlk7 = unchecked((int)'7'),
		[NativeName(NativeNameType.EnumItem, "SDLK_8")]
		Sdlk8 = unchecked((int)'8'),
		[NativeName(NativeNameType.EnumItem, "SDLK_9")]
		Sdlk9 = unchecked((int)'9'),
		[NativeName(NativeNameType.EnumItem, "SDLK_COLON")]
		SdlkColon = unchecked((int)':'),
		[NativeName(NativeNameType.EnumItem, "SDLK_SEMICOLON")]
		SdlkSemicolon = unchecked((int)';'),
		[NativeName(NativeNameType.EnumItem, "SDLK_LESS")]
		SdlkLess = unchecked((int)'<'),
		[NativeName(NativeNameType.EnumItem, "SDLK_EQUALS")]
		SdlkEquals = unchecked((int)'='),
		[NativeName(NativeNameType.EnumItem, "SDLK_GREATER")]
		SdlkGreater = unchecked((int)'>'),
		[NativeName(NativeNameType.EnumItem, "SDLK_QUESTION")]
		SdlkQuestion = unchecked((int)'?'),
		[NativeName(NativeNameType.EnumItem, "SDLK_AT")]
		SdlkAt = unchecked((int)'@'),
		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_LEFTBRACKET")]
		SdlkLeftbracket = unchecked((int)'['),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_BACKSLASH")]
		SdlkBackslash = unchecked((int)'\\'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_RIGHTBRACKET")]
		SdlkRightbracket = unchecked((int)']'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CARET")]
		SdlkCaret = unchecked((int)'^'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_UNDERSCORE")]
		SdlkUnderscore = unchecked((int)'_'),
		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_BACKQUOTE")]
		SdlkBackquote = unchecked((int)'`'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_a")]
		Sdlka = unchecked((int)'a'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_b")]
		Sdlkb = unchecked((int)'b'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_c")]
		Sdlkc = unchecked((int)'c'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_d")]
		Sdlkd = unchecked((int)'d'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_e")]
		Sdlke = unchecked((int)'e'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_f")]
		Sdlkf = unchecked((int)'f'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_g")]
		Sdlkg = unchecked((int)'g'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_h")]
		Sdlkh = unchecked((int)'h'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_i")]
		Sdlki = unchecked((int)'i'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_j")]
		Sdlkj = unchecked((int)'j'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_k")]
		Sdlkk = unchecked((int)'k'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_l")]
		Sdlkl = unchecked((int)'l'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_m")]
		Sdlkm = unchecked((int)'m'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_n")]
		Sdlkn = unchecked((int)'n'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_o")]
		Sdlko = unchecked((int)'o'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_p")]
		Sdlkp = unchecked((int)'p'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_q")]
		Sdlkq = unchecked((int)'q'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_r")]
		Sdlkr = unchecked((int)'r'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_s")]
		Sdlks = unchecked((int)'s'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_t")]
		Sdlkt = unchecked((int)'t'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_u")]
		Sdlku = unchecked((int)'u'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_v")]
		Sdlkv = unchecked((int)'v'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_w")]
		Sdlkw = unchecked((int)'w'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_x")]
		Sdlkx = unchecked((int)'x'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_y")]
		Sdlky = unchecked((int)'y'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_z")]
		Sdlkz = unchecked((int)'z'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CAPSLOCK")]
		SdlkCapslock = unchecked(1073741881),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F1")]
		Sdlkf1 = unchecked(1073741882),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F2")]
		Sdlkf2 = unchecked(1073741883),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F3")]
		Sdlkf3 = unchecked(1073741884),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F4")]
		Sdlkf4 = unchecked(1073741885),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F5")]
		Sdlkf5 = unchecked(1073741886),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F6")]
		Sdlkf6 = unchecked(1073741887),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F7")]
		Sdlkf7 = unchecked(1073741888),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F8")]
		Sdlkf8 = unchecked(1073741889),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F9")]
		Sdlkf9 = unchecked(1073741890),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F10")]
		Sdlkf10 = unchecked(1073741891),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F11")]
		Sdlkf11 = unchecked(1073741892),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F12")]
		Sdlkf12 = unchecked(1073741893),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_PRINTSCREEN")]
		SdlkPrintscreen = unchecked(1073741894),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_SCROLLLOCK")]
		SdlkScrolllock = unchecked(1073741895),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_PAUSE")]
		SdlkPause = unchecked(1073741896),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_INSERT")]
		SdlkInsert = unchecked(1073741897),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_HOME")]
		SdlkHome = unchecked(1073741898),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_PAGEUP")]
		SdlkPageup = unchecked(1073741899),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_DELETE")]
		SdlkDelete = unchecked((int)'\x7F'),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_END")]
		SdlkEnd = unchecked(1073741901),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_PAGEDOWN")]
		SdlkPagedown = unchecked(1073741902),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_RIGHT")]
		SdlkRight = unchecked(1073741903),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_LEFT")]
		SdlkLeft = unchecked(1073741904),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_DOWN")]
		SdlkDown = unchecked(1073741905),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_UP")]
		SdlkUp = unchecked(1073741906),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_NUMLOCKCLEAR")]
		SdlkNumlockclear = unchecked(1073741907),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_DIVIDE")]
		SdlkKpDivide = unchecked(1073741908),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MULTIPLY")]
		SdlkKpMultiply = unchecked(1073741909),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MINUS")]
		SdlkKpMinus = unchecked(1073741910),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_PLUS")]
		SdlkKpPlus = unchecked(1073741911),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_ENTER")]
		SdlkKpEnter = unchecked(1073741912),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_1")]
		SdlkKp1 = unchecked(1073741913),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_2")]
		SdlkKp2 = unchecked(1073741914),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_3")]
		SdlkKp3 = unchecked(1073741915),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_4")]
		SdlkKp4 = unchecked(1073741916),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_5")]
		SdlkKp5 = unchecked(1073741917),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_6")]
		SdlkKp6 = unchecked(1073741918),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_7")]
		SdlkKp7 = unchecked(1073741919),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_8")]
		SdlkKp8 = unchecked(1073741920),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_9")]
		SdlkKp9 = unchecked(1073741921),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_0")]
		SdlkKp0 = unchecked(1073741922),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_PERIOD")]
		SdlkKpPeriod = unchecked(1073741923),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_APPLICATION")]
		SdlkApplication = unchecked(1073741925),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_POWER")]
		SdlkPower = unchecked(1073741926),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_EQUALS")]
		SdlkKpEquals = unchecked(1073741927),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F13")]
		Sdlkf13 = unchecked(1073741928),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F14")]
		Sdlkf14 = unchecked(1073741929),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F15")]
		Sdlkf15 = unchecked(1073741930),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F16")]
		Sdlkf16 = unchecked(1073741931),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F17")]
		Sdlkf17 = unchecked(1073741932),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F18")]
		Sdlkf18 = unchecked(1073741933),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F19")]
		Sdlkf19 = unchecked(1073741934),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F20")]
		Sdlkf20 = unchecked(1073741935),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F21")]
		Sdlkf21 = unchecked(1073741936),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F22")]
		Sdlkf22 = unchecked(1073741937),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F23")]
		Sdlkf23 = unchecked(1073741938),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_F24")]
		Sdlkf24 = unchecked(1073741939),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_EXECUTE")]
		SdlkExecute = unchecked(1073741940),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_HELP")]
		SdlkHelp = unchecked(1073741941),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_MENU")]
		SdlkMenu = unchecked(1073741942),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_SELECT")]
		SdlkSelect = unchecked(1073741943),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_STOP")]
		SdlkStop = unchecked(1073741944),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AGAIN")]
		SdlkAgain = unchecked(1073741945),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_UNDO")]
		SdlkUndo = unchecked(1073741946),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CUT")]
		SdlkCut = unchecked(1073741947),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_COPY")]
		SdlkCopy = unchecked(1073741948),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_PASTE")]
		SdlkPaste = unchecked(1073741949),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_FIND")]
		SdlkFind = unchecked(1073741950),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_MUTE")]
		SdlkMute = unchecked(1073741951),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_VOLUMEUP")]
		SdlkVolumeup = unchecked(1073741952),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_VOLUMEDOWN")]
		SdlkVolumedown = unchecked(1073741953),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_COMMA")]
		SdlkKpComma = unchecked(1073741957),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_EQUALSAS400")]
		SdlkKpEqualsas400 = unchecked(1073741958),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_ALTERASE")]
		SdlkAlterase = unchecked(1073741977),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_SYSREQ")]
		SdlkSysreq = unchecked(1073741978),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CANCEL")]
		SdlkCancel = unchecked(1073741979),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CLEAR")]
		SdlkClear = unchecked(1073741980),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_PRIOR")]
		SdlkPrior = unchecked(1073741981),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_RETURN2")]
		SdlkReturn2 = unchecked(1073741982),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_SEPARATOR")]
		SdlkSeparator = unchecked(1073741983),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_OUT")]
		SdlkOut = unchecked(1073741984),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_OPER")]
		SdlkOper = unchecked(1073741985),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CLEARAGAIN")]
		SdlkClearagain = unchecked(1073741986),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CRSEL")]
		SdlkCrsel = unchecked(1073741987),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_EXSEL")]
		SdlkExsel = unchecked(1073741988),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_00")]
		SdlkKp00 = unchecked(1073742000),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_000")]
		SdlkKp000 = unchecked(1073742001),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_THOUSANDSSEPARATOR")]
		SdlkThousandsseparator = unchecked(1073742002),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_DECIMALSEPARATOR")]
		SdlkDecimalseparator = unchecked(1073742003),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CURRENCYUNIT")]
		SdlkCurrencyunit = unchecked(1073742004),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CURRENCYSUBUNIT")]
		SdlkCurrencysubunit = unchecked(1073742005),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_LEFTPAREN")]
		SdlkKpLeftparen = unchecked(1073742006),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_RIGHTPAREN")]
		SdlkKpRightparen = unchecked(1073742007),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_LEFTBRACE")]
		SdlkKpLeftbrace = unchecked(1073742008),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_RIGHTBRACE")]
		SdlkKpRightbrace = unchecked(1073742009),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_TAB")]
		SdlkKpTab = unchecked(1073742010),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_BACKSPACE")]
		SdlkKpBackspace = unchecked(1073742011),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_A")]
		SdlkKpa = unchecked(1073742012),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_B")]
		SdlkKpb = unchecked(1073742013),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_C")]
		SdlkKpc = unchecked(1073742014),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_D")]
		SdlkKpd = unchecked(1073742015),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_E")]
		SdlkKpe = unchecked(1073742016),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_F")]
		SdlkKpf = unchecked(1073742017),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_XOR")]
		SdlkKpXor = unchecked(1073742018),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_POWER")]
		SdlkKpPower = unchecked(1073742019),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_PERCENT")]
		SdlkKpPercent = unchecked(1073742020),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_LESS")]
		SdlkKpLess = unchecked(1073742021),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_GREATER")]
		SdlkKpGreater = unchecked(1073742022),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_AMPERSAND")]
		SdlkKpAmpersand = unchecked(1073742023),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_DBLAMPERSAND")]
		SdlkKpDblampersand = unchecked(1073742024),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_VERTICALBAR")]
		SdlkKpVerticalbar = unchecked(1073742025),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_DBLVERTICALBAR")]
		SdlkKpDblverticalbar = unchecked(1073742026),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_COLON")]
		SdlkKpColon = unchecked(1073742027),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_HASH")]
		SdlkKpHash = unchecked(1073742028),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_SPACE")]
		SdlkKpSpace = unchecked(1073742029),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_AT")]
		SdlkKpAt = unchecked(1073742030),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_EXCLAM")]
		SdlkKpExclam = unchecked(1073742031),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MEMSTORE")]
		SdlkKpMemstore = unchecked(1073742032),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MEMRECALL")]
		SdlkKpMemrecall = unchecked(1073742033),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MEMCLEAR")]
		SdlkKpMemclear = unchecked(1073742034),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MEMADD")]
		SdlkKpMemadd = unchecked(1073742035),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MEMSUBTRACT")]
		SdlkKpMemsubtract = unchecked(1073742036),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MEMMULTIPLY")]
		SdlkKpMemmultiply = unchecked(1073742037),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_MEMDIVIDE")]
		SdlkKpMemdivide = unchecked(1073742038),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_PLUSMINUS")]
		SdlkKpPlusminus = unchecked(1073742039),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_CLEAR")]
		SdlkKpClear = unchecked(1073742040),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_CLEARENTRY")]
		SdlkKpClearentry = unchecked(1073742041),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_BINARY")]
		SdlkKpBinary = unchecked(1073742042),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_OCTAL")]
		SdlkKpOctal = unchecked(1073742043),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_DECIMAL")]
		SdlkKpDecimal = unchecked(1073742044),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KP_HEXADECIMAL")]
		SdlkKpHexadecimal = unchecked(1073742045),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_LCTRL")]
		SdlkLctrl = unchecked(1073742048),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_LSHIFT")]
		SdlkLshift = unchecked(1073742049),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_LALT")]
		SdlkLalt = unchecked(1073742050),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_LGUI")]
		SdlkLgui = unchecked(1073742051),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_RCTRL")]
		SdlkRctrl = unchecked(1073742052),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_RSHIFT")]
		SdlkRshift = unchecked(1073742053),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_RALT")]
		SdlkRalt = unchecked(1073742054),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_RGUI")]
		SdlkRgui = unchecked(1073742055),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_MODE")]
		SdlkMode = unchecked(1073742081),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AUDIONEXT")]
		SdlkAudionext = unchecked(1073742082),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AUDIOPREV")]
		SdlkAudioprev = unchecked(1073742083),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AUDIOSTOP")]
		SdlkAudiostop = unchecked(1073742084),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AUDIOPLAY")]
		SdlkAudioplay = unchecked(1073742085),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AUDIOMUTE")]
		SdlkAudiomute = unchecked(1073742086),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_MEDIASELECT")]
		SdlkMediaselect = unchecked(1073742087),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_WWW")]
		SdlkWww = unchecked(1073742088),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_MAIL")]
		SdlkMail = unchecked(1073742089),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CALCULATOR")]
		SdlkCalculator = unchecked(1073742090),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_COMPUTER")]
		SdlkComputer = unchecked(1073742091),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AC_SEARCH")]
		SdlkAcSearch = unchecked(1073742092),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AC_HOME")]
		SdlkAcHome = unchecked(1073742093),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AC_BACK")]
		SdlkAcBack = unchecked(1073742094),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AC_FORWARD")]
		SdlkAcForward = unchecked(1073742095),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AC_STOP")]
		SdlkAcStop = unchecked(1073742096),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AC_REFRESH")]
		SdlkAcRefresh = unchecked(1073742097),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AC_BOOKMARKS")]
		SdlkAcBookmarks = unchecked(1073742098),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_BRIGHTNESSDOWN")]
		SdlkBrightnessdown = unchecked(1073742099),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_BRIGHTNESSUP")]
		SdlkBrightnessup = unchecked(1073742100),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_DISPLAYSWITCH")]
		SdlkDisplayswitch = unchecked(1073742101),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KBDILLUMTOGGLE")]
		SdlkKbdillumtoggle = unchecked(1073742102),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KBDILLUMDOWN")]
		SdlkKbdillumdown = unchecked(1073742103),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_KBDILLUMUP")]
		SdlkKbdillumup = unchecked(1073742104),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_EJECT")]
		SdlkEject = unchecked(1073742105),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_SLEEP")]
		SdlkSleep = unchecked(1073742106),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_APP1")]
		SdlkApp1 = unchecked(1073742107),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_APP2")]
		SdlkApp2 = unchecked(1073742108),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AUDIOREWIND")]
		SdlkAudiorewind = unchecked(1073742109),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_AUDIOFASTFORWARD")]
		SdlkAudiofastforward = unchecked(1073742110),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_SOFTLEFT")]
		SdlkSoftleft = unchecked(1073742111),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_SOFTRIGHT")]
		SdlkSoftright = unchecked(1073742112),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_CALL")]
		SdlkCall = unchecked(1073742113),

		/// <summary>
		/// Skip uppercase letters<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDLK_ENDCALL")]
		SdlkEndcall = unchecked(1073742114),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_Keymod")]
	public enum SDLKeymod
	{
		[NativeName(NativeNameType.EnumItem, "KMOD_NONE")]
		KmodNone = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "KMOD_LSHIFT")]
		KmodLshift = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "KMOD_RSHIFT")]
		KmodRshift = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "KMOD_LCTRL")]
		KmodLctrl = unchecked(64),
		[NativeName(NativeNameType.EnumItem, "KMOD_RCTRL")]
		KmodRctrl = unchecked(128),
		[NativeName(NativeNameType.EnumItem, "KMOD_LALT")]
		KmodLalt = unchecked(256),
		[NativeName(NativeNameType.EnumItem, "KMOD_RALT")]
		KmodRalt = unchecked(512),
		[NativeName(NativeNameType.EnumItem, "KMOD_LGUI")]
		KmodLgui = unchecked(1024),
		[NativeName(NativeNameType.EnumItem, "KMOD_RGUI")]
		KmodRgui = unchecked(2048),
		[NativeName(NativeNameType.EnumItem, "KMOD_NUM")]
		KmodNum = unchecked(4096),
		[NativeName(NativeNameType.EnumItem, "KMOD_CAPS")]
		KmodCaps = unchecked(8192),
		[NativeName(NativeNameType.EnumItem, "KMOD_MODE")]
		KmodMode = unchecked(16384),
		[NativeName(NativeNameType.EnumItem, "KMOD_SCROLL")]
		KmodScroll = unchecked(32768),
		[NativeName(NativeNameType.EnumItem, "KMOD_CTRL")]
		KmodCtrl = unchecked(192),
		[NativeName(NativeNameType.EnumItem, "KMOD_SHIFT")]
		KmodShift = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "KMOD_ALT")]
		KmodAlt = unchecked(768),
		[NativeName(NativeNameType.EnumItem, "KMOD_GUI")]
		KmodGui = unchecked(3072),
		/// <summary>
		/// This is for source-level compatibility with SDL 2.0.0. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "KMOD_RESERVED")]
		KmodReserved = KmodScroll,

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_SystemCursor")]
	public enum SDLSystemCursor
	{
		/// <summary>
		/// Arrow <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_ARROW")]
		Arrow = unchecked(0),

		/// <summary>
		/// I-beam <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_IBEAM")]
		Ibeam = unchecked(1),

		/// <summary>
		/// Wait <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_WAIT")]
		Wait = unchecked(2),

		/// <summary>
		/// Crosshair <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_CROSSHAIR")]
		Crosshair = unchecked(3),

		/// <summary>
		/// Small wait cursor (or Wait if not available) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_WAITARROW")]
		Waitarrow = unchecked(4),

		/// <summary>
		/// Double arrow pointing northwest and southeast <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_SIZENWSE")]
		Sizenwse = unchecked(5),

		/// <summary>
		/// Double arrow pointing northeast and southwest <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_SIZENESW")]
		Sizenesw = unchecked(6),

		/// <summary>
		/// Double arrow pointing west and east <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_SIZEWE")]
		Sizewe = unchecked(7),

		/// <summary>
		/// Double arrow pointing north and south <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_SIZENS")]
		Sizens = unchecked(8),

		/// <summary>
		/// Four pointed arrow pointing north, south, east, and west <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_SIZEALL")]
		Sizeall = unchecked(9),

		/// <summary>
		/// Slashed circle or crossbones <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_NO")]
		No = unchecked(10),

		/// <summary>
		/// Hand <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSTEM_CURSOR_HAND")]
		Hand = unchecked(11),

		[NativeName(NativeNameType.EnumItem, "SDL_NUM_SYSTEM_CURSORS")]
		NumSystemCursors = unchecked(12),
	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_MouseWheelDirection")]
	public enum SDLMouseWheelDirection
	{
		/// <summary>
		/// The scroll direction is normal <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MOUSEWHEEL_NORMAL")]
		MousewheelNormal = unchecked(0),

		/// <summary>
		/// The scroll direction is flipped / natural <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MOUSEWHEEL_FLIPPED")]
		MousewheelFlipped = unchecked(1),

	}

	[NativeName(NativeNameType.Enum, "SDL_JoystickType")]
	public enum SDLJoystickType
	{
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_UNKNOWN")]
		Unknown = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_GAMECONTROLLER")]
		Gamecontroller = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_WHEEL")]
		Wheel = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_ARCADE_STICK")]
		ArcadeStick = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_FLIGHT_STICK")]
		FlightStick = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_DANCE_PAD")]
		DancePad = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_GUITAR")]
		Guitar = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_DRUM_KIT")]
		DrumKit = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_ARCADE_PAD")]
		ArcadePad = unchecked(8),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_TYPE_THROTTLE")]
		Throttle = unchecked(9),
	}

	[NativeName(NativeNameType.Enum, "SDL_JoystickPowerLevel")]
	public enum SDLJoystickPowerLevel
	{
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_POWER_UNKNOWN")]
		Unknown = unchecked(-1),
		/// <summary>
		/// <br/>
		/// <<br/>
		/// = 5% <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_POWER_EMPTY")]
		Empty = unchecked(0),

		/// <summary>
		/// <br/>
		/// <<br/>
		/// = 20% <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_POWER_LOW")]
		Low = unchecked(1),

		/// <summary>
		/// <br/>
		/// <<br/>
		/// = 70% <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_POWER_MEDIUM")]
		Medium = unchecked(2),

		/// <summary>
		/// <br/>
		/// <<br/>
		/// = 100% <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_POWER_FULL")]
		Full = unchecked(3),

		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_POWER_WIRED")]
		Wired = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_JOYSTICK_POWER_MAX")]
		Max = unchecked(5),
	}

	/// <summary>
	/// The different sensors defined by SDL<br/>
	/// Additional sensors may be available, using platform dependent semantics.<br/>
	/// Hare are the additional Android sensors:<br/>
	/// https://developer.android.com/reference/android/hardware/SensorEvent.html#values<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_SensorType")]
	public enum SDLSensorType
	{
		/// <summary>
		/// Returned for an invalid sensor <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_INVALID")]
		Invalid = unchecked(-1),

		/// <summary>
		/// Unknown sensor type <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_UNKNOWN")]
		Unknown = unchecked(0),

		/// <summary>
		/// Accelerometer <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_ACCEL")]
		Accel = unchecked(1),

		/// <summary>
		/// Gyroscope <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_GYRO")]
		Gyro = unchecked(2),

		/// <summary>
		/// Accelerometer for left Joy-Con controller and Wii nunchuk <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_ACCEL_L")]
		Accell = unchecked(3),

		/// <summary>
		/// Gyroscope for left Joy-Con controller <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_GYRO_L")]
		Gyrol = unchecked(4),

		/// <summary>
		/// Accelerometer for right Joy-Con controller <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_ACCEL_R")]
		Accelr = unchecked(5),

		/// <summary>
		/// Gyroscope for right Joy-Con controller <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSOR_GYRO_R")]
		Gyror = unchecked(6),

	}

	[NativeName(NativeNameType.Enum, "SDL_GameControllerType")]
	public enum SDLGameControllerType
	{
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_UNKNOWN")]
		Unknown = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_XBOX360")]
		Xbox360 = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_XBOXONE")]
		Xboxone = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_PS3")]
		Ps3 = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_PS4")]
		Ps4 = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO")]
		NintendoSwitchPro = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_VIRTUAL")]
		Virtual = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_PS5")]
		Ps5 = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_AMAZON_LUNA")]
		AmazonLuna = unchecked(8),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_GOOGLE_STADIA")]
		GoogleStadia = unchecked(9),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_NVIDIA_SHIELD")]
		NvidiaShield = unchecked(10),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT")]
		NintendoSwitchJoyconLeft = unchecked(11),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT")]
		NintendoSwitchJoyconRight = unchecked(12),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR")]
		NintendoSwitchJoyconPair = unchecked(13),
	}

	[NativeName(NativeNameType.Enum, "SDL_GameControllerBindType")]
	public enum SDLGameControllerBindType
	{
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BINDTYPE_NONE")]
		BindtypeNone = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BINDTYPE_BUTTON")]
		BindtypeButton = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BINDTYPE_AXIS")]
		BindtypeAxis = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BINDTYPE_HAT")]
		BindtypeHat = unchecked(3),
	}

	/// <summary>
	/// The list of axes available from a controller<br/>
	/// Thumbstick axis values range from SDL_JOYSTICK_AXIS_MIN to SDL_JOYSTICK_AXIS_MAX,<br/>
	/// and are centered within ~8000 of zero, though advanced UI will allow users to set<br/>
	/// or autodetect the dead zone, which varies between controllers.<br/>
	/// Trigger axis values range from 0 to SDL_JOYSTICK_AXIS_MAX.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_GameControllerAxis")]
	public enum SDLGameControllerAxis
	{
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_INVALID")]
		Invalid = unchecked(-1),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_LEFTX")]
		Leftx = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_LEFTY")]
		Lefty = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_RIGHTX")]
		Rightx = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_RIGHTY")]
		Righty = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_TRIGGERLEFT")]
		Triggerleft = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_TRIGGERRIGHT")]
		Triggerright = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_AXIS_MAX")]
		Max = unchecked(6),
	}

	/// <summary>
	/// The list of buttons available from a controller<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_GameControllerButton")]
	public enum SDLGameControllerButton
	{
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_INVALID")]
		Invalid = unchecked(-1),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_A")]
		Buttona = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_B")]
		Buttonb = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_X")]
		Buttonx = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_Y")]
		Buttony = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_BACK")]
		Back = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_GUIDE")]
		Guide = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_START")]
		Start = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_LEFTSTICK")]
		Leftstick = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_RIGHTSTICK")]
		Rightstick = unchecked(8),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_LEFTSHOULDER")]
		Leftshoulder = unchecked(9),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_RIGHTSHOULDER")]
		Rightshoulder = unchecked(10),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_DPAD_UP")]
		DpadUp = unchecked(11),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_DPAD_DOWN")]
		DpadDown = unchecked(12),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_DPAD_LEFT")]
		DpadLeft = unchecked(13),
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_DPAD_RIGHT")]
		DpadRight = unchecked(14),
		/// <summary>
		/// Xbox Series X share button, PS5 microphone button, Nintendo Switch Pro capture button, Amazon Luna microphone button <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_MISC1")]
		Misc1 = unchecked(15),

		/// <summary>
		/// Xbox Elite paddle P1 (upper left, facing the back) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_PADDLE1")]
		Paddle1 = unchecked(16),

		/// <summary>
		/// Xbox Elite paddle P3 (upper right, facing the back) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_PADDLE2")]
		Paddle2 = unchecked(17),

		/// <summary>
		/// Xbox Elite paddle P2 (lower left, facing the back) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_PADDLE3")]
		Paddle3 = unchecked(18),

		/// <summary>
		/// Xbox Elite paddle P4 (lower right, facing the back) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_PADDLE4")]
		Paddle4 = unchecked(19),

		/// <summary>
		/// PS4/PS5 touchpad button <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_TOUCHPAD")]
		Touchpad = unchecked(20),

		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLER_BUTTON_MAX")]
		Max = unchecked(21),
	}

	[NativeName(NativeNameType.Enum, "SDL_TouchDeviceType")]
	public enum SDLTouchDeviceType
	{
		[NativeName(NativeNameType.EnumItem, "SDL_TOUCH_DEVICE_INVALID")]
		Invalid = unchecked(-1),
		/// <summary>
		/// touch screen with window-relative coordinates <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TOUCH_DEVICE_DIRECT")]
		Direct = unchecked(0),

		/// <summary>
		/// trackpad with absolute device coordinates <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE")]
		IndirectAbsolute = unchecked(1),

		/// <summary>
		/// trackpad with screen cursor-relative coordinates <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TOUCH_DEVICE_INDIRECT_RELATIVE")]
		IndirectRelative = unchecked(2),

	}

	/// <summary>
	/// The types of events that can be delivered.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_EventType")]
	public enum SDLEventType
	{
		/// <summary>
		/// Unused (do not remove) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FIRSTEVENT")]
		Firstevent = unchecked(0),

		/// <summary>
		/// User-requested quit <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_QUIT")]
		Quit = unchecked(256),

		/// <summary>
		/// The application is being terminated by the OS<br/>
		/// Called on iOS in applicationWillTerminate()<br/>
		/// Called on Android in onDestroy()<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_APP_TERMINATING")]
		AppTerminating = unchecked(257),

		/// <summary>
		/// The application is low on memory, free memory if possible.<br/>
		/// Called on iOS in applicationDidReceiveMemoryWarning()<br/>
		/// Called on Android in onLowMemory()<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_APP_LOWMEMORY")]
		AppLowmemory = unchecked(258),

		/// <summary>
		/// The application is about to enter the background<br/>
		/// Called on iOS in applicationWillResignActive()<br/>
		/// Called on Android in onPause()<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_APP_WILLENTERBACKGROUND")]
		AppWillenterbackground = unchecked(259),

		/// <summary>
		/// The application did enter the background and may not get CPU for some time<br/>
		/// Called on iOS in applicationDidEnterBackground()<br/>
		/// Called on Android in onPause()<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_APP_DIDENTERBACKGROUND")]
		AppDidenterbackground = unchecked(260),

		/// <summary>
		/// The application is about to enter the foreground<br/>
		/// Called on iOS in applicationWillEnterForeground()<br/>
		/// Called on Android in onResume()<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_APP_WILLENTERFOREGROUND")]
		AppWillenterforeground = unchecked(261),

		/// <summary>
		/// The application is now interactive<br/>
		/// Called on iOS in applicationDidBecomeActive()<br/>
		/// Called on Android in onResume()<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_APP_DIDENTERFOREGROUND")]
		AppDidenterforeground = unchecked(262),

		/// <summary>
		/// The user's locale preferences have changed. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOCALECHANGED")]
		Localechanged = unchecked(263),

		/// <summary>
		/// Display state change <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DISPLAYEVENT")]
		Displayevent = unchecked(336),

		/// <summary>
		/// Window state change <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_WINDOWEVENT")]
		Windowevent = unchecked(512),

		/// <summary>
		/// System specific event <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SYSWMEVENT")]
		Syswmevent = unchecked(513),

		/// <summary>
		/// Key pressed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_KEYDOWN")]
		Keydown = unchecked(768),

		/// <summary>
		/// Key released <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_KEYUP")]
		Keyup = unchecked(769),

		/// <summary>
		/// Keyboard text editing (composition) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTEDITING")]
		Textediting = unchecked(770),

		/// <summary>
		/// Keyboard text input <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTINPUT")]
		Textinput = unchecked(771),

		/// <summary>
		/// Keymap changed due to a system event such as an<br/>
		/// input language or keyboard layout change.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_KEYMAPCHANGED")]
		Keymapchanged = unchecked(772),

		/// <summary>
		/// Extended keyboard text editing (composition) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTEDITING_EXT")]
		TexteditingExt = unchecked(773),

		/// <summary>
		/// Mouse moved <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MOUSEMOTION")]
		Mousemotion = unchecked(1024),

		/// <summary>
		/// Mouse button pressed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MOUSEBUTTONDOWN")]
		Mousebuttondown = unchecked(1025),

		/// <summary>
		/// Mouse button released <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MOUSEBUTTONUP")]
		Mousebuttonup = unchecked(1026),

		/// <summary>
		/// Mouse wheel motion <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MOUSEWHEEL")]
		Mousewheel = unchecked(1027),

		/// <summary>
		/// Joystick axis motion <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYAXISMOTION")]
		Joyaxismotion = unchecked(1536),

		/// <summary>
		/// Joystick trackball motion <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYBALLMOTION")]
		Joyballmotion = unchecked(1537),

		/// <summary>
		/// Joystick hat position change <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYHATMOTION")]
		Joyhatmotion = unchecked(1538),

		/// <summary>
		/// Joystick button pressed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYBUTTONDOWN")]
		Joybuttondown = unchecked(1539),

		/// <summary>
		/// Joystick button released <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYBUTTONUP")]
		Joybuttonup = unchecked(1540),

		/// <summary>
		/// A new joystick has been inserted into the system <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYDEVICEADDED")]
		Joydeviceadded = unchecked(1541),

		/// <summary>
		/// An opened joystick has been removed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYDEVICEREMOVED")]
		Joydeviceremoved = unchecked(1542),

		/// <summary>
		/// Joystick battery level change <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_JOYBATTERYUPDATED")]
		Joybatteryupdated = unchecked(1543),

		/// <summary>
		/// Game controller axis motion <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERAXISMOTION")]
		Controlleraxismotion = unchecked(1616),

		/// <summary>
		/// Game controller button pressed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERBUTTONDOWN")]
		Controllerbuttondown = unchecked(1617),

		/// <summary>
		/// Game controller button released <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERBUTTONUP")]
		Controllerbuttonup = unchecked(1618),

		/// <summary>
		/// A new Game controller has been inserted into the system <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERDEVICEADDED")]
		Controllerdeviceadded = unchecked(1619),

		/// <summary>
		/// An opened Game controller has been removed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERDEVICEREMOVED")]
		Controllerdeviceremoved = unchecked(1620),

		/// <summary>
		/// The controller mapping was updated <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERDEVICEREMAPPED")]
		Controllerdeviceremapped = unchecked(1621),

		/// <summary>
		/// Game controller touchpad was touched <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERTOUCHPADDOWN")]
		Controllertouchpaddown = unchecked(1622),

		/// <summary>
		/// Game controller touchpad finger was moved <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERTOUCHPADMOTION")]
		Controllertouchpadmotion = unchecked(1623),

		/// <summary>
		/// Game controller touchpad finger was lifted <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERTOUCHPADUP")]
		Controllertouchpadup = unchecked(1624),

		/// <summary>
		/// Game controller sensor was updated <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CONTROLLERSENSORUPDATE")]
		Controllersensorupdate = unchecked(1625),

		/// <summary>
		/// Touch events <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FINGERDOWN")]
		Fingerdown = unchecked(1792),

		/// <summary>
		/// Touch events <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FINGERUP")]
		Fingerup = unchecked(1793),

		/// <summary>
		/// Touch events <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FINGERMOTION")]
		Fingermotion = unchecked(1794),

		/// <summary>
		/// Gesture events <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DOLLARGESTURE")]
		Dollargesture = unchecked(2048),

		/// <summary>
		/// Gesture events <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DOLLARRECORD")]
		Dollarrecord = unchecked(2049),

		/// <summary>
		/// Gesture events <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MULTIGESTURE")]
		Multigesture = unchecked(2050),

		/// <summary>
		/// The clipboard or primary selection changed <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_CLIPBOARDUPDATE")]
		Clipboardupdate = unchecked(2304),

		/// <summary>
		/// The system requests a file open <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DROPFILE")]
		Dropfile = unchecked(4096),

		/// <summary>
		/// text/plain drag-and-drop event <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DROPTEXT")]
		Droptext = unchecked(4097),

		/// <summary>
		/// A new set of drops is beginning (NULL filename) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DROPBEGIN")]
		Dropbegin = unchecked(4098),

		/// <summary>
		/// Current set of drops is now complete (NULL filename) <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_DROPCOMPLETE")]
		Dropcomplete = unchecked(4099),

		/// <summary>
		/// A new audio device is available <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_AUDIODEVICEADDED")]
		Audiodeviceadded = unchecked(4352),

		/// <summary>
		/// An audio device has been removed. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_AUDIODEVICEREMOVED")]
		Audiodeviceremoved = unchecked(4353),

		/// <summary>
		/// A sensor was updated <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_SENSORUPDATE")]
		Sensorupdate = unchecked(4608),

		/// <summary>
		/// The render targets have been reset and their contents need to be updated <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_RENDER_TARGETS_RESET")]
		RenderTargetsReset = unchecked(8192),

		/// <summary>
		/// The device has been reset and all textures need to be recreated <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_RENDER_DEVICE_RESET")]
		RenderDeviceReset = unchecked(8193),

		/// <summary>
		/// Signals the end of an event poll cycle <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_POLLSENTINEL")]
		Pollsentinel = unchecked(32512),

		/// <summary>
		/// Events ::SDL_USEREVENT through ::SDL_LASTEVENT are for your use,<br/>
		/// and should be allocated with SDL_RegisterEvents()<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_USEREVENT")]
		Userevent = unchecked(32768),

		/// <summary>
		/// This last event is only for bounding internal arrays<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LASTEVENT")]
		Lastevent = unchecked(65535),

	}

	/// <summary>
	/// <br/>
	/// @<br/>
	/// { <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_eventaction")]
	public enum SDLEventaction
	{
		[NativeName(NativeNameType.EnumItem, "SDL_ADDEVENT")]
		Addevent = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_PEEKEVENT")]
		Peekevent = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_GETEVENT")]
		Getevent = unchecked(2),
	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_HintPriority")]
	public enum SDLHintPriority
	{
		[NativeName(NativeNameType.EnumItem, "SDL_HINT_DEFAULT")]
		Default = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_HINT_NORMAL")]
		Normal = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_HINT_OVERRIDE")]
		Override = unchecked(2),
	}

	/// <summary>
	/// <br/>
	/// By default the application category is enabled at the INFO level,<br/>
	/// the assert category is enabled at the WARN level, test is enabled<br/>
	/// at the VERBOSE level and all other categories are enabled at the<br/>
	/// CRITICAL level.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_LogCategory")]
	public enum SDLLogCategory
	{
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_APPLICATION")]
		Application = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_ERROR")]
		Error = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_ASSERT")]
		Assert = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_SYSTEM")]
		System = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_AUDIO")]
		Audio = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_VIDEO")]
		Video = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RENDER")]
		Render = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_INPUT")]
		Input = unchecked(7),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_TEST")]
		Test = unchecked(8),
		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED1")]
		Reserved1 = unchecked(9),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED2")]
		Reserved2 = unchecked(10),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED3")]
		Reserved3 = unchecked(11),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED4")]
		Reserved4 = unchecked(12),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED5")]
		Reserved5 = unchecked(13),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED6")]
		Reserved6 = unchecked(14),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED7")]
		Reserved7 = unchecked(15),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED8")]
		Reserved8 = unchecked(16),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED9")]
		Reserved9 = unchecked(17),

		/// <summary>
		/// Reserved for future SDL library use <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_RESERVED10")]
		Reserved10 = unchecked(18),

		/// <summary>
		/// Beyond this point is reserved for application use, e.g.<br/>
		/// enum {<br/>
		/// MYAPP_CATEGORY_AWESOME1 = SDL_LOG_CATEGORY_CUSTOM,<br/>
		/// MYAPP_CATEGORY_AWESOME2,<br/>
		/// MYAPP_CATEGORY_AWESOME3,<br/>
		/// ...<br/>
		/// };<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_CATEGORY_CUSTOM")]
		Custom = unchecked(19),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_LogPriority")]
	public enum SDLLogPriority
	{
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_PRIORITY_VERBOSE")]
		Verbose = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_PRIORITY_DEBUG")]
		Debug = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_PRIORITY_INFO")]
		Info = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_PRIORITY_WARN")]
		Warn = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_PRIORITY_ERROR")]
		Error = unchecked(5),
		[NativeName(NativeNameType.EnumItem, "SDL_LOG_PRIORITY_CRITICAL")]
		Critical = unchecked(6),
		[NativeName(NativeNameType.EnumItem, "SDL_NUM_LOG_PRIORITIES")]
		NumLogPriorities = unchecked(7),
	}

	/// <summary>
	/// SDL_MessageBox flags. If supported will display warning icon, etc.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_MessageBoxFlags")]
	public enum SDLMessageBoxFlags
	{
		/// <summary>
		/// error dialog <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_ERROR")]
		MessageboxError = unchecked(16),

		/// <summary>
		/// warning dialog <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_WARNING")]
		MessageboxWarning = unchecked(32),

		/// <summary>
		/// informational dialog <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_INFORMATION")]
		MessageboxInformation = unchecked(64),

		/// <summary>
		/// buttons placed left to right <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT")]
		MessageboxButtonsLeftToRight = unchecked(128),

		/// <summary>
		/// buttons placed right to left <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT")]
		MessageboxButtonsRightToLeft = unchecked(256),

	}

	/// <summary>
	/// Flags for SDL_MessageBoxButtonData.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_MessageBoxButtonFlags")]
	public enum SDLMessageBoxButtonFlags
	{
		/// <summary>
		/// Marks the default button when return is hit <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT")]
		MessageboxButtonReturnkeyDefault = unchecked(1),

		/// <summary>
		/// Marks the default button when escape is hit <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT")]
		MessageboxButtonEscapekeyDefault = unchecked(2),

	}

	[NativeName(NativeNameType.Enum, "SDL_MessageBoxColorType")]
	public enum SDLMessageBoxColorType
	{
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_COLOR_BACKGROUND")]
		MessageboxColorBackground = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_COLOR_TEXT")]
		MessageboxColorText = unchecked(1),
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_COLOR_BUTTON_BORDER")]
		MessageboxColorButtonBorder = unchecked(2),
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND")]
		MessageboxColorButtonBackground = unchecked(3),
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED")]
		MessageboxColorButtonSelected = unchecked(4),
		[NativeName(NativeNameType.EnumItem, "SDL_MESSAGEBOX_COLOR_MAX")]
		MessageboxColorMax = unchecked(5),
	}

	/// <summary>
	/// The basic state for the system's power supply.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_PowerState")]
	public enum SDLPowerState
	{
		/// <summary>
		/// cannot determine power status <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_POWERSTATE_UNKNOWN")]
		PowerstateUnknown = unchecked(0),

		/// <summary>
		/// Not plugged in, running on the battery <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_POWERSTATE_ON_BATTERY")]
		PowerstateOnBattery = unchecked(1),

		/// <summary>
		/// Plugged in, no battery available <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_POWERSTATE_NO_BATTERY")]
		PowerstateNoBattery = unchecked(2),

		/// <summary>
		/// Plugged in, charging battery <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_POWERSTATE_CHARGING")]
		PowerstateCharging = unchecked(3),

		/// <summary>
		/// Plugged in, battery charged <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_POWERSTATE_CHARGED")]
		PowerstateCharged = unchecked(4),

	}

	/// <summary>
	/// Flags used when creating a rendering context<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_RendererFlags")]
	public enum SDLRendererFlags
	{
		/// <summary>
		/// The renderer is a software fallback <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_RENDERER_SOFTWARE")]
		Software = unchecked(1),

		/// <summary>
		/// The renderer uses hardware<br/>
		/// acceleration <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_RENDERER_ACCELERATED")]
		Accelerated = unchecked(2),

		/// <summary>
		/// Present is synchronized<br/>
		/// with the refresh rate <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_RENDERER_PRESENTVSYNC")]
		Presentvsync = unchecked(4),

		/// <summary>
		/// The renderer supports<br/>
		/// rendering to texture <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_RENDERER_TARGETTEXTURE")]
		Targettexture = unchecked(8),

	}

	/// <summary>
	/// The scaling mode for a texture.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_ScaleMode")]
	public enum SDLScaleMode
	{
		/// <summary>
		/// nearest pixel sampling <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ScaleModeNearest")]
		Nearest = unchecked(0),

		/// <summary>
		/// linear filtering <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ScaleModeLinear")]
		Linear = unchecked(1),

		/// <summary>
		/// anisotropic filtering <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_ScaleModeBest")]
		Best = unchecked(2),

	}

	/// <summary>
	/// The access pattern allowed for a texture.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_TextureAccess")]
	public enum SDLTextureAccess
	{
		/// <summary>
		/// Changes rarely, not lockable <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTUREACCESS_STATIC")]
		TextureaccessStatic = unchecked(0),

		/// <summary>
		/// Changes frequently, lockable <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTUREACCESS_STREAMING")]
		TextureaccessStreaming = unchecked(1),

		/// <summary>
		/// Texture can be used as a render target <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTUREACCESS_TARGET")]
		TextureaccessTarget = unchecked(2),

	}

	/// <summary>
	/// The texture channel modulation used in SDL_RenderCopy().<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_TextureModulate")]
	public enum SDLTextureModulate
	{
		/// <summary>
		/// No modulation <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTUREMODULATE_NONE")]
		TexturemodulateNone = unchecked(0),

		/// <summary>
		/// srcC = srcC * color <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTUREMODULATE_COLOR")]
		TexturemodulateColor = unchecked(1),

		/// <summary>
		/// srcA = srcA * alpha <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_TEXTUREMODULATE_ALPHA")]
		TexturemodulateAlpha = unchecked(2),

	}

	/// <summary>
	/// Flip constants for SDL_RenderCopyEx<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_RendererFlip")]
	public enum SDLRendererFlip
	{
		/// <summary>
		/// Do not flip <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FLIP_NONE")]
		None = unchecked(0),

		/// <summary>
		/// flip horizontally <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FLIP_HORIZONTAL")]
		Horizontal = unchecked(1),

		/// <summary>
		/// flip vertically <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_FLIP_VERTICAL")]
		Vertical = unchecked(2),

	}

	/// <summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "WindowShapeMode")]
	public enum WindowShapeMode
	{
		/// <summary>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ShapeModeDefault")]
		Default = unchecked(0),

		/// <summary>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ShapeModeBinarizeAlpha")]
		BinarizeAlpha = unchecked(1),

		/// <summary>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ShapeModeReverseBinarizeAlpha")]
		ReverseBinarizeAlpha = unchecked(2),

		/// <summary>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "ShapeModeColorKey")]
		ColorKey = unchecked(3),

	}

}
