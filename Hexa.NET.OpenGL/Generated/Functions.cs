// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.OpenGL
{
	public unsafe partial class OpenGL
	{
		internal const string LibName = "OpenGL32";

		/// <summary>
		/// **********************************************************<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "glAccum")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glAccum")]
		internal static extern void GlAccumNative([NativeName(NativeNameType.Param, "op")] [NativeName(NativeNameType.Type, "GLenum")] uint op, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLfloat")] float value);

		/// <summary>		/// **********************************************************<br/>		/// </summary>		[NativeName(NativeNameType.Func, "glAccum")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlAccum([NativeName(NativeNameType.Param, "op")] [NativeName(NativeNameType.Type, "GLenum")] uint op, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLfloat")] float value)
		{
			GlAccumNative(op, value);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glAlphaFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glAlphaFunc")]
		internal static extern void GlAlphaFuncNative([NativeName(NativeNameType.Param, "func")] [NativeName(NativeNameType.Type, "GLenum")] uint func, [NativeName(NativeNameType.Param, "ref")] [NativeName(NativeNameType.Type, "GLclampf")] float reference);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glAlphaFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlAlphaFunc([NativeName(NativeNameType.Param, "func")] [NativeName(NativeNameType.Type, "GLenum")] uint func, [NativeName(NativeNameType.Param, "ref")] [NativeName(NativeNameType.Type, "GLclampf")] float reference)
		{
			GlAlphaFuncNative(func, reference);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glAreTexturesResident")]
		internal static extern byte GlAreTexturesResidentNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* residences);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* residences)
		{
			byte ret = GlAreTexturesResidentNative(n, textures, residences);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* residences)
		{
			fixed (uint* ptextures = &textures)
			{
				byte ret = GlAreTexturesResidentNative(n, (uint*)ptextures, residences);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] ref byte residences)
		{
			fixed (byte* presidences = &residences)
			{
				byte ret = GlAreTexturesResidentNative(n, textures, (byte*)presidences);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glAreTexturesResident")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlAreTexturesResident([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "residences")] [NativeName(NativeNameType.Type, "GLboolean*")] ref byte residences)
		{
			fixed (uint* ptextures = &textures)
			{
				fixed (byte* presidences = &residences)
				{
					byte ret = GlAreTexturesResidentNative(n, (uint*)ptextures, (byte*)presidences);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glArrayElement")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glArrayElement")]
		internal static extern void GlArrayElementNative([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glArrayElement")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlArrayElement([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i)
		{
			GlArrayElementNative(i);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glBegin")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glBegin")]
		internal static extern void GlBeginNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glBegin")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBegin([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlBeginNative(mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glBindTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glBindTexture")]
		internal static extern void GlBindTextureNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glBindTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBindTexture([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture)
		{
			GlBindTextureNative(target, texture);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glBitmap")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glBitmap")]
		internal static extern void GlBitmapNative([NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "xorig")] [NativeName(NativeNameType.Type, "GLfloat")] float xorig, [NativeName(NativeNameType.Param, "yorig")] [NativeName(NativeNameType.Type, "GLfloat")] float yorig, [NativeName(NativeNameType.Param, "xmove")] [NativeName(NativeNameType.Type, "GLfloat")] float xmove, [NativeName(NativeNameType.Param, "ymove")] [NativeName(NativeNameType.Type, "GLfloat")] float ymove, [NativeName(NativeNameType.Param, "bitmap")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* bitmap);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glBitmap")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBitmap([NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "xorig")] [NativeName(NativeNameType.Type, "GLfloat")] float xorig, [NativeName(NativeNameType.Param, "yorig")] [NativeName(NativeNameType.Type, "GLfloat")] float yorig, [NativeName(NativeNameType.Param, "xmove")] [NativeName(NativeNameType.Type, "GLfloat")] float xmove, [NativeName(NativeNameType.Param, "ymove")] [NativeName(NativeNameType.Type, "GLfloat")] float ymove, [NativeName(NativeNameType.Param, "bitmap")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* bitmap)
		{
			GlBitmapNative(width, height, xorig, yorig, xmove, ymove, bitmap);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glBitmap")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBitmap([NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "xorig")] [NativeName(NativeNameType.Type, "GLfloat")] float xorig, [NativeName(NativeNameType.Param, "yorig")] [NativeName(NativeNameType.Type, "GLfloat")] float yorig, [NativeName(NativeNameType.Param, "xmove")] [NativeName(NativeNameType.Type, "GLfloat")] float xmove, [NativeName(NativeNameType.Param, "ymove")] [NativeName(NativeNameType.Type, "GLfloat")] float ymove, [NativeName(NativeNameType.Param, "bitmap")] [NativeName(NativeNameType.Type, "const GLubyte*")] ref byte bitmap)
		{
			fixed (byte* pbitmap = &bitmap)
			{
				GlBitmapNative(width, height, xorig, yorig, xmove, ymove, (byte*)pbitmap);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glBlendFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glBlendFunc")]
		internal static extern void GlBlendFuncNative([NativeName(NativeNameType.Param, "sfactor")] [NativeName(NativeNameType.Type, "GLenum")] uint sfactor, [NativeName(NativeNameType.Param, "dfactor")] [NativeName(NativeNameType.Type, "GLenum")] uint dfactor);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glBlendFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlBlendFunc([NativeName(NativeNameType.Param, "sfactor")] [NativeName(NativeNameType.Type, "GLenum")] uint sfactor, [NativeName(NativeNameType.Param, "dfactor")] [NativeName(NativeNameType.Type, "GLenum")] uint dfactor)
		{
			GlBlendFuncNative(sfactor, dfactor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCallList")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCallList")]
		internal static extern void GlCallListNative([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCallList")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCallList([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list)
		{
			GlCallListNative(list);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCallLists")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCallLists")]
		internal static extern void GlCallListsNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "lists")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* lists);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCallLists")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCallLists([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "lists")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* lists)
		{
			GlCallListsNative(n, type, lists);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glClear")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glClear")]
		internal static extern void GlClearNative([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLbitfield")] uint mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClear")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClear([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLbitfield")] uint mask)
		{
			GlClearNative(mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glClearAccum")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glClearAccum")]
		internal static extern void GlClearAccumNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLfloat")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLfloat")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLfloat")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLfloat")] float alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClearAccum")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClearAccum([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLfloat")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLfloat")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLfloat")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLfloat")] float alpha)
		{
			GlClearAccumNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glClearColor")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glClearColor")]
		internal static extern void GlClearColorNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLclampf")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLclampf")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLclampf")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLclampf")] float alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClearColor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClearColor([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLclampf")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLclampf")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLclampf")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLclampf")] float alpha)
		{
			GlClearColorNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glClearDepth")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glClearDepth")]
		internal static extern void GlClearDepthNative([NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLclampd")] double depth);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClearDepth")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClearDepth([NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "GLclampd")] double depth)
		{
			GlClearDepthNative(depth);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glClearIndex")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glClearIndex")]
		internal static extern void GlClearIndexNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLfloat")] float c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClearIndex")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClearIndex([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLfloat")] float c)
		{
			GlClearIndexNative(c);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glClearStencil")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glClearStencil")]
		internal static extern void GlClearStencilNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClearStencil")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClearStencil([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s)
		{
			GlClearStencilNative(s);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glClipPlane")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glClipPlane")]
		internal static extern void GlClipPlaneNative([NativeName(NativeNameType.Param, "plane")] [NativeName(NativeNameType.Type, "GLenum")] uint plane, [NativeName(NativeNameType.Param, "equation")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* equation);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClipPlane")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClipPlane([NativeName(NativeNameType.Param, "plane")] [NativeName(NativeNameType.Type, "GLenum")] uint plane, [NativeName(NativeNameType.Param, "equation")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* equation)
		{
			GlClipPlaneNative(plane, equation);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glClipPlane")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlClipPlane([NativeName(NativeNameType.Param, "plane")] [NativeName(NativeNameType.Type, "GLenum")] uint plane, [NativeName(NativeNameType.Param, "equation")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double equation)
		{
			fixed (double* pequation = &equation)
			{
				GlClipPlaneNative(plane, (double*)pequation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3b")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3b")]
		internal static extern void GlColor3BNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3b")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3B([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte blue)
		{
			GlColor3BNative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3bv")]
		internal static extern void GlColor3BvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] sbyte* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Bv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] sbyte* v)
		{
			GlColor3BvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Bv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] ref sbyte v)
		{
			fixed (sbyte* pv = &v)
			{
				GlColor3BvNative((sbyte*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3d")]
		internal static extern void GlColor3DNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLdouble")] double red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLdouble")] double green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLdouble")] double blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3D([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLdouble")] double red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLdouble")] double green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLdouble")] double blue)
		{
			GlColor3DNative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3dv")]
		internal static extern void GlColor3DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlColor3DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlColor3DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3f")]
		internal static extern void GlColor3FNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLfloat")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLfloat")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLfloat")] float blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3F([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLfloat")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLfloat")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLfloat")] float blue)
		{
			GlColor3FNative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3fv")]
		internal static extern void GlColor3FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlColor3FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlColor3FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3i")]
		internal static extern void GlColor3INative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLint")] int red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLint")] int green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLint")] int blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3I([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLint")] int red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLint")] int green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLint")] int blue)
		{
			GlColor3INative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3iv")]
		internal static extern void GlColor3IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlColor3IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlColor3IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3s")]
		internal static extern void GlColor3SNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLshort")] short red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLshort")] short green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLshort")] short blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3S([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLshort")] short red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLshort")] short green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLshort")] short blue)
		{
			GlColor3SNative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3sv")]
		internal static extern void GlColor3SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlColor3SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlColor3SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3ub")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3ub")]
		internal static extern void GlColor3UbNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLubyte")] byte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLubyte")] byte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLubyte")] byte blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3ub")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Ub([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLubyte")] byte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLubyte")] byte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLubyte")] byte blue)
		{
			GlColor3UbNative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3ubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3ubv")]
		internal static extern void GlColor3UbvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3ubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Ubv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* v)
		{
			GlColor3UbvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3ubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Ubv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLubyte*")] ref byte v)
		{
			fixed (byte* pv = &v)
			{
				GlColor3UbvNative((byte*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3ui")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3ui")]
		internal static extern void GlColor3UiNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLuint")] uint red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLuint")] uint green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLuint")] uint blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3ui")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Ui([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLuint")] uint red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLuint")] uint green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLuint")] uint blue)
		{
			GlColor3UiNative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3uiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3uiv")]
		internal static extern void GlColor3UivNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3uiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Uiv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* v)
		{
			GlColor3UivNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3uiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Uiv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint v)
		{
			fixed (uint* pv = &v)
			{
				GlColor3UivNative((uint*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3us")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3us")]
		internal static extern void GlColor3UsNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLushort")] ushort red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLushort")] ushort green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLushort")] ushort blue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3us")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Us([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLushort")] ushort red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLushort")] ushort green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLushort")] ushort blue)
		{
			GlColor3UsNative(red, green, blue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor3usv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor3usv")]
		internal static extern void GlColor3UsvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLushort*")] ushort* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3usv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Usv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLushort*")] ushort* v)
		{
			GlColor3UsvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor3usv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor3Usv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLushort*")] ref ushort v)
		{
			fixed (ushort* pv = &v)
			{
				GlColor3UsvNative((ushort*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4b")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4b")]
		internal static extern void GlColor4BNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4b")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4B([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte alpha)
		{
			GlColor4BNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4bv")]
		internal static extern void GlColor4BvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] sbyte* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Bv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] sbyte* v)
		{
			GlColor4BvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Bv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] ref sbyte v)
		{
			fixed (sbyte* pv = &v)
			{
				GlColor4BvNative((sbyte*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4d")]
		internal static extern void GlColor4DNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLdouble")] double red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLdouble")] double green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLdouble")] double blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLdouble")] double alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4D([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLdouble")] double red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLdouble")] double green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLdouble")] double blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLdouble")] double alpha)
		{
			GlColor4DNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4dv")]
		internal static extern void GlColor4DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlColor4DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlColor4DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4f")]
		internal static extern void GlColor4FNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLfloat")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLfloat")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLfloat")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLfloat")] float alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4F([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLfloat")] float red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLfloat")] float green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLfloat")] float blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLfloat")] float alpha)
		{
			GlColor4FNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4fv")]
		internal static extern void GlColor4FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlColor4FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlColor4FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4i")]
		internal static extern void GlColor4INative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLint")] int red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLint")] int green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLint")] int blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLint")] int alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4I([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLint")] int red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLint")] int green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLint")] int blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLint")] int alpha)
		{
			GlColor4INative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4iv")]
		internal static extern void GlColor4IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlColor4IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlColor4IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4s")]
		internal static extern void GlColor4SNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLshort")] short red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLshort")] short green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLshort")] short blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLshort")] short alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4S([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLshort")] short red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLshort")] short green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLshort")] short blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLshort")] short alpha)
		{
			GlColor4SNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4sv")]
		internal static extern void GlColor4SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlColor4SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlColor4SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4ub")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4ub")]
		internal static extern void GlColor4UbNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLubyte")] byte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLubyte")] byte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLubyte")] byte blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLubyte")] byte alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4ub")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Ub([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLubyte")] byte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLubyte")] byte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLubyte")] byte blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLubyte")] byte alpha)
		{
			GlColor4UbNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4ubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4ubv")]
		internal static extern void GlColor4UbvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4ubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Ubv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* v)
		{
			GlColor4UbvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4ubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Ubv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLubyte*")] ref byte v)
		{
			fixed (byte* pv = &v)
			{
				GlColor4UbvNative((byte*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4ui")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4ui")]
		internal static extern void GlColor4UiNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLuint")] uint red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLuint")] uint green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLuint")] uint blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLuint")] uint alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4ui")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Ui([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLuint")] uint red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLuint")] uint green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLuint")] uint blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLuint")] uint alpha)
		{
			GlColor4UiNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4uiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4uiv")]
		internal static extern void GlColor4UivNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4uiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Uiv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* v)
		{
			GlColor4UivNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4uiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Uiv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint v)
		{
			fixed (uint* pv = &v)
			{
				GlColor4UivNative((uint*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4us")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4us")]
		internal static extern void GlColor4UsNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLushort")] ushort red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLushort")] ushort green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLushort")] ushort blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLushort")] ushort alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4us")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Us([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLushort")] ushort red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLushort")] ushort green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLushort")] ushort blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLushort")] ushort alpha)
		{
			GlColor4UsNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColor4usv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColor4usv")]
		internal static extern void GlColor4UsvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLushort*")] ushort* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4usv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Usv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLushort*")] ushort* v)
		{
			GlColor4UsvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColor4usv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColor4Usv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLushort*")] ref ushort v)
		{
			fixed (ushort* pv = &v)
			{
				GlColor4UsvNative((ushort*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColorMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColorMask")]
		internal static extern void GlColorMaskNative([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLboolean")] byte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLboolean")] byte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLboolean")] byte blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLboolean")] byte alpha);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColorMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorMask([NativeName(NativeNameType.Param, "red")] [NativeName(NativeNameType.Type, "GLboolean")] byte red, [NativeName(NativeNameType.Param, "green")] [NativeName(NativeNameType.Type, "GLboolean")] byte green, [NativeName(NativeNameType.Param, "blue")] [NativeName(NativeNameType.Type, "GLboolean")] byte blue, [NativeName(NativeNameType.Param, "alpha")] [NativeName(NativeNameType.Type, "GLboolean")] byte alpha)
		{
			GlColorMaskNative(red, green, blue, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColorMaterial")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColorMaterial")]
		internal static extern void GlColorMaterialNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColorMaterial")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorMaterial([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlColorMaterialNative(face, mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glColorPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glColorPointer")]
		internal static extern void GlColorPointerNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLint")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glColorPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlColorPointer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLint")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer)
		{
			GlColorPointerNative(size, type, stride, pointer);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCopyPixels")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCopyPixels")]
		internal static extern void GlCopyPixelsNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCopyPixels")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyPixels([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			GlCopyPixelsNative(x, y, width, height, type);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCopyTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCopyTexImage1D")]
		internal static extern void GlCopyTexImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalFormat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCopyTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalFormat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border)
		{
			GlCopyTexImage1DNative(target, level, internalFormat, x, y, width, border);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCopyTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCopyTexImage2D")]
		internal static extern void GlCopyTexImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalFormat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCopyTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalFormat")] [NativeName(NativeNameType.Type, "GLenum")] uint internalFormat, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border)
		{
			GlCopyTexImage2DNative(target, level, internalFormat, x, y, width, height, border);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCopyTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCopyTexSubImage1D")]
		internal static extern void GlCopyTexSubImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCopyTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexSubImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width)
		{
			GlCopyTexSubImage1DNative(target, level, xoffset, x, y, width);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCopyTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCopyTexSubImage2D")]
		internal static extern void GlCopyTexSubImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCopyTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCopyTexSubImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height)
		{
			GlCopyTexSubImage2DNative(target, level, xoffset, yoffset, x, y, width, height);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glCullFace")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glCullFace")]
		internal static extern void GlCullFaceNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glCullFace")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlCullFace([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlCullFaceNative(mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDeleteLists")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDeleteLists")]
		internal static extern void GlDeleteListsNative([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list, [NativeName(NativeNameType.Param, "range")] [NativeName(NativeNameType.Type, "GLsizei")] int range);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDeleteLists")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDeleteLists([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list, [NativeName(NativeNameType.Param, "range")] [NativeName(NativeNameType.Type, "GLsizei")] int range)
		{
			GlDeleteListsNative(list, range);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDeleteTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDeleteTextures")]
		internal static extern void GlDeleteTexturesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDeleteTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDeleteTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures)
		{
			GlDeleteTexturesNative(n, textures);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDeleteTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDeleteTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures)
		{
			fixed (uint* ptextures = &textures)
			{
				GlDeleteTexturesNative(n, (uint*)ptextures);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDepthFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDepthFunc")]
		internal static extern void GlDepthFuncNative([NativeName(NativeNameType.Param, "func")] [NativeName(NativeNameType.Type, "GLenum")] uint func);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDepthFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDepthFunc([NativeName(NativeNameType.Param, "func")] [NativeName(NativeNameType.Type, "GLenum")] uint func)
		{
			GlDepthFuncNative(func);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDepthMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDepthMask")]
		internal static extern void GlDepthMaskNative([NativeName(NativeNameType.Param, "flag")] [NativeName(NativeNameType.Type, "GLboolean")] byte flag);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDepthMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDepthMask([NativeName(NativeNameType.Param, "flag")] [NativeName(NativeNameType.Type, "GLboolean")] byte flag)
		{
			GlDepthMaskNative(flag);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDepthRange")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDepthRange")]
		internal static extern void GlDepthRangeNative([NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLclampd")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLclampd")] double zFar);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDepthRange")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDepthRange([NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLclampd")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLclampd")] double zFar)
		{
			GlDepthRangeNative(zNear, zFar);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDisable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDisable")]
		internal static extern void GlDisableNative([NativeName(NativeNameType.Param, "cap")] [NativeName(NativeNameType.Type, "GLenum")] uint cap);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDisable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDisable([NativeName(NativeNameType.Param, "cap")] [NativeName(NativeNameType.Type, "GLenum")] uint cap)
		{
			GlDisableNative(cap);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDisableClientState")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDisableClientState")]
		internal static extern void GlDisableClientStateNative([NativeName(NativeNameType.Param, "array")] [NativeName(NativeNameType.Type, "GLenum")] uint array);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDisableClientState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDisableClientState([NativeName(NativeNameType.Param, "array")] [NativeName(NativeNameType.Type, "GLenum")] uint array)
		{
			GlDisableClientStateNative(array);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDrawArrays")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDrawArrays")]
		internal static extern void GlDrawArraysNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "first")] [NativeName(NativeNameType.Type, "GLint")] int first, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDrawArrays")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDrawArrays([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "first")] [NativeName(NativeNameType.Type, "GLint")] int first, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count)
		{
			GlDrawArraysNative(mode, first, count);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDrawBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDrawBuffer")]
		internal static extern void GlDrawBufferNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDrawBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDrawBuffer([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlDrawBufferNative(mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDrawElements")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDrawElements")]
		internal static extern void GlDrawElementsNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "indices")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* indices);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDrawElements")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDrawElements([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLsizei")] int count, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "indices")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* indices)
		{
			GlDrawElementsNative(mode, count, type, indices);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glDrawPixels")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glDrawPixels")]
		internal static extern void GlDrawPixelsNative([NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glDrawPixels")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlDrawPixels([NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlDrawPixelsNative(width, height, format, type, pixels);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEdgeFlag")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEdgeFlag")]
		internal static extern void GlEdgeFlagNative([NativeName(NativeNameType.Param, "flag")] [NativeName(NativeNameType.Type, "GLboolean")] byte flag);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEdgeFlag")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEdgeFlag([NativeName(NativeNameType.Param, "flag")] [NativeName(NativeNameType.Type, "GLboolean")] byte flag)
		{
			GlEdgeFlagNative(flag);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEdgeFlagPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEdgeFlagPointer")]
		internal static extern void GlEdgeFlagPointerNative([NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEdgeFlagPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEdgeFlagPointer([NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer)
		{
			GlEdgeFlagPointerNative(stride, pointer);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEdgeFlagv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEdgeFlagv")]
		internal static extern void GlEdgeFlagvNative([NativeName(NativeNameType.Param, "flag")] [NativeName(NativeNameType.Type, "const GLboolean*")] byte* flag);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEdgeFlagv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEdgeFlagv([NativeName(NativeNameType.Param, "flag")] [NativeName(NativeNameType.Type, "const GLboolean*")] byte* flag)
		{
			GlEdgeFlagvNative(flag);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEdgeFlagv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEdgeFlagv([NativeName(NativeNameType.Param, "flag")] [NativeName(NativeNameType.Type, "const GLboolean*")] ref byte flag)
		{
			fixed (byte* pflag = &flag)
			{
				GlEdgeFlagvNative((byte*)pflag);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEnable")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEnable")]
		internal static extern void GlEnableNative([NativeName(NativeNameType.Param, "cap")] [NativeName(NativeNameType.Type, "GLenum")] uint cap);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEnable")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEnable([NativeName(NativeNameType.Param, "cap")] [NativeName(NativeNameType.Type, "GLenum")] uint cap)
		{
			GlEnableNative(cap);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEnableClientState")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEnableClientState")]
		internal static extern void GlEnableClientStateNative([NativeName(NativeNameType.Param, "array")] [NativeName(NativeNameType.Type, "GLenum")] uint array);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEnableClientState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEnableClientState([NativeName(NativeNameType.Param, "array")] [NativeName(NativeNameType.Type, "GLenum")] uint array)
		{
			GlEnableClientStateNative(array);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEnd")]
		internal static extern void GlEndNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEnd()
		{
			GlEndNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEndList")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEndList")]
		internal static extern void GlEndListNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEndList")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEndList()
		{
			GlEndListNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord1d")]
		internal static extern void GlEvalCoord1DNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1D([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u)
		{
			GlEvalCoord1DNative(u);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord1dv")]
		internal static extern void GlEvalCoord1DvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u)
		{
			GlEvalCoord1DvNative(u);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double u)
		{
			fixed (double* pu = &u)
			{
				GlEvalCoord1DvNative((double*)pu);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord1f")]
		internal static extern void GlEvalCoord1FNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1F([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u)
		{
			GlEvalCoord1FNative(u);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord1fv")]
		internal static extern void GlEvalCoord1FvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u)
		{
			GlEvalCoord1FvNative(u);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord1Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float u)
		{
			fixed (float* pu = &u)
			{
				GlEvalCoord1FvNative((float*)pu);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord2d")]
		internal static extern void GlEvalCoord2DNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble")] double v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2D([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLdouble")] double u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble")] double v)
		{
			GlEvalCoord2DNative(u, v);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord2dv")]
		internal static extern void GlEvalCoord2DvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* u)
		{
			GlEvalCoord2DvNative(u);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Dv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double u)
		{
			fixed (double* pu = &u)
			{
				GlEvalCoord2DvNative((double*)pu);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord2f")]
		internal static extern void GlEvalCoord2FNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat")] float v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2F([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "GLfloat")] float u, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat")] float v)
		{
			GlEvalCoord2FNative(u, v);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalCoord2fv")]
		internal static extern void GlEvalCoord2FvNative([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* u)
		{
			GlEvalCoord2FvNative(u);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalCoord2Fv([NativeName(NativeNameType.Param, "u")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float u)
		{
			fixed (float* pu = &u)
			{
				GlEvalCoord2FvNative((float*)pu);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalMesh1")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalMesh1")]
		internal static extern void GlEvalMesh1Native([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalMesh1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalMesh1([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2)
		{
			GlEvalMesh1Native(mode, i1, i2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalMesh2")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalMesh2")]
		internal static extern void GlEvalMesh2Native([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2, [NativeName(NativeNameType.Param, "j1")] [NativeName(NativeNameType.Type, "GLint")] int j1, [NativeName(NativeNameType.Param, "j2")] [NativeName(NativeNameType.Type, "GLint")] int j2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalMesh2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalMesh2([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode, [NativeName(NativeNameType.Param, "i1")] [NativeName(NativeNameType.Type, "GLint")] int i1, [NativeName(NativeNameType.Param, "i2")] [NativeName(NativeNameType.Type, "GLint")] int i2, [NativeName(NativeNameType.Param, "j1")] [NativeName(NativeNameType.Type, "GLint")] int j1, [NativeName(NativeNameType.Param, "j2")] [NativeName(NativeNameType.Type, "GLint")] int j2)
		{
			GlEvalMesh2Native(mode, i1, i2, j1, j2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalPoint1")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalPoint1")]
		internal static extern void GlEvalPoint1Native([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalPoint1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalPoint1([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i)
		{
			GlEvalPoint1Native(i);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glEvalPoint2")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glEvalPoint2")]
		internal static extern void GlEvalPoint2Native([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i, [NativeName(NativeNameType.Param, "j")] [NativeName(NativeNameType.Type, "GLint")] int j);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glEvalPoint2")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlEvalPoint2([NativeName(NativeNameType.Param, "i")] [NativeName(NativeNameType.Type, "GLint")] int i, [NativeName(NativeNameType.Param, "j")] [NativeName(NativeNameType.Type, "GLint")] int j)
		{
			GlEvalPoint2Native(i, j);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFeedbackBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFeedbackBuffer")]
		internal static extern void GlFeedbackBufferNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLfloat*")] float* buffer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFeedbackBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFeedbackBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLfloat*")] float* buffer)
		{
			GlFeedbackBufferNative(size, type, buffer);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFeedbackBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFeedbackBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float buffer)
		{
			fixed (float* pbuffer = &buffer)
			{
				GlFeedbackBufferNative(size, type, (float*)pbuffer);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFinish")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFinish")]
		internal static extern void GlFinishNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFinish")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFinish()
		{
			GlFinishNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFlush")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFlush")]
		internal static extern void GlFlushNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFlush")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFlush()
		{
			GlFlushNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFogf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFogf")]
		internal static extern void GlFogfNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFogf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogf([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlFogfNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFogfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFogfv")]
		internal static extern void GlFogfvNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFogfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogfv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlFogfvNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFogfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogfv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlFogfvNative(pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFogi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFogi")]
		internal static extern void GlFogiNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFogi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogi([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlFogiNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFogiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFogiv")]
		internal static extern void GlFogivNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFogiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogiv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlFogivNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFogiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFogiv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlFogivNative(pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFrontFace")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFrontFace")]
		internal static extern void GlFrontFaceNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFrontFace")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFrontFace([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlFrontFaceNative(mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glFrustum")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glFrustum")]
		internal static extern void GlFrustumNative([NativeName(NativeNameType.Param, "left")] [NativeName(NativeNameType.Type, "GLdouble")] double left, [NativeName(NativeNameType.Param, "right")] [NativeName(NativeNameType.Type, "GLdouble")] double right, [NativeName(NativeNameType.Param, "bottom")] [NativeName(NativeNameType.Type, "GLdouble")] double bottom, [NativeName(NativeNameType.Param, "top")] [NativeName(NativeNameType.Type, "GLdouble")] double top, [NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLdouble")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLdouble")] double zFar);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glFrustum")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlFrustum([NativeName(NativeNameType.Param, "left")] [NativeName(NativeNameType.Type, "GLdouble")] double left, [NativeName(NativeNameType.Param, "right")] [NativeName(NativeNameType.Type, "GLdouble")] double right, [NativeName(NativeNameType.Param, "bottom")] [NativeName(NativeNameType.Type, "GLdouble")] double bottom, [NativeName(NativeNameType.Param, "top")] [NativeName(NativeNameType.Type, "GLdouble")] double top, [NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLdouble")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLdouble")] double zFar)
		{
			GlFrustumNative(left, right, bottom, top, zNear, zFar);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGenLists")]
		[return: NativeName(NativeNameType.Type, "GLuint")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGenLists")]
		internal static extern uint GlGenListsNative([NativeName(NativeNameType.Param, "range")] [NativeName(NativeNameType.Type, "GLsizei")] int range);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGenLists")]
		[return: NativeName(NativeNameType.Type, "GLuint")]
		public static uint GlGenLists([NativeName(NativeNameType.Param, "range")] [NativeName(NativeNameType.Type, "GLsizei")] int range)
		{
			uint ret = GlGenListsNative(range);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGenTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGenTextures")]
		internal static extern void GlGenTexturesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "GLuint*")] uint* textures);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGenTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGenTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "GLuint*")] uint* textures)
		{
			GlGenTexturesNative(n, textures);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGenTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGenTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "GLuint*")] ref uint textures)
		{
			fixed (uint* ptextures = &textures)
			{
				GlGenTexturesNative(n, (uint*)ptextures);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetBooleanv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetBooleanv")]
		internal static extern void GlGetBooleanvNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetBooleanv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetBooleanv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLboolean*")] byte* @params)
		{
			GlGetBooleanvNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetBooleanv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetBooleanv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLboolean*")] ref byte @params)
		{
			fixed (byte* pparams = &@params)
			{
				GlGetBooleanvNative(pname, (byte*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetClipPlane")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetClipPlane")]
		internal static extern void GlGetClipPlaneNative([NativeName(NativeNameType.Param, "plane")] [NativeName(NativeNameType.Type, "GLenum")] uint plane, [NativeName(NativeNameType.Param, "equation")] [NativeName(NativeNameType.Type, "GLdouble*")] double* equation);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetClipPlane")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetClipPlane([NativeName(NativeNameType.Param, "plane")] [NativeName(NativeNameType.Type, "GLenum")] uint plane, [NativeName(NativeNameType.Param, "equation")] [NativeName(NativeNameType.Type, "GLdouble*")] double* equation)
		{
			GlGetClipPlaneNative(plane, equation);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetClipPlane")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetClipPlane([NativeName(NativeNameType.Param, "plane")] [NativeName(NativeNameType.Type, "GLenum")] uint plane, [NativeName(NativeNameType.Param, "equation")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double equation)
		{
			fixed (double* pequation = &equation)
			{
				GlGetClipPlaneNative(plane, (double*)pequation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetDoublev")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetDoublev")]
		internal static extern void GlGetDoublevNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] double* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetDoublev")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetDoublev([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] double* @params)
		{
			GlGetDoublevNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetDoublev")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetDoublev([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double @params)
		{
			fixed (double* pparams = &@params)
			{
				GlGetDoublevNative(pname, (double*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetError")]
		[return: NativeName(NativeNameType.Type, "GLenum")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetError")]
		internal static extern uint GlGetErrorNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetError")]
		[return: NativeName(NativeNameType.Type, "GLenum")]
		public static uint GlGetError()
		{
			uint ret = GlGetErrorNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetFloatv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetFloatv")]
		internal static extern void GlGetFloatvNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetFloatv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetFloatv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetFloatvNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetFloatv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetFloatv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetFloatvNative(pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetIntegerv")]
		internal static extern void GlGetIntegervNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetIntegerv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetIntegervNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetIntegerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetIntegerv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetIntegervNative(pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetLightfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetLightfv")]
		internal static extern void GlGetLightfvNative([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetLightfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetLightfv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetLightfvNative(light, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetLightfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetLightfv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetLightfvNative(light, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetLightiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetLightiv")]
		internal static extern void GlGetLightivNative([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetLightiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetLightiv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetLightivNative(light, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetLightiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetLightiv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetLightivNative(light, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetMapdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetMapdv")]
		internal static extern void GlGetMapdvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMapdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapdv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble*")] double* v)
		{
			GlGetMapdvNative(target, query, v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMapdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapdv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlGetMapdvNative(target, query, (double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetMapfv")]
		internal static extern void GlGetMapfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat*")] float* v)
		{
			GlGetMapfvNative(target, query, v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlGetMapfvNative(target, query, (float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetMapiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetMapiv")]
		internal static extern void GlGetMapivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMapiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapiv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLint*")] int* v)
		{
			GlGetMapivNative(target, query, v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMapiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMapiv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "query")] [NativeName(NativeNameType.Type, "GLenum")] uint query, [NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlGetMapivNative(target, query, (int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetMaterialfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetMaterialfv")]
		internal static extern void GlGetMaterialfvNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMaterialfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMaterialfv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetMaterialfvNative(face, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMaterialfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMaterialfv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetMaterialfvNative(face, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetMaterialiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetMaterialiv")]
		internal static extern void GlGetMaterialivNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMaterialiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMaterialiv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetMaterialivNative(face, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetMaterialiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetMaterialiv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetMaterialivNative(face, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetPixelMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetPixelMapfv")]
		internal static extern void GlGetPixelMapfvNative([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLfloat*")] float* values);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPixelMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPixelMapfv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLfloat*")] float* values)
		{
			GlGetPixelMapfvNative(map, values);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPixelMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPixelMapfv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				GlGetPixelMapfvNative(map, (float*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetPixelMapuiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetPixelMapuiv")]
		internal static extern void GlGetPixelMapuivNative([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLuint*")] uint* values);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPixelMapuiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPixelMapuiv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLuint*")] uint* values)
		{
			GlGetPixelMapuivNative(map, values);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPixelMapuiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPixelMapuiv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLuint*")] ref uint values)
		{
			fixed (uint* pvalues = &values)
			{
				GlGetPixelMapuivNative(map, (uint*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetPixelMapusv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetPixelMapusv")]
		internal static extern void GlGetPixelMapusvNative([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLushort*")] ushort* values);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPixelMapusv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPixelMapusv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLushort*")] ushort* values)
		{
			GlGetPixelMapusvNative(map, values);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPixelMapusv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPixelMapusv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "GLushort*")] ref ushort values)
		{
			fixed (ushort* pvalues = &values)
			{
				GlGetPixelMapusvNative(map, (ushort*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetPointerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetPointerv")]
		internal static extern void GlGetPointervNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLvoid**")] void** @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPointerv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPointerv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLvoid**")] void** @params)
		{
			GlGetPointervNative(pname, @params);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetPolygonStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetPolygonStipple")]
		internal static extern void GlGetPolygonStippleNative([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLubyte*")] byte* mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPolygonStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPolygonStipple([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLubyte*")] byte* mask)
		{
			GlGetPolygonStippleNative(mask);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetPolygonStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetPolygonStipple([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLubyte*")] ref byte mask)
		{
			fixed (byte* pmask = &mask)
			{
				GlGetPolygonStippleNative((byte*)pmask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetString")]
		[return: NativeName(NativeNameType.Type, "const GLubyte*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetString")]
		internal static extern byte* GlGetStringNative([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLenum")] uint name);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetString")]
		[return: NativeName(NativeNameType.Type, "const GLubyte*")]
		public static byte* GlGetString([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLenum")] uint name)
		{
			byte* ret = GlGetStringNative(name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexEnvfv")]
		internal static extern void GlGetTexEnvfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexEnvfvNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexEnvfvNative(target, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexEnviv")]
		internal static extern void GlGetTexEnvivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexEnvivNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexEnvivNative(target, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexGendv")]
		internal static extern void GlGetTexGendvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] double* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] double* @params)
		{
			GlGetTexGendvNative(coord, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double @params)
		{
			fixed (double* pparams = &@params)
			{
				GlGetTexGendvNative(coord, pname, (double*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexGenfv")]
		internal static extern void GlGetTexGenfvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexGenfvNative(coord, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexGenfvNative(coord, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexGeniv")]
		internal static extern void GlGetTexGenivNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexGenivNative(coord, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexGenivNative(coord, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexImage")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexImage")]
		internal static extern void GlGetTexImageNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "GLvoid*")] void* pixels);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexImage")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexImage([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "GLvoid*")] void* pixels)
		{
			GlGetTexImageNative(target, level, format, type, pixels);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexLevelParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexLevelParameterfv")]
		internal static extern void GlGetTexLevelParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexLevelParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexLevelParameterfvNative(target, level, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexLevelParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexLevelParameterfvNative(target, level, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexLevelParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexLevelParameteriv")]
		internal static extern void GlGetTexLevelParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexLevelParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexLevelParameterivNative(target, level, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexLevelParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexLevelParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexLevelParameterivNative(target, level, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexParameterfv")]
		internal static extern void GlGetTexParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] float* @params)
		{
			GlGetTexParameterfvNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlGetTexParameterfvNative(target, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glGetTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glGetTexParameteriv")]
		internal static extern void GlGetTexParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] int* @params)
		{
			GlGetTexParameterivNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glGetTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlGetTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlGetTexParameterivNative(target, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glHint")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glHint")]
		internal static extern void GlHintNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glHint")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlHint([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlHintNative(target, mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexMask")]
		internal static extern void GlIndexMaskNative([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLuint")] uint mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexMask([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLuint")] uint mask)
		{
			GlIndexMaskNative(mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexPointer")]
		internal static extern void GlIndexPointerNative([NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexPointer([NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer)
		{
			GlIndexPointerNative(type, stride, pointer);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexd")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexd")]
		internal static extern void GlIndexdNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLdouble")] double c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexd([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLdouble")] double c)
		{
			GlIndexdNative(c);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexdv")]
		internal static extern void GlIndexdvNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexdv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* c)
		{
			GlIndexdvNative(c);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexdv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double c)
		{
			fixed (double* pc = &c)
			{
				GlIndexdvNative((double*)pc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexf")]
		internal static extern void GlIndexfNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLfloat")] float c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexf([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLfloat")] float c)
		{
			GlIndexfNative(c);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexfv")]
		internal static extern void GlIndexfvNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexfv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* c)
		{
			GlIndexfvNative(c);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexfv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float c)
		{
			fixed (float* pc = &c)
			{
				GlIndexfvNative((float*)pc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexi")]
		internal static extern void GlIndexiNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLint")] int c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexi([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLint")] int c)
		{
			GlIndexiNative(c);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexiv")]
		internal static extern void GlIndexivNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLint*")] int* c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexiv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLint*")] int* c)
		{
			GlIndexivNative(c);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexiv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLint*")] ref int c)
		{
			fixed (int* pc = &c)
			{
				GlIndexivNative((int*)pc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexs")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexs")]
		internal static extern void GlIndexsNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLshort")] short c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexs")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexs([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLshort")] short c)
		{
			GlIndexsNative(c);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexsv")]
		internal static extern void GlIndexsvNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLshort*")] short* c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexsv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLshort*")] short* c)
		{
			GlIndexsvNative(c);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexsv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short c)
		{
			fixed (short* pc = &c)
			{
				GlIndexsvNative((short*)pc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexub")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexub")]
		internal static extern void GlIndexubNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLubyte")] byte c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexub")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexub([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "GLubyte")] byte c)
		{
			GlIndexubNative(c);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIndexubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIndexubv")]
		internal static extern void GlIndexubvNative([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* c);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexubv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* c)
		{
			GlIndexubvNative(c);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIndexubv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlIndexubv([NativeName(NativeNameType.Param, "c")] [NativeName(NativeNameType.Type, "const GLubyte*")] ref byte c)
		{
			fixed (byte* pc = &c)
			{
				GlIndexubvNative((byte*)pc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glInitNames")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glInitNames")]
		internal static extern void GlInitNamesNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glInitNames")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlInitNames()
		{
			GlInitNamesNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glInterleavedArrays")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glInterleavedArrays")]
		internal static extern void GlInterleavedArraysNative([NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glInterleavedArrays")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlInterleavedArrays([NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer)
		{
			GlInterleavedArraysNative(format, stride, pointer);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIsEnabled")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIsEnabled")]
		internal static extern byte GlIsEnabledNative([NativeName(NativeNameType.Param, "cap")] [NativeName(NativeNameType.Type, "GLenum")] uint cap);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIsEnabled")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlIsEnabled([NativeName(NativeNameType.Param, "cap")] [NativeName(NativeNameType.Type, "GLenum")] uint cap)
		{
			byte ret = GlIsEnabledNative(cap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIsList")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIsList")]
		internal static extern byte GlIsListNative([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIsList")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlIsList([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list)
		{
			byte ret = GlIsListNative(list);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glIsTexture")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glIsTexture")]
		internal static extern byte GlIsTextureNative([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glIsTexture")]
		[return: NativeName(NativeNameType.Type, "GLboolean")]
		public static byte GlIsTexture([NativeName(NativeNameType.Param, "texture")] [NativeName(NativeNameType.Type, "GLuint")] uint texture)
		{
			byte ret = GlIsTextureNative(texture);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLightModelf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLightModelf")]
		internal static extern void GlLightModelfNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightModelf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightModelf([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlLightModelfNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLightModelfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLightModelfv")]
		internal static extern void GlLightModelfvNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightModelfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightModelfv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlLightModelfvNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightModelfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightModelfv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlLightModelfvNative(pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLightModeli")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLightModeli")]
		internal static extern void GlLightModeliNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightModeli")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightModeli([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlLightModeliNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLightModeliv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLightModeliv")]
		internal static extern void GlLightModelivNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightModeliv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightModeliv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlLightModelivNative(pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightModeliv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightModeliv([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlLightModelivNative(pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLightf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLightf")]
		internal static extern void GlLightfNative([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightf([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlLightfNative(light, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLightfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLightfv")]
		internal static extern void GlLightfvNative([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightfv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlLightfvNative(light, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightfv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlLightfvNative(light, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLighti")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLighti")]
		internal static extern void GlLightiNative([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLighti")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLighti([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlLightiNative(light, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLightiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLightiv")]
		internal static extern void GlLightivNative([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightiv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlLightivNative(light, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLightiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLightiv([NativeName(NativeNameType.Param, "light")] [NativeName(NativeNameType.Type, "GLenum")] uint light, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlLightivNative(light, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLineStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLineStipple")]
		internal static extern void GlLineStippleNative([NativeName(NativeNameType.Param, "factor")] [NativeName(NativeNameType.Type, "GLint")] int factor, [NativeName(NativeNameType.Param, "pattern")] [NativeName(NativeNameType.Type, "GLushort")] ushort pattern);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLineStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLineStipple([NativeName(NativeNameType.Param, "factor")] [NativeName(NativeNameType.Type, "GLint")] int factor, [NativeName(NativeNameType.Param, "pattern")] [NativeName(NativeNameType.Type, "GLushort")] ushort pattern)
		{
			GlLineStippleNative(factor, pattern);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLineWidth")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLineWidth")]
		internal static extern void GlLineWidthNative([NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLfloat")] float width);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLineWidth")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLineWidth([NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLfloat")] float width)
		{
			GlLineWidthNative(width);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glListBase")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glListBase")]
		internal static extern void GlListBaseNative([NativeName(NativeNameType.Param, "base")] [NativeName(NativeNameType.Type, "GLuint")] uint baseValue);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glListBase")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlListBase([NativeName(NativeNameType.Param, "base")] [NativeName(NativeNameType.Type, "GLuint")] uint baseValue)
		{
			GlListBaseNative(baseValue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLoadIdentity")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLoadIdentity")]
		internal static extern void GlLoadIdentityNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLoadIdentity")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadIdentity()
		{
			GlLoadIdentityNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLoadMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLoadMatrixd")]
		internal static extern void GlLoadMatrixdNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* m);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLoadMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* m)
		{
			GlLoadMatrixdNative(m);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLoadMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double m)
		{
			fixed (double* pm = &m)
			{
				GlLoadMatrixdNative((double*)pm);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLoadMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLoadMatrixf")]
		internal static extern void GlLoadMatrixfNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* m);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLoadMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* m)
		{
			GlLoadMatrixfNative(m);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLoadMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float m)
		{
			fixed (float* pm = &m)
			{
				GlLoadMatrixfNative((float*)pm);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLoadName")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLoadName")]
		internal static extern void GlLoadNameNative([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLoadName")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLoadName([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name)
		{
			GlLoadNameNative(name);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glLogicOp")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glLogicOp")]
		internal static extern void GlLogicOpNative([NativeName(NativeNameType.Param, "opcode")] [NativeName(NativeNameType.Type, "GLenum")] uint opcode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glLogicOp")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlLogicOp([NativeName(NativeNameType.Param, "opcode")] [NativeName(NativeNameType.Type, "GLenum")] uint opcode)
		{
			GlLogicOpNative(opcode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMap1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMap1d")]
		internal static extern void GlMap1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points)
		{
			GlMap1DNative(target, u1, u2, stride, order, points);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double points)
		{
			fixed (double* ppoints = &points)
			{
				GlMap1DNative(target, u1, u2, stride, order, (double*)ppoints);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMap1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMap1f")]
		internal static extern void GlMap1FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points)
		{
			GlMap1FNative(target, u1, u2, stride, order, points);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap1F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float points)
		{
			fixed (float* ppoints = &points)
			{
				GlMap1FNative(target, u1, u2, stride, order, (float*)ppoints);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMap2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMap2d")]
		internal static extern void GlMap2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* points)
		{
			GlMap2DNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double points)
		{
			fixed (double* ppoints = &points)
			{
				GlMap2DNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, (double*)ppoints);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMap2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMap2f")]
		internal static extern void GlMap2FNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* points)
		{
			GlMap2FNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMap2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMap2F([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "ustride")] [NativeName(NativeNameType.Type, "GLint")] int ustride, [NativeName(NativeNameType.Param, "uorder")] [NativeName(NativeNameType.Type, "GLint")] int uorder, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2, [NativeName(NativeNameType.Param, "vstride")] [NativeName(NativeNameType.Type, "GLint")] int vstride, [NativeName(NativeNameType.Param, "vorder")] [NativeName(NativeNameType.Type, "GLint")] int vorder, [NativeName(NativeNameType.Param, "points")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float points)
		{
			fixed (float* ppoints = &points)
			{
				GlMap2FNative(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, (float*)ppoints);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMapGrid1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMapGrid1d")]
		internal static extern void GlMapGrid1DNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMapGrid1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid1D([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2)
		{
			GlMapGrid1DNative(un, u1, u2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMapGrid1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMapGrid1f")]
		internal static extern void GlMapGrid1FNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMapGrid1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid1F([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2)
		{
			GlMapGrid1FNative(un, u1, u2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMapGrid2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMapGrid2d")]
		internal static extern void GlMapGrid2DNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMapGrid2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid2D([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLdouble")] double u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLdouble")] double u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLdouble")] double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLdouble")] double v2)
		{
			GlMapGrid2DNative(un, u1, u2, vn, v1, v2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMapGrid2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMapGrid2f")]
		internal static extern void GlMapGrid2FNative([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMapGrid2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMapGrid2F([NativeName(NativeNameType.Param, "un")] [NativeName(NativeNameType.Type, "GLint")] int un, [NativeName(NativeNameType.Param, "u1")] [NativeName(NativeNameType.Type, "GLfloat")] float u1, [NativeName(NativeNameType.Param, "u2")] [NativeName(NativeNameType.Type, "GLfloat")] float u2, [NativeName(NativeNameType.Param, "vn")] [NativeName(NativeNameType.Type, "GLint")] int vn, [NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "GLfloat")] float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "GLfloat")] float v2)
		{
			GlMapGrid2FNative(un, u1, u2, vn, v1, v2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMaterialf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMaterialf")]
		internal static extern void GlMaterialfNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMaterialf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMaterialf([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlMaterialfNative(face, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMaterialfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMaterialfv")]
		internal static extern void GlMaterialfvNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMaterialfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMaterialfv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlMaterialfvNative(face, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMaterialfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMaterialfv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlMaterialfvNative(face, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMateriali")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMateriali")]
		internal static extern void GlMaterialiNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMateriali")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMateriali([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlMaterialiNative(face, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMaterialiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMaterialiv")]
		internal static extern void GlMaterialivNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMaterialiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMaterialiv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlMaterialivNative(face, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMaterialiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMaterialiv([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlMaterialivNative(face, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMatrixMode")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMatrixMode")]
		internal static extern void GlMatrixModeNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMatrixMode")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMatrixMode([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlMatrixModeNative(mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMultMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMultMatrixd")]
		internal static extern void GlMultMatrixdNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* m);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMultMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* m)
		{
			GlMultMatrixdNative(m);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMultMatrixd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultMatrixd([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double m)
		{
			fixed (double* pm = &m)
			{
				GlMultMatrixdNative((double*)pm);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glMultMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glMultMatrixf")]
		internal static extern void GlMultMatrixfNative([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* m);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMultMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* m)
		{
			GlMultMatrixfNative(m);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glMultMatrixf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlMultMatrixf([NativeName(NativeNameType.Param, "m")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float m)
		{
			fixed (float* pm = &m)
			{
				GlMultMatrixfNative((float*)pm);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNewList")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNewList")]
		internal static extern void GlNewListNative([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNewList")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNewList([NativeName(NativeNameType.Param, "list")] [NativeName(NativeNameType.Type, "GLuint")] uint list, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlNewListNative(list, mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3b")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3b")]
		internal static extern void GlNormal3BNative([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte nz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3b")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3B([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLbyte")] sbyte nz)
		{
			GlNormal3BNative(nx, ny, nz);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3bv")]
		internal static extern void GlNormal3BvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] sbyte* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Bv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] sbyte* v)
		{
			GlNormal3BvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3bv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Bv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLbyte*")] ref sbyte v)
		{
			fixed (sbyte* pv = &v)
			{
				GlNormal3BvNative((sbyte*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3d")]
		internal static extern void GlNormal3DNative([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLdouble")] double nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLdouble")] double ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLdouble")] double nz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3D([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLdouble")] double nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLdouble")] double ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLdouble")] double nz)
		{
			GlNormal3DNative(nx, ny, nz);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3dv")]
		internal static extern void GlNormal3DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlNormal3DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlNormal3DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3f")]
		internal static extern void GlNormal3FNative([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLfloat")] float nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLfloat")] float ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLfloat")] float nz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3F([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLfloat")] float nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLfloat")] float ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLfloat")] float nz)
		{
			GlNormal3FNative(nx, ny, nz);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3fv")]
		internal static extern void GlNormal3FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlNormal3FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlNormal3FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3i")]
		internal static extern void GlNormal3INative([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLint")] int nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLint")] int ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLint")] int nz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3I([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLint")] int nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLint")] int ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLint")] int nz)
		{
			GlNormal3INative(nx, ny, nz);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3iv")]
		internal static extern void GlNormal3IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlNormal3IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlNormal3IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3s")]
		internal static extern void GlNormal3SNative([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLshort")] short nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLshort")] short ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLshort")] short nz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3S([NativeName(NativeNameType.Param, "nx")] [NativeName(NativeNameType.Type, "GLshort")] short nx, [NativeName(NativeNameType.Param, "ny")] [NativeName(NativeNameType.Type, "GLshort")] short ny, [NativeName(NativeNameType.Param, "nz")] [NativeName(NativeNameType.Type, "GLshort")] short nz)
		{
			GlNormal3SNative(nx, ny, nz);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormal3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormal3sv")]
		internal static extern void GlNormal3SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlNormal3SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormal3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormal3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlNormal3SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glNormalPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glNormalPointer")]
		internal static extern void GlNormalPointerNative([NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glNormalPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlNormalPointer([NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer)
		{
			GlNormalPointerNative(type, stride, pointer);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glOrtho")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glOrtho")]
		internal static extern void GlOrthoNative([NativeName(NativeNameType.Param, "left")] [NativeName(NativeNameType.Type, "GLdouble")] double left, [NativeName(NativeNameType.Param, "right")] [NativeName(NativeNameType.Type, "GLdouble")] double right, [NativeName(NativeNameType.Param, "bottom")] [NativeName(NativeNameType.Type, "GLdouble")] double bottom, [NativeName(NativeNameType.Param, "top")] [NativeName(NativeNameType.Type, "GLdouble")] double top, [NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLdouble")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLdouble")] double zFar);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glOrtho")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlOrtho([NativeName(NativeNameType.Param, "left")] [NativeName(NativeNameType.Type, "GLdouble")] double left, [NativeName(NativeNameType.Param, "right")] [NativeName(NativeNameType.Type, "GLdouble")] double right, [NativeName(NativeNameType.Param, "bottom")] [NativeName(NativeNameType.Type, "GLdouble")] double bottom, [NativeName(NativeNameType.Param, "top")] [NativeName(NativeNameType.Type, "GLdouble")] double top, [NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLdouble")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLdouble")] double zFar)
		{
			GlOrthoNative(left, right, bottom, top, zNear, zFar);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPassThrough")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPassThrough")]
		internal static extern void GlPassThroughNative([NativeName(NativeNameType.Param, "token")] [NativeName(NativeNameType.Type, "GLfloat")] float token);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPassThrough")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPassThrough([NativeName(NativeNameType.Param, "token")] [NativeName(NativeNameType.Type, "GLfloat")] float token)
		{
			GlPassThroughNative(token);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelMapfv")]
		internal static extern void GlPixelMapfvNative([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* values);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelMapfv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* values)
		{
			GlPixelMapfvNative(map, mapsize, values);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelMapfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelMapfv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float values)
		{
			fixed (float* pvalues = &values)
			{
				GlPixelMapfvNative(map, mapsize, (float*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelMapuiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelMapuiv")]
		internal static extern void GlPixelMapuivNative([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* values);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelMapuiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelMapuiv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* values)
		{
			GlPixelMapuivNative(map, mapsize, values);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelMapuiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelMapuiv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint values)
		{
			fixed (uint* pvalues = &values)
			{
				GlPixelMapuivNative(map, mapsize, (uint*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelMapusv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelMapusv")]
		internal static extern void GlPixelMapusvNative([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLushort*")] ushort* values);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelMapusv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelMapusv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLushort*")] ushort* values)
		{
			GlPixelMapusvNative(map, mapsize, values);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelMapusv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelMapusv([NativeName(NativeNameType.Param, "map")] [NativeName(NativeNameType.Type, "GLenum")] uint map, [NativeName(NativeNameType.Param, "mapsize")] [NativeName(NativeNameType.Type, "GLsizei")] int mapsize, [NativeName(NativeNameType.Param, "values")] [NativeName(NativeNameType.Type, "const GLushort*")] ref ushort values)
		{
			fixed (ushort* pvalues = &values)
			{
				GlPixelMapusvNative(map, mapsize, (ushort*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelStoref")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelStoref")]
		internal static extern void GlPixelStorefNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelStoref")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelStoref([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlPixelStorefNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelStorei")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelStorei")]
		internal static extern void GlPixelStoreiNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelStorei")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelStorei([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlPixelStoreiNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelTransferf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelTransferf")]
		internal static extern void GlPixelTransferfNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelTransferf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelTransferf([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlPixelTransferfNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelTransferi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelTransferi")]
		internal static extern void GlPixelTransferiNative([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelTransferi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelTransferi([NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlPixelTransferiNative(pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPixelZoom")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPixelZoom")]
		internal static extern void GlPixelZoomNative([NativeName(NativeNameType.Param, "xfactor")] [NativeName(NativeNameType.Type, "GLfloat")] float xfactor, [NativeName(NativeNameType.Param, "yfactor")] [NativeName(NativeNameType.Type, "GLfloat")] float yfactor);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPixelZoom")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPixelZoom([NativeName(NativeNameType.Param, "xfactor")] [NativeName(NativeNameType.Type, "GLfloat")] float xfactor, [NativeName(NativeNameType.Param, "yfactor")] [NativeName(NativeNameType.Type, "GLfloat")] float yfactor)
		{
			GlPixelZoomNative(xfactor, yfactor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPointSize")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPointSize")]
		internal static extern void GlPointSizeNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLfloat")] float size);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPointSize")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPointSize([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLfloat")] float size)
		{
			GlPointSizeNative(size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPolygonMode")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPolygonMode")]
		internal static extern void GlPolygonModeNative([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPolygonMode")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPolygonMode([NativeName(NativeNameType.Param, "face")] [NativeName(NativeNameType.Type, "GLenum")] uint face, [NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlPolygonModeNative(face, mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPolygonOffset")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPolygonOffset")]
		internal static extern void GlPolygonOffsetNative([NativeName(NativeNameType.Param, "factor")] [NativeName(NativeNameType.Type, "GLfloat")] float factor, [NativeName(NativeNameType.Param, "units")] [NativeName(NativeNameType.Type, "GLfloat")] float units);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPolygonOffset")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPolygonOffset([NativeName(NativeNameType.Param, "factor")] [NativeName(NativeNameType.Type, "GLfloat")] float factor, [NativeName(NativeNameType.Param, "units")] [NativeName(NativeNameType.Type, "GLfloat")] float units)
		{
			GlPolygonOffsetNative(factor, units);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPolygonStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPolygonStipple")]
		internal static extern void GlPolygonStippleNative([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPolygonStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPolygonStipple([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "const GLubyte*")] byte* mask)
		{
			GlPolygonStippleNative(mask);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPolygonStipple")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPolygonStipple([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "const GLubyte*")] ref byte mask)
		{
			fixed (byte* pmask = &mask)
			{
				GlPolygonStippleNative((byte*)pmask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPopAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPopAttrib")]
		internal static extern void GlPopAttribNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPopAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPopAttrib()
		{
			GlPopAttribNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPopClientAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPopClientAttrib")]
		internal static extern void GlPopClientAttribNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPopClientAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPopClientAttrib()
		{
			GlPopClientAttribNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPopMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPopMatrix")]
		internal static extern void GlPopMatrixNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPopMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPopMatrix()
		{
			GlPopMatrixNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPopName")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPopName")]
		internal static extern void GlPopNameNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPopName")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPopName()
		{
			GlPopNameNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPrioritizeTextures")]
		internal static extern void GlPrioritizeTexturesNative([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] float* priorities);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] float* priorities)
		{
			GlPrioritizeTexturesNative(n, textures, priorities);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] float* priorities)
		{
			fixed (uint* ptextures = &textures)
			{
				GlPrioritizeTexturesNative(n, (uint*)ptextures, priorities);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] uint* textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] ref float priorities)
		{
			fixed (float* ppriorities = &priorities)
			{
				GlPrioritizeTexturesNative(n, textures, (float*)ppriorities);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPrioritizeTextures")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPrioritizeTextures([NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "GLsizei")] int n, [NativeName(NativeNameType.Param, "textures")] [NativeName(NativeNameType.Type, "const GLuint*")] ref uint textures, [NativeName(NativeNameType.Param, "priorities")] [NativeName(NativeNameType.Type, "const GLclampf*")] ref float priorities)
		{
			fixed (uint* ptextures = &textures)
			{
				fixed (float* ppriorities = &priorities)
				{
					GlPrioritizeTexturesNative(n, (uint*)ptextures, (float*)ppriorities);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPushAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPushAttrib")]
		internal static extern void GlPushAttribNative([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLbitfield")] uint mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPushAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPushAttrib([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLbitfield")] uint mask)
		{
			GlPushAttribNative(mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPushClientAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPushClientAttrib")]
		internal static extern void GlPushClientAttribNative([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLbitfield")] uint mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPushClientAttrib")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPushClientAttrib([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLbitfield")] uint mask)
		{
			GlPushClientAttribNative(mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPushMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPushMatrix")]
		internal static extern void GlPushMatrixNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPushMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPushMatrix()
		{
			GlPushMatrixNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glPushName")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glPushName")]
		internal static extern void GlPushNameNative([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glPushName")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlPushName([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLuint")] uint name)
		{
			GlPushNameNative(name);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2d")]
		internal static extern void GlRasterPos2DNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2D([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y)
		{
			GlRasterPos2DNative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2dv")]
		internal static extern void GlRasterPos2DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlRasterPos2DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlRasterPos2DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2f")]
		internal static extern void GlRasterPos2FNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2F([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y)
		{
			GlRasterPos2FNative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2fv")]
		internal static extern void GlRasterPos2FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlRasterPos2FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlRasterPos2FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2i")]
		internal static extern void GlRasterPos2INative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2I([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y)
		{
			GlRasterPos2INative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2iv")]
		internal static extern void GlRasterPos2IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlRasterPos2IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlRasterPos2IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2s")]
		internal static extern void GlRasterPos2SNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2S([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y)
		{
			GlRasterPos2SNative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos2sv")]
		internal static extern void GlRasterPos2SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlRasterPos2SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos2Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlRasterPos2SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3d")]
		internal static extern void GlRasterPos3DNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3D([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z)
		{
			GlRasterPos3DNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3dv")]
		internal static extern void GlRasterPos3DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlRasterPos3DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlRasterPos3DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3f")]
		internal static extern void GlRasterPos3FNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3F([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z)
		{
			GlRasterPos3FNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3fv")]
		internal static extern void GlRasterPos3FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlRasterPos3FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlRasterPos3FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3i")]
		internal static extern void GlRasterPos3INative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3I([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z)
		{
			GlRasterPos3INative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3iv")]
		internal static extern void GlRasterPos3IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlRasterPos3IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlRasterPos3IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3s")]
		internal static extern void GlRasterPos3SNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3S([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z)
		{
			GlRasterPos3SNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos3sv")]
		internal static extern void GlRasterPos3SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlRasterPos3SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlRasterPos3SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4d")]
		internal static extern void GlRasterPos4DNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLdouble")] double w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4D([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLdouble")] double w)
		{
			GlRasterPos4DNative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4dv")]
		internal static extern void GlRasterPos4DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlRasterPos4DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlRasterPos4DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4f")]
		internal static extern void GlRasterPos4FNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLfloat")] float w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4F([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLfloat")] float w)
		{
			GlRasterPos4FNative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4fv")]
		internal static extern void GlRasterPos4FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlRasterPos4FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlRasterPos4FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4i")]
		internal static extern void GlRasterPos4INative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLint")] int w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4I([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLint")] int w)
		{
			GlRasterPos4INative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4iv")]
		internal static extern void GlRasterPos4IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlRasterPos4IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlRasterPos4IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4s")]
		internal static extern void GlRasterPos4SNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLshort")] short w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4S([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLshort")] short w)
		{
			GlRasterPos4SNative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRasterPos4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRasterPos4sv")]
		internal static extern void GlRasterPos4SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlRasterPos4SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRasterPos4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRasterPos4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlRasterPos4SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glReadBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glReadBuffer")]
		internal static extern void GlReadBufferNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glReadBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlReadBuffer([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlReadBufferNative(mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glReadPixels")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glReadPixels")]
		internal static extern void GlReadPixelsNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "GLvoid*")] void* pixels);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glReadPixels")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlReadPixels([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "GLvoid*")] void* pixels)
		{
			GlReadPixelsNative(x, y, width, height, format, type, pixels);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRectd")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRectd")]
		internal static extern void GlRectdNative([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLdouble")] double x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLdouble")] double y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLdouble")] double x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLdouble")] double y2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectd([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLdouble")] double x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLdouble")] double y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLdouble")] double x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLdouble")] double y2)
		{
			GlRectdNative(x1, y1, x2, y2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRectdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRectdv")]
		internal static extern void GlRectdvNative([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectdv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v2)
		{
			GlRectdvNative(v1, v2);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectdv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v2)
		{
			fixed (double* pv1 = &v1)
			{
				GlRectdvNative((double*)pv1, v2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectdv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v2)
		{
			fixed (double* pv2 = &v2)
			{
				GlRectdvNative(v1, (double*)pv2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectdv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectdv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v2)
		{
			fixed (double* pv1 = &v1)
			{
				fixed (double* pv2 = &v2)
				{
					GlRectdvNative((double*)pv1, (double*)pv2);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRectf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRectf")]
		internal static extern void GlRectfNative([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLfloat")] float x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLfloat")] float y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLfloat")] float x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLfloat")] float y2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectf([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLfloat")] float x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLfloat")] float y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLfloat")] float x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLfloat")] float y2)
		{
			GlRectfNative(x1, y1, x2, y2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRectfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRectfv")]
		internal static extern void GlRectfvNative([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectfv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v2)
		{
			GlRectfvNative(v1, v2);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectfv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v2)
		{
			fixed (float* pv1 = &v1)
			{
				GlRectfvNative((float*)pv1, v2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectfv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v2)
		{
			fixed (float* pv2 = &v2)
			{
				GlRectfvNative(v1, (float*)pv2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectfv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v2)
		{
			fixed (float* pv1 = &v1)
			{
				fixed (float* pv2 = &v2)
				{
					GlRectfvNative((float*)pv1, (float*)pv2);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRecti")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRecti")]
		internal static extern void GlRectiNative([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLint")] int x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLint")] int y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLint")] int x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLint")] int y2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRecti")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRecti([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLint")] int x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLint")] int y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLint")] int x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLint")] int y2)
		{
			GlRectiNative(x1, y1, x2, y2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRectiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRectiv")]
		internal static extern void GlRectivNative([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLint*")] int* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLint*")] int* v2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectiv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLint*")] int* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLint*")] int* v2)
		{
			GlRectivNative(v1, v2);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectiv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLint*")] int* v2)
		{
			fixed (int* pv1 = &v1)
			{
				GlRectivNative((int*)pv1, v2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectiv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLint*")] int* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v2)
		{
			fixed (int* pv2 = &v2)
			{
				GlRectivNative(v1, (int*)pv2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectiv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectiv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v2)
		{
			fixed (int* pv1 = &v1)
			{
				fixed (int* pv2 = &v2)
				{
					GlRectivNative((int*)pv1, (int*)pv2);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRects")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRects")]
		internal static extern void GlRectsNative([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLshort")] short x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLshort")] short y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLshort")] short x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLshort")] short y2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRects")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRects([NativeName(NativeNameType.Param, "x1")] [NativeName(NativeNameType.Type, "GLshort")] short x1, [NativeName(NativeNameType.Param, "y1")] [NativeName(NativeNameType.Type, "GLshort")] short y1, [NativeName(NativeNameType.Param, "x2")] [NativeName(NativeNameType.Type, "GLshort")] short x2, [NativeName(NativeNameType.Param, "y2")] [NativeName(NativeNameType.Type, "GLshort")] short y2)
		{
			GlRectsNative(x1, y1, x2, y2);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRectsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRectsv")]
		internal static extern void GlRectsvNative([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v2);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectsv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v2)
		{
			GlRectsvNative(v1, v2);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectsv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v2)
		{
			fixed (short* pv1 = &v1)
			{
				GlRectsvNative((short*)pv1, v2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectsv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v2)
		{
			fixed (short* pv2 = &v2)
			{
				GlRectsvNative(v1, (short*)pv2);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRectsv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRectsv([NativeName(NativeNameType.Param, "v1")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v1, [NativeName(NativeNameType.Param, "v2")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v2)
		{
			fixed (short* pv1 = &v1)
			{
				fixed (short* pv2 = &v2)
				{
					GlRectsvNative((short*)pv1, (short*)pv2);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRenderMode")]
		[return: NativeName(NativeNameType.Type, "GLint")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRenderMode")]
		internal static extern int GlRenderModeNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRenderMode")]
		[return: NativeName(NativeNameType.Type, "GLint")]
		public static int GlRenderMode([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			int ret = GlRenderModeNative(mode);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRotated")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRotated")]
		internal static extern void GlRotatedNative([NativeName(NativeNameType.Param, "angle")] [NativeName(NativeNameType.Type, "GLdouble")] double angle, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRotated")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRotated([NativeName(NativeNameType.Param, "angle")] [NativeName(NativeNameType.Type, "GLdouble")] double angle, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z)
		{
			GlRotatedNative(angle, x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glRotatef")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glRotatef")]
		internal static extern void GlRotatefNative([NativeName(NativeNameType.Param, "angle")] [NativeName(NativeNameType.Type, "GLfloat")] float angle, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glRotatef")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlRotatef([NativeName(NativeNameType.Param, "angle")] [NativeName(NativeNameType.Type, "GLfloat")] float angle, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z)
		{
			GlRotatefNative(angle, x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glScaled")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glScaled")]
		internal static extern void GlScaledNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glScaled")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlScaled([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z)
		{
			GlScaledNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glScalef")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glScalef")]
		internal static extern void GlScalefNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glScalef")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlScalef([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z)
		{
			GlScalefNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glScissor")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glScissor")]
		internal static extern void GlScissorNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glScissor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlScissor([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height)
		{
			GlScissorNative(x, y, width, height);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glSelectBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glSelectBuffer")]
		internal static extern void GlSelectBufferNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLuint*")] uint* buffer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glSelectBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlSelectBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLuint*")] uint* buffer)
		{
			GlSelectBufferNative(size, buffer);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glSelectBuffer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlSelectBuffer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLsizei")] int size, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "GLuint*")] ref uint buffer)
		{
			fixed (uint* pbuffer = &buffer)
			{
				GlSelectBufferNative(size, (uint*)pbuffer);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glShadeModel")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glShadeModel")]
		internal static extern void GlShadeModelNative([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glShadeModel")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlShadeModel([NativeName(NativeNameType.Param, "mode")] [NativeName(NativeNameType.Type, "GLenum")] uint mode)
		{
			GlShadeModelNative(mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glStencilFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glStencilFunc")]
		internal static extern void GlStencilFuncNative([NativeName(NativeNameType.Param, "func")] [NativeName(NativeNameType.Type, "GLenum")] uint func, [NativeName(NativeNameType.Param, "ref")] [NativeName(NativeNameType.Type, "GLint")] int reference, [NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLuint")] uint mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glStencilFunc")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlStencilFunc([NativeName(NativeNameType.Param, "func")] [NativeName(NativeNameType.Type, "GLenum")] uint func, [NativeName(NativeNameType.Param, "ref")] [NativeName(NativeNameType.Type, "GLint")] int reference, [NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLuint")] uint mask)
		{
			GlStencilFuncNative(func, reference, mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glStencilMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glStencilMask")]
		internal static extern void GlStencilMaskNative([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLuint")] uint mask);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glStencilMask")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlStencilMask([NativeName(NativeNameType.Param, "mask")] [NativeName(NativeNameType.Type, "GLuint")] uint mask)
		{
			GlStencilMaskNative(mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glStencilOp")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glStencilOp")]
		internal static extern void GlStencilOpNative([NativeName(NativeNameType.Param, "fail")] [NativeName(NativeNameType.Type, "GLenum")] uint fail, [NativeName(NativeNameType.Param, "zfail")] [NativeName(NativeNameType.Type, "GLenum")] uint zfail, [NativeName(NativeNameType.Param, "zpass")] [NativeName(NativeNameType.Type, "GLenum")] uint zpass);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glStencilOp")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlStencilOp([NativeName(NativeNameType.Param, "fail")] [NativeName(NativeNameType.Type, "GLenum")] uint fail, [NativeName(NativeNameType.Param, "zfail")] [NativeName(NativeNameType.Type, "GLenum")] uint zfail, [NativeName(NativeNameType.Param, "zpass")] [NativeName(NativeNameType.Type, "GLenum")] uint zpass)
		{
			GlStencilOpNative(fail, zfail, zpass);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1d")]
		internal static extern void GlTexCoord1DNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1D([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s)
		{
			GlTexCoord1DNative(s);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1dv")]
		internal static extern void GlTexCoord1DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlTexCoord1DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlTexCoord1DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1f")]
		internal static extern void GlTexCoord1FNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1F([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s)
		{
			GlTexCoord1FNative(s);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1fv")]
		internal static extern void GlTexCoord1FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlTexCoord1FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlTexCoord1FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1i")]
		internal static extern void GlTexCoord1INative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1I([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s)
		{
			GlTexCoord1INative(s);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1iv")]
		internal static extern void GlTexCoord1IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlTexCoord1IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlTexCoord1IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1s")]
		internal static extern void GlTexCoord1SNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1S([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s)
		{
			GlTexCoord1SNative(s);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord1sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord1sv")]
		internal static extern void GlTexCoord1SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlTexCoord1SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord1sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord1Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlTexCoord1SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2d")]
		internal static extern void GlTexCoord2DNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2D([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t)
		{
			GlTexCoord2DNative(s, t);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2dv")]
		internal static extern void GlTexCoord2DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlTexCoord2DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlTexCoord2DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2f")]
		internal static extern void GlTexCoord2FNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2F([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t)
		{
			GlTexCoord2FNative(s, t);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2fv")]
		internal static extern void GlTexCoord2FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlTexCoord2FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlTexCoord2FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2i")]
		internal static extern void GlTexCoord2INative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2I([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t)
		{
			GlTexCoord2INative(s, t);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2iv")]
		internal static extern void GlTexCoord2IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlTexCoord2IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlTexCoord2IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2s")]
		internal static extern void GlTexCoord2SNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2S([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t)
		{
			GlTexCoord2SNative(s, t);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord2sv")]
		internal static extern void GlTexCoord2SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlTexCoord2SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord2Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlTexCoord2SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3d")]
		internal static extern void GlTexCoord3DNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3D([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r)
		{
			GlTexCoord3DNative(s, t, r);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3dv")]
		internal static extern void GlTexCoord3DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlTexCoord3DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlTexCoord3DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3f")]
		internal static extern void GlTexCoord3FNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3F([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r)
		{
			GlTexCoord3FNative(s, t, r);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3fv")]
		internal static extern void GlTexCoord3FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlTexCoord3FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlTexCoord3FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3i")]
		internal static extern void GlTexCoord3INative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3I([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r)
		{
			GlTexCoord3INative(s, t, r);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3iv")]
		internal static extern void GlTexCoord3IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlTexCoord3IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlTexCoord3IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3s")]
		internal static extern void GlTexCoord3SNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3S([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r)
		{
			GlTexCoord3SNative(s, t, r);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord3sv")]
		internal static extern void GlTexCoord3SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlTexCoord3SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlTexCoord3SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4d")]
		internal static extern void GlTexCoord4DNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLdouble")] double q);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4D([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLdouble")] double s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLdouble")] double t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLdouble")] double r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLdouble")] double q)
		{
			GlTexCoord4DNative(s, t, r, q);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4dv")]
		internal static extern void GlTexCoord4DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlTexCoord4DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlTexCoord4DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4f")]
		internal static extern void GlTexCoord4FNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLfloat")] float q);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4F([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLfloat")] float s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLfloat")] float t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLfloat")] float r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLfloat")] float q)
		{
			GlTexCoord4FNative(s, t, r, q);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4fv")]
		internal static extern void GlTexCoord4FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlTexCoord4FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlTexCoord4FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4i")]
		internal static extern void GlTexCoord4INative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLint")] int q);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4I([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLint")] int s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLint")] int t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLint")] int r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLint")] int q)
		{
			GlTexCoord4INative(s, t, r, q);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4iv")]
		internal static extern void GlTexCoord4IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlTexCoord4IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlTexCoord4IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4s")]
		internal static extern void GlTexCoord4SNative([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLshort")] short q);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4S([NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "GLshort")] short s, [NativeName(NativeNameType.Param, "t")] [NativeName(NativeNameType.Type, "GLshort")] short t, [NativeName(NativeNameType.Param, "r")] [NativeName(NativeNameType.Type, "GLshort")] short r, [NativeName(NativeNameType.Param, "q")] [NativeName(NativeNameType.Type, "GLshort")] short q)
		{
			GlTexCoord4SNative(s, t, r, q);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoord4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoord4sv")]
		internal static extern void GlTexCoord4SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlTexCoord4SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoord4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoord4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlTexCoord4SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexCoordPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexCoordPointer")]
		internal static extern void GlTexCoordPointerNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLint")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexCoordPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexCoordPointer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLint")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer)
		{
			GlTexCoordPointerNative(size, type, stride, pointer);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexEnvf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexEnvf")]
		internal static extern void GlTexEnvfNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexEnvf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvf([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlTexEnvfNative(target, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexEnvfv")]
		internal static extern void GlTexEnvfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlTexEnvfvNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexEnvfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlTexEnvfvNative(target, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexEnvi")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexEnvi")]
		internal static extern void GlTexEnviNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexEnvi")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnvi([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlTexEnviNative(target, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexEnviv")]
		internal static extern void GlTexEnvivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlTexEnvivNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexEnviv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexEnviv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlTexEnvivNative(target, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexGend")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexGend")]
		internal static extern void GlTexGendNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLdouble")] double param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGend")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGend([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLdouble")] double param)
		{
			GlTexGendNative(coord, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexGendv")]
		internal static extern void GlTexGendvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* @params)
		{
			GlTexGendvNative(coord, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGendv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGendv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double @params)
		{
			fixed (double* pparams = &@params)
			{
				GlTexGendvNative(coord, pname, (double*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexGenf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexGenf")]
		internal static extern void GlTexGenfNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGenf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGenf([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlTexGenfNative(coord, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexGenfv")]
		internal static extern void GlTexGenfvNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlTexGenfvNative(coord, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGenfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGenfv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlTexGenfvNative(coord, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexGeni")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexGeni")]
		internal static extern void GlTexGeniNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGeni")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGeni([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlTexGeniNative(coord, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexGeniv")]
		internal static extern void GlTexGenivNative([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlTexGenivNative(coord, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexGeniv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexGeniv([NativeName(NativeNameType.Param, "coord")] [NativeName(NativeNameType.Type, "GLenum")] uint coord, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlTexGenivNative(coord, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexImage1D")]
		internal static extern void GlTexImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLint")] int internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLint")] int internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexImage1DNative(target, level, internalformat, width, border, format, type, pixels);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexImage2D")]
		internal static extern void GlTexImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLint")] int internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "internalformat")] [NativeName(NativeNameType.Type, "GLint")] int internalformat, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "border")] [NativeName(NativeNameType.Type, "GLint")] int border, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexImage2DNative(target, level, internalformat, width, height, border, format, type, pixels);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexParameterf")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexParameterf")]
		internal static extern void GlTexParameterfNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexParameterf")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameterf([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLfloat")] float param)
		{
			GlTexParameterfNative(target, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexParameterfv")]
		internal static extern void GlTexParameterfvNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* @params)
		{
			GlTexParameterfvNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexParameterfv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameterfv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float @params)
		{
			fixed (float* pparams = &@params)
			{
				GlTexParameterfvNative(target, pname, (float*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexParameteri")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexParameteri")]
		internal static extern void GlTexParameteriNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexParameteri")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameteri([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "param")] [NativeName(NativeNameType.Type, "GLint")] int param)
		{
			GlTexParameteriNative(target, pname, param);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexParameteriv")]
		internal static extern void GlTexParameterivNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] int* @params)
		{
			GlTexParameterivNative(target, pname, @params);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexParameteriv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexParameteriv([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "pname")] [NativeName(NativeNameType.Type, "GLenum")] uint pname, [NativeName(NativeNameType.Param, "params")] [NativeName(NativeNameType.Type, "const GLint*")] ref int @params)
		{
			fixed (int* pparams = &@params)
			{
				GlTexParameterivNative(target, pname, (int*)pparams);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexSubImage1D")]
		internal static extern void GlTexSubImage1DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexSubImage1D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexSubImage1D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexSubImage1DNative(target, level, xoffset, width, format, type, pixels);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTexSubImage2D")]
		internal static extern void GlTexSubImage2DNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTexSubImage2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTexSubImage2D([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "level")] [NativeName(NativeNameType.Type, "GLint")] int level, [NativeName(NativeNameType.Param, "xoffset")] [NativeName(NativeNameType.Type, "GLint")] int xoffset, [NativeName(NativeNameType.Param, "yoffset")] [NativeName(NativeNameType.Type, "GLint")] int yoffset, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pixels)
		{
			GlTexSubImage2DNative(target, level, xoffset, yoffset, width, height, format, type, pixels);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTranslated")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTranslated")]
		internal static extern void GlTranslatedNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTranslated")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTranslated([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z)
		{
			GlTranslatedNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glTranslatef")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glTranslatef")]
		internal static extern void GlTranslatefNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glTranslatef")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlTranslatef([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z)
		{
			GlTranslatefNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2d")]
		internal static extern void GlVertex2DNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2D([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y)
		{
			GlVertex2DNative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2dv")]
		internal static extern void GlVertex2DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlVertex2DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlVertex2DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2f")]
		internal static extern void GlVertex2FNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2F([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y)
		{
			GlVertex2FNative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2fv")]
		internal static extern void GlVertex2FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlVertex2FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlVertex2FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2i")]
		internal static extern void GlVertex2INative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2I([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y)
		{
			GlVertex2INative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2iv")]
		internal static extern void GlVertex2IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlVertex2IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlVertex2IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2s")]
		internal static extern void GlVertex2SNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2S([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y)
		{
			GlVertex2SNative(x, y);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex2sv")]
		internal static extern void GlVertex2SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlVertex2SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex2sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex2Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlVertex2SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3d")]
		internal static extern void GlVertex3DNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3D([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z)
		{
			GlVertex3DNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3dv")]
		internal static extern void GlVertex3DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlVertex3DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlVertex3DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3f")]
		internal static extern void GlVertex3FNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3F([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z)
		{
			GlVertex3FNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3fv")]
		internal static extern void GlVertex3FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlVertex3FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlVertex3FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3i")]
		internal static extern void GlVertex3INative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3I([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z)
		{
			GlVertex3INative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3iv")]
		internal static extern void GlVertex3IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlVertex3IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlVertex3IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3s")]
		internal static extern void GlVertex3SNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3S([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z)
		{
			GlVertex3SNative(x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex3sv")]
		internal static extern void GlVertex3SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlVertex3SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex3sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex3Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlVertex3SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4d")]
		internal static extern void GlVertex4DNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLdouble")] double w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4d")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4D([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLdouble")] double w)
		{
			GlVertex4DNative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4dv")]
		internal static extern void GlVertex4DvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] double* v)
		{
			GlVertex4DvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4dv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Dv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLdouble*")] ref double v)
		{
			fixed (double* pv = &v)
			{
				GlVertex4DvNative((double*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4f")]
		internal static extern void GlVertex4FNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLfloat")] float w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4f")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4F([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLfloat")] float x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLfloat")] float y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLfloat")] float z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLfloat")] float w)
		{
			GlVertex4FNative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4fv")]
		internal static extern void GlVertex4FvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] float* v)
		{
			GlVertex4FvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4fv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Fv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLfloat*")] ref float v)
		{
			fixed (float* pv = &v)
			{
				GlVertex4FvNative((float*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4i")]
		internal static extern void GlVertex4INative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLint")] int w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4i")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4I([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLint")] int z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLint")] int w)
		{
			GlVertex4INative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4iv")]
		internal static extern void GlVertex4IvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] int* v)
		{
			GlVertex4IvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4iv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Iv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLint*")] ref int v)
		{
			fixed (int* pv = &v)
			{
				GlVertex4IvNative((int*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4s")]
		internal static extern void GlVertex4SNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLshort")] short w);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4s")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4S([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLshort")] short x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLshort")] short y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLshort")] short z, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "GLshort")] short w)
		{
			GlVertex4SNative(x, y, z, w);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertex4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertex4sv")]
		internal static extern void GlVertex4SvNative([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] short* v)
		{
			GlVertex4SvNative(v);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertex4sv")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertex4Sv([NativeName(NativeNameType.Param, "v")] [NativeName(NativeNameType.Type, "const GLshort*")] ref short v)
		{
			fixed (short* pv = &v)
			{
				GlVertex4SvNative((short*)pv);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glVertexPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glVertexPointer")]
		internal static extern void GlVertexPointerNative([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLint")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glVertexPointer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlVertexPointer([NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "GLint")] int size, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLsizei")] int stride, [NativeName(NativeNameType.Param, "pointer")] [NativeName(NativeNameType.Type, "const GLvoid*")] void* pointer)
		{
			GlVertexPointerNative(size, type, stride, pointer);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "glViewport")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "glViewport")]
		internal static extern void GlViewportNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "glViewport")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GlViewport([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLint")] int x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLint")] int y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLsizei")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLsizei")] int height)
		{
			GlViewportNative(x, y, width, height);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluErrorString")]
		[return: NativeName(NativeNameType.Type, "const GLubyte*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluErrorString")]
		internal static extern byte* GluErrorStringNative([NativeName(NativeNameType.Param, "errCode")] [NativeName(NativeNameType.Type, "GLenum")] uint errCode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluErrorString")]
		[return: NativeName(NativeNameType.Type, "const GLubyte*")]
		public static byte* GluErrorString([NativeName(NativeNameType.Param, "errCode")] [NativeName(NativeNameType.Type, "GLenum")] uint errCode)
		{
			byte* ret = GluErrorStringNative(errCode);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluErrorUnicodeStringEXT")]
		[return: NativeName(NativeNameType.Type, "const wchar*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluErrorUnicodeStringEXT")]
		internal static extern char* GluErrorUnicodeStringEXNative([NativeName(NativeNameType.Param, "errCode")] [NativeName(NativeNameType.Type, "GLenum")] uint errCode);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluErrorUnicodeStringEXT")]
		[return: NativeName(NativeNameType.Type, "const wchar*")]
		public static char* GluErrorUnicodeStringEX([NativeName(NativeNameType.Param, "errCode")] [NativeName(NativeNameType.Type, "GLenum")] uint errCode)
		{
			char* ret = GluErrorUnicodeStringEXNative(errCode);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluErrorUnicodeStringEXT")]
		[return: NativeName(NativeNameType.Type, "const wchar*")]
		public static string GluErrorUnicodeStringEXS([NativeName(NativeNameType.Param, "errCode")] [NativeName(NativeNameType.Type, "GLenum")] uint errCode)
		{
			string ret = Utils.DecodeStringUTF16(GluErrorUnicodeStringEXNative(errCode));
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluGetString")]
		[return: NativeName(NativeNameType.Type, "const GLubyte*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluGetString")]
		internal static extern byte* GluGetStringNative([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLenum")] uint name);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluGetString")]
		[return: NativeName(NativeNameType.Type, "const GLubyte*")]
		public static byte* GluGetString([NativeName(NativeNameType.Param, "name")] [NativeName(NativeNameType.Type, "GLenum")] uint name)
		{
			byte* ret = GluGetStringNative(name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluOrtho2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluOrtho2D")]
		internal static extern void GluOrtho2DNative([NativeName(NativeNameType.Param, "left")] [NativeName(NativeNameType.Type, "GLdouble")] double left, [NativeName(NativeNameType.Param, "right")] [NativeName(NativeNameType.Type, "GLdouble")] double right, [NativeName(NativeNameType.Param, "bottom")] [NativeName(NativeNameType.Type, "GLdouble")] double bottom, [NativeName(NativeNameType.Param, "top")] [NativeName(NativeNameType.Type, "GLdouble")] double top);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluOrtho2D")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluOrtho2D([NativeName(NativeNameType.Param, "left")] [NativeName(NativeNameType.Type, "GLdouble")] double left, [NativeName(NativeNameType.Param, "right")] [NativeName(NativeNameType.Type, "GLdouble")] double right, [NativeName(NativeNameType.Param, "bottom")] [NativeName(NativeNameType.Type, "GLdouble")] double bottom, [NativeName(NativeNameType.Param, "top")] [NativeName(NativeNameType.Type, "GLdouble")] double top)
		{
			GluOrtho2DNative(left, right, bottom, top);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluPerspective")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluPerspective")]
		internal static extern void GluPerspectiveNative([NativeName(NativeNameType.Param, "fovy")] [NativeName(NativeNameType.Type, "GLdouble")] double fovy, [NativeName(NativeNameType.Param, "aspect")] [NativeName(NativeNameType.Type, "GLdouble")] double aspect, [NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLdouble")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLdouble")] double zFar);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluPerspective")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluPerspective([NativeName(NativeNameType.Param, "fovy")] [NativeName(NativeNameType.Type, "GLdouble")] double fovy, [NativeName(NativeNameType.Param, "aspect")] [NativeName(NativeNameType.Type, "GLdouble")] double aspect, [NativeName(NativeNameType.Param, "zNear")] [NativeName(NativeNameType.Type, "GLdouble")] double zNear, [NativeName(NativeNameType.Param, "zFar")] [NativeName(NativeNameType.Type, "GLdouble")] double zFar)
		{
			GluPerspectiveNative(fovy, aspect, zNear, zFar);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluPickMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluPickMatrix")]
		internal static extern void GluPickMatrixNative([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLdouble")] double width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLdouble")] double height, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "GLint[4]")] int* viewport);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluPickMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluPickMatrix([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLdouble")] double width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLdouble")] double height, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "GLint[4]")] int* viewport)
		{
			GluPickMatrixNative(x, y, width, height, viewport);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluPickMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluPickMatrix([NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLdouble")] double width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLdouble")] double height, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "GLint[4]")] ref int viewport)
		{
			fixed (int* pviewport = &viewport)
			{
				GluPickMatrixNative(x, y, width, height, (int*)pviewport);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluLookAt")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluLookAt")]
		internal static extern void GluLookAtNative([NativeName(NativeNameType.Param, "eyex")] [NativeName(NativeNameType.Type, "GLdouble")] double eyex, [NativeName(NativeNameType.Param, "eyey")] [NativeName(NativeNameType.Type, "GLdouble")] double eyey, [NativeName(NativeNameType.Param, "eyez")] [NativeName(NativeNameType.Type, "GLdouble")] double eyez, [NativeName(NativeNameType.Param, "centerx")] [NativeName(NativeNameType.Type, "GLdouble")] double centerx, [NativeName(NativeNameType.Param, "centery")] [NativeName(NativeNameType.Type, "GLdouble")] double centery, [NativeName(NativeNameType.Param, "centerz")] [NativeName(NativeNameType.Type, "GLdouble")] double centerz, [NativeName(NativeNameType.Param, "upx")] [NativeName(NativeNameType.Type, "GLdouble")] double upx, [NativeName(NativeNameType.Param, "upy")] [NativeName(NativeNameType.Type, "GLdouble")] double upy, [NativeName(NativeNameType.Param, "upz")] [NativeName(NativeNameType.Type, "GLdouble")] double upz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLookAt")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLookAt([NativeName(NativeNameType.Param, "eyex")] [NativeName(NativeNameType.Type, "GLdouble")] double eyex, [NativeName(NativeNameType.Param, "eyey")] [NativeName(NativeNameType.Type, "GLdouble")] double eyey, [NativeName(NativeNameType.Param, "eyez")] [NativeName(NativeNameType.Type, "GLdouble")] double eyez, [NativeName(NativeNameType.Param, "centerx")] [NativeName(NativeNameType.Type, "GLdouble")] double centerx, [NativeName(NativeNameType.Param, "centery")] [NativeName(NativeNameType.Type, "GLdouble")] double centery, [NativeName(NativeNameType.Param, "centerz")] [NativeName(NativeNameType.Type, "GLdouble")] double centerz, [NativeName(NativeNameType.Param, "upx")] [NativeName(NativeNameType.Type, "GLdouble")] double upx, [NativeName(NativeNameType.Param, "upy")] [NativeName(NativeNameType.Type, "GLdouble")] double upy, [NativeName(NativeNameType.Param, "upz")] [NativeName(NativeNameType.Type, "GLdouble")] double upz)
		{
			GluLookAtNative(eyex, eyey, eyez, centerx, centery, centerz, upx, upy, upz);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluProject")]
		internal static extern int GluProjectNative([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, winx, winy, winz);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, winx, winy, winz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, winx, winy, winz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, winx, winy, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (int* pviewport = &viewport)
			{
				int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, winx, winy, winz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, winx, winy, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, winy, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, winy, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pwinx = &winx)
			{
				int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, (double*)pwinx, winy, winz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pwinx, winy, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, winy, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pwinx = &winx)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, winy, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pwinx = &winx)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, winy, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, winy, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, winy, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pwinx = &winx)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, winy, winz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pwiny = &winy)
			{
				int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, winx, (double*)pwiny, winz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pwiny = &winy)
				{
					int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, winx, (double*)pwiny, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pwiny = &winy)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, winx, (double*)pwiny, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pwiny = &winy)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, winx, (double*)pwiny, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pwiny = &winy)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, winx, (double*)pwiny, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwiny = &winy)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, winx, (double*)pwiny, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwiny = &winy)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, (double*)pwiny, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pwiny = &winy)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, (double*)pwiny, winz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pwinx = &winx)
			{
				fixed (double* pwiny = &winy)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, (double*)pwinx, (double*)pwiny, winz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwiny = &winy)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pwinx, (double*)pwiny, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwiny = &winy)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, (double*)pwiny, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwiny = &winy)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, (double*)pwiny, winz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwiny = &winy)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, winz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwiny = &winy)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, winz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwiny = &winy)
						{
							int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, winz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pwinx = &winx)
						{
							fixed (double* pwiny = &winy)
							{
								int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, winz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pwinz = &winz)
			{
				int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, winx, winy, (double*)pwinz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pwinz = &winz)
				{
					int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, winx, winy, (double*)pwinz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pwinz = &winz)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, winx, winy, (double*)pwinz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, winx, winy, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pwinz = &winz)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, winx, winy, (double*)pwinz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, winx, winy, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, winy, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, winy, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pwinx = &winx)
			{
				fixed (double* pwinz = &winz)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, (double*)pwinx, winy, (double*)pwinz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pwinx, winy, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, winy, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, winy, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, winy, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, winy, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, winy, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pwinx = &winx)
						{
							fixed (double* pwinz = &winz)
							{
								int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, winy, (double*)pwinz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pwiny = &winy)
			{
				fixed (double* pwinz = &winz)
				{
					int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, winx, (double*)pwiny, (double*)pwinz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pwiny = &winy)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, winx, (double*)pwiny, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pwiny = &winy)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, winx, (double*)pwiny, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pwiny = &winy)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, winx, (double*)pwiny, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pwiny = &winy)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, winx, (double*)pwiny, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwiny = &winy)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, winx, (double*)pwiny, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwiny = &winy)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, (double*)pwiny, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pwiny = &winy)
						{
							fixed (double* pwinz = &winz)
							{
								int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, winx, (double*)pwiny, (double*)pwinz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pwinx = &winx)
			{
				fixed (double* pwiny = &winy)
				{
					fixed (double* pwinz = &winz)
					{
						int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, viewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwiny = &winy)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwiny = &winy)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwiny = &winy)
						{
							fixed (double* pwinz = &winz)
							{
								int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pwinx = &winx)
				{
					fixed (double* pwiny = &winy)
					{
						fixed (double* pwinz = &winz)
						{
							int ret = GluProjectNative(objx, objy, objz, modelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwiny = &winy)
						{
							fixed (double* pwinz = &winz)
							{
								int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pwinx = &winx)
					{
						fixed (double* pwiny = &winy)
						{
							fixed (double* pwinz = &winz)
							{
								int ret = GluProjectNative(objx, objy, objz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluProject([NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble")] double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble")] double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble")] double objz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double winz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pwinx = &winx)
						{
							fixed (double* pwiny = &winy)
							{
								fixed (double* pwinz = &winz)
								{
									int ret = GluProjectNative(objx, objy, objz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pwinx, (double*)pwiny, (double*)pwinz);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluUnProject")]
		internal static extern int GluUnProjectNative([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, objx, objy, objz);
			return ret;
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, objx, objy, objz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, objx, objy, objz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, objx, objy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (int* pviewport = &viewport)
			{
				int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, objx, objy, objz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, objx, objy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, objy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, objy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pobjx = &objx)
			{
				int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, (double*)pobjx, objy, objz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pobjx, objy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, objy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pobjx = &objx)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, objy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pobjx = &objx)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, objy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, objy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, objy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pobjx = &objx)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, objy, objz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pobjy = &objy)
			{
				int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, objx, (double*)pobjy, objz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pobjy = &objy)
				{
					int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, objx, (double*)pobjy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pobjy = &objy)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, objx, (double*)pobjy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pobjy = &objy)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, objx, (double*)pobjy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pobjy = &objy)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, objx, (double*)pobjy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjy = &objy)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, objx, (double*)pobjy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjy = &objy)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, (double*)pobjy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pobjy = &objy)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, (double*)pobjy, objz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pobjx = &objx)
			{
				fixed (double* pobjy = &objy)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, (double*)pobjx, (double*)pobjy, objz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjy = &objy)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pobjx, (double*)pobjy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjy = &objy)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, (double*)pobjy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjy = &objy)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, (double*)pobjy, objz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjy = &objy)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, objz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjy = &objy)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, objz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjy = &objy)
						{
							int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, objz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pobjx = &objx)
						{
							fixed (double* pobjy = &objy)
							{
								int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, objz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pobjz = &objz)
			{
				int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, objx, objy, (double*)pobjz);
				return ret;
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pobjz = &objz)
				{
					int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, objx, objy, (double*)pobjz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pobjz = &objz)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, objx, objy, (double*)pobjz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, objx, objy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pobjz = &objz)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, objx, objy, (double*)pobjz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, objx, objy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, objy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, objy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pobjx = &objx)
			{
				fixed (double* pobjz = &objz)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, (double*)pobjx, objy, (double*)pobjz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pobjx, objy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, objy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, objy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, objy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, objy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, objy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pobjx = &objx)
						{
							fixed (double* pobjz = &objz)
							{
								int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, objy, (double*)pobjz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pobjy = &objy)
			{
				fixed (double* pobjz = &objz)
				{
					int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, objx, (double*)pobjy, (double*)pobjz);
					return ret;
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pobjy = &objy)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, objx, (double*)pobjy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pobjy = &objy)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, objx, (double*)pobjy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pobjy = &objy)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, objx, (double*)pobjy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pobjy = &objy)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, objx, (double*)pobjy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjy = &objy)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, objx, (double*)pobjy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjy = &objy)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, (double*)pobjy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] double* objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pobjy = &objy)
						{
							fixed (double* pobjz = &objz)
							{
								int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, objx, (double*)pobjy, (double*)pobjz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pobjx = &objx)
			{
				fixed (double* pobjy = &objy)
				{
					fixed (double* pobjz = &objz)
					{
						int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, viewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
						return ret;
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjy = &objy)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, viewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjy = &objy)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjy = &objy)
						{
							fixed (double* pobjz = &objz)
							{
								int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, viewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (int* pviewport = &viewport)
			{
				fixed (double* pobjx = &objx)
				{
					fixed (double* pobjy = &objy)
					{
						fixed (double* pobjz = &objz)
						{
							int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjy = &objy)
						{
							fixed (double* pobjz = &objz)
							{
								int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, projMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] double* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					fixed (double* pobjx = &objx)
					{
						fixed (double* pobjy = &objy)
						{
							fixed (double* pobjz = &objz)
							{
								int ret = GluUnProjectNative(winx, winy, winz, modelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluUnProject")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluUnProject([NativeName(NativeNameType.Param, "winx")] [NativeName(NativeNameType.Type, "GLdouble")] double winx, [NativeName(NativeNameType.Param, "winy")] [NativeName(NativeNameType.Type, "GLdouble")] double winy, [NativeName(NativeNameType.Param, "winz")] [NativeName(NativeNameType.Type, "GLdouble")] double winz, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLdouble[16]")] ref double projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport, [NativeName(NativeNameType.Param, "objx")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objx, [NativeName(NativeNameType.Param, "objy")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objy, [NativeName(NativeNameType.Param, "objz")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double objz)
		{
			fixed (double* pmodelMatrix = &modelMatrix)
			{
				fixed (double* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						fixed (double* pobjx = &objx)
						{
							fixed (double* pobjy = &objy)
							{
								fixed (double* pobjz = &objz)
								{
									int ret = GluUnProjectNative(winx, winy, winz, (double*)pmodelMatrix, (double*)pprojMatrix, (int*)pviewport, (double*)pobjx, (double*)pobjy, (double*)pobjz);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluScaleImage")]
		[return: NativeName(NativeNameType.Type, "int")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluScaleImage")]
		internal static extern int GluScaleImageNative([NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "widthin")] [NativeName(NativeNameType.Type, "GLint")] int widthin, [NativeName(NativeNameType.Param, "heightin")] [NativeName(NativeNameType.Type, "GLint")] int heightin, [NativeName(NativeNameType.Param, "typein")] [NativeName(NativeNameType.Type, "GLenum")] uint typein, [NativeName(NativeNameType.Param, "datain")] [NativeName(NativeNameType.Type, "const void*")] void* datain, [NativeName(NativeNameType.Param, "widthout")] [NativeName(NativeNameType.Type, "GLint")] int widthout, [NativeName(NativeNameType.Param, "heightout")] [NativeName(NativeNameType.Type, "GLint")] int heightout, [NativeName(NativeNameType.Param, "typeout")] [NativeName(NativeNameType.Type, "GLenum")] uint typeout, [NativeName(NativeNameType.Param, "dataout")] [NativeName(NativeNameType.Type, "void*")] void* dataout);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluScaleImage")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluScaleImage([NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "widthin")] [NativeName(NativeNameType.Type, "GLint")] int widthin, [NativeName(NativeNameType.Param, "heightin")] [NativeName(NativeNameType.Type, "GLint")] int heightin, [NativeName(NativeNameType.Param, "typein")] [NativeName(NativeNameType.Type, "GLenum")] uint typein, [NativeName(NativeNameType.Param, "datain")] [NativeName(NativeNameType.Type, "const void*")] void* datain, [NativeName(NativeNameType.Param, "widthout")] [NativeName(NativeNameType.Type, "GLint")] int widthout, [NativeName(NativeNameType.Param, "heightout")] [NativeName(NativeNameType.Type, "GLint")] int heightout, [NativeName(NativeNameType.Param, "typeout")] [NativeName(NativeNameType.Type, "GLenum")] uint typeout, [NativeName(NativeNameType.Param, "dataout")] [NativeName(NativeNameType.Type, "void*")] void* dataout)
		{
			int ret = GluScaleImageNative(format, widthin, heightin, typein, datain, widthout, heightout, typeout, dataout);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluBuild1DMipmaps")]
		[return: NativeName(NativeNameType.Type, "int")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluBuild1DMipmaps")]
		internal static extern int GluBuild1DMipmapsNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "components")] [NativeName(NativeNameType.Type, "GLint")] int components, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLint")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const void*")] void* data);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluBuild1DMipmaps")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluBuild1DMipmaps([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "components")] [NativeName(NativeNameType.Type, "GLint")] int components, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLint")] int width, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const void*")] void* data)
		{
			int ret = GluBuild1DMipmapsNative(target, components, width, format, type, data);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluBuild2DMipmaps")]
		[return: NativeName(NativeNameType.Type, "int")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluBuild2DMipmaps")]
		internal static extern int GluBuild2DMipmapsNative([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "components")] [NativeName(NativeNameType.Type, "GLint")] int components, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLint")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLint")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const void*")] void* data);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluBuild2DMipmaps")]
		[return: NativeName(NativeNameType.Type, "int")]
		public static int GluBuild2DMipmaps([NativeName(NativeNameType.Param, "target")] [NativeName(NativeNameType.Type, "GLenum")] uint target, [NativeName(NativeNameType.Param, "components")] [NativeName(NativeNameType.Type, "GLint")] int components, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "GLint")] int width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLint")] int height, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "GLenum")] uint format, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "const void*")] void* data)
		{
			int ret = GluBuild2DMipmapsNative(target, components, width, height, format, type, data);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNewQuadric")]
		[return: NativeName(NativeNameType.Type, "GLUquadric*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNewQuadric")]
		internal static extern void* GluNewQuadricNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNewQuadric")]
		[return: NativeName(NativeNameType.Type, "GLUquadric*")]
		public static void* GluNewQuadric()
		{
			void* ret = GluNewQuadricNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluDeleteQuadric")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluDeleteQuadric")]
		internal static extern void GluDeleteQuadricNative([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* state);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluDeleteQuadric")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluDeleteQuadric([NativeName(NativeNameType.Param, "state")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* state)
		{
			GluDeleteQuadricNative(state);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluQuadricNormals")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluQuadricNormals")]
		internal static extern void GluQuadricNormalsNative([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "normals")] [NativeName(NativeNameType.Type, "GLenum")] uint normals);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluQuadricNormals")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluQuadricNormals([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "normals")] [NativeName(NativeNameType.Type, "GLenum")] uint normals)
		{
			GluQuadricNormalsNative(quadObject, normals);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluQuadricTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluQuadricTexture")]
		internal static extern void GluQuadricTextureNative([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "textureCoords")] [NativeName(NativeNameType.Type, "GLboolean")] byte textureCoords);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluQuadricTexture")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluQuadricTexture([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "textureCoords")] [NativeName(NativeNameType.Type, "GLboolean")] byte textureCoords)
		{
			GluQuadricTextureNative(quadObject, textureCoords);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluQuadricOrientation")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluQuadricOrientation")]
		internal static extern void GluQuadricOrientationNative([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "orientation")] [NativeName(NativeNameType.Type, "GLenum")] uint orientation);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluQuadricOrientation")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluQuadricOrientation([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "orientation")] [NativeName(NativeNameType.Type, "GLenum")] uint orientation)
		{
			GluQuadricOrientationNative(quadObject, orientation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluQuadricDrawStyle")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluQuadricDrawStyle")]
		internal static extern void GluQuadricDrawStyleNative([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "drawStyle")] [NativeName(NativeNameType.Type, "GLenum")] uint drawStyle);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluQuadricDrawStyle")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluQuadricDrawStyle([NativeName(NativeNameType.Param, "quadObject")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* quadObject, [NativeName(NativeNameType.Param, "drawStyle")] [NativeName(NativeNameType.Type, "GLenum")] uint drawStyle)
		{
			GluQuadricDrawStyleNative(quadObject, drawStyle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluCylinder")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluCylinder")]
		internal static extern void GluCylinderNative([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "baseRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double baseRadius, [NativeName(NativeNameType.Param, "topRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double topRadius, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLdouble")] double height, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "stacks")] [NativeName(NativeNameType.Type, "GLint")] int stacks);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluCylinder")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluCylinder([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "baseRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double baseRadius, [NativeName(NativeNameType.Param, "topRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double topRadius, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "GLdouble")] double height, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "stacks")] [NativeName(NativeNameType.Type, "GLint")] int stacks)
		{
			GluCylinderNative(qobj, baseRadius, topRadius, height, slices, stacks);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluDisk")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluDisk")]
		internal static extern void GluDiskNative([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "innerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double innerRadius, [NativeName(NativeNameType.Param, "outerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double outerRadius, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "loops")] [NativeName(NativeNameType.Type, "GLint")] int loops);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluDisk")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluDisk([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "innerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double innerRadius, [NativeName(NativeNameType.Param, "outerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double outerRadius, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "loops")] [NativeName(NativeNameType.Type, "GLint")] int loops)
		{
			GluDiskNative(qobj, innerRadius, outerRadius, slices, loops);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluPartialDisk")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluPartialDisk")]
		internal static extern void GluPartialDiskNative([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "innerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double innerRadius, [NativeName(NativeNameType.Param, "outerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double outerRadius, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "loops")] [NativeName(NativeNameType.Type, "GLint")] int loops, [NativeName(NativeNameType.Param, "startAngle")] [NativeName(NativeNameType.Type, "GLdouble")] double startAngle, [NativeName(NativeNameType.Param, "sweepAngle")] [NativeName(NativeNameType.Type, "GLdouble")] double sweepAngle);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluPartialDisk")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluPartialDisk([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "innerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double innerRadius, [NativeName(NativeNameType.Param, "outerRadius")] [NativeName(NativeNameType.Type, "GLdouble")] double outerRadius, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "loops")] [NativeName(NativeNameType.Type, "GLint")] int loops, [NativeName(NativeNameType.Param, "startAngle")] [NativeName(NativeNameType.Type, "GLdouble")] double startAngle, [NativeName(NativeNameType.Param, "sweepAngle")] [NativeName(NativeNameType.Type, "GLdouble")] double sweepAngle)
		{
			GluPartialDiskNative(qobj, innerRadius, outerRadius, slices, loops, startAngle, sweepAngle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluSphere")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluSphere")]
		internal static extern void GluSphereNative([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "GLdouble")] double radius, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "stacks")] [NativeName(NativeNameType.Type, "GLint")] int stacks);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluSphere")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluSphere([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "GLdouble")] double radius, [NativeName(NativeNameType.Param, "slices")] [NativeName(NativeNameType.Type, "GLint")] int slices, [NativeName(NativeNameType.Param, "stacks")] [NativeName(NativeNameType.Type, "GLint")] int stacks)
		{
			GluSphereNative(qobj, radius, slices, stacks);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluQuadricCallback")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluQuadricCallback")]
		internal static extern void GluQuadricCallbackNative([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "fn")] [NativeName(NativeNameType.Type, "void (*)(GLUquadric* qobj, GLenum which, void (*)()* fn)*")] delegate*<void*, uint, delegate*<void>, void> fn);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluQuadricCallback")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluQuadricCallback([NativeName(NativeNameType.Param, "qobj")] [NativeName(NativeNameType.Type, "GLUquadric*")] void* qobj, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "fn")] [NativeName(NativeNameType.Type, "void (*)(GLUquadric* qobj, GLenum which, void (*)()* fn)*")] delegate*<void*, uint, delegate*<void>, void> fn)
		{
			GluQuadricCallbackNative(qobj, which, fn);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNewTess")]
		[return: NativeName(NativeNameType.Type, "GLUtesselator*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNewTess")]
		internal static extern void* GluNewTessNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNewTess")]
		[return: NativeName(NativeNameType.Type, "GLUtesselator*")]
		public static void* GluNewTess()
		{
			void* ret = GluNewTessNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluDeleteTess")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluDeleteTess")]
		internal static extern void GluDeleteTessNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluDeleteTess")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluDeleteTess([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess)
		{
			GluDeleteTessNative(tess);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessBeginPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessBeginPolygon")]
		internal static extern void GluTessBeginPolygonNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "polygon_data")] [NativeName(NativeNameType.Type, "void*")] void* polygonData);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessBeginPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessBeginPolygon([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "polygon_data")] [NativeName(NativeNameType.Type, "void*")] void* polygonData)
		{
			GluTessBeginPolygonNative(tess, polygonData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessBeginContour")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessBeginContour")]
		internal static extern void GluTessBeginContourNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessBeginContour")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessBeginContour([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess)
		{
			GluTessBeginContourNative(tess);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessVertex")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessVertex")]
		internal static extern void GluTessVertexNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "coords")] [NativeName(NativeNameType.Type, "GLdouble[3]")] double* coords, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "void*")] void* data);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessVertex")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessVertex([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "coords")] [NativeName(NativeNameType.Type, "GLdouble[3]")] double* coords, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "void*")] void* data)
		{
			GluTessVertexNative(tess, coords, data);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessVertex")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessVertex([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "coords")] [NativeName(NativeNameType.Type, "GLdouble[3]")] ref double coords, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "void*")] void* data)
		{
			fixed (double* pcoords = &coords)
			{
				GluTessVertexNative(tess, (double*)pcoords, data);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessEndContour")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessEndContour")]
		internal static extern void GluTessEndContourNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessEndContour")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessEndContour([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess)
		{
			GluTessEndContourNative(tess);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessEndPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessEndPolygon")]
		internal static extern void GluTessEndPolygonNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessEndPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessEndPolygon([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess)
		{
			GluTessEndPolygonNative(tess);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessProperty")]
		internal static extern void GluTessPropertyNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLdouble")] double value);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessProperty([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLdouble")] double value)
		{
			GluTessPropertyNative(tess, which, value);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessNormal")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessNormal")]
		internal static extern void GluTessNormalNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessNormal")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessNormal([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "x")] [NativeName(NativeNameType.Type, "GLdouble")] double x, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "GLdouble")] double y, [NativeName(NativeNameType.Param, "z")] [NativeName(NativeNameType.Type, "GLdouble")] double z)
		{
			GluTessNormalNative(tess, x, y, z);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluTessCallback")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluTessCallback")]
		internal static extern void GluTessCallbackNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "fn")] [NativeName(NativeNameType.Type, "void (*)(GLUtesselator* tess, GLenum which, void (*)()* fn)*")] delegate*<void*, uint, delegate*<void>, void> fn);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluTessCallback")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluTessCallback([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "fn")] [NativeName(NativeNameType.Type, "void (*)(GLUtesselator* tess, GLenum which, void (*)()* fn)*")] delegate*<void*, uint, delegate*<void>, void> fn)
		{
			GluTessCallbackNative(tess, which, fn);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluGetTessProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluGetTessProperty")]
		internal static extern void GluGetTessPropertyNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLdouble*")] double* value);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluGetTessProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluGetTessProperty([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLdouble*")] double* value)
		{
			GluGetTessPropertyNative(tess, which, value);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluGetTessProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluGetTessProperty([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLdouble*")] ref double value)
		{
			fixed (double* pvalue = &value)
			{
				GluGetTessPropertyNative(tess, which, (double*)pvalue);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNewNurbsRenderer")]
		[return: NativeName(NativeNameType.Type, "GLUnurbs*")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNewNurbsRenderer")]
		internal static extern void* GluNewNurbsRendererNative();

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNewNurbsRenderer")]
		[return: NativeName(NativeNameType.Type, "GLUnurbs*")]
		public static void* GluNewNurbsRenderer()
		{
			void* ret = GluNewNurbsRendererNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluDeleteNurbsRenderer")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluDeleteNurbsRenderer")]
		internal static extern void GluDeleteNurbsRendererNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluDeleteNurbsRenderer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluDeleteNurbsRenderer([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj)
		{
			GluDeleteNurbsRendererNative(nobj);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluBeginSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluBeginSurface")]
		internal static extern void GluBeginSurfaceNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluBeginSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluBeginSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj)
		{
			GluBeginSurfaceNative(nobj);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluBeginCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluBeginCurve")]
		internal static extern void GluBeginCurveNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluBeginCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluBeginCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj)
		{
			GluBeginCurveNative(nobj);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluEndCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluEndCurve")]
		internal static extern void GluEndCurveNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluEndCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluEndCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj)
		{
			GluEndCurveNative(nobj);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluEndSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluEndSurface")]
		internal static extern void GluEndSurfaceNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluEndSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluEndSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj)
		{
			GluEndSurfaceNative(nobj);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluBeginTrim")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluBeginTrim")]
		internal static extern void GluBeginTrimNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluBeginTrim")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluBeginTrim([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj)
		{
			GluBeginTrimNative(nobj);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluEndTrim")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluEndTrim")]
		internal static extern void GluEndTrimNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluEndTrim")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluEndTrim([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj)
		{
			GluEndTrimNative(nobj);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluPwlCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluPwlCurve")]
		internal static extern void GluPwlCurveNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLint")] int count, [NativeName(NativeNameType.Param, "array")] [NativeName(NativeNameType.Type, "GLfloat*")] float* array, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluPwlCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluPwlCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLint")] int count, [NativeName(NativeNameType.Param, "array")] [NativeName(NativeNameType.Type, "GLfloat*")] float* array, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			GluPwlCurveNative(nobj, count, array, stride, type);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluPwlCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluPwlCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "count")] [NativeName(NativeNameType.Type, "GLint")] int count, [NativeName(NativeNameType.Param, "array")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float array, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* parray = &array)
			{
				GluPwlCurveNative(nobj, count, (float*)parray, stride, type);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNurbsCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNurbsCurve")]
		internal static extern void GluNurbsCurveNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "nknots")] [NativeName(NativeNameType.Type, "GLint")] int nknots, [NativeName(NativeNameType.Param, "knot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* knot, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "nknots")] [NativeName(NativeNameType.Type, "GLint")] int nknots, [NativeName(NativeNameType.Param, "knot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* knot, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			GluNurbsCurveNative(nobj, nknots, knot, stride, ctlarray, order, type);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "nknots")] [NativeName(NativeNameType.Type, "GLint")] int nknots, [NativeName(NativeNameType.Param, "knot")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float knot, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* pknot = &knot)
			{
				GluNurbsCurveNative(nobj, nknots, (float*)pknot, stride, ctlarray, order, type);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "nknots")] [NativeName(NativeNameType.Type, "GLint")] int nknots, [NativeName(NativeNameType.Param, "knot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* knot, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float ctlarray, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* pctlarray = &ctlarray)
			{
				GluNurbsCurveNative(nobj, nknots, knot, stride, (float*)pctlarray, order, type);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsCurve")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsCurve([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "nknots")] [NativeName(NativeNameType.Type, "GLint")] int nknots, [NativeName(NativeNameType.Param, "knot")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float knot, [NativeName(NativeNameType.Param, "stride")] [NativeName(NativeNameType.Type, "GLint")] int stride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float ctlarray, [NativeName(NativeNameType.Param, "order")] [NativeName(NativeNameType.Type, "GLint")] int order, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* pknot = &knot)
			{
				fixed (float* pctlarray = &ctlarray)
				{
					GluNurbsCurveNative(nobj, nknots, (float*)pknot, stride, (float*)pctlarray, order, type);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNurbsSurface")]
		internal static extern void GluNurbsSurfaceNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] float* sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] float* sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			GluNurbsSurfaceNative(nobj, sknotCount, sknot, tknotCount, tknot, sStride, tStride, ctlarray, sorder, torder, type);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] ref float sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* psknot = &sknot)
			{
				GluNurbsSurfaceNative(nobj, sknotCount, (float*)psknot, tknotCount, tknot, sStride, tStride, ctlarray, sorder, torder, type);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] float* sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* ptknot = &tknot)
			{
				GluNurbsSurfaceNative(nobj, sknotCount, sknot, tknotCount, (float*)ptknot, sStride, tStride, ctlarray, sorder, torder, type);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] ref float sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] float* ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* psknot = &sknot)
			{
				fixed (float* ptknot = &tknot)
				{
					GluNurbsSurfaceNative(nobj, sknotCount, (float*)psknot, tknotCount, (float*)ptknot, sStride, tStride, ctlarray, sorder, torder, type);
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] float* sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* pctlarray = &ctlarray)
			{
				GluNurbsSurfaceNative(nobj, sknotCount, sknot, tknotCount, tknot, sStride, tStride, (float*)pctlarray, sorder, torder, type);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] ref float sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] float* tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* psknot = &sknot)
			{
				fixed (float* pctlarray = &ctlarray)
				{
					GluNurbsSurfaceNative(nobj, sknotCount, (float*)psknot, tknotCount, tknot, sStride, tStride, (float*)pctlarray, sorder, torder, type);
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] float* sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* ptknot = &tknot)
			{
				fixed (float* pctlarray = &ctlarray)
				{
					GluNurbsSurfaceNative(nobj, sknotCount, sknot, tknotCount, (float*)ptknot, sStride, tStride, (float*)pctlarray, sorder, torder, type);
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsSurface")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsSurface([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "sknot_count")] [NativeName(NativeNameType.Type, "GLint")] int sknotCount, [NativeName(NativeNameType.Param, "sknot")] [NativeName(NativeNameType.Type, "float*")] ref float sknot, [NativeName(NativeNameType.Param, "tknot_count")] [NativeName(NativeNameType.Type, "GLint")] int tknotCount, [NativeName(NativeNameType.Param, "tknot")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float tknot, [NativeName(NativeNameType.Param, "s_stride")] [NativeName(NativeNameType.Type, "GLint")] int sStride, [NativeName(NativeNameType.Param, "t_stride")] [NativeName(NativeNameType.Type, "GLint")] int tStride, [NativeName(NativeNameType.Param, "ctlarray")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float ctlarray, [NativeName(NativeNameType.Param, "sorder")] [NativeName(NativeNameType.Type, "GLint")] int sorder, [NativeName(NativeNameType.Param, "torder")] [NativeName(NativeNameType.Type, "GLint")] int torder, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			fixed (float* psknot = &sknot)
			{
				fixed (float* ptknot = &tknot)
				{
					fixed (float* pctlarray = &ctlarray)
					{
						GluNurbsSurfaceNative(nobj, sknotCount, (float*)psknot, tknotCount, (float*)ptknot, sStride, tStride, (float*)pctlarray, sorder, torder, type);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluLoadSamplingMatrices")]
		internal static extern void GluLoadSamplingMatricesNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport)
		{
			GluLoadSamplingMatricesNative(nobj, modelMatrix, projMatrix, viewport);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport)
		{
			fixed (float* pmodelMatrix = &modelMatrix)
			{
				GluLoadSamplingMatricesNative(nobj, (float*)pmodelMatrix, projMatrix, viewport);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport)
		{
			fixed (float* pprojMatrix = &projMatrix)
			{
				GluLoadSamplingMatricesNative(nobj, modelMatrix, (float*)pprojMatrix, viewport);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] int* viewport)
		{
			fixed (float* pmodelMatrix = &modelMatrix)
			{
				fixed (float* pprojMatrix = &projMatrix)
				{
					GluLoadSamplingMatricesNative(nobj, (float*)pmodelMatrix, (float*)pprojMatrix, viewport);
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport)
		{
			fixed (int* pviewport = &viewport)
			{
				GluLoadSamplingMatricesNative(nobj, modelMatrix, projMatrix, (int*)pviewport);
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport)
		{
			fixed (float* pmodelMatrix = &modelMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					GluLoadSamplingMatricesNative(nobj, (float*)pmodelMatrix, projMatrix, (int*)pviewport);
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] float* modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport)
		{
			fixed (float* pprojMatrix = &projMatrix)
			{
				fixed (int* pviewport = &viewport)
				{
					GluLoadSamplingMatricesNative(nobj, modelMatrix, (float*)pprojMatrix, (int*)pviewport);
				}
			}
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluLoadSamplingMatrices")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluLoadSamplingMatrices([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "modelMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float modelMatrix, [NativeName(NativeNameType.Param, "projMatrix")] [NativeName(NativeNameType.Type, "const GLfloat[16]")] ref float projMatrix, [NativeName(NativeNameType.Param, "viewport")] [NativeName(NativeNameType.Type, "const GLint[4]")] ref int viewport)
		{
			fixed (float* pmodelMatrix = &modelMatrix)
			{
				fixed (float* pprojMatrix = &projMatrix)
				{
					fixed (int* pviewport = &viewport)
					{
						GluLoadSamplingMatricesNative(nobj, (float*)pmodelMatrix, (float*)pprojMatrix, (int*)pviewport);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNurbsProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNurbsProperty")]
		internal static extern void GluNurbsPropertyNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "property")] [NativeName(NativeNameType.Type, "GLenum")] uint property, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLfloat")] float value);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsProperty([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "property")] [NativeName(NativeNameType.Type, "GLenum")] uint property, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLfloat")] float value)
		{
			GluNurbsPropertyNative(nobj, property, value);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluGetNurbsProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluGetNurbsProperty")]
		internal static extern void GluGetNurbsPropertyNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "property")] [NativeName(NativeNameType.Type, "GLenum")] uint property, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLfloat*")] float* value);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluGetNurbsProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluGetNurbsProperty([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "property")] [NativeName(NativeNameType.Type, "GLenum")] uint property, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLfloat*")] float* value)
		{
			GluGetNurbsPropertyNative(nobj, property, value);
		}

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluGetNurbsProperty")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluGetNurbsProperty([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "property")] [NativeName(NativeNameType.Type, "GLenum")] uint property, [NativeName(NativeNameType.Param, "value")] [NativeName(NativeNameType.Type, "GLfloat*")] ref float value)
		{
			fixed (float* pvalue = &value)
			{
				GluGetNurbsPropertyNative(nobj, property, (float*)pvalue);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNurbsCallback")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNurbsCallback")]
		internal static extern void GluNurbsCallbackNative([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "fn")] [NativeName(NativeNameType.Type, "void (*)(GLUnurbs* nobj, GLenum which, void (*)()* fn)*")] delegate*<void*, uint, delegate*<void>, void> fn);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNurbsCallback")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNurbsCallback([NativeName(NativeNameType.Param, "nobj")] [NativeName(NativeNameType.Type, "GLUnurbs*")] void* nobj, [NativeName(NativeNameType.Param, "which")] [NativeName(NativeNameType.Type, "GLenum")] uint which, [NativeName(NativeNameType.Param, "fn")] [NativeName(NativeNameType.Type, "void (*)(GLUnurbs* nobj, GLenum which, void (*)()* fn)*")] delegate*<void*, uint, delegate*<void>, void> fn)
		{
			GluNurbsCallbackNative(nobj, which, fn);
		}

		/// <summary>
		/// **           Backwards compatibility for old tesselator           ***<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "gluBeginPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluBeginPolygon")]
		internal static extern void GluBeginPolygonNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess);

		/// <summary>		/// **           Backwards compatibility for old tesselator           ***<br/>		/// </summary>		[NativeName(NativeNameType.Func, "gluBeginPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluBeginPolygon([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess)
		{
			GluBeginPolygonNative(tess);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluNextContour")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluNextContour")]
		internal static extern void GluNextContourNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluNextContour")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluNextContour([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess, [NativeName(NativeNameType.Param, "type")] [NativeName(NativeNameType.Type, "GLenum")] uint type)
		{
			GluNextContourNative(tess, type);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "gluEndPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gluEndPolygon")]
		internal static extern void GluEndPolygonNative([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess);

		/// <summary>		/// To be documented.		/// </summary>		[NativeName(NativeNameType.Func, "gluEndPolygon")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void GluEndPolygon([NativeName(NativeNameType.Param, "tess")] [NativeName(NativeNameType.Type, "GLUtesselator*")] void* tess)
		{
			GluEndPolygonNative(tess);
		}

	}
}
