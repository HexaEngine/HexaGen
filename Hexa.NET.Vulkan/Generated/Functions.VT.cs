// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.Vulkan
{
	public unsafe partial class Vulkan
	{
		internal static VTable vt;

		public static void InitApi()
		{
			vt = new VTable(GetLibraryName(), 589);
			vt.Load(0, "vkCreateInstance");			vt.Load(1, "vkDestroyInstance");			vt.Load(2, "vkEnumeratePhysicalDevices");			vt.Load(3, "vkGetPhysicalDeviceFeatures");			vt.Load(4, "vkGetPhysicalDeviceFormatProperties");			vt.Load(5, "vkGetPhysicalDeviceImageFormatProperties");			vt.Load(6, "vkGetPhysicalDeviceProperties");			vt.Load(7, "vkGetPhysicalDeviceQueueFamilyProperties");			vt.Load(8, "vkGetPhysicalDeviceMemoryProperties");			vt.Load(9, "vkGetInstanceProcAddr");			vt.Load(10, "vkGetDeviceProcAddr");			vt.Load(11, "vkCreateDevice");			vt.Load(12, "vkDestroyDevice");			vt.Load(13, "vkEnumerateInstanceExtensionProperties");			vt.Load(14, "vkEnumerateDeviceExtensionProperties");			vt.Load(15, "vkEnumerateInstanceLayerProperties");			vt.Load(16, "vkEnumerateDeviceLayerProperties");			vt.Load(17, "vkGetDeviceQueue");			vt.Load(18, "vkQueueSubmit");			vt.Load(19, "vkQueueWaitIdle");			vt.Load(20, "vkDeviceWaitIdle");			vt.Load(21, "vkAllocateMemory");			vt.Load(22, "vkFreeMemory");			vt.Load(23, "vkMapMemory");			vt.Load(24, "vkUnmapMemory");			vt.Load(25, "vkFlushMappedMemoryRanges");			vt.Load(26, "vkInvalidateMappedMemoryRanges");			vt.Load(27, "vkGetDeviceMemoryCommitment");			vt.Load(28, "vkBindBufferMemory");			vt.Load(29, "vkBindImageMemory");			vt.Load(30, "vkGetBufferMemoryRequirements");			vt.Load(31, "vkGetImageMemoryRequirements");			vt.Load(32, "vkGetImageSparseMemoryRequirements");			vt.Load(33, "vkGetPhysicalDeviceSparseImageFormatProperties");			vt.Load(34, "vkQueueBindSparse");			vt.Load(35, "vkCreateFence");			vt.Load(36, "vkDestroyFence");			vt.Load(37, "vkResetFences");			vt.Load(38, "vkGetFenceStatus");			vt.Load(39, "vkWaitForFences");			vt.Load(40, "vkCreateSemaphore");			vt.Load(41, "vkDestroySemaphore");			vt.Load(42, "vkCreateEvent");			vt.Load(43, "vkDestroyEvent");			vt.Load(44, "vkGetEventStatus");			vt.Load(45, "vkSetEvent");			vt.Load(46, "vkResetEvent");			vt.Load(47, "vkCreateQueryPool");			vt.Load(48, "vkDestroyQueryPool");			vt.Load(49, "vkGetQueryPoolResults");			vt.Load(50, "vkCreateBuffer");			vt.Load(51, "vkDestroyBuffer");			vt.Load(52, "vkCreateBufferView");			vt.Load(53, "vkDestroyBufferView");			vt.Load(54, "vkCreateImage");			vt.Load(55, "vkDestroyImage");			vt.Load(56, "vkGetImageSubresourceLayout");			vt.Load(57, "vkCreateImageView");			vt.Load(58, "vkDestroyImageView");			vt.Load(59, "vkCreateShaderModule");			vt.Load(60, "vkDestroyShaderModule");			vt.Load(61, "vkCreatePipelineCache");			vt.Load(62, "vkDestroyPipelineCache");			vt.Load(63, "vkGetPipelineCacheData");			vt.Load(64, "vkMergePipelineCaches");			vt.Load(65, "vkCreateGraphicsPipelines");			vt.Load(66, "vkCreateComputePipelines");			vt.Load(67, "vkDestroyPipeline");			vt.Load(68, "vkCreatePipelineLayout");			vt.Load(69, "vkDestroyPipelineLayout");			vt.Load(70, "vkCreateSampler");			vt.Load(71, "vkDestroySampler");			vt.Load(72, "vkCreateDescriptorSetLayout");			vt.Load(73, "vkDestroyDescriptorSetLayout");			vt.Load(74, "vkCreateDescriptorPool");			vt.Load(75, "vkDestroyDescriptorPool");			vt.Load(76, "vkResetDescriptorPool");			vt.Load(77, "vkAllocateDescriptorSets");			vt.Load(78, "vkFreeDescriptorSets");			vt.Load(79, "vkUpdateDescriptorSets");			vt.Load(80, "vkCreateFramebuffer");			vt.Load(81, "vkDestroyFramebuffer");			vt.Load(82, "vkCreateRenderPass");			vt.Load(83, "vkDestroyRenderPass");			vt.Load(84, "vkGetRenderAreaGranularity");			vt.Load(85, "vkCreateCommandPool");			vt.Load(86, "vkDestroyCommandPool");			vt.Load(87, "vkResetCommandPool");			vt.Load(88, "vkAllocateCommandBuffers");			vt.Load(89, "vkFreeCommandBuffers");			vt.Load(90, "vkBeginCommandBuffer");			vt.Load(91, "vkEndCommandBuffer");			vt.Load(92, "vkResetCommandBuffer");			vt.Load(93, "vkCmdBindPipeline");			vt.Load(94, "vkCmdSetViewport");			vt.Load(95, "vkCmdSetScissor");			vt.Load(96, "vkCmdSetLineWidth");			vt.Load(97, "vkCmdSetDepthBias");			vt.Load(98, "vkCmdSetBlendConstants");			vt.Load(99, "vkCmdSetDepthBounds");			vt.Load(100, "vkCmdSetStencilCompareMask");			vt.Load(101, "vkCmdSetStencilWriteMask");			vt.Load(102, "vkCmdSetStencilReference");			vt.Load(103, "vkCmdBindDescriptorSets");			vt.Load(104, "vkCmdBindIndexBuffer");			vt.Load(105, "vkCmdBindVertexBuffers");			vt.Load(106, "vkCmdDraw");			vt.Load(107, "vkCmdDrawIndexed");			vt.Load(108, "vkCmdDrawIndirect");			vt.Load(109, "vkCmdDrawIndexedIndirect");			vt.Load(110, "vkCmdDispatch");			vt.Load(111, "vkCmdDispatchIndirect");			vt.Load(112, "vkCmdCopyBuffer");			vt.Load(113, "vkCmdCopyImage");			vt.Load(114, "vkCmdBlitImage");			vt.Load(115, "vkCmdCopyBufferToImage");			vt.Load(116, "vkCmdCopyImageToBuffer");			vt.Load(117, "vkCmdUpdateBuffer");			vt.Load(118, "vkCmdFillBuffer");			vt.Load(119, "vkCmdClearColorImage");			vt.Load(120, "vkCmdClearDepthStencilImage");			vt.Load(121, "vkCmdClearAttachments");			vt.Load(122, "vkCmdResolveImage");			vt.Load(123, "vkCmdSetEvent");			vt.Load(124, "vkCmdResetEvent");			vt.Load(125, "vkCmdWaitEvents");			vt.Load(126, "vkCmdPipelineBarrier");			vt.Load(127, "vkCmdBeginQuery");			vt.Load(128, "vkCmdEndQuery");			vt.Load(129, "vkCmdResetQueryPool");			vt.Load(130, "vkCmdWriteTimestamp");			vt.Load(131, "vkCmdCopyQueryPoolResults");			vt.Load(132, "vkCmdPushConstants");			vt.Load(133, "vkCmdBeginRenderPass");			vt.Load(134, "vkCmdNextSubpass");			vt.Load(135, "vkCmdEndRenderPass");			vt.Load(136, "vkCmdExecuteCommands");			vt.Load(137, "vkEnumerateInstanceVersion");			vt.Load(138, "vkBindBufferMemory2");			vt.Load(139, "vkBindImageMemory2");			vt.Load(140, "vkGetDeviceGroupPeerMemoryFeatures");			vt.Load(141, "vkCmdSetDeviceMask");			vt.Load(142, "vkCmdDispatchBase");			vt.Load(143, "vkEnumeratePhysicalDeviceGroups");			vt.Load(144, "vkGetImageMemoryRequirements2");			vt.Load(145, "vkGetBufferMemoryRequirements2");			vt.Load(146, "vkGetImageSparseMemoryRequirements2");			vt.Load(147, "vkGetPhysicalDeviceFeatures2");			vt.Load(148, "vkGetPhysicalDeviceProperties2");			vt.Load(149, "vkGetPhysicalDeviceFormatProperties2");			vt.Load(150, "vkGetPhysicalDeviceImageFormatProperties2");			vt.Load(151, "vkGetPhysicalDeviceQueueFamilyProperties2");			vt.Load(152, "vkGetPhysicalDeviceMemoryProperties2");			vt.Load(153, "vkGetPhysicalDeviceSparseImageFormatProperties2");			vt.Load(154, "vkTrimCommandPool");			vt.Load(155, "vkGetDeviceQueue2");			vt.Load(156, "vkCreateSamplerYcbcrConversion");			vt.Load(157, "vkDestroySamplerYcbcrConversion");			vt.Load(158, "vkCreateDescriptorUpdateTemplate");			vt.Load(159, "vkDestroyDescriptorUpdateTemplate");			vt.Load(160, "vkUpdateDescriptorSetWithTemplate");			vt.Load(161, "vkGetPhysicalDeviceExternalBufferProperties");			vt.Load(162, "vkGetPhysicalDeviceExternalFenceProperties");			vt.Load(163, "vkGetPhysicalDeviceExternalSemaphoreProperties");			vt.Load(164, "vkGetDescriptorSetLayoutSupport");			vt.Load(165, "vkCmdDrawIndirectCount");			vt.Load(166, "vkCmdDrawIndexedIndirectCount");			vt.Load(167, "vkCreateRenderPass2");			vt.Load(168, "vkCmdBeginRenderPass2");			vt.Load(169, "vkCmdNextSubpass2");			vt.Load(170, "vkCmdEndRenderPass2");			vt.Load(171, "vkResetQueryPool");			vt.Load(172, "vkGetSemaphoreCounterValue");			vt.Load(173, "vkWaitSemaphores");			vt.Load(174, "vkSignalSemaphore");			vt.Load(175, "vkGetBufferDeviceAddress");			vt.Load(176, "vkGetBufferOpaqueCaptureAddress");			vt.Load(177, "vkGetDeviceMemoryOpaqueCaptureAddress");			vt.Load(178, "vkGetPhysicalDeviceToolProperties");			vt.Load(179, "vkCreatePrivateDataSlot");			vt.Load(180, "vkDestroyPrivateDataSlot");			vt.Load(181, "vkSetPrivateData");			vt.Load(182, "vkGetPrivateData");			vt.Load(183, "vkCmdSetEvent2");			vt.Load(184, "vkCmdResetEvent2");			vt.Load(185, "vkCmdWaitEvents2");			vt.Load(186, "vkCmdPipelineBarrier2");			vt.Load(187, "vkCmdWriteTimestamp2");			vt.Load(188, "vkQueueSubmit2");			vt.Load(189, "vkCmdCopyBuffer2");			vt.Load(190, "vkCmdCopyImage2");			vt.Load(191, "vkCmdCopyBufferToImage2");			vt.Load(192, "vkCmdCopyImageToBuffer2");			vt.Load(193, "vkCmdBlitImage2");			vt.Load(194, "vkCmdResolveImage2");			vt.Load(195, "vkCmdBeginRendering");			vt.Load(196, "vkCmdEndRendering");			vt.Load(197, "vkCmdSetCullMode");			vt.Load(198, "vkCmdSetFrontFace");			vt.Load(199, "vkCmdSetPrimitiveTopology");			vt.Load(200, "vkCmdSetViewportWithCount");			vt.Load(201, "vkCmdSetScissorWithCount");			vt.Load(202, "vkCmdBindVertexBuffers2");			vt.Load(203, "vkCmdSetDepthTestEnable");			vt.Load(204, "vkCmdSetDepthWriteEnable");			vt.Load(205, "vkCmdSetDepthCompareOp");			vt.Load(206, "vkCmdSetDepthBoundsTestEnable");			vt.Load(207, "vkCmdSetStencilTestEnable");			vt.Load(208, "vkCmdSetStencilOp");			vt.Load(209, "vkCmdSetRasterizerDiscardEnable");			vt.Load(210, "vkCmdSetDepthBiasEnable");			vt.Load(211, "vkCmdSetPrimitiveRestartEnable");			vt.Load(212, "vkGetDeviceBufferMemoryRequirements");			vt.Load(213, "vkGetDeviceImageMemoryRequirements");			vt.Load(214, "vkGetDeviceImageSparseMemoryRequirements");			vt.Load(215, "vkDestroySurfaceKHR");			vt.Load(216, "vkGetPhysicalDeviceSurfaceSupportKHR");			vt.Load(217, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR");			vt.Load(218, "vkGetPhysicalDeviceSurfaceFormatsKHR");			vt.Load(219, "vkGetPhysicalDeviceSurfacePresentModesKHR");			vt.Load(220, "vkCreateSwapchainKHR");			vt.Load(221, "vkDestroySwapchainKHR");			vt.Load(222, "vkGetSwapchainImagesKHR");			vt.Load(223, "vkAcquireNextImageKHR");			vt.Load(224, "vkQueuePresentKHR");			vt.Load(225, "vkGetDeviceGroupPresentCapabilitiesKHR");			vt.Load(226, "vkGetDeviceGroupSurfacePresentModesKHR");			vt.Load(227, "vkGetPhysicalDevicePresentRectanglesKHR");			vt.Load(228, "vkAcquireNextImage2KHR");			vt.Load(229, "vkGetPhysicalDeviceDisplayPropertiesKHR");			vt.Load(230, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR");			vt.Load(231, "vkGetDisplayPlaneSupportedDisplaysKHR");			vt.Load(232, "vkGetDisplayModePropertiesKHR");			vt.Load(233, "vkCreateDisplayModeKHR");			vt.Load(234, "vkGetDisplayPlaneCapabilitiesKHR");			vt.Load(235, "vkCreateDisplayPlaneSurfaceKHR");			vt.Load(236, "vkCreateSharedSwapchainsKHR");			vt.Load(237, "vkGetPhysicalDeviceVideoCapabilitiesKHR");			vt.Load(238, "vkGetPhysicalDeviceVideoFormatPropertiesKHR");			vt.Load(239, "vkCreateVideoSessionKHR");			vt.Load(240, "vkDestroyVideoSessionKHR");			vt.Load(241, "vkGetVideoSessionMemoryRequirementsKHR");			vt.Load(242, "vkBindVideoSessionMemoryKHR");			vt.Load(243, "vkCreateVideoSessionParametersKHR");			vt.Load(244, "vkUpdateVideoSessionParametersKHR");			vt.Load(245, "vkDestroyVideoSessionParametersKHR");			vt.Load(246, "vkCmdBeginVideoCodingKHR");			vt.Load(247, "vkCmdEndVideoCodingKHR");			vt.Load(248, "vkCmdControlVideoCodingKHR");			vt.Load(249, "vkCmdDecodeVideoKHR");			vt.Load(250, "vkCmdBeginRenderingKHR");			vt.Load(251, "vkCmdEndRenderingKHR");			vt.Load(252, "vkGetPhysicalDeviceFeatures2KHR");			vt.Load(253, "vkGetPhysicalDeviceProperties2KHR");			vt.Load(254, "vkGetPhysicalDeviceFormatProperties2KHR");			vt.Load(255, "vkGetPhysicalDeviceImageFormatProperties2KHR");			vt.Load(256, "vkGetPhysicalDeviceQueueFamilyProperties2KHR");			vt.Load(257, "vkGetPhysicalDeviceMemoryProperties2KHR");			vt.Load(258, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR");			vt.Load(259, "vkGetDeviceGroupPeerMemoryFeaturesKHR");			vt.Load(260, "vkCmdSetDeviceMaskKHR");			vt.Load(261, "vkCmdDispatchBaseKHR");			vt.Load(262, "vkTrimCommandPoolKHR");			vt.Load(263, "vkEnumeratePhysicalDeviceGroupsKHR");			vt.Load(264, "vkGetPhysicalDeviceExternalBufferPropertiesKHR");			vt.Load(265, "vkGetMemoryFdKHR");			vt.Load(266, "vkGetMemoryFdPropertiesKHR");			vt.Load(267, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR");			vt.Load(268, "vkImportSemaphoreFdKHR");			vt.Load(269, "vkGetSemaphoreFdKHR");			vt.Load(270, "vkCmdPushDescriptorSetKHR");			vt.Load(271, "vkCmdPushDescriptorSetWithTemplateKHR");			vt.Load(272, "vkCreateDescriptorUpdateTemplateKHR");			vt.Load(273, "vkDestroyDescriptorUpdateTemplateKHR");			vt.Load(274, "vkUpdateDescriptorSetWithTemplateKHR");			vt.Load(275, "vkCreateRenderPass2KHR");			vt.Load(276, "vkCmdBeginRenderPass2KHR");			vt.Load(277, "vkCmdNextSubpass2KHR");			vt.Load(278, "vkCmdEndRenderPass2KHR");			vt.Load(279, "vkGetSwapchainStatusKHR");			vt.Load(280, "vkGetPhysicalDeviceExternalFencePropertiesKHR");			vt.Load(281, "vkImportFenceFdKHR");			vt.Load(282, "vkGetFenceFdKHR");			vt.Load(283, "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR");			vt.Load(284, "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR");			vt.Load(285, "vkAcquireProfilingLockKHR");			vt.Load(286, "vkReleaseProfilingLockKHR");			vt.Load(287, "vkGetPhysicalDeviceSurfaceCapabilities2KHR");			vt.Load(288, "vkGetPhysicalDeviceSurfaceFormats2KHR");			vt.Load(289, "vkGetPhysicalDeviceDisplayProperties2KHR");			vt.Load(290, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR");			vt.Load(291, "vkGetDisplayModeProperties2KHR");			vt.Load(292, "vkGetDisplayPlaneCapabilities2KHR");			vt.Load(293, "vkGetImageMemoryRequirements2KHR");			vt.Load(294, "vkGetBufferMemoryRequirements2KHR");			vt.Load(295, "vkGetImageSparseMemoryRequirements2KHR");			vt.Load(296, "vkCreateSamplerYcbcrConversionKHR");			vt.Load(297, "vkDestroySamplerYcbcrConversionKHR");			vt.Load(298, "vkBindBufferMemory2KHR");			vt.Load(299, "vkBindImageMemory2KHR");			vt.Load(300, "vkGetDescriptorSetLayoutSupportKHR");			vt.Load(301, "vkCmdDrawIndirectCountKHR");			vt.Load(302, "vkCmdDrawIndexedIndirectCountKHR");			vt.Load(303, "vkGetSemaphoreCounterValueKHR");			vt.Load(304, "vkWaitSemaphoresKHR");			vt.Load(305, "vkSignalSemaphoreKHR");			vt.Load(306, "vkGetPhysicalDeviceFragmentShadingRatesKHR");			vt.Load(307, "vkCmdSetFragmentShadingRateKHR");			vt.Load(308, "vkWaitForPresentKHR");			vt.Load(309, "vkGetBufferDeviceAddressKHR");			vt.Load(310, "vkGetBufferOpaqueCaptureAddressKHR");			vt.Load(311, "vkGetDeviceMemoryOpaqueCaptureAddressKHR");			vt.Load(312, "vkCreateDeferredOperationKHR");			vt.Load(313, "vkDestroyDeferredOperationKHR");			vt.Load(314, "vkGetDeferredOperationMaxConcurrencyKHR");			vt.Load(315, "vkGetDeferredOperationResultKHR");			vt.Load(316, "vkDeferredOperationJoinKHR");			vt.Load(317, "vkGetPipelineExecutablePropertiesKHR");			vt.Load(318, "vkGetPipelineExecutableStatisticsKHR");			vt.Load(319, "vkGetPipelineExecutableInternalRepresentationsKHR");			vt.Load(320, "vkMapMemory2KHR");			vt.Load(321, "vkUnmapMemory2KHR");			vt.Load(322, "vkCmdSetEvent2KHR");			vt.Load(323, "vkCmdResetEvent2KHR");			vt.Load(324, "vkCmdWaitEvents2KHR");			vt.Load(325, "vkCmdPipelineBarrier2KHR");			vt.Load(326, "vkCmdWriteTimestamp2KHR");			vt.Load(327, "vkQueueSubmit2KHR");			vt.Load(328, "vkCmdWriteBufferMarker2AMD");			vt.Load(329, "vkGetQueueCheckpointData2NV");			vt.Load(330, "vkCmdCopyBuffer2KHR");			vt.Load(331, "vkCmdCopyImage2KHR");			vt.Load(332, "vkCmdCopyBufferToImage2KHR");			vt.Load(333, "vkCmdCopyImageToBuffer2KHR");			vt.Load(334, "vkCmdBlitImage2KHR");			vt.Load(335, "vkCmdResolveImage2KHR");			vt.Load(336, "vkCmdTraceRaysIndirect2KHR");			vt.Load(337, "vkGetDeviceBufferMemoryRequirementsKHR");			vt.Load(338, "vkGetDeviceImageMemoryRequirementsKHR");			vt.Load(339, "vkGetDeviceImageSparseMemoryRequirementsKHR");			vt.Load(340, "vkCreateDebugReportCallbackEXT");			vt.Load(341, "vkDestroyDebugReportCallbackEXT");			vt.Load(342, "vkDebugReportMessageEXT");			vt.Load(343, "vkDebugMarkerSetObjectTagEXT");			vt.Load(344, "vkDebugMarkerSetObjectNameEXT");			vt.Load(345, "vkCmdDebugMarkerBeginEXT");			vt.Load(346, "vkCmdDebugMarkerEndEXT");			vt.Load(347, "vkCmdDebugMarkerInsertEXT");			vt.Load(348, "vkCmdBindTransformFeedbackBuffersEXT");			vt.Load(349, "vkCmdBeginTransformFeedbackEXT");			vt.Load(350, "vkCmdEndTransformFeedbackEXT");			vt.Load(351, "vkCmdBeginQueryIndexedEXT");			vt.Load(352, "vkCmdEndQueryIndexedEXT");			vt.Load(353, "vkCmdDrawIndirectByteCountEXT");			vt.Load(354, "vkCreateCuModuleNVX");			vt.Load(355, "vkCreateCuFunctionNVX");			vt.Load(356, "vkDestroyCuModuleNVX");			vt.Load(357, "vkDestroyCuFunctionNVX");			vt.Load(358, "vkCmdCuLaunchKernelNVX");			vt.Load(359, "vkGetImageViewHandleNVX");			vt.Load(360, "vkGetImageViewAddressNVX");			vt.Load(361, "vkCmdDrawIndirectCountAMD");			vt.Load(362, "vkCmdDrawIndexedIndirectCountAMD");			vt.Load(363, "vkGetShaderInfoAMD");			vt.Load(364, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV");			vt.Load(365, "vkCmdBeginConditionalRenderingEXT");			vt.Load(366, "vkCmdEndConditionalRenderingEXT");			vt.Load(367, "vkCmdSetViewportWScalingNV");			vt.Load(368, "vkReleaseDisplayEXT");			vt.Load(369, "vkGetPhysicalDeviceSurfaceCapabilities2EXT");			vt.Load(370, "vkDisplayPowerControlEXT");			vt.Load(371, "vkRegisterDeviceEventEXT");			vt.Load(372, "vkRegisterDisplayEventEXT");			vt.Load(373, "vkGetSwapchainCounterEXT");			vt.Load(374, "vkGetRefreshCycleDurationGOOGLE");			vt.Load(375, "vkGetPastPresentationTimingGOOGLE");			vt.Load(376, "vkCmdSetDiscardRectangleEXT");			vt.Load(377, "vkCmdSetDiscardRectangleEnableEXT");			vt.Load(378, "vkCmdSetDiscardRectangleModeEXT");			vt.Load(379, "vkSetHdrMetadataEXT");			vt.Load(380, "vkSetDebugUtilsObjectNameEXT");			vt.Load(381, "vkSetDebugUtilsObjectTagEXT");			vt.Load(382, "vkQueueBeginDebugUtilsLabelEXT");			vt.Load(383, "vkQueueEndDebugUtilsLabelEXT");			vt.Load(384, "vkQueueInsertDebugUtilsLabelEXT");			vt.Load(385, "vkCmdBeginDebugUtilsLabelEXT");			vt.Load(386, "vkCmdEndDebugUtilsLabelEXT");			vt.Load(387, "vkCmdInsertDebugUtilsLabelEXT");			vt.Load(388, "vkCreateDebugUtilsMessengerEXT");			vt.Load(389, "vkDestroyDebugUtilsMessengerEXT");			vt.Load(390, "vkSubmitDebugUtilsMessageEXT");			vt.Load(391, "vkCmdSetSampleLocationsEXT");			vt.Load(392, "vkGetPhysicalDeviceMultisamplePropertiesEXT");			vt.Load(393, "vkGetImageDrmFormatModifierPropertiesEXT");			vt.Load(394, "vkCreateValidationCacheEXT");			vt.Load(395, "vkDestroyValidationCacheEXT");			vt.Load(396, "vkMergeValidationCachesEXT");			vt.Load(397, "vkGetValidationCacheDataEXT");			vt.Load(398, "vkCmdBindShadingRateImageNV");			vt.Load(399, "vkCmdSetViewportShadingRatePaletteNV");			vt.Load(400, "vkCmdSetCoarseSampleOrderNV");			vt.Load(401, "vkCreateAccelerationStructureNV");			vt.Load(402, "vkDestroyAccelerationStructureNV");			vt.Load(403, "vkGetAccelerationStructureMemoryRequirementsNV");			vt.Load(404, "vkBindAccelerationStructureMemoryNV");			vt.Load(405, "vkCmdBuildAccelerationStructureNV");			vt.Load(406, "vkCmdCopyAccelerationStructureNV");			vt.Load(407, "vkCmdTraceRaysNV");			vt.Load(408, "vkCreateRayTracingPipelinesNV");			vt.Load(409, "vkGetRayTracingShaderGroupHandlesKHR");			vt.Load(410, "vkGetRayTracingShaderGroupHandlesNV");			vt.Load(411, "vkGetAccelerationStructureHandleNV");			vt.Load(412, "vkCmdWriteAccelerationStructuresPropertiesNV");			vt.Load(413, "vkCompileDeferredNV");			vt.Load(414, "vkGetMemoryHostPointerPropertiesEXT");			vt.Load(415, "vkCmdWriteBufferMarkerAMD");			vt.Load(416, "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT");			vt.Load(417, "vkGetCalibratedTimestampsEXT");			vt.Load(418, "vkCmdDrawMeshTasksNV");			vt.Load(419, "vkCmdDrawMeshTasksIndirectNV");			vt.Load(420, "vkCmdDrawMeshTasksIndirectCountNV");			vt.Load(421, "vkCmdSetExclusiveScissorEnableNV");			vt.Load(422, "vkCmdSetExclusiveScissorNV");			vt.Load(423, "vkCmdSetCheckpointNV");			vt.Load(424, "vkGetQueueCheckpointDataNV");			vt.Load(425, "vkInitializePerformanceApiINTEL");			vt.Load(426, "vkUninitializePerformanceApiINTEL");			vt.Load(427, "vkCmdSetPerformanceMarkerINTEL");			vt.Load(428, "vkCmdSetPerformanceStreamMarkerINTEL");			vt.Load(429, "vkCmdSetPerformanceOverrideINTEL");			vt.Load(430, "vkAcquirePerformanceConfigurationINTEL");			vt.Load(431, "vkReleasePerformanceConfigurationINTEL");			vt.Load(432, "vkQueueSetPerformanceConfigurationINTEL");			vt.Load(433, "vkGetPerformanceParameterINTEL");			vt.Load(434, "vkSetLocalDimmingAMD");			vt.Load(435, "vkGetBufferDeviceAddressEXT");			vt.Load(436, "vkGetPhysicalDeviceToolPropertiesEXT");			vt.Load(437, "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV");			vt.Load(438, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV");			vt.Load(439, "vkCreateHeadlessSurfaceEXT");			vt.Load(440, "vkCmdSetLineStippleEXT");			vt.Load(441, "vkResetQueryPoolEXT");			vt.Load(442, "vkCmdSetCullModeEXT");			vt.Load(443, "vkCmdSetFrontFaceEXT");			vt.Load(444, "vkCmdSetPrimitiveTopologyEXT");			vt.Load(445, "vkCmdSetViewportWithCountEXT");			vt.Load(446, "vkCmdSetScissorWithCountEXT");			vt.Load(447, "vkCmdBindVertexBuffers2EXT");			vt.Load(448, "vkCmdSetDepthTestEnableEXT");			vt.Load(449, "vkCmdSetDepthWriteEnableEXT");			vt.Load(450, "vkCmdSetDepthCompareOpEXT");			vt.Load(451, "vkCmdSetDepthBoundsTestEnableEXT");			vt.Load(452, "vkCmdSetStencilTestEnableEXT");			vt.Load(453, "vkCmdSetStencilOpEXT");			vt.Load(454, "vkReleaseSwapchainImagesEXT");			vt.Load(455, "vkGetGeneratedCommandsMemoryRequirementsNV");			vt.Load(456, "vkCmdPreprocessGeneratedCommandsNV");			vt.Load(457, "vkCmdExecuteGeneratedCommandsNV");			vt.Load(458, "vkCmdBindPipelineShaderGroupNV");			vt.Load(459, "vkCreateIndirectCommandsLayoutNV");			vt.Load(460, "vkDestroyIndirectCommandsLayoutNV");			vt.Load(461, "vkAcquireDrmDisplayEXT");			vt.Load(462, "vkGetDrmDisplayEXT");			vt.Load(463, "vkCreatePrivateDataSlotEXT");			vt.Load(464, "vkDestroyPrivateDataSlotEXT");			vt.Load(465, "vkSetPrivateDataEXT");			vt.Load(466, "vkGetPrivateDataEXT");			vt.Load(467, "vkGetDescriptorSetLayoutSizeEXT");			vt.Load(468, "vkGetDescriptorSetLayoutBindingOffsetEXT");			vt.Load(469, "vkGetDescriptorEXT");			vt.Load(470, "vkCmdBindDescriptorBuffersEXT");			vt.Load(471, "vkCmdSetDescriptorBufferOffsetsEXT");			vt.Load(472, "vkCmdBindDescriptorBufferEmbeddedSamplersEXT");			vt.Load(473, "vkGetBufferOpaqueCaptureDescriptorDataEXT");			vt.Load(474, "vkGetImageOpaqueCaptureDescriptorDataEXT");			vt.Load(475, "vkGetImageViewOpaqueCaptureDescriptorDataEXT");			vt.Load(476, "vkGetSamplerOpaqueCaptureDescriptorDataEXT");			vt.Load(477, "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT");			vt.Load(478, "vkCmdSetFragmentShadingRateEnumNV");			vt.Load(479, "vkGetImageSubresourceLayout2EXT");			vt.Load(480, "vkGetDeviceFaultInfoEXT");			vt.Load(481, "vkCmdSetVertexInputEXT");			vt.Load(482, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI");			vt.Load(483, "vkCmdSubpassShadingHUAWEI");			vt.Load(484, "vkCmdBindInvocationMaskHUAWEI");			vt.Load(485, "vkGetMemoryRemoteAddressNV");			vt.Load(486, "vkGetPipelinePropertiesEXT");			vt.Load(487, "vkCmdSetPatchControlPointsEXT");			vt.Load(488, "vkCmdSetRasterizerDiscardEnableEXT");			vt.Load(489, "vkCmdSetDepthBiasEnableEXT");			vt.Load(490, "vkCmdSetLogicOpEXT");			vt.Load(491, "vkCmdSetPrimitiveRestartEnableEXT");			vt.Load(492, "vkCmdSetColorWriteEnableEXT");			vt.Load(493, "vkCmdDrawMultiEXT");			vt.Load(494, "vkCmdDrawMultiIndexedEXT");			vt.Load(495, "vkCreateMicromapEXT");			vt.Load(496, "vkDestroyMicromapEXT");			vt.Load(497, "vkCmdBuildMicromapsEXT");			vt.Load(498, "vkBuildMicromapsEXT");			vt.Load(499, "vkCopyMicromapEXT");			vt.Load(500, "vkCopyMicromapToMemoryEXT");			vt.Load(501, "vkCopyMemoryToMicromapEXT");			vt.Load(502, "vkWriteMicromapsPropertiesEXT");			vt.Load(503, "vkCmdCopyMicromapEXT");			vt.Load(504, "vkCmdCopyMicromapToMemoryEXT");			vt.Load(505, "vkCmdCopyMemoryToMicromapEXT");			vt.Load(506, "vkCmdWriteMicromapsPropertiesEXT");			vt.Load(507, "vkGetDeviceMicromapCompatibilityEXT");			vt.Load(508, "vkGetMicromapBuildSizesEXT");			vt.Load(509, "vkCmdDrawClusterHUAWEI");			vt.Load(510, "vkCmdDrawClusterIndirectHUAWEI");			vt.Load(511, "vkSetDeviceMemoryPriorityEXT");			vt.Load(512, "vkGetDescriptorSetLayoutHostMappingInfoVALVE");			vt.Load(513, "vkGetDescriptorSetHostMappingVALVE");			vt.Load(514, "vkCmdCopyMemoryIndirectNV");			vt.Load(515, "vkCmdCopyMemoryToImageIndirectNV");			vt.Load(516, "vkCmdDecompressMemoryNV");			vt.Load(517, "vkCmdDecompressMemoryIndirectCountNV");			vt.Load(518, "vkCmdSetTessellationDomainOriginEXT");			vt.Load(519, "vkCmdSetDepthClampEnableEXT");			vt.Load(520, "vkCmdSetPolygonModeEXT");			vt.Load(521, "vkCmdSetRasterizationSamplesEXT");			vt.Load(522, "vkCmdSetSampleMaskEXT");			vt.Load(523, "vkCmdSetAlphaToCoverageEnableEXT");			vt.Load(524, "vkCmdSetAlphaToOneEnableEXT");			vt.Load(525, "vkCmdSetLogicOpEnableEXT");			vt.Load(526, "vkCmdSetColorBlendEnableEXT");			vt.Load(527, "vkCmdSetColorBlendEquationEXT");			vt.Load(528, "vkCmdSetColorWriteMaskEXT");			vt.Load(529, "vkCmdSetRasterizationStreamEXT");			vt.Load(530, "vkCmdSetConservativeRasterizationModeEXT");			vt.Load(531, "vkCmdSetExtraPrimitiveOverestimationSizeEXT");			vt.Load(532, "vkCmdSetDepthClipEnableEXT");			vt.Load(533, "vkCmdSetSampleLocationsEnableEXT");			vt.Load(534, "vkCmdSetColorBlendAdvancedEXT");			vt.Load(535, "vkCmdSetProvokingVertexModeEXT");			vt.Load(536, "vkCmdSetLineRasterizationModeEXT");			vt.Load(537, "vkCmdSetLineStippleEnableEXT");			vt.Load(538, "vkCmdSetDepthClipNegativeOneToOneEXT");			vt.Load(539, "vkCmdSetViewportWScalingEnableNV");			vt.Load(540, "vkCmdSetViewportSwizzleNV");			vt.Load(541, "vkCmdSetCoverageToColorEnableNV");			vt.Load(542, "vkCmdSetCoverageToColorLocationNV");			vt.Load(543, "vkCmdSetCoverageModulationModeNV");			vt.Load(544, "vkCmdSetCoverageModulationTableEnableNV");			vt.Load(545, "vkCmdSetCoverageModulationTableNV");			vt.Load(546, "vkCmdSetShadingRateImageEnableNV");			vt.Load(547, "vkCmdSetRepresentativeFragmentTestEnableNV");			vt.Load(548, "vkCmdSetCoverageReductionModeNV");			vt.Load(549, "vkGetShaderModuleIdentifierEXT");			vt.Load(550, "vkGetShaderModuleCreateInfoIdentifierEXT");			vt.Load(551, "vkGetPhysicalDeviceOpticalFlowImageFormatsNV");			vt.Load(552, "vkCreateOpticalFlowSessionNV");			vt.Load(553, "vkDestroyOpticalFlowSessionNV");			vt.Load(554, "vkBindOpticalFlowSessionImageNV");			vt.Load(555, "vkCmdOpticalFlowExecuteNV");			vt.Load(556, "vkCreateShadersEXT");			vt.Load(557, "vkDestroyShaderEXT");			vt.Load(558, "vkGetShaderBinaryDataEXT");			vt.Load(559, "vkCmdBindShadersEXT");			vt.Load(560, "vkGetFramebufferTilePropertiesQCOM");			vt.Load(561, "vkGetDynamicRenderingTilePropertiesQCOM");			vt.Load(562, "vkCmdSetAttachmentFeedbackLoopEnableEXT");			vt.Load(563, "vkCreateAccelerationStructureKHR");			vt.Load(564, "vkDestroyAccelerationStructureKHR");			vt.Load(565, "vkCmdBuildAccelerationStructuresKHR");			vt.Load(566, "vkCmdBuildAccelerationStructuresIndirectKHR");			vt.Load(567, "vkBuildAccelerationStructuresKHR");			vt.Load(568, "vkCopyAccelerationStructureKHR");			vt.Load(569, "vkCopyAccelerationStructureToMemoryKHR");			vt.Load(570, "vkCopyMemoryToAccelerationStructureKHR");			vt.Load(571, "vkWriteAccelerationStructuresPropertiesKHR");			vt.Load(572, "vkCmdCopyAccelerationStructureKHR");			vt.Load(573, "vkCmdCopyAccelerationStructureToMemoryKHR");			vt.Load(574, "vkCmdCopyMemoryToAccelerationStructureKHR");			vt.Load(575, "vkGetAccelerationStructureDeviceAddressKHR");			vt.Load(576, "vkCmdWriteAccelerationStructuresPropertiesKHR");			vt.Load(577, "vkGetDeviceAccelerationStructureCompatibilityKHR");			vt.Load(578, "vkGetAccelerationStructureBuildSizesKHR");			vt.Load(579, "vkCmdTraceRaysKHR");			vt.Load(580, "vkCreateRayTracingPipelinesKHR");			vt.Load(581, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR");			vt.Load(582, "vkCmdTraceRaysIndirectKHR");			vt.Load(583, "vkGetRayTracingShaderGroupStackSizeKHR");			vt.Load(584, "vkCmdSetRayTracingPipelineStackSizeKHR");			vt.Load(585, "vkCmdDrawMeshTasksEXT");			vt.Load(586, "vkCmdDrawMeshTasksIndirectEXT");			vt.Load(587, "vkCmdDrawMeshTasksIndirectCountEXT");		}

		public static void FreeApi()
		{
			vt.Free();
		}
	}
}
