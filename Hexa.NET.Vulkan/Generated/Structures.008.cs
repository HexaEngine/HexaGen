// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.Vulkan
{

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderCoreProperties2AMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderCoreProperties2AMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderCoreFeatures")]
		[NativeName(NativeNameType.Type, "VkShaderCorePropertiesFlagsAMD")]
		public uint ShaderCoreFeatures;
		[NativeName(NativeNameType.Field, "activeComputeUnitCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ActiveComputeUnitCount;

		public unsafe VkPhysicalDeviceShaderCoreProperties2AMD(VkStructureType sType = default, void* pNext = default, uint shaderCoreFeatures = default, uint activeComputeUnitCount = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderCoreFeatures = shaderCoreFeatures;
			ActiveComputeUnitCount = activeComputeUnitCount;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCoherentMemoryFeaturesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCoherentMemoryFeaturesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceCoherentMemory")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceCoherentMemory;

		public unsafe VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkStructureType sType = default, void* pNext = default, uint deviceCoherentMemory = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceCoherentMemory = deviceCoherentMemory;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderImageInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageInt64Atomics;
		[NativeName(NativeNameType.Field, "sparseImageInt64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageInt64Atomics;

		public unsafe VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint shaderImageInt64Atomics = default, uint sparseImageInt64Atomics = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderImageInt64Atomics = shaderImageInt64Atomics;
			SparseImageInt64Atomics = sparseImageInt64Atomics;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMemoryBudgetPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMemoryBudgetPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "heapBudget")]
		[NativeName(NativeNameType.Type, "VkDeviceSize[16]")]
		public ulong HeapBudget_0;
		public ulong HeapBudget_1;
		public ulong HeapBudget_2;
		public ulong HeapBudget_3;
		public ulong HeapBudget_4;
		public ulong HeapBudget_5;
		public ulong HeapBudget_6;
		public ulong HeapBudget_7;
		public ulong HeapBudget_8;
		public ulong HeapBudget_9;
		public ulong HeapBudget_10;
		public ulong HeapBudget_11;
		public ulong HeapBudget_12;
		public ulong HeapBudget_13;
		public ulong HeapBudget_14;
		public ulong HeapBudget_15;
		[NativeName(NativeNameType.Field, "heapUsage")]
		[NativeName(NativeNameType.Type, "VkDeviceSize[16]")]
		public ulong HeapUsage_0;
		public ulong HeapUsage_1;
		public ulong HeapUsage_2;
		public ulong HeapUsage_3;
		public ulong HeapUsage_4;
		public ulong HeapUsage_5;
		public ulong HeapUsage_6;
		public ulong HeapUsage_7;
		public ulong HeapUsage_8;
		public ulong HeapUsage_9;
		public ulong HeapUsage_10;
		public ulong HeapUsage_11;
		public ulong HeapUsage_12;
		public ulong HeapUsage_13;
		public ulong HeapUsage_14;
		public ulong HeapUsage_15;

		public unsafe VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong* heapBudget = default, ulong* heapUsage = default)
		{
			SType = sType;
			PNext = pNext;
			if (heapBudget != default)
			{
				HeapBudget_0 = heapBudget[0];
				HeapBudget_1 = heapBudget[1];
				HeapBudget_2 = heapBudget[2];
				HeapBudget_3 = heapBudget[3];
				HeapBudget_4 = heapBudget[4];
				HeapBudget_5 = heapBudget[5];
				HeapBudget_6 = heapBudget[6];
				HeapBudget_7 = heapBudget[7];
				HeapBudget_8 = heapBudget[8];
				HeapBudget_9 = heapBudget[9];
				HeapBudget_10 = heapBudget[10];
				HeapBudget_11 = heapBudget[11];
				HeapBudget_12 = heapBudget[12];
				HeapBudget_13 = heapBudget[13];
				HeapBudget_14 = heapBudget[14];
				HeapBudget_15 = heapBudget[15];
			}
			if (heapUsage != default)
			{
				HeapUsage_0 = heapUsage[0];
				HeapUsage_1 = heapUsage[1];
				HeapUsage_2 = heapUsage[2];
				HeapUsage_3 = heapUsage[3];
				HeapUsage_4 = heapUsage[4];
				HeapUsage_5 = heapUsage[5];
				HeapUsage_6 = heapUsage[6];
				HeapUsage_7 = heapUsage[7];
				HeapUsage_8 = heapUsage[8];
				HeapUsage_9 = heapUsage[9];
				HeapUsage_10 = heapUsage[10];
				HeapUsage_11 = heapUsage[11];
				HeapUsage_12 = heapUsage[12];
				HeapUsage_13 = heapUsage[13];
				HeapUsage_14 = heapUsage[14];
				HeapUsage_15 = heapUsage[15];
			}
		}

		public unsafe VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkStructureType sType = default, void* pNext = default, Span<ulong> heapBudget = default, Span<ulong> heapUsage = default)
		{
			SType = sType;
			PNext = pNext;
			if (heapBudget != default)
			{
				HeapBudget_0 = heapBudget[0];
				HeapBudget_1 = heapBudget[1];
				HeapBudget_2 = heapBudget[2];
				HeapBudget_3 = heapBudget[3];
				HeapBudget_4 = heapBudget[4];
				HeapBudget_5 = heapBudget[5];
				HeapBudget_6 = heapBudget[6];
				HeapBudget_7 = heapBudget[7];
				HeapBudget_8 = heapBudget[8];
				HeapBudget_9 = heapBudget[9];
				HeapBudget_10 = heapBudget[10];
				HeapBudget_11 = heapBudget[11];
				HeapBudget_12 = heapBudget[12];
				HeapBudget_13 = heapBudget[13];
				HeapBudget_14 = heapBudget[14];
				HeapBudget_15 = heapBudget[15];
			}
			if (heapUsage != default)
			{
				HeapUsage_0 = heapUsage[0];
				HeapUsage_1 = heapUsage[1];
				HeapUsage_2 = heapUsage[2];
				HeapUsage_3 = heapUsage[3];
				HeapUsage_4 = heapUsage[4];
				HeapUsage_5 = heapUsage[5];
				HeapUsage_6 = heapUsage[6];
				HeapUsage_7 = heapUsage[7];
				HeapUsage_8 = heapUsage[8];
				HeapUsage_9 = heapUsage[9];
				HeapUsage_10 = heapUsage[10];
				HeapUsage_11 = heapUsage[11];
				HeapUsage_12 = heapUsage[12];
				HeapUsage_13 = heapUsage[13];
				HeapUsage_14 = heapUsage[14];
				HeapUsage_15 = heapUsage[15];
			}
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMemoryPriorityFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMemoryPriorityFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "memoryPriority")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MemoryPriority;

		public unsafe VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint memoryPriority = default)
		{
			SType = sType;
			PNext = pNext;
			MemoryPriority = memoryPriority;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMemoryPriorityAllocateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryPriorityAllocateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "priority")]
		[NativeName(NativeNameType.Type, "float")]
		public float Priority;

		public unsafe VkMemoryPriorityAllocateInfoEXT(VkStructureType sType = default, void* pNext = default, float priority = default)
		{
			SType = sType;
			PNext = pNext;
			Priority = priority;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "dedicatedAllocationImageAliasing")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DedicatedAllocationImageAliasing;

		public unsafe VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkStructureType sType = default, void* pNext = default, uint dedicatedAllocationImageAliasing = default)
		{
			SType = sType;
			PNext = pNext;
			DedicatedAllocationImageAliasing = dedicatedAllocationImageAliasing;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceBufferDeviceAddressFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "bufferDeviceAddress")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddress;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressCaptureReplay")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressCaptureReplay;
		[NativeName(NativeNameType.Field, "bufferDeviceAddressMultiDevice")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferDeviceAddressMultiDevice;

		public unsafe VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint bufferDeviceAddress = default, uint bufferDeviceAddressCaptureReplay = default, uint bufferDeviceAddressMultiDevice = default)
		{
			SType = sType;
			PNext = pNext;
			BufferDeviceAddress = bufferDeviceAddress;
			BufferDeviceAddressCaptureReplay = bufferDeviceAddressCaptureReplay;
			BufferDeviceAddressMultiDevice = bufferDeviceAddressMultiDevice;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferDeviceAddressCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferDeviceAddressCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong DeviceAddress;

		public unsafe VkBufferDeviceAddressCreateInfoEXT(VkStructureType sType = default, void* pNext = default, ulong deviceAddress = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceAddress = deviceAddress;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkValidationFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkValidationFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "enabledValidationFeatureCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint EnabledValidationFeatureCount;
		[NativeName(NativeNameType.Field, "pEnabledValidationFeatures")]
		[NativeName(NativeNameType.Type, "const VkValidationFeatureEnableEXT*")]
		public unsafe VkValidationFeatureEnableEXT* PEnabledValidationFeatures;
		[NativeName(NativeNameType.Field, "disabledValidationFeatureCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DisabledValidationFeatureCount;
		[NativeName(NativeNameType.Field, "pDisabledValidationFeatures")]
		[NativeName(NativeNameType.Type, "const VkValidationFeatureDisableEXT*")]
		public unsafe VkValidationFeatureDisableEXT* PDisabledValidationFeatures;

		public unsafe VkValidationFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint enabledValidationFeatureCount = default, VkValidationFeatureEnableEXT* pEnabledValidationFeatures = default, uint disabledValidationFeatureCount = default, VkValidationFeatureDisableEXT* pDisabledValidationFeatures = default)
		{
			SType = sType;
			PNext = pNext;
			EnabledValidationFeatureCount = enabledValidationFeatureCount;
			PEnabledValidationFeatures = pEnabledValidationFeatures;
			DisabledValidationFeatureCount = disabledValidationFeatureCount;
			PDisabledValidationFeatures = pDisabledValidationFeatures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCooperativeMatrixPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCooperativeMatrixPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "MSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MSize;
		[NativeName(NativeNameType.Field, "NSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NSize;
		[NativeName(NativeNameType.Field, "KSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint KSize;
		[NativeName(NativeNameType.Field, "AType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV AType;
		[NativeName(NativeNameType.Field, "BType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV BType;
		[NativeName(NativeNameType.Field, "CType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV CType;
		[NativeName(NativeNameType.Field, "DType")]
		[NativeName(NativeNameType.Type, "VkComponentTypeNV")]
		public VkComponentTypeNV DType;
		[NativeName(NativeNameType.Field, "scope")]
		[NativeName(NativeNameType.Type, "VkScopeNV")]
		public VkScopeNV Scope;

		public unsafe VkCooperativeMatrixPropertiesNV(VkStructureType sType = default, void* pNext = default, uint mSize = default, uint nSize = default, uint kSize = default, VkComponentTypeNV aType = default, VkComponentTypeNV bType = default, VkComponentTypeNV cType = default, VkComponentTypeNV dType = default, VkScopeNV scope = default)
		{
			SType = sType;
			PNext = pNext;
			MSize = mSize;
			NSize = nSize;
			KSize = kSize;
			AType = aType;
			BType = bType;
			CType = cType;
			DType = dType;
			Scope = scope;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCooperativeMatrixFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCooperativeMatrixFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "cooperativeMatrix")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CooperativeMatrix;
		[NativeName(NativeNameType.Field, "cooperativeMatrixRobustBufferAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CooperativeMatrixRobustBufferAccess;

		public unsafe VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkStructureType sType = default, void* pNext = default, uint cooperativeMatrix = default, uint cooperativeMatrixRobustBufferAccess = default)
		{
			SType = sType;
			PNext = pNext;
			CooperativeMatrix = cooperativeMatrix;
			CooperativeMatrixRobustBufferAccess = cooperativeMatrixRobustBufferAccess;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCooperativeMatrixPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCooperativeMatrixPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "cooperativeMatrixSupportedStages")]
		[NativeName(NativeNameType.Type, "VkShaderStageFlags")]
		public uint CooperativeMatrixSupportedStages;

		public unsafe VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkStructureType sType = default, void* pNext = default, uint cooperativeMatrixSupportedStages = default)
		{
			SType = sType;
			PNext = pNext;
			CooperativeMatrixSupportedStages = cooperativeMatrixSupportedStages;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCoverageReductionModeFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCoverageReductionModeFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "coverageReductionMode")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CoverageReductionMode;

		public unsafe VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkStructureType sType = default, void* pNext = default, uint coverageReductionMode = default)
		{
			SType = sType;
			PNext = pNext;
			CoverageReductionMode = coverageReductionMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCoverageReductionStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCoverageReductionStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCoverageReductionStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "coverageReductionMode")]
		[NativeName(NativeNameType.Type, "VkCoverageReductionModeNV")]
		public VkCoverageReductionModeNV CoverageReductionMode;

		public unsafe VkPipelineCoverageReductionStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, VkCoverageReductionModeNV coverageReductionMode = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			CoverageReductionMode = coverageReductionMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkFramebufferMixedSamplesCombinationNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkFramebufferMixedSamplesCombinationNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "coverageReductionMode")]
		[NativeName(NativeNameType.Type, "VkCoverageReductionModeNV")]
		public VkCoverageReductionModeNV CoverageReductionMode;
		[NativeName(NativeNameType.Field, "rasterizationSamples")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlagBits")]
		public VkSampleCountFlagBits RasterizationSamples;
		[NativeName(NativeNameType.Field, "depthStencilSamples")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlags")]
		public uint DepthStencilSamples;
		[NativeName(NativeNameType.Field, "colorSamples")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlags")]
		public uint ColorSamples;

		public unsafe VkFramebufferMixedSamplesCombinationNV(VkStructureType sType = default, void* pNext = default, VkCoverageReductionModeNV coverageReductionMode = default, VkSampleCountFlagBits rasterizationSamples = default, uint depthStencilSamples = default, uint colorSamples = default)
		{
			SType = sType;
			PNext = pNext;
			CoverageReductionMode = coverageReductionMode;
			RasterizationSamples = rasterizationSamples;
			DepthStencilSamples = depthStencilSamples;
			ColorSamples = colorSamples;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentShaderSampleInterlock")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShaderSampleInterlock;
		[NativeName(NativeNameType.Field, "fragmentShaderPixelInterlock")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShaderPixelInterlock;
		[NativeName(NativeNameType.Field, "fragmentShaderShadingRateInterlock")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShaderShadingRateInterlock;

		public unsafe VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint fragmentShaderSampleInterlock = default, uint fragmentShaderPixelInterlock = default, uint fragmentShaderShadingRateInterlock = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentShaderSampleInterlock = fragmentShaderSampleInterlock;
			FragmentShaderPixelInterlock = fragmentShaderPixelInterlock;
			FragmentShaderShadingRateInterlock = fragmentShaderShadingRateInterlock;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceYcbcrImageArraysFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "ycbcrImageArrays")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint YcbcrImageArrays;

		public unsafe VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint ycbcrImageArrays = default)
		{
			SType = sType;
			PNext = pNext;
			YcbcrImageArrays = ycbcrImageArrays;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceProvokingVertexFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceProvokingVertexFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "provokingVertexLast")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ProvokingVertexLast;
		[NativeName(NativeNameType.Field, "transformFeedbackPreservesProvokingVertex")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackPreservesProvokingVertex;

		public unsafe VkPhysicalDeviceProvokingVertexFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint provokingVertexLast = default, uint transformFeedbackPreservesProvokingVertex = default)
		{
			SType = sType;
			PNext = pNext;
			ProvokingVertexLast = provokingVertexLast;
			TransformFeedbackPreservesProvokingVertex = transformFeedbackPreservesProvokingVertex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceProvokingVertexPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceProvokingVertexPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "provokingVertexModePerPipeline")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ProvokingVertexModePerPipeline;
		[NativeName(NativeNameType.Field, "transformFeedbackPreservesTriangleFanProvokingVertex")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackPreservesTriangleFanProvokingVertex;

		public unsafe VkPhysicalDeviceProvokingVertexPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint provokingVertexModePerPipeline = default, uint transformFeedbackPreservesTriangleFanProvokingVertex = default)
		{
			SType = sType;
			PNext = pNext;
			ProvokingVertexModePerPipeline = provokingVertexModePerPipeline;
			TransformFeedbackPreservesTriangleFanProvokingVertex = transformFeedbackPreservesTriangleFanProvokingVertex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationProvokingVertexStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationProvokingVertexStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "provokingVertexMode")]
		[NativeName(NativeNameType.Type, "VkProvokingVertexModeEXT")]
		public VkProvokingVertexModeEXT ProvokingVertexMode;

		public unsafe VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkProvokingVertexModeEXT provokingVertexMode = default)
		{
			SType = sType;
			PNext = pNext;
			ProvokingVertexMode = provokingVertexMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkHeadlessSurfaceCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkHeadlessSurfaceCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkHeadlessSurfaceCreateFlagsEXT")]
		public uint Flags;

		public unsafe VkHeadlessSurfaceCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceLineRasterizationFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceLineRasterizationFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rectangularLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RectangularLines;
		[NativeName(NativeNameType.Field, "bresenhamLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BresenhamLines;
		[NativeName(NativeNameType.Field, "smoothLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SmoothLines;
		[NativeName(NativeNameType.Field, "stippledRectangularLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledRectangularLines;
		[NativeName(NativeNameType.Field, "stippledBresenhamLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledBresenhamLines;
		[NativeName(NativeNameType.Field, "stippledSmoothLines")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledSmoothLines;

		public unsafe VkPhysicalDeviceLineRasterizationFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint rectangularLines = default, uint bresenhamLines = default, uint smoothLines = default, uint stippledRectangularLines = default, uint stippledBresenhamLines = default, uint stippledSmoothLines = default)
		{
			SType = sType;
			PNext = pNext;
			RectangularLines = rectangularLines;
			BresenhamLines = bresenhamLines;
			SmoothLines = smoothLines;
			StippledRectangularLines = stippledRectangularLines;
			StippledBresenhamLines = stippledBresenhamLines;
			StippledSmoothLines = stippledSmoothLines;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceLineRasterizationPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceLineRasterizationPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "lineSubPixelPrecisionBits")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint LineSubPixelPrecisionBits;

		public unsafe VkPhysicalDeviceLineRasterizationPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint lineSubPixelPrecisionBits = default)
		{
			SType = sType;
			PNext = pNext;
			LineSubPixelPrecisionBits = lineSubPixelPrecisionBits;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationLineStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationLineStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "lineRasterizationMode")]
		[NativeName(NativeNameType.Type, "VkLineRasterizationModeEXT")]
		public VkLineRasterizationModeEXT LineRasterizationMode;
		[NativeName(NativeNameType.Field, "stippledLineEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint StippledLineEnable;
		[NativeName(NativeNameType.Field, "lineStippleFactor")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint LineStippleFactor;
		[NativeName(NativeNameType.Field, "lineStipplePattern")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort LineStipplePattern;

		public unsafe VkPipelineRasterizationLineStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkLineRasterizationModeEXT lineRasterizationMode = default, uint stippledLineEnable = default, uint lineStippleFactor = default, ushort lineStipplePattern = default)
		{
			SType = sType;
			PNext = pNext;
			LineRasterizationMode = lineRasterizationMode;
			StippledLineEnable = stippledLineEnable;
			LineStippleFactor = lineStippleFactor;
			LineStipplePattern = lineStipplePattern;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderAtomicFloatFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderBufferFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat32Atomics;
		[NativeName(NativeNameType.Field, "shaderBufferFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat32AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderBufferFloat64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat64Atomics;
		[NativeName(NativeNameType.Field, "shaderBufferFloat64AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat64AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderSharedFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat32Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat32AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderSharedFloat64Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat64Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedFloat64AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat64AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderImageFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageFloat32Atomics;
		[NativeName(NativeNameType.Field, "shaderImageFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageFloat32AtomicAdd;
		[NativeName(NativeNameType.Field, "sparseImageFloat32Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageFloat32Atomics;
		[NativeName(NativeNameType.Field, "sparseImageFloat32AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageFloat32AtomicAdd;

		public unsafe VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint shaderBufferFloat32Atomics = default, uint shaderBufferFloat32AtomicAdd = default, uint shaderBufferFloat64Atomics = default, uint shaderBufferFloat64AtomicAdd = default, uint shaderSharedFloat32Atomics = default, uint shaderSharedFloat32AtomicAdd = default, uint shaderSharedFloat64Atomics = default, uint shaderSharedFloat64AtomicAdd = default, uint shaderImageFloat32Atomics = default, uint shaderImageFloat32AtomicAdd = default, uint sparseImageFloat32Atomics = default, uint sparseImageFloat32AtomicAdd = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderBufferFloat32Atomics = shaderBufferFloat32Atomics;
			ShaderBufferFloat32AtomicAdd = shaderBufferFloat32AtomicAdd;
			ShaderBufferFloat64Atomics = shaderBufferFloat64Atomics;
			ShaderBufferFloat64AtomicAdd = shaderBufferFloat64AtomicAdd;
			ShaderSharedFloat32Atomics = shaderSharedFloat32Atomics;
			ShaderSharedFloat32AtomicAdd = shaderSharedFloat32AtomicAdd;
			ShaderSharedFloat64Atomics = shaderSharedFloat64Atomics;
			ShaderSharedFloat64AtomicAdd = shaderSharedFloat64AtomicAdd;
			ShaderImageFloat32Atomics = shaderImageFloat32Atomics;
			ShaderImageFloat32AtomicAdd = shaderImageFloat32AtomicAdd;
			SparseImageFloat32Atomics = sparseImageFloat32Atomics;
			SparseImageFloat32AtomicAdd = sparseImageFloat32AtomicAdd;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceIndexTypeUint8FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceIndexTypeUint8FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "indexTypeUint8")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint IndexTypeUint8;

		public unsafe VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint indexTypeUint8 = default)
		{
			SType = sType;
			PNext = pNext;
			IndexTypeUint8 = indexTypeUint8;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceExtendedDynamicStateFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "extendedDynamicState")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ExtendedDynamicState;

		public unsafe VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint extendedDynamicState = default)
		{
			SType = sType;
			PNext = pNext;
			ExtendedDynamicState = extendedDynamicState;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderBufferFloat16Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat16Atomics;
		[NativeName(NativeNameType.Field, "shaderBufferFloat16AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat16AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderBufferFloat16AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat16AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderBufferFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat32AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderBufferFloat64AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderBufferFloat64AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderSharedFloat16Atomics")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat16Atomics;
		[NativeName(NativeNameType.Field, "shaderSharedFloat16AtomicAdd")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat16AtomicAdd;
		[NativeName(NativeNameType.Field, "shaderSharedFloat16AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat16AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderSharedFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat32AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderSharedFloat64AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSharedFloat64AtomicMinMax;
		[NativeName(NativeNameType.Field, "shaderImageFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderImageFloat32AtomicMinMax;
		[NativeName(NativeNameType.Field, "sparseImageFloat32AtomicMinMax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SparseImageFloat32AtomicMinMax;

		public unsafe VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint shaderBufferFloat16Atomics = default, uint shaderBufferFloat16AtomicAdd = default, uint shaderBufferFloat16AtomicMinMax = default, uint shaderBufferFloat32AtomicMinMax = default, uint shaderBufferFloat64AtomicMinMax = default, uint shaderSharedFloat16Atomics = default, uint shaderSharedFloat16AtomicAdd = default, uint shaderSharedFloat16AtomicMinMax = default, uint shaderSharedFloat32AtomicMinMax = default, uint shaderSharedFloat64AtomicMinMax = default, uint shaderImageFloat32AtomicMinMax = default, uint sparseImageFloat32AtomicMinMax = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderBufferFloat16Atomics = shaderBufferFloat16Atomics;
			ShaderBufferFloat16AtomicAdd = shaderBufferFloat16AtomicAdd;
			ShaderBufferFloat16AtomicMinMax = shaderBufferFloat16AtomicMinMax;
			ShaderBufferFloat32AtomicMinMax = shaderBufferFloat32AtomicMinMax;
			ShaderBufferFloat64AtomicMinMax = shaderBufferFloat64AtomicMinMax;
			ShaderSharedFloat16Atomics = shaderSharedFloat16Atomics;
			ShaderSharedFloat16AtomicAdd = shaderSharedFloat16AtomicAdd;
			ShaderSharedFloat16AtomicMinMax = shaderSharedFloat16AtomicMinMax;
			ShaderSharedFloat32AtomicMinMax = shaderSharedFloat32AtomicMinMax;
			ShaderSharedFloat64AtomicMinMax = shaderSharedFloat64AtomicMinMax;
			ShaderImageFloat32AtomicMinMax = shaderImageFloat32AtomicMinMax;
			SparseImageFloat32AtomicMinMax = sparseImageFloat32AtomicMinMax;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfacePresentModeEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfacePresentModeEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentMode")]
		[NativeName(NativeNameType.Type, "VkPresentModeKHR")]
		public VkPresentModeKHR PresentMode;

		public unsafe VkSurfacePresentModeEXT(VkStructureType sType = default, void* pNext = default, VkPresentModeKHR presentMode = default)
		{
			SType = sType;
			PNext = pNext;
			PresentMode = presentMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfacePresentScalingCapabilitiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfacePresentScalingCapabilitiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "supportedPresentScaling")]
		[NativeName(NativeNameType.Type, "VkPresentScalingFlagsEXT")]
		public uint SupportedPresentScaling;
		[NativeName(NativeNameType.Field, "supportedPresentGravityX")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint SupportedPresentGravityX;
		[NativeName(NativeNameType.Field, "supportedPresentGravityY")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint SupportedPresentGravityY;
		[NativeName(NativeNameType.Field, "minScaledImageExtent")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MinScaledImageExtent;
		[NativeName(NativeNameType.Field, "maxScaledImageExtent")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxScaledImageExtent;

		public unsafe VkSurfacePresentScalingCapabilitiesEXT(VkStructureType sType = default, void* pNext = default, uint supportedPresentScaling = default, uint supportedPresentGravityX = default, uint supportedPresentGravityY = default, VkExtent2D minScaledImageExtent = default, VkExtent2D maxScaledImageExtent = default)
		{
			SType = sType;
			PNext = pNext;
			SupportedPresentScaling = supportedPresentScaling;
			SupportedPresentGravityX = supportedPresentGravityX;
			SupportedPresentGravityY = supportedPresentGravityY;
			MinScaledImageExtent = minScaledImageExtent;
			MaxScaledImageExtent = maxScaledImageExtent;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfacePresentModeCompatibilityEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfacePresentModeCompatibilityEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentModeCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PresentModeCount;
		[NativeName(NativeNameType.Field, "pPresentModes")]
		[NativeName(NativeNameType.Type, "VkPresentModeKHR*")]
		public unsafe VkPresentModeKHR* PPresentModes;

		public unsafe VkSurfacePresentModeCompatibilityEXT(VkStructureType sType = default, void* pNext = default, uint presentModeCount = default, VkPresentModeKHR* pPresentModes = default)
		{
			SType = sType;
			PNext = pNext;
			PresentModeCount = presentModeCount;
			PPresentModes = pPresentModes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainMaintenance1")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SwapchainMaintenance1;

		public unsafe VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint swapchainMaintenance1 = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainMaintenance1 = swapchainMaintenance1;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentFenceInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentFenceInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SwapchainCount;
		[NativeName(NativeNameType.Field, "pFences")]
		[NativeName(NativeNameType.Type, "const VkFence*")]
		public unsafe VkFence* PFences;

		public unsafe VkSwapchainPresentFenceInfoEXT(VkStructureType sType = default, void* pNext = default, uint swapchainCount = default, VkFence* pFences = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainCount = swapchainCount;
			PFences = pFences;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentModesCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentModesCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentModeCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PresentModeCount;
		[NativeName(NativeNameType.Field, "pPresentModes")]
		[NativeName(NativeNameType.Type, "const VkPresentModeKHR*")]
		public unsafe VkPresentModeKHR* PPresentModes;

		public unsafe VkSwapchainPresentModesCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint presentModeCount = default, VkPresentModeKHR* pPresentModes = default)
		{
			SType = sType;
			PNext = pNext;
			PresentModeCount = presentModeCount;
			PPresentModes = pPresentModes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentModeInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentModeInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SwapchainCount;
		[NativeName(NativeNameType.Field, "pPresentModes")]
		[NativeName(NativeNameType.Type, "const VkPresentModeKHR*")]
		public unsafe VkPresentModeKHR* PPresentModes;

		public unsafe VkSwapchainPresentModeInfoEXT(VkStructureType sType = default, void* pNext = default, uint swapchainCount = default, VkPresentModeKHR* pPresentModes = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainCount = swapchainCount;
			PPresentModes = pPresentModes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentScalingCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentScalingCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "scalingBehavior")]
		[NativeName(NativeNameType.Type, "VkPresentScalingFlagsEXT")]
		public uint ScalingBehavior;
		[NativeName(NativeNameType.Field, "presentGravityX")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint PresentGravityX;
		[NativeName(NativeNameType.Field, "presentGravityY")]
		[NativeName(NativeNameType.Type, "VkPresentGravityFlagsEXT")]
		public uint PresentGravityY;

		public unsafe VkSwapchainPresentScalingCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint scalingBehavior = default, uint presentGravityX = default, uint presentGravityY = default)
		{
			SType = sType;
			PNext = pNext;
			ScalingBehavior = scalingBehavior;
			PresentGravityX = presentGravityX;
			PresentGravityY = presentGravityY;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkReleaseSwapchainImagesInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkReleaseSwapchainImagesInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchain")]
		[NativeName(NativeNameType.Type, "VkSwapchainKHR")]
		public VkSwapchainKHR Swapchain;
		[NativeName(NativeNameType.Field, "imageIndexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ImageIndexCount;
		[NativeName(NativeNameType.Field, "pImageIndices")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PImageIndices;

		public unsafe VkReleaseSwapchainImagesInfoEXT(VkStructureType sType = default, void* pNext = default, VkSwapchainKHR swapchain = default, uint imageIndexCount = default, uint* pImageIndices = default)
		{
			SType = sType;
			PNext = pNext;
			Swapchain = swapchain;
			ImageIndexCount = imageIndexCount;
			PImageIndices = pImageIndices;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxGraphicsShaderGroupCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxGraphicsShaderGroupCount;
		[NativeName(NativeNameType.Field, "maxIndirectSequenceCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectSequenceCount;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsTokenCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsTokenCount;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsStreamCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsStreamCount;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsTokenOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsTokenOffset;
		[NativeName(NativeNameType.Field, "maxIndirectCommandsStreamStride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxIndirectCommandsStreamStride;
		[NativeName(NativeNameType.Field, "minSequencesCountBufferOffsetAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinSequencesCountBufferOffsetAlignment;
		[NativeName(NativeNameType.Field, "minSequencesIndexBufferOffsetAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinSequencesIndexBufferOffsetAlignment;
		[NativeName(NativeNameType.Field, "minIndirectCommandsBufferOffsetAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinIndirectCommandsBufferOffsetAlignment;

		public unsafe VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkStructureType sType = default, void* pNext = default, uint maxGraphicsShaderGroupCount = default, uint maxIndirectSequenceCount = default, uint maxIndirectCommandsTokenCount = default, uint maxIndirectCommandsStreamCount = default, uint maxIndirectCommandsTokenOffset = default, uint maxIndirectCommandsStreamStride = default, uint minSequencesCountBufferOffsetAlignment = default, uint minSequencesIndexBufferOffsetAlignment = default, uint minIndirectCommandsBufferOffsetAlignment = default)
		{
			SType = sType;
			PNext = pNext;
			MaxGraphicsShaderGroupCount = maxGraphicsShaderGroupCount;
			MaxIndirectSequenceCount = maxIndirectSequenceCount;
			MaxIndirectCommandsTokenCount = maxIndirectCommandsTokenCount;
			MaxIndirectCommandsStreamCount = maxIndirectCommandsStreamCount;
			MaxIndirectCommandsTokenOffset = maxIndirectCommandsTokenOffset;
			MaxIndirectCommandsStreamStride = maxIndirectCommandsStreamStride;
			MinSequencesCountBufferOffsetAlignment = minSequencesCountBufferOffsetAlignment;
			MinSequencesIndexBufferOffsetAlignment = minSequencesIndexBufferOffsetAlignment;
			MinIndirectCommandsBufferOffsetAlignment = minIndirectCommandsBufferOffsetAlignment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceGeneratedCommands")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceGeneratedCommands;

		public unsafe VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkStructureType sType = default, void* pNext = default, uint deviceGeneratedCommands = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceGeneratedCommands = deviceGeneratedCommands;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGraphicsShaderGroupCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGraphicsShaderGroupCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stageCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StageCount;
		[NativeName(NativeNameType.Field, "pStages")]
		[NativeName(NativeNameType.Type, "const VkPipelineShaderStageCreateInfo*")]
		public unsafe VkPipelineShaderStageCreateInfo* PStages;
		[NativeName(NativeNameType.Field, "pVertexInputState")]
		[NativeName(NativeNameType.Type, "const VkPipelineVertexInputStateCreateInfo*")]
		public unsafe VkPipelineVertexInputStateCreateInfo* PVertexInputState;
		[NativeName(NativeNameType.Field, "pTessellationState")]
		[NativeName(NativeNameType.Type, "const VkPipelineTessellationStateCreateInfo*")]
		public unsafe VkPipelineTessellationStateCreateInfo* PTessellationState;

		public unsafe VkGraphicsShaderGroupCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint stageCount = default, VkPipelineShaderStageCreateInfo* pStages = default, VkPipelineVertexInputStateCreateInfo* pVertexInputState = default, VkPipelineTessellationStateCreateInfo* pTessellationState = default)
		{
			SType = sType;
			PNext = pNext;
			StageCount = stageCount;
			PStages = pStages;
			PVertexInputState = pVertexInputState;
			PTessellationState = pTessellationState;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGraphicsPipelineShaderGroupsCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGraphicsPipelineShaderGroupsCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "groupCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCount;
		[NativeName(NativeNameType.Field, "pGroups")]
		[NativeName(NativeNameType.Type, "const VkGraphicsShaderGroupCreateInfoNV*")]
		public unsafe VkGraphicsShaderGroupCreateInfoNV* PGroups;
		[NativeName(NativeNameType.Field, "pipelineCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PipelineCount;
		[NativeName(NativeNameType.Field, "pPipelines")]
		[NativeName(NativeNameType.Type, "const VkPipeline*")]
		public unsafe VkPipeline* PPipelines;

		public unsafe VkGraphicsPipelineShaderGroupsCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint groupCount = default, VkGraphicsShaderGroupCreateInfoNV* pGroups = default, uint pipelineCount = default, VkPipeline* pPipelines = default)
		{
			SType = sType;
			PNext = pNext;
			GroupCount = groupCount;
			PGroups = pGroups;
			PipelineCount = pipelineCount;
			PPipelines = pPipelines;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindShaderGroupIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindShaderGroupIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "groupIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupIndex;

		public unsafe VkBindShaderGroupIndirectCommandNV(uint groupIndex = default)
		{
			GroupIndex = groupIndex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindIndexBufferIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindIndexBufferIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "bufferAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong BufferAddress;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Size;
		[NativeName(NativeNameType.Field, "indexType")]
		[NativeName(NativeNameType.Type, "VkIndexType")]
		public VkIndexType IndexType;

		public unsafe VkBindIndexBufferIndirectCommandNV(ulong bufferAddress = default, uint size = default, VkIndexType indexType = default)
		{
			BufferAddress = bufferAddress;
			Size = size;
			IndexType = indexType;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindVertexBufferIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindVertexBufferIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "bufferAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong BufferAddress;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Size;
		[NativeName(NativeNameType.Field, "stride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Stride;

		public unsafe VkBindVertexBufferIndirectCommandNV(ulong bufferAddress = default, uint size = default, uint stride = default)
		{
			BufferAddress = bufferAddress;
			Size = size;
			Stride = stride;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSetStateFlagsIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSetStateFlagsIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Data;

		public unsafe VkSetStateFlagsIndirectCommandNV(uint data = default)
		{
			Data = data;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkIndirectCommandsStreamNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkIndirectCommandsStreamNV
	{
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;

		public unsafe VkIndirectCommandsStreamNV(VkBuffer buffer = default, ulong offset = default)
		{
			Buffer = buffer;
			Offset = offset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkIndirectCommandsLayoutTokenNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkIndirectCommandsLayoutTokenNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "tokenType")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsTokenTypeNV")]
		public VkIndirectCommandsTokenTypeNV TokenType;
		[NativeName(NativeNameType.Field, "stream")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Stream;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Offset;
		[NativeName(NativeNameType.Field, "vertexBindingUnit")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VertexBindingUnit;
		[NativeName(NativeNameType.Field, "vertexDynamicStride")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VertexDynamicStride;
		[NativeName(NativeNameType.Field, "pushconstantPipelineLayout")]
		[NativeName(NativeNameType.Type, "VkPipelineLayout")]
		public VkPipelineLayout PushconstantPipelineLayout;
		[NativeName(NativeNameType.Field, "pushconstantShaderStageFlags")]
		[NativeName(NativeNameType.Type, "VkShaderStageFlags")]
		public uint PushconstantShaderStageFlags;
		[NativeName(NativeNameType.Field, "pushconstantOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PushconstantOffset;
		[NativeName(NativeNameType.Field, "pushconstantSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PushconstantSize;
		[NativeName(NativeNameType.Field, "indirectStateFlags")]
		[NativeName(NativeNameType.Type, "VkIndirectStateFlagsNV")]
		public uint IndirectStateFlags;
		[NativeName(NativeNameType.Field, "indexTypeCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint IndexTypeCount;
		[NativeName(NativeNameType.Field, "pIndexTypes")]
		[NativeName(NativeNameType.Type, "const VkIndexType*")]
		public unsafe VkIndexType* PIndexTypes;
		[NativeName(NativeNameType.Field, "pIndexTypeValues")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PIndexTypeValues;

		public unsafe VkIndirectCommandsLayoutTokenNV(VkStructureType sType = default, void* pNext = default, VkIndirectCommandsTokenTypeNV tokenType = default, uint stream = default, uint offset = default, uint vertexBindingUnit = default, uint vertexDynamicStride = default, VkPipelineLayout pushconstantPipelineLayout = default, uint pushconstantShaderStageFlags = default, uint pushconstantOffset = default, uint pushconstantSize = default, uint indirectStateFlags = default, uint indexTypeCount = default, VkIndexType* pIndexTypes = default, uint* pIndexTypeValues = default)
		{
			SType = sType;
			PNext = pNext;
			TokenType = tokenType;
			Stream = stream;
			Offset = offset;
			VertexBindingUnit = vertexBindingUnit;
			VertexDynamicStride = vertexDynamicStride;
			PushconstantPipelineLayout = pushconstantPipelineLayout;
			PushconstantShaderStageFlags = pushconstantShaderStageFlags;
			PushconstantOffset = pushconstantOffset;
			PushconstantSize = pushconstantSize;
			IndirectStateFlags = indirectStateFlags;
			IndexTypeCount = indexTypeCount;
			PIndexTypes = pIndexTypes;
			PIndexTypeValues = pIndexTypeValues;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkIndirectCommandsLayoutCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkIndirectCommandsLayoutCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsLayoutUsageFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "pipelineBindPoint")]
		[NativeName(NativeNameType.Type, "VkPipelineBindPoint")]
		public VkPipelineBindPoint PipelineBindPoint;
		[NativeName(NativeNameType.Field, "tokenCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint TokenCount;
		[NativeName(NativeNameType.Field, "pTokens")]
		[NativeName(NativeNameType.Type, "const VkIndirectCommandsLayoutTokenNV*")]
		public unsafe VkIndirectCommandsLayoutTokenNV* PTokens;
		[NativeName(NativeNameType.Field, "streamCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StreamCount;
		[NativeName(NativeNameType.Field, "pStreamStrides")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PStreamStrides;

		public unsafe VkIndirectCommandsLayoutCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, VkPipelineBindPoint pipelineBindPoint = default, uint tokenCount = default, VkIndirectCommandsLayoutTokenNV* pTokens = default, uint streamCount = default, uint* pStreamStrides = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			PipelineBindPoint = pipelineBindPoint;
			TokenCount = tokenCount;
			PTokens = pTokens;
			StreamCount = streamCount;
			PStreamStrides = pStreamStrides;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeneratedCommandsInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeneratedCommandsInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pipelineBindPoint")]
		[NativeName(NativeNameType.Type, "VkPipelineBindPoint")]
		public VkPipelineBindPoint PipelineBindPoint;
		[NativeName(NativeNameType.Field, "pipeline")]
		[NativeName(NativeNameType.Type, "VkPipeline")]
		public VkPipeline Pipeline;
		[NativeName(NativeNameType.Field, "indirectCommandsLayout")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsLayoutNV")]
		public VkIndirectCommandsLayoutNV IndirectCommandsLayout;
		[NativeName(NativeNameType.Field, "streamCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StreamCount;
		[NativeName(NativeNameType.Field, "pStreams")]
		[NativeName(NativeNameType.Type, "const VkIndirectCommandsStreamNV*")]
		public unsafe VkIndirectCommandsStreamNV* PStreams;
		[NativeName(NativeNameType.Field, "sequencesCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SequencesCount;
		[NativeName(NativeNameType.Field, "preprocessBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer PreprocessBuffer;
		[NativeName(NativeNameType.Field, "preprocessOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong PreprocessOffset;
		[NativeName(NativeNameType.Field, "preprocessSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong PreprocessSize;
		[NativeName(NativeNameType.Field, "sequencesCountBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer SequencesCountBuffer;
		[NativeName(NativeNameType.Field, "sequencesCountOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong SequencesCountOffset;
		[NativeName(NativeNameType.Field, "sequencesIndexBuffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer SequencesIndexBuffer;
		[NativeName(NativeNameType.Field, "sequencesIndexOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong SequencesIndexOffset;

		public unsafe VkGeneratedCommandsInfoNV(VkStructureType sType = default, void* pNext = default, VkPipelineBindPoint pipelineBindPoint = default, VkPipeline pipeline = default, VkIndirectCommandsLayoutNV indirectCommandsLayout = default, uint streamCount = default, VkIndirectCommandsStreamNV* pStreams = default, uint sequencesCount = default, VkBuffer preprocessBuffer = default, ulong preprocessOffset = default, ulong preprocessSize = default, VkBuffer sequencesCountBuffer = default, ulong sequencesCountOffset = default, VkBuffer sequencesIndexBuffer = default, ulong sequencesIndexOffset = default)
		{
			SType = sType;
			PNext = pNext;
			PipelineBindPoint = pipelineBindPoint;
			Pipeline = pipeline;
			IndirectCommandsLayout = indirectCommandsLayout;
			StreamCount = streamCount;
			PStreams = pStreams;
			SequencesCount = sequencesCount;
			PreprocessBuffer = preprocessBuffer;
			PreprocessOffset = preprocessOffset;
			PreprocessSize = preprocessSize;
			SequencesCountBuffer = sequencesCountBuffer;
			SequencesCountOffset = sequencesCountOffset;
			SequencesIndexBuffer = sequencesIndexBuffer;
			SequencesIndexOffset = sequencesIndexOffset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeneratedCommandsMemoryRequirementsInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeneratedCommandsMemoryRequirementsInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pipelineBindPoint")]
		[NativeName(NativeNameType.Type, "VkPipelineBindPoint")]
		public VkPipelineBindPoint PipelineBindPoint;
		[NativeName(NativeNameType.Field, "pipeline")]
		[NativeName(NativeNameType.Type, "VkPipeline")]
		public VkPipeline Pipeline;
		[NativeName(NativeNameType.Field, "indirectCommandsLayout")]
		[NativeName(NativeNameType.Type, "VkIndirectCommandsLayoutNV")]
		public VkIndirectCommandsLayoutNV IndirectCommandsLayout;
		[NativeName(NativeNameType.Field, "maxSequencesCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxSequencesCount;

		public unsafe VkGeneratedCommandsMemoryRequirementsInfoNV(VkStructureType sType = default, void* pNext = default, VkPipelineBindPoint pipelineBindPoint = default, VkPipeline pipeline = default, VkIndirectCommandsLayoutNV indirectCommandsLayout = default, uint maxSequencesCount = default)
		{
			SType = sType;
			PNext = pNext;
			PipelineBindPoint = pipelineBindPoint;
			Pipeline = pipeline;
			IndirectCommandsLayout = indirectCommandsLayout;
			MaxSequencesCount = maxSequencesCount;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceInheritedViewportScissorFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceInheritedViewportScissorFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "inheritedViewportScissor2D")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint InheritedViewportScissor2D;

		public unsafe VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkStructureType sType = default, void* pNext = default, uint inheritedViewportScissor2D = default)
		{
			SType = sType;
			PNext = pNext;
			InheritedViewportScissor2D = inheritedViewportScissor2D;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCommandBufferInheritanceViewportScissorInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCommandBufferInheritanceViewportScissorInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "viewportScissor2D")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ViewportScissor2D;
		[NativeName(NativeNameType.Field, "viewportDepthCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewportDepthCount;
		[NativeName(NativeNameType.Field, "pViewportDepths")]
		[NativeName(NativeNameType.Type, "const VkViewport*")]
		public unsafe VkViewport* PViewportDepths;

		public unsafe VkCommandBufferInheritanceViewportScissorInfoNV(VkStructureType sType = default, void* pNext = default, uint viewportScissor2D = default, uint viewportDepthCount = default, VkViewport* pViewportDepths = default)
		{
			SType = sType;
			PNext = pNext;
			ViewportScissor2D = viewportScissor2D;
			ViewportDepthCount = viewportDepthCount;
			PViewportDepths = pViewportDepths;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "texelBufferAlignment")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TexelBufferAlignment;

		public unsafe VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint texelBufferAlignment = default)
		{
			SType = sType;
			PNext = pNext;
			TexelBufferAlignment = texelBufferAlignment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRenderPassTransformBeginInfoQCOM")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRenderPassTransformBeginInfoQCOM
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "transform")]
		[NativeName(NativeNameType.Type, "VkSurfaceTransformFlagBitsKHR")]
		public VkSurfaceTransformFlagBitsKHR Transform;

		public unsafe VkRenderPassTransformBeginInfoQCOM(VkStructureType sType = default, void* pNext = default, VkSurfaceTransformFlagBitsKHR transform = default)
		{
			SType = sType;
			PNext = pNext;
			Transform = transform;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCommandBufferInheritanceRenderPassTransformInfoQCOM")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCommandBufferInheritanceRenderPassTransformInfoQCOM
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "transform")]
		[NativeName(NativeNameType.Type, "VkSurfaceTransformFlagBitsKHR")]
		public VkSurfaceTransformFlagBitsKHR Transform;
		[NativeName(NativeNameType.Field, "renderArea")]
		[NativeName(NativeNameType.Type, "VkRect2D")]
		public VkRect2D RenderArea;

		public unsafe VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkStructureType sType = default, void* pNext = default, VkSurfaceTransformFlagBitsKHR transform = default, VkRect2D renderArea = default)
		{
			SType = sType;
			PNext = pNext;
			Transform = transform;
			RenderArea = renderArea;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDeviceMemoryReportFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDeviceMemoryReportFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceMemoryReport")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceMemoryReport;

		public unsafe VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint deviceMemoryReport = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceMemoryReport = deviceMemoryReport;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceMemoryReportCallbackDataEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceMemoryReportCallbackDataEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDeviceMemoryReportFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkDeviceMemoryReportEventTypeEXT")]
		public VkDeviceMemoryReportEventTypeEXT Type;
		[NativeName(NativeNameType.Field, "memoryObjectId")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MemoryObjectId;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Size;
		[NativeName(NativeNameType.Field, "objectType")]
		[NativeName(NativeNameType.Type, "VkObjectType")]
		public VkObjectType ObjectType;
		[NativeName(NativeNameType.Field, "objectHandle")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong ObjectHandle;
		[NativeName(NativeNameType.Field, "heapIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint HeapIndex;

		public unsafe VkDeviceMemoryReportCallbackDataEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, VkDeviceMemoryReportEventTypeEXT type = default, ulong memoryObjectId = default, ulong size = default, VkObjectType objectType = default, ulong objectHandle = default, uint heapIndex = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			Type = type;
			MemoryObjectId = memoryObjectId;
			Size = size;
			ObjectType = objectType;
			ObjectHandle = objectHandle;
			HeapIndex = heapIndex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceDeviceMemoryReportCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceDeviceMemoryReportCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDeviceMemoryReportFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "pfnUserCallback")]
		[NativeName(NativeNameType.Type, "PFN_vkDeviceMemoryReportCallbackEXT")]
		public unsafe void* PfnUserCallback;
		[NativeName(NativeNameType.Field, "pUserData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PUserData;

		public unsafe VkDeviceDeviceMemoryReportCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, PFNVkDeviceMemoryReportCallbackEXT pfnUserCallback = default, void* pUserData = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			PfnUserCallback = (void*)Marshal.GetFunctionPointerForDelegate(pfnUserCallback);
			PUserData = pUserData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRobustness2FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRobustness2FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "robustBufferAccess2")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RobustBufferAccess2;
		[NativeName(NativeNameType.Field, "robustImageAccess2")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RobustImageAccess2;
		[NativeName(NativeNameType.Field, "nullDescriptor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint NullDescriptor;

		public unsafe VkPhysicalDeviceRobustness2FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint robustBufferAccess2 = default, uint robustImageAccess2 = default, uint nullDescriptor = default)
		{
			SType = sType;
			PNext = pNext;
			RobustBufferAccess2 = robustBufferAccess2;
			RobustImageAccess2 = robustImageAccess2;
			NullDescriptor = nullDescriptor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRobustness2PropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRobustness2PropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "robustStorageBufferAccessSizeAlignment")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong RobustStorageBufferAccessSizeAlignment;
		[NativeName(NativeNameType.Field, "robustUniformBufferAccessSizeAlignment")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong RobustUniformBufferAccessSizeAlignment;

		public unsafe VkPhysicalDeviceRobustness2PropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong robustStorageBufferAccessSizeAlignment = default, ulong robustUniformBufferAccessSizeAlignment = default)
		{
			SType = sType;
			PNext = pNext;
			RobustStorageBufferAccessSizeAlignment = robustStorageBufferAccessSizeAlignment;
			RobustUniformBufferAccessSizeAlignment = robustUniformBufferAccessSizeAlignment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSamplerCustomBorderColorCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSamplerCustomBorderColorCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "customBorderColor")]
		[NativeName(NativeNameType.Type, "VkClearColorValue")]
		public VkClearColorValue CustomBorderColor;
		[NativeName(NativeNameType.Field, "format")]
		[NativeName(NativeNameType.Type, "VkFormat")]
		public VkFormat Format;

		public unsafe VkSamplerCustomBorderColorCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkClearColorValue custombordercolor = default, VkFormat format = default)
		{
			SType = sType;
			PNext = pNext;
			CustomBorderColor = custombordercolor;
			Format = format;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCustomBorderColorPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCustomBorderColorPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxCustomBorderColorSamplers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxCustomBorderColorSamplers;

		public unsafe VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxCustomBorderColorSamplers = default)
		{
			SType = sType;
			PNext = pNext;
			MaxCustomBorderColorSamplers = maxCustomBorderColorSamplers;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCustomBorderColorFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCustomBorderColorFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "customBorderColors")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CustomBorderColors;
		[NativeName(NativeNameType.Field, "customBorderColorWithoutFormat")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CustomBorderColorWithoutFormat;

		public unsafe VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint customBorderColors = default, uint customBorderColorWithoutFormat = default)
		{
			SType = sType;
			PNext = pNext;
			CustomBorderColors = customBorderColors;
			CustomBorderColorWithoutFormat = customBorderColorWithoutFormat;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePresentBarrierFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePresentBarrierFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentBarrier")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PresentBarrier;

		public unsafe VkPhysicalDevicePresentBarrierFeaturesNV(VkStructureType sType = default, void* pNext = default, uint presentBarrier = default)
		{
			SType = sType;
			PNext = pNext;
			PresentBarrier = presentBarrier;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfaceCapabilitiesPresentBarrierNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfaceCapabilitiesPresentBarrierNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentBarrierSupported")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PresentBarrierSupported;

		public unsafe VkSurfaceCapabilitiesPresentBarrierNV(VkStructureType sType = default, void* pNext = default, uint presentBarrierSupported = default)
		{
			SType = sType;
			PNext = pNext;
			PresentBarrierSupported = presentBarrierSupported;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainPresentBarrierCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainPresentBarrierCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentBarrierEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PresentBarrierEnable;

		public unsafe VkSwapchainPresentBarrierCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint presentBarrierEnable = default)
		{
			SType = sType;
			PNext = pNext;
			PresentBarrierEnable = presentBarrierEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDiagnosticsConfigFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDiagnosticsConfigFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "diagnosticsConfig")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DiagnosticsConfig;

		public unsafe VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkStructureType sType = default, void* pNext = default, uint diagnosticsConfig = default)
		{
			SType = sType;
			PNext = pNext;
			DiagnosticsConfig = diagnosticsConfig;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceDiagnosticsConfigCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceDiagnosticsConfigCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDeviceDiagnosticsConfigFlagsNV")]
		public uint Flags;

		public unsafe VkDeviceDiagnosticsConfigCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkQueryLowLatencySupportNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkQueryLowLatencySupportNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pQueriedLowLatencyData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PQueriedLowLatencyData;

		public unsafe VkQueryLowLatencySupportNV(VkStructureType sType = default, void* pNext = default, void* pQueriedLowLatencyData = default)
		{
			SType = sType;
			PNext = pNext;
			PQueriedLowLatencyData = pQueriedLowLatencyData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDescriptorBufferPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDescriptorBufferPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "combinedImageSamplerDescriptorSingleArray")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CombinedImageSamplerDescriptorSingleArray;
		[NativeName(NativeNameType.Field, "bufferlessPushDescriptors")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint BufferlessPushDescriptors;
		[NativeName(NativeNameType.Field, "allowSamplerImageViewPostSubmitCreation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AllowSamplerImageViewPostSubmitCreation;
		[NativeName(NativeNameType.Field, "descriptorBufferOffsetAlignment")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong DescriptorBufferOffsetAlignment;
		[NativeName(NativeNameType.Field, "maxDescriptorBufferBindings")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorBufferBindings;
		[NativeName(NativeNameType.Field, "maxResourceDescriptorBufferBindings")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxResourceDescriptorBufferBindings;
		[NativeName(NativeNameType.Field, "maxSamplerDescriptorBufferBindings")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxSamplerDescriptorBufferBindings;
		[NativeName(NativeNameType.Field, "maxEmbeddedImmutableSamplerBindings")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxEmbeddedImmutableSamplerBindings;
		[NativeName(NativeNameType.Field, "maxEmbeddedImmutableSamplers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxEmbeddedImmutableSamplers;
		[NativeName(NativeNameType.Field, "bufferCaptureReplayDescriptorDataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong BufferCaptureReplayDescriptorDataSize;
		[NativeName(NativeNameType.Field, "imageCaptureReplayDescriptorDataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong ImageCaptureReplayDescriptorDataSize;
		[NativeName(NativeNameType.Field, "imageViewCaptureReplayDescriptorDataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong ImageViewCaptureReplayDescriptorDataSize;
		[NativeName(NativeNameType.Field, "samplerCaptureReplayDescriptorDataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong SamplerCaptureReplayDescriptorDataSize;
		[NativeName(NativeNameType.Field, "accelerationStructureCaptureReplayDescriptorDataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong AccelerationStructureCaptureReplayDescriptorDataSize;
		[NativeName(NativeNameType.Field, "samplerDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong SamplerDescriptorSize;
		[NativeName(NativeNameType.Field, "combinedImageSamplerDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong CombinedImageSamplerDescriptorSize;
		[NativeName(NativeNameType.Field, "sampledImageDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong SampledImageDescriptorSize;
		[NativeName(NativeNameType.Field, "storageImageDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong StorageImageDescriptorSize;
		[NativeName(NativeNameType.Field, "uniformTexelBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong UniformTexelBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "robustUniformTexelBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong RobustUniformTexelBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "storageTexelBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong StorageTexelBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "robustStorageTexelBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong RobustStorageTexelBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "uniformBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong UniformBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "robustUniformBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong RobustUniformBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "storageBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong StorageBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "robustStorageBufferDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong RobustStorageBufferDescriptorSize;
		[NativeName(NativeNameType.Field, "inputAttachmentDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong InputAttachmentDescriptorSize;
		[NativeName(NativeNameType.Field, "accelerationStructureDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong AccelerationStructureDescriptorSize;
		[NativeName(NativeNameType.Field, "maxSamplerDescriptorBufferRange")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MaxSamplerDescriptorBufferRange;
		[NativeName(NativeNameType.Field, "maxResourceDescriptorBufferRange")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MaxResourceDescriptorBufferRange;
		[NativeName(NativeNameType.Field, "samplerDescriptorBufferAddressSpaceSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong SamplerDescriptorBufferAddressSpaceSize;
		[NativeName(NativeNameType.Field, "resourceDescriptorBufferAddressSpaceSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong ResourceDescriptorBufferAddressSpaceSize;
		[NativeName(NativeNameType.Field, "descriptorBufferAddressSpaceSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong DescriptorBufferAddressSpaceSize;

		public unsafe VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint combinedImageSamplerDescriptorSingleArray = default, uint bufferlessPushDescriptors = default, uint allowSamplerImageViewPostSubmitCreation = default, ulong descriptorBufferOffsetAlignment = default, uint maxDescriptorBufferBindings = default, uint maxResourceDescriptorBufferBindings = default, uint maxSamplerDescriptorBufferBindings = default, uint maxEmbeddedImmutableSamplerBindings = default, uint maxEmbeddedImmutableSamplers = default, ulong bufferCaptureReplayDescriptorDataSize = default, ulong imageCaptureReplayDescriptorDataSize = default, ulong imageViewCaptureReplayDescriptorDataSize = default, ulong samplerCaptureReplayDescriptorDataSize = default, ulong accelerationStructureCaptureReplayDescriptorDataSize = default, ulong samplerDescriptorSize = default, ulong combinedImageSamplerDescriptorSize = default, ulong sampledImageDescriptorSize = default, ulong storageImageDescriptorSize = default, ulong uniformTexelBufferDescriptorSize = default, ulong robustUniformTexelBufferDescriptorSize = default, ulong storageTexelBufferDescriptorSize = default, ulong robustStorageTexelBufferDescriptorSize = default, ulong uniformBufferDescriptorSize = default, ulong robustUniformBufferDescriptorSize = default, ulong storageBufferDescriptorSize = default, ulong robustStorageBufferDescriptorSize = default, ulong inputAttachmentDescriptorSize = default, ulong accelerationStructureDescriptorSize = default, ulong maxSamplerDescriptorBufferRange = default, ulong maxResourceDescriptorBufferRange = default, ulong samplerDescriptorBufferAddressSpaceSize = default, ulong resourceDescriptorBufferAddressSpaceSize = default, ulong descriptorBufferAddressSpaceSize = default)
		{
			SType = sType;
			PNext = pNext;
			CombinedImageSamplerDescriptorSingleArray = combinedImageSamplerDescriptorSingleArray;
			BufferlessPushDescriptors = bufferlessPushDescriptors;
			AllowSamplerImageViewPostSubmitCreation = allowSamplerImageViewPostSubmitCreation;
			DescriptorBufferOffsetAlignment = descriptorBufferOffsetAlignment;
			MaxDescriptorBufferBindings = maxDescriptorBufferBindings;
			MaxResourceDescriptorBufferBindings = maxResourceDescriptorBufferBindings;
			MaxSamplerDescriptorBufferBindings = maxSamplerDescriptorBufferBindings;
			MaxEmbeddedImmutableSamplerBindings = maxEmbeddedImmutableSamplerBindings;
			MaxEmbeddedImmutableSamplers = maxEmbeddedImmutableSamplers;
			BufferCaptureReplayDescriptorDataSize = bufferCaptureReplayDescriptorDataSize;
			ImageCaptureReplayDescriptorDataSize = imageCaptureReplayDescriptorDataSize;
			ImageViewCaptureReplayDescriptorDataSize = imageViewCaptureReplayDescriptorDataSize;
			SamplerCaptureReplayDescriptorDataSize = samplerCaptureReplayDescriptorDataSize;
			AccelerationStructureCaptureReplayDescriptorDataSize = accelerationStructureCaptureReplayDescriptorDataSize;
			SamplerDescriptorSize = samplerDescriptorSize;
			CombinedImageSamplerDescriptorSize = combinedImageSamplerDescriptorSize;
			SampledImageDescriptorSize = sampledImageDescriptorSize;
			StorageImageDescriptorSize = storageImageDescriptorSize;
			UniformTexelBufferDescriptorSize = uniformTexelBufferDescriptorSize;
			RobustUniformTexelBufferDescriptorSize = robustUniformTexelBufferDescriptorSize;
			StorageTexelBufferDescriptorSize = storageTexelBufferDescriptorSize;
			RobustStorageTexelBufferDescriptorSize = robustStorageTexelBufferDescriptorSize;
			UniformBufferDescriptorSize = uniformBufferDescriptorSize;
			RobustUniformBufferDescriptorSize = robustUniformBufferDescriptorSize;
			StorageBufferDescriptorSize = storageBufferDescriptorSize;
			RobustStorageBufferDescriptorSize = robustStorageBufferDescriptorSize;
			InputAttachmentDescriptorSize = inputAttachmentDescriptorSize;
			AccelerationStructureDescriptorSize = accelerationStructureDescriptorSize;
			MaxSamplerDescriptorBufferRange = maxSamplerDescriptorBufferRange;
			MaxResourceDescriptorBufferRange = maxResourceDescriptorBufferRange;
			SamplerDescriptorBufferAddressSpaceSize = samplerDescriptorBufferAddressSpaceSize;
			ResourceDescriptorBufferAddressSpaceSize = resourceDescriptorBufferAddressSpaceSize;
			DescriptorBufferAddressSpaceSize = descriptorBufferAddressSpaceSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "combinedImageSamplerDensityMapDescriptorSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong CombinedImageSamplerDensityMapDescriptorSize;

		public unsafe VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong combinedImageSamplerDensityMapDescriptorSize = default)
		{
			SType = sType;
			PNext = pNext;
			CombinedImageSamplerDensityMapDescriptorSize = combinedImageSamplerDensityMapDescriptorSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDescriptorBufferFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDescriptorBufferFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "descriptorBuffer")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBuffer;
		[NativeName(NativeNameType.Field, "descriptorBufferCaptureReplay")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBufferCaptureReplay;
		[NativeName(NativeNameType.Field, "descriptorBufferImageLayoutIgnored")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBufferImageLayoutIgnored;
		[NativeName(NativeNameType.Field, "descriptorBufferPushDescriptors")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBufferPushDescriptors;

		public unsafe VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint descriptorBuffer = default, uint descriptorBufferCaptureReplay = default, uint descriptorBufferImageLayoutIgnored = default, uint descriptorBufferPushDescriptors = default)
		{
			SType = sType;
			PNext = pNext;
			DescriptorBuffer = descriptorBuffer;
			DescriptorBufferCaptureReplay = descriptorBufferCaptureReplay;
			DescriptorBufferImageLayoutIgnored = descriptorBufferImageLayoutIgnored;
			DescriptorBufferPushDescriptors = descriptorBufferPushDescriptors;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorAddressInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorAddressInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "address")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong Address;
		[NativeName(NativeNameType.Field, "range")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Range;
		[NativeName(NativeNameType.Field, "format")]
		[NativeName(NativeNameType.Type, "VkFormat")]
		public VkFormat Format;

		public unsafe VkDescriptorAddressInfoEXT(VkStructureType sType = default, void* pNext = default, ulong address = default, ulong range = default, VkFormat format = default)
		{
			SType = sType;
			PNext = pNext;
			Address = address;
			Range = range;
			Format = format;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorBufferBindingInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorBufferBindingInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "address")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong Address;
		[NativeName(NativeNameType.Field, "usage")]
		[NativeName(NativeNameType.Type, "VkBufferUsageFlags")]
		public uint Usage;

		public unsafe VkDescriptorBufferBindingInfoEXT(VkStructureType sType = default, void* pNext = default, ulong address = default, uint usage = default)
		{
			SType = sType;
			PNext = pNext;
			Address = address;
			Usage = usage;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorBufferBindingPushDescriptorBufferHandleEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorBufferBindingPushDescriptorBufferHandleEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;

		public unsafe VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkStructureType sType = default, void* pNext = default, VkBuffer buffer = default)
		{
			SType = sType;
			PNext = pNext;
			Buffer = buffer;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorDataEXT")]
	[StructLayout(LayoutKind.Explicit)]
	public partial struct VkDescriptorDataEXT
	{
		[NativeName(NativeNameType.Field, "pSampler")]
		[NativeName(NativeNameType.Type, "const VkSampler*")]
		[FieldOffset(0)]
		public unsafe VkSampler* PSampler;
		[NativeName(NativeNameType.Field, "pCombinedImageSampler")]
		[NativeName(NativeNameType.Type, "const VkDescriptorImageInfo*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorImageInfo* PCombinedImageSampler;
		[NativeName(NativeNameType.Field, "pInputAttachmentImage")]
		[NativeName(NativeNameType.Type, "const VkDescriptorImageInfo*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorImageInfo* PInputAttachmentImage;
		[NativeName(NativeNameType.Field, "pSampledImage")]
		[NativeName(NativeNameType.Type, "const VkDescriptorImageInfo*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorImageInfo* PSampledImage;
		[NativeName(NativeNameType.Field, "pStorageImage")]
		[NativeName(NativeNameType.Type, "const VkDescriptorImageInfo*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorImageInfo* PStorageImage;
		[NativeName(NativeNameType.Field, "pUniformTexelBuffer")]
		[NativeName(NativeNameType.Type, "const VkDescriptorAddressInfoEXT*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorAddressInfoEXT* PUniformTexelBuffer;
		[NativeName(NativeNameType.Field, "pStorageTexelBuffer")]
		[NativeName(NativeNameType.Type, "const VkDescriptorAddressInfoEXT*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorAddressInfoEXT* PStorageTexelBuffer;
		[NativeName(NativeNameType.Field, "pUniformBuffer")]
		[NativeName(NativeNameType.Type, "const VkDescriptorAddressInfoEXT*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorAddressInfoEXT* PUniformBuffer;
		[NativeName(NativeNameType.Field, "pStorageBuffer")]
		[NativeName(NativeNameType.Type, "const VkDescriptorAddressInfoEXT*")]
		[FieldOffset(0)]
		public unsafe VkDescriptorAddressInfoEXT* PStorageBuffer;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		[FieldOffset(0)]
		public ulong AccelerationStructure;

		public unsafe VkDescriptorDataEXT(VkSampler* pSampler = default, VkDescriptorImageInfo* pCombinedImageSampler = default, VkDescriptorImageInfo* pInputAttachmentImage = default, VkDescriptorImageInfo* pSampledImage = default, VkDescriptorImageInfo* pStorageImage = default, VkDescriptorAddressInfoEXT* pUniformTexelBuffer = default, VkDescriptorAddressInfoEXT* pStorageTexelBuffer = default, VkDescriptorAddressInfoEXT* pUniformBuffer = default, VkDescriptorAddressInfoEXT* pStorageBuffer = default, ulong accelerationStructure = default)
		{
			PSampler = pSampler;
			PCombinedImageSampler = pCombinedImageSampler;
			PInputAttachmentImage = pInputAttachmentImage;
			PSampledImage = pSampledImage;
			PStorageImage = pStorageImage;
			PUniformTexelBuffer = pUniformTexelBuffer;
			PStorageTexelBuffer = pStorageTexelBuffer;
			PUniformBuffer = pUniformBuffer;
			PStorageBuffer = pStorageBuffer;
			AccelerationStructure = accelerationStructure;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDescriptorGetInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDescriptorGetInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkDescriptorType")]
		public VkDescriptorType Type;
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "VkDescriptorDataEXT")]
		public VkDescriptorDataEXT Data;

		public unsafe VkDescriptorGetInfoEXT(VkStructureType sType = default, void* pNext = default, VkDescriptorType type = default, VkDescriptorDataEXT data = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			Data = data;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBufferCaptureDescriptorDataInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBufferCaptureDescriptorDataInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;

		public unsafe VkBufferCaptureDescriptorDataInfoEXT(VkStructureType sType = default, void* pNext = default, VkBuffer buffer = default)
		{
			SType = sType;
			PNext = pNext;
			Buffer = buffer;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageCaptureDescriptorDataInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageCaptureDescriptorDataInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "image")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage Image;

		public unsafe VkImageCaptureDescriptorDataInfoEXT(VkStructureType sType = default, void* pNext = default, VkImage image = default)
		{
			SType = sType;
			PNext = pNext;
			Image = image;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageViewCaptureDescriptorDataInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageViewCaptureDescriptorDataInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageView")]
		[NativeName(NativeNameType.Type, "VkImageView")]
		public VkImageView ImageView;

		public unsafe VkImageViewCaptureDescriptorDataInfoEXT(VkStructureType sType = default, void* pNext = default, VkImageView imageView = default)
		{
			SType = sType;
			PNext = pNext;
			ImageView = imageView;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSamplerCaptureDescriptorDataInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSamplerCaptureDescriptorDataInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampler")]
		[NativeName(NativeNameType.Type, "VkSampler")]
		public VkSampler Sampler;

		public unsafe VkSamplerCaptureDescriptorDataInfoEXT(VkStructureType sType = default, void* pNext = default, VkSampler sampler = default)
		{
			SType = sType;
			PNext = pNext;
			Sampler = sampler;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkOpaqueCaptureDescriptorDataCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkOpaqueCaptureDescriptorDataCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "opaqueCaptureDescriptorData")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* OpaqueCaptureDescriptorData;

		public unsafe VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkStructureType sType = default, void* pNext = default, void* opaqueCaptureDescriptorData = default)
		{
			SType = sType;
			PNext = pNext;
			OpaqueCaptureDescriptorData = opaqueCaptureDescriptorData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureCaptureDescriptorDataInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureCaptureDescriptorDataInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureKHR")]
		public VkAccelerationStructureKHR AccelerationStructure;
		[NativeName(NativeNameType.Field, "accelerationStructureNV")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureNV")]
		public VkAccelerationStructureNV AccelerationStructureNV;

		public unsafe VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureKHR accelerationStructure = default, VkAccelerationStructureNV accelerationStructureNV = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructure = accelerationStructure;
			AccelerationStructureNV = accelerationStructureNV;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "graphicsPipelineLibrary")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint GraphicsPipelineLibrary;

		public unsafe VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint graphicsPipelineLibrary = default)
		{
			SType = sType;
			PNext = pNext;
			GraphicsPipelineLibrary = graphicsPipelineLibrary;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "graphicsPipelineLibraryFastLinking")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint GraphicsPipelineLibraryFastLinking;
		[NativeName(NativeNameType.Field, "graphicsPipelineLibraryIndependentInterpolationDecoration")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint GraphicsPipelineLibraryIndependentInterpolationDecoration;

		public unsafe VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint graphicsPipelineLibraryFastLinking = default, uint graphicsPipelineLibraryIndependentInterpolationDecoration = default)
		{
			SType = sType;
			PNext = pNext;
			GraphicsPipelineLibraryFastLinking = graphicsPipelineLibraryFastLinking;
			GraphicsPipelineLibraryIndependentInterpolationDecoration = graphicsPipelineLibraryIndependentInterpolationDecoration;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGraphicsPipelineLibraryCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGraphicsPipelineLibraryCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkGraphicsPipelineLibraryFlagsEXT")]
		public uint Flags;

		public unsafe VkGraphicsPipelineLibraryCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderEarlyAndLateFragmentTests")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderEarlyAndLateFragmentTests;

		public unsafe VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkStructureType sType = default, void* pNext = default, uint shaderEarlyAndLateFragmentTests = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderEarlyAndLateFragmentTests = shaderEarlyAndLateFragmentTests;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentShadingRateEnums")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShadingRateEnums;
		[NativeName(NativeNameType.Field, "supersampleFragmentShadingRates")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SupersampleFragmentShadingRates;
		[NativeName(NativeNameType.Field, "noInvocationFragmentShadingRates")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint NoInvocationFragmentShadingRates;

		public unsafe VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkStructureType sType = default, void* pNext = default, uint fragmentShadingRateEnums = default, uint supersampleFragmentShadingRates = default, uint noInvocationFragmentShadingRates = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentShadingRateEnums = fragmentShadingRateEnums;
			SupersampleFragmentShadingRates = supersampleFragmentShadingRates;
			NoInvocationFragmentShadingRates = noInvocationFragmentShadingRates;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxFragmentShadingRateInvocationCount")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlagBits")]
		public VkSampleCountFlagBits MaxFragmentShadingRateInvocationCount;

		public unsafe VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkStructureType sType = default, void* pNext = default, VkSampleCountFlagBits maxFragmentShadingRateInvocationCount = default)
		{
			SType = sType;
			PNext = pNext;
			MaxFragmentShadingRateInvocationCount = maxFragmentShadingRateInvocationCount;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineFragmentShadingRateEnumStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineFragmentShadingRateEnumStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shadingRateType")]
		[NativeName(NativeNameType.Type, "VkFragmentShadingRateTypeNV")]
		public VkFragmentShadingRateTypeNV ShadingRateType;
		[NativeName(NativeNameType.Field, "shadingRate")]
		[NativeName(NativeNameType.Type, "VkFragmentShadingRateNV")]
		public VkFragmentShadingRateNV ShadingRate;
		[NativeName(NativeNameType.Field, "combinerOps")]
		[NativeName(NativeNameType.Type, "VkFragmentShadingRateCombinerOpKHR[2]")]
		public VkFragmentShadingRateCombinerOpKHR CombinerOps_0;
		public VkFragmentShadingRateCombinerOpKHR CombinerOps_1;

		public unsafe VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, VkFragmentShadingRateTypeNV shadingRateType = default, VkFragmentShadingRateNV shadingRate = default, VkFragmentShadingRateCombinerOpKHR* combinerOps = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateType = shadingRateType;
			ShadingRate = shadingRate;
			if (combinerOps != default)
			{
				CombinerOps_0 = combinerOps[0];
				CombinerOps_1 = combinerOps[1];
			}
		}

		public unsafe VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, VkFragmentShadingRateTypeNV shadingRateType = default, VkFragmentShadingRateNV shadingRate = default, Span<VkFragmentShadingRateCombinerOpKHR> combinerOps = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateType = shadingRateType;
			ShadingRate = shadingRate;
			if (combinerOps != default)
			{
				CombinerOps_0 = combinerOps[0];
				CombinerOps_1 = combinerOps[1];
			}
		}


		public unsafe Span<VkFragmentShadingRateCombinerOpKHR> CombinerOps
		
		{
			get
			{
				fixed (VkFragmentShadingRateCombinerOpKHR* p = &this.CombinerOps_0)
				{
					return new Span<VkFragmentShadingRateCombinerOpKHR>(p, 2);
				}
			}
		}
	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceOrHostAddressConstKHR")]
	[StructLayout(LayoutKind.Explicit)]
	public partial struct VkDeviceOrHostAddressConstKHR
	{
		[NativeName(NativeNameType.Field, "deviceAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		[FieldOffset(0)]
		public ulong DeviceAddress;
		[NativeName(NativeNameType.Field, "hostAddress")]
		[NativeName(NativeNameType.Type, "const void*")]
		[FieldOffset(0)]
		public unsafe void* HostAddress;

		public unsafe VkDeviceOrHostAddressConstKHR(ulong deviceAddress = default, void* hostAddress = default)
		{
			DeviceAddress = deviceAddress;
			HostAddress = hostAddress;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureGeometryMotionTrianglesDataNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureGeometryMotionTrianglesDataNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vertexData")]
		[NativeName(NativeNameType.Type, "VkDeviceOrHostAddressConstKHR")]
		public VkDeviceOrHostAddressConstKHR VertexData;

		public unsafe VkAccelerationStructureGeometryMotionTrianglesDataNV(VkStructureType sType = default, void* pNext = default, VkDeviceOrHostAddressConstKHR vertexdata = default)
		{
			SType = sType;
			PNext = pNext;
			VertexData = vertexdata;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureMotionInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureMotionInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxInstances")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxInstances;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureMotionInfoFlagsNV")]
		public uint Flags;

		public unsafe VkAccelerationStructureMotionInfoNV(VkStructureType sType = default, void* pNext = default, uint maxInstances = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			MaxInstances = maxInstances;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureMatrixMotionInstanceNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureMatrixMotionInstanceNV
	{
		[NativeName(NativeNameType.Field, "transformT0")]
		[NativeName(NativeNameType.Type, "VkTransformMatrixKHR")]
		public VkTransformMatrixKHR TransformT0;
		[NativeName(NativeNameType.Field, "transformT1")]
		[NativeName(NativeNameType.Type, "VkTransformMatrixKHR")]
		public VkTransformMatrixKHR TransformT1;
		[NativeName(NativeNameType.Field, "instanceCustomIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceCustomIndex;
		[NativeName(NativeNameType.Field, "mask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Mask;
		[NativeName(NativeNameType.Field, "instanceShaderBindingTableRecordOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceShaderBindingTableRecordOffset;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkGeometryInstanceFlagsKHR")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "accelerationStructureReference")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong AccelerationStructureReference;

		public unsafe VkAccelerationStructureMatrixMotionInstanceNV(VkTransformMatrixKHR transformT0 = default, VkTransformMatrixKHR transformT1 = default, uint instanceCustomIndex = default, uint mask = default, uint instanceShaderBindingTableRecordOffset = default, uint flags = default, ulong accelerationStructureReference = default)
		{
			TransformT0 = transformT0;
			TransformT1 = transformT1;
			InstanceCustomIndex = instanceCustomIndex;
			Mask = mask;
			InstanceShaderBindingTableRecordOffset = instanceShaderBindingTableRecordOffset;
			Flags = flags;
			AccelerationStructureReference = accelerationStructureReference;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSRTDataNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSRTDataNV
	{
		[NativeName(NativeNameType.Field, "sx")]
		[NativeName(NativeNameType.Type, "float")]
		public float Sx;
		[NativeName(NativeNameType.Field, "a")]
		[NativeName(NativeNameType.Type, "float")]
		public float A;
		[NativeName(NativeNameType.Field, "b")]
		[NativeName(NativeNameType.Type, "float")]
		public float B;
		[NativeName(NativeNameType.Field, "pvx")]
		[NativeName(NativeNameType.Type, "float")]
		public float Pvx;
		[NativeName(NativeNameType.Field, "sy")]
		[NativeName(NativeNameType.Type, "float")]
		public float Sy;
		[NativeName(NativeNameType.Field, "c")]
		[NativeName(NativeNameType.Type, "float")]
		public float C;
		[NativeName(NativeNameType.Field, "pvy")]
		[NativeName(NativeNameType.Type, "float")]
		public float Pvy;
		[NativeName(NativeNameType.Field, "sz")]
		[NativeName(NativeNameType.Type, "float")]
		public float Sz;
		[NativeName(NativeNameType.Field, "pvz")]
		[NativeName(NativeNameType.Type, "float")]
		public float Pvz;
		[NativeName(NativeNameType.Field, "qx")]
		[NativeName(NativeNameType.Type, "float")]
		public float Qx;
		[NativeName(NativeNameType.Field, "qy")]
		[NativeName(NativeNameType.Type, "float")]
		public float Qy;
		[NativeName(NativeNameType.Field, "qz")]
		[NativeName(NativeNameType.Type, "float")]
		public float Qz;
		[NativeName(NativeNameType.Field, "qw")]
		[NativeName(NativeNameType.Type, "float")]
		public float Qw;
		[NativeName(NativeNameType.Field, "tx")]
		[NativeName(NativeNameType.Type, "float")]
		public float Tx;
		[NativeName(NativeNameType.Field, "ty")]
		[NativeName(NativeNameType.Type, "float")]
		public float Ty;
		[NativeName(NativeNameType.Field, "tz")]
		[NativeName(NativeNameType.Type, "float")]
		public float Tz;

		public unsafe VkSRTDataNV(float sx = default, float a = default, float b = default, float pvx = default, float sy = default, float c = default, float pvy = default, float sz = default, float pvz = default, float qx = default, float qy = default, float qz = default, float qw = default, float tx = default, float ty = default, float tz = default)
		{
			Sx = sx;
			A = a;
			B = b;
			Pvx = pvx;
			Sy = sy;
			C = c;
			Pvy = pvy;
			Sz = sz;
			Pvz = pvz;
			Qx = qx;
			Qy = qy;
			Qz = qz;
			Qw = qw;
			Tx = tx;
			Ty = ty;
			Tz = tz;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureSRTMotionInstanceNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureSRTMotionInstanceNV
	{
		[NativeName(NativeNameType.Field, "transformT0")]
		[NativeName(NativeNameType.Type, "VkSRTDataNV")]
		public VkSRTDataNV TransformT0;
		[NativeName(NativeNameType.Field, "transformT1")]
		[NativeName(NativeNameType.Type, "VkSRTDataNV")]
		public VkSRTDataNV TransformT1;
		[NativeName(NativeNameType.Field, "instanceCustomIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceCustomIndex;
		[NativeName(NativeNameType.Field, "mask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Mask;
		[NativeName(NativeNameType.Field, "instanceShaderBindingTableRecordOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceShaderBindingTableRecordOffset;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkGeometryInstanceFlagsKHR")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "accelerationStructureReference")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong AccelerationStructureReference;

		public unsafe VkAccelerationStructureSRTMotionInstanceNV(VkSRTDataNV transformT0 = default, VkSRTDataNV transformT1 = default, uint instanceCustomIndex = default, uint mask = default, uint instanceShaderBindingTableRecordOffset = default, uint flags = default, ulong accelerationStructureReference = default)
		{
			TransformT0 = transformT0;
			TransformT1 = transformT1;
			InstanceCustomIndex = instanceCustomIndex;
			Mask = mask;
			InstanceShaderBindingTableRecordOffset = instanceShaderBindingTableRecordOffset;
			Flags = flags;
			AccelerationStructureReference = accelerationStructureReference;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureMotionInstanceDataNV")]
	[StructLayout(LayoutKind.Explicit)]
	public partial struct VkAccelerationStructureMotionInstanceDataNV
	{
		[NativeName(NativeNameType.Field, "staticInstance")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureInstanceKHR")]
		[FieldOffset(0)]
		public VkAccelerationStructureInstanceKHR StaticInstance;
		[NativeName(NativeNameType.Field, "matrixMotionInstance")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureMatrixMotionInstanceNV")]
		[FieldOffset(0)]
		public VkAccelerationStructureMatrixMotionInstanceNV MatrixMotionInstance;
		[NativeName(NativeNameType.Field, "srtMotionInstance")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureSRTMotionInstanceNV")]
		[FieldOffset(0)]
		public VkAccelerationStructureSRTMotionInstanceNV SrtMotionInstance;

		public unsafe VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureInstanceKHR staticInstance = default, VkAccelerationStructureMatrixMotionInstanceNV matrixMotionInstance = default, VkAccelerationStructureSRTMotionInstanceNV srtMotionInstance = default)
		{
			StaticInstance = staticInstance;
			MatrixMotionInstance = matrixMotionInstance;
			SrtMotionInstance = srtMotionInstance;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureMotionInstanceNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureMotionInstanceNV
	{
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureMotionInstanceTypeNV")]
		public VkAccelerationStructureMotionInstanceTypeNV Type;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureMotionInstanceFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureMotionInstanceDataNV")]
		public VkAccelerationStructureMotionInstanceDataNV Data;

		public unsafe VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceTypeNV type = default, uint flags = default, VkAccelerationStructureMotionInstanceDataNV data = default)
		{
			Type = type;
			Flags = flags;
			Data = data;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayTracingMotionBlurFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rayTracingMotionBlur")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingMotionBlur;
		[NativeName(NativeNameType.Field, "rayTracingMotionBlurPipelineTraceRaysIndirect")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingMotionBlurPipelineTraceRaysIndirect;

		public unsafe VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkStructureType sType = default, void* pNext = default, uint rayTracingMotionBlur = default, uint rayTracingMotionBlurPipelineTraceRaysIndirect = default)
		{
			SType = sType;
			PNext = pNext;
			RayTracingMotionBlur = rayTracingMotionBlur;
			RayTracingMotionBlurPipelineTraceRaysIndirect = rayTracingMotionBlurPipelineTraceRaysIndirect;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "ycbcr2plane444Formats")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Ycbcr2plane444Formats;

		public unsafe VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint ycbcr2plane444Formats = default)
		{
			SType = sType;
			PNext = pNext;
			Ycbcr2plane444Formats = ycbcr2plane444Formats;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentDensityMap2FeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentDensityMap2FeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentDensityMapDeferred")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityMapDeferred;

		public unsafe VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkStructureType sType = default, void* pNext = default, uint fragmentDensityMapDeferred = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentDensityMapDeferred = fragmentDensityMapDeferred;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentDensityMap2PropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentDensityMap2PropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "subsampledLoads")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SubsampledLoads;
		[NativeName(NativeNameType.Field, "subsampledCoarseReconstructionEarlyAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SubsampledCoarseReconstructionEarlyAccess;
		[NativeName(NativeNameType.Field, "maxSubsampledArrayLayers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxSubsampledArrayLayers;
		[NativeName(NativeNameType.Field, "maxDescriptorSetSubsampledSamplers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetSubsampledSamplers;

		public unsafe VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkStructureType sType = default, void* pNext = default, uint subsampledLoads = default, uint subsampledCoarseReconstructionEarlyAccess = default, uint maxSubsampledArrayLayers = default, uint maxDescriptorSetSubsampledSamplers = default)
		{
			SType = sType;
			PNext = pNext;
			SubsampledLoads = subsampledLoads;
			SubsampledCoarseReconstructionEarlyAccess = subsampledCoarseReconstructionEarlyAccess;
			MaxSubsampledArrayLayers = maxSubsampledArrayLayers;
			MaxDescriptorSetSubsampledSamplers = maxDescriptorSetSubsampledSamplers;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyCommandTransformInfoQCOM")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyCommandTransformInfoQCOM
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "transform")]
		[NativeName(NativeNameType.Type, "VkSurfaceTransformFlagBitsKHR")]
		public VkSurfaceTransformFlagBitsKHR Transform;

		public unsafe VkCopyCommandTransformInfoQCOM(VkStructureType sType = default, void* pNext = default, VkSurfaceTransformFlagBitsKHR transform = default)
		{
			SType = sType;
			PNext = pNext;
			Transform = transform;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceImageCompressionControlFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceImageCompressionControlFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageCompressionControl")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ImageCompressionControl;

		public unsafe VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint imageCompressionControl = default)
		{
			SType = sType;
			PNext = pNext;
			ImageCompressionControl = imageCompressionControl;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageCompressionControlEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageCompressionControlEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkImageCompressionFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "compressionControlPlaneCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CompressionControlPlaneCount;
		[NativeName(NativeNameType.Field, "pFixedRateFlags")]
		[NativeName(NativeNameType.Type, "VkImageCompressionFixedRateFlagsEXT*")]
		public unsafe uint* PFixedRateFlags;

		public unsafe VkImageCompressionControlEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, uint compressionControlPlaneCount = default, uint* pFixedRateFlags = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			CompressionControlPlaneCount = compressionControlPlaneCount;
			PFixedRateFlags = pFixedRateFlags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubresourceLayout2EXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubresourceLayout2EXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "subresourceLayout")]
		[NativeName(NativeNameType.Type, "VkSubresourceLayout")]
		public VkSubresourceLayout SubresourceLayout;

		public unsafe VkSubresourceLayout2EXT(VkStructureType sType = default, void* pNext = default, VkSubresourceLayout subresourceLayout = default)
		{
			SType = sType;
			PNext = pNext;
			SubresourceLayout = subresourceLayout;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageSubresource2EXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageSubresource2EXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageSubresource")]
		[NativeName(NativeNameType.Type, "VkImageSubresource")]
		public VkImageSubresource ImageSubresource;

		public unsafe VkImageSubresource2EXT(VkStructureType sType = default, void* pNext = default, VkImageSubresource imageSubresource = default)
		{
			SType = sType;
			PNext = pNext;
			ImageSubresource = imageSubresource;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageCompressionPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageCompressionPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageCompressionFlags")]
		[NativeName(NativeNameType.Type, "VkImageCompressionFlagsEXT")]
		public uint ImageCompressionFlags;
		[NativeName(NativeNameType.Field, "imageCompressionFixedRateFlags")]
		[NativeName(NativeNameType.Type, "VkImageCompressionFixedRateFlagsEXT")]
		public uint ImageCompressionFixedRateFlags;

		public unsafe VkImageCompressionPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint imageCompressionFlags = default, uint imageCompressionFixedRateFlags = default)
		{
			SType = sType;
			PNext = pNext;
			ImageCompressionFlags = imageCompressionFlags;
			ImageCompressionFixedRateFlags = imageCompressionFixedRateFlags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "attachmentFeedbackLoopLayout")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AttachmentFeedbackLoopLayout;

		public unsafe VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint attachmentFeedbackLoopLayout = default)
		{
			SType = sType;
			PNext = pNext;
			AttachmentFeedbackLoopLayout = attachmentFeedbackLoopLayout;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevice4444FormatsFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevice4444FormatsFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "formatA4R4G4B4")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FormatA4R4G4B4;
		[NativeName(NativeNameType.Field, "formatA4B4G4R4")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FormatA4B4G4R4;

		public unsafe VkPhysicalDevice4444FormatsFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint formatA4R4G4B4 = default, uint formatA4B4G4R4 = default)
		{
			SType = sType;
			PNext = pNext;
			FormatA4R4G4B4 = formatA4R4G4B4;
			FormatA4B4G4R4 = formatA4B4G4R4;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFaultFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFaultFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceFault")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceFault;
		[NativeName(NativeNameType.Field, "deviceFaultVendorBinary")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DeviceFaultVendorBinary;

		public unsafe VkPhysicalDeviceFaultFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint deviceFault = default, uint deviceFaultVendorBinary = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceFault = deviceFault;
			DeviceFaultVendorBinary = deviceFaultVendorBinary;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceFaultCountsEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceFaultCountsEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "addressInfoCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AddressInfoCount;
		[NativeName(NativeNameType.Field, "vendorInfoCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VendorInfoCount;
		[NativeName(NativeNameType.Field, "vendorBinarySize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong VendorBinarySize;

		public unsafe VkDeviceFaultCountsEXT(VkStructureType sType = default, void* pNext = default, uint addressInfoCount = default, uint vendorInfoCount = default, ulong vendorBinarySize = default)
		{
			SType = sType;
			PNext = pNext;
			AddressInfoCount = addressInfoCount;
			VendorInfoCount = vendorInfoCount;
			VendorBinarySize = vendorBinarySize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceFaultAddressInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceFaultAddressInfoEXT
	{
		[NativeName(NativeNameType.Field, "addressType")]
		[NativeName(NativeNameType.Type, "VkDeviceFaultAddressTypeEXT")]
		public VkDeviceFaultAddressTypeEXT AddressType;
		[NativeName(NativeNameType.Field, "reportedAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong ReportedAddress;
		[NativeName(NativeNameType.Field, "addressPrecision")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong AddressPrecision;

		public unsafe VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressTypeEXT addressType = default, ulong reportedAddress = default, ulong addressPrecision = default)
		{
			AddressType = addressType;
			ReportedAddress = reportedAddress;
			AddressPrecision = addressPrecision;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceFaultVendorInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceFaultVendorInfoEXT
	{
		[NativeName(NativeNameType.Field, "description")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte Description_0;
		public byte Description_1;
		public byte Description_2;
		public byte Description_3;
		public byte Description_4;
		public byte Description_5;
		public byte Description_6;
		public byte Description_7;
		public byte Description_8;
		public byte Description_9;
		public byte Description_10;
		public byte Description_11;
		public byte Description_12;
		public byte Description_13;
		public byte Description_14;
		public byte Description_15;
		public byte Description_16;
		public byte Description_17;
		public byte Description_18;
		public byte Description_19;
		public byte Description_20;
		public byte Description_21;
		public byte Description_22;
		public byte Description_23;
		public byte Description_24;
		public byte Description_25;
		public byte Description_26;
		public byte Description_27;
		public byte Description_28;
		public byte Description_29;
		public byte Description_30;
		public byte Description_31;
		public byte Description_32;
		public byte Description_33;
		public byte Description_34;
		public byte Description_35;
		public byte Description_36;
		public byte Description_37;
		public byte Description_38;
		public byte Description_39;
		public byte Description_40;
		public byte Description_41;
		public byte Description_42;
		public byte Description_43;
		public byte Description_44;
		public byte Description_45;
		public byte Description_46;
		public byte Description_47;
		public byte Description_48;
		public byte Description_49;
		public byte Description_50;
		public byte Description_51;
		public byte Description_52;
		public byte Description_53;
		public byte Description_54;
		public byte Description_55;
		public byte Description_56;
		public byte Description_57;
		public byte Description_58;
		public byte Description_59;
		public byte Description_60;
		public byte Description_61;
		public byte Description_62;
		public byte Description_63;
		public byte Description_64;
		public byte Description_65;
		public byte Description_66;
		public byte Description_67;
		public byte Description_68;
		public byte Description_69;
		public byte Description_70;
		public byte Description_71;
		public byte Description_72;
		public byte Description_73;
		public byte Description_74;
		public byte Description_75;
		public byte Description_76;
		public byte Description_77;
		public byte Description_78;
		public byte Description_79;
		public byte Description_80;
		public byte Description_81;
		public byte Description_82;
		public byte Description_83;
		public byte Description_84;
		public byte Description_85;
		public byte Description_86;
		public byte Description_87;
		public byte Description_88;
		public byte Description_89;
		public byte Description_90;
		public byte Description_91;
		public byte Description_92;
		public byte Description_93;
		public byte Description_94;
		public byte Description_95;
		public byte Description_96;
		public byte Description_97;
		public byte Description_98;
		public byte Description_99;
		public byte Description_100;
		public byte Description_101;
		public byte Description_102;
		public byte Description_103;
		public byte Description_104;
		public byte Description_105;
		public byte Description_106;
		public byte Description_107;
		public byte Description_108;
		public byte Description_109;
		public byte Description_110;
		public byte Description_111;
		public byte Description_112;
		public byte Description_113;
		public byte Description_114;
		public byte Description_115;
		public byte Description_116;
		public byte Description_117;
		public byte Description_118;
		public byte Description_119;
		public byte Description_120;
		public byte Description_121;
		public byte Description_122;
		public byte Description_123;
		public byte Description_124;
		public byte Description_125;
		public byte Description_126;
		public byte Description_127;
		public byte Description_128;
		public byte Description_129;
		public byte Description_130;
		public byte Description_131;
		public byte Description_132;
		public byte Description_133;
		public byte Description_134;
		public byte Description_135;
		public byte Description_136;
		public byte Description_137;
		public byte Description_138;
		public byte Description_139;
		public byte Description_140;
		public byte Description_141;
		public byte Description_142;
		public byte Description_143;
		public byte Description_144;
		public byte Description_145;
		public byte Description_146;
		public byte Description_147;
		public byte Description_148;
		public byte Description_149;
		public byte Description_150;
		public byte Description_151;
		public byte Description_152;
		public byte Description_153;
		public byte Description_154;
		public byte Description_155;
		public byte Description_156;
		public byte Description_157;
		public byte Description_158;
		public byte Description_159;
		public byte Description_160;
		public byte Description_161;
		public byte Description_162;
		public byte Description_163;
		public byte Description_164;
		public byte Description_165;
		public byte Description_166;
		public byte Description_167;
		public byte Description_168;
		public byte Description_169;
		public byte Description_170;
		public byte Description_171;
		public byte Description_172;
		public byte Description_173;
		public byte Description_174;
		public byte Description_175;
		public byte Description_176;
		public byte Description_177;
		public byte Description_178;
		public byte Description_179;
		public byte Description_180;
		public byte Description_181;
		public byte Description_182;
		public byte Description_183;
		public byte Description_184;
		public byte Description_185;
		public byte Description_186;
		public byte Description_187;
		public byte Description_188;
		public byte Description_189;
		public byte Description_190;
		public byte Description_191;
		public byte Description_192;
		public byte Description_193;
		public byte Description_194;
		public byte Description_195;
		public byte Description_196;
		public byte Description_197;
		public byte Description_198;
		public byte Description_199;
		public byte Description_200;
		public byte Description_201;
		public byte Description_202;
		public byte Description_203;
		public byte Description_204;
		public byte Description_205;
		public byte Description_206;
		public byte Description_207;
		public byte Description_208;
		public byte Description_209;
		public byte Description_210;
		public byte Description_211;
		public byte Description_212;
		public byte Description_213;
		public byte Description_214;
		public byte Description_215;
		public byte Description_216;
		public byte Description_217;
		public byte Description_218;
		public byte Description_219;
		public byte Description_220;
		public byte Description_221;
		public byte Description_222;
		public byte Description_223;
		public byte Description_224;
		public byte Description_225;
		public byte Description_226;
		public byte Description_227;
		public byte Description_228;
		public byte Description_229;
		public byte Description_230;
		public byte Description_231;
		public byte Description_232;
		public byte Description_233;
		public byte Description_234;
		public byte Description_235;
		public byte Description_236;
		public byte Description_237;
		public byte Description_238;
		public byte Description_239;
		public byte Description_240;
		public byte Description_241;
		public byte Description_242;
		public byte Description_243;
		public byte Description_244;
		public byte Description_245;
		public byte Description_246;
		public byte Description_247;
		public byte Description_248;
		public byte Description_249;
		public byte Description_250;
		public byte Description_251;
		public byte Description_252;
		public byte Description_253;
		public byte Description_254;
		public byte Description_255;
		[NativeName(NativeNameType.Field, "vendorFaultCode")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong VendorFaultCode;
		[NativeName(NativeNameType.Field, "vendorFaultData")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong VendorFaultData;

		public unsafe VkDeviceFaultVendorInfoEXT(byte* description = default, ulong vendorFaultCode = default, ulong vendorFaultData = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
				Description_128 = description[128];
				Description_129 = description[129];
				Description_130 = description[130];
				Description_131 = description[131];
				Description_132 = description[132];
				Description_133 = description[133];
				Description_134 = description[134];
				Description_135 = description[135];
				Description_136 = description[136];
				Description_137 = description[137];
				Description_138 = description[138];
				Description_139 = description[139];
				Description_140 = description[140];
				Description_141 = description[141];
				Description_142 = description[142];
				Description_143 = description[143];
				Description_144 = description[144];
				Description_145 = description[145];
				Description_146 = description[146];
				Description_147 = description[147];
				Description_148 = description[148];
				Description_149 = description[149];
				Description_150 = description[150];
				Description_151 = description[151];
				Description_152 = description[152];
				Description_153 = description[153];
				Description_154 = description[154];
				Description_155 = description[155];
				Description_156 = description[156];
				Description_157 = description[157];
				Description_158 = description[158];
				Description_159 = description[159];
				Description_160 = description[160];
				Description_161 = description[161];
				Description_162 = description[162];
				Description_163 = description[163];
				Description_164 = description[164];
				Description_165 = description[165];
				Description_166 = description[166];
				Description_167 = description[167];
				Description_168 = description[168];
				Description_169 = description[169];
				Description_170 = description[170];
				Description_171 = description[171];
				Description_172 = description[172];
				Description_173 = description[173];
				Description_174 = description[174];
				Description_175 = description[175];
				Description_176 = description[176];
				Description_177 = description[177];
				Description_178 = description[178];
				Description_179 = description[179];
				Description_180 = description[180];
				Description_181 = description[181];
				Description_182 = description[182];
				Description_183 = description[183];
				Description_184 = description[184];
				Description_185 = description[185];
				Description_186 = description[186];
				Description_187 = description[187];
				Description_188 = description[188];
				Description_189 = description[189];
				Description_190 = description[190];
				Description_191 = description[191];
				Description_192 = description[192];
				Description_193 = description[193];
				Description_194 = description[194];
				Description_195 = description[195];
				Description_196 = description[196];
				Description_197 = description[197];
				Description_198 = description[198];
				Description_199 = description[199];
				Description_200 = description[200];
				Description_201 = description[201];
				Description_202 = description[202];
				Description_203 = description[203];
				Description_204 = description[204];
				Description_205 = description[205];
				Description_206 = description[206];
				Description_207 = description[207];
				Description_208 = description[208];
				Description_209 = description[209];
				Description_210 = description[210];
				Description_211 = description[211];
				Description_212 = description[212];
				Description_213 = description[213];
				Description_214 = description[214];
				Description_215 = description[215];
				Description_216 = description[216];
				Description_217 = description[217];
				Description_218 = description[218];
				Description_219 = description[219];
				Description_220 = description[220];
				Description_221 = description[221];
				Description_222 = description[222];
				Description_223 = description[223];
				Description_224 = description[224];
				Description_225 = description[225];
				Description_226 = description[226];
				Description_227 = description[227];
				Description_228 = description[228];
				Description_229 = description[229];
				Description_230 = description[230];
				Description_231 = description[231];
				Description_232 = description[232];
				Description_233 = description[233];
				Description_234 = description[234];
				Description_235 = description[235];
				Description_236 = description[236];
				Description_237 = description[237];
				Description_238 = description[238];
				Description_239 = description[239];
				Description_240 = description[240];
				Description_241 = description[241];
				Description_242 = description[242];
				Description_243 = description[243];
				Description_244 = description[244];
				Description_245 = description[245];
				Description_246 = description[246];
				Description_247 = description[247];
				Description_248 = description[248];
				Description_249 = description[249];
				Description_250 = description[250];
				Description_251 = description[251];
				Description_252 = description[252];
				Description_253 = description[253];
				Description_254 = description[254];
				Description_255 = description[255];
			}
			VendorFaultCode = vendorFaultCode;
			VendorFaultData = vendorFaultData;
		}

		public unsafe VkDeviceFaultVendorInfoEXT(Span<byte> description = default, ulong vendorFaultCode = default, ulong vendorFaultData = default)
		{
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
				Description_128 = description[128];
				Description_129 = description[129];
				Description_130 = description[130];
				Description_131 = description[131];
				Description_132 = description[132];
				Description_133 = description[133];
				Description_134 = description[134];
				Description_135 = description[135];
				Description_136 = description[136];
				Description_137 = description[137];
				Description_138 = description[138];
				Description_139 = description[139];
				Description_140 = description[140];
				Description_141 = description[141];
				Description_142 = description[142];
				Description_143 = description[143];
				Description_144 = description[144];
				Description_145 = description[145];
				Description_146 = description[146];
				Description_147 = description[147];
				Description_148 = description[148];
				Description_149 = description[149];
				Description_150 = description[150];
				Description_151 = description[151];
				Description_152 = description[152];
				Description_153 = description[153];
				Description_154 = description[154];
				Description_155 = description[155];
				Description_156 = description[156];
				Description_157 = description[157];
				Description_158 = description[158];
				Description_159 = description[159];
				Description_160 = description[160];
				Description_161 = description[161];
				Description_162 = description[162];
				Description_163 = description[163];
				Description_164 = description[164];
				Description_165 = description[165];
				Description_166 = description[166];
				Description_167 = description[167];
				Description_168 = description[168];
				Description_169 = description[169];
				Description_170 = description[170];
				Description_171 = description[171];
				Description_172 = description[172];
				Description_173 = description[173];
				Description_174 = description[174];
				Description_175 = description[175];
				Description_176 = description[176];
				Description_177 = description[177];
				Description_178 = description[178];
				Description_179 = description[179];
				Description_180 = description[180];
				Description_181 = description[181];
				Description_182 = description[182];
				Description_183 = description[183];
				Description_184 = description[184];
				Description_185 = description[185];
				Description_186 = description[186];
				Description_187 = description[187];
				Description_188 = description[188];
				Description_189 = description[189];
				Description_190 = description[190];
				Description_191 = description[191];
				Description_192 = description[192];
				Description_193 = description[193];
				Description_194 = description[194];
				Description_195 = description[195];
				Description_196 = description[196];
				Description_197 = description[197];
				Description_198 = description[198];
				Description_199 = description[199];
				Description_200 = description[200];
				Description_201 = description[201];
				Description_202 = description[202];
				Description_203 = description[203];
				Description_204 = description[204];
				Description_205 = description[205];
				Description_206 = description[206];
				Description_207 = description[207];
				Description_208 = description[208];
				Description_209 = description[209];
				Description_210 = description[210];
				Description_211 = description[211];
				Description_212 = description[212];
				Description_213 = description[213];
				Description_214 = description[214];
				Description_215 = description[215];
				Description_216 = description[216];
				Description_217 = description[217];
				Description_218 = description[218];
				Description_219 = description[219];
				Description_220 = description[220];
				Description_221 = description[221];
				Description_222 = description[222];
				Description_223 = description[223];
				Description_224 = description[224];
				Description_225 = description[225];
				Description_226 = description[226];
				Description_227 = description[227];
				Description_228 = description[228];
				Description_229 = description[229];
				Description_230 = description[230];
				Description_231 = description[231];
				Description_232 = description[232];
				Description_233 = description[233];
				Description_234 = description[234];
				Description_235 = description[235];
				Description_236 = description[236];
				Description_237 = description[237];
				Description_238 = description[238];
				Description_239 = description[239];
				Description_240 = description[240];
				Description_241 = description[241];
				Description_242 = description[242];
				Description_243 = description[243];
				Description_244 = description[244];
				Description_245 = description[245];
				Description_246 = description[246];
				Description_247 = description[247];
				Description_248 = description[248];
				Description_249 = description[249];
				Description_250 = description[250];
				Description_251 = description[251];
				Description_252 = description[252];
				Description_253 = description[253];
				Description_254 = description[254];
				Description_255 = description[255];
			}
			VendorFaultCode = vendorFaultCode;
			VendorFaultData = vendorFaultData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceFaultInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceFaultInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "description")]
		[NativeName(NativeNameType.Type, "char[256]")]
		public byte Description_0;
		public byte Description_1;
		public byte Description_2;
		public byte Description_3;
		public byte Description_4;
		public byte Description_5;
		public byte Description_6;
		public byte Description_7;
		public byte Description_8;
		public byte Description_9;
		public byte Description_10;
		public byte Description_11;
		public byte Description_12;
		public byte Description_13;
		public byte Description_14;
		public byte Description_15;
		public byte Description_16;
		public byte Description_17;
		public byte Description_18;
		public byte Description_19;
		public byte Description_20;
		public byte Description_21;
		public byte Description_22;
		public byte Description_23;
		public byte Description_24;
		public byte Description_25;
		public byte Description_26;
		public byte Description_27;
		public byte Description_28;
		public byte Description_29;
		public byte Description_30;
		public byte Description_31;
		public byte Description_32;
		public byte Description_33;
		public byte Description_34;
		public byte Description_35;
		public byte Description_36;
		public byte Description_37;
		public byte Description_38;
		public byte Description_39;
		public byte Description_40;
		public byte Description_41;
		public byte Description_42;
		public byte Description_43;
		public byte Description_44;
		public byte Description_45;
		public byte Description_46;
		public byte Description_47;
		public byte Description_48;
		public byte Description_49;
		public byte Description_50;
		public byte Description_51;
		public byte Description_52;
		public byte Description_53;
		public byte Description_54;
		public byte Description_55;
		public byte Description_56;
		public byte Description_57;
		public byte Description_58;
		public byte Description_59;
		public byte Description_60;
		public byte Description_61;
		public byte Description_62;
		public byte Description_63;
		public byte Description_64;
		public byte Description_65;
		public byte Description_66;
		public byte Description_67;
		public byte Description_68;
		public byte Description_69;
		public byte Description_70;
		public byte Description_71;
		public byte Description_72;
		public byte Description_73;
		public byte Description_74;
		public byte Description_75;
		public byte Description_76;
		public byte Description_77;
		public byte Description_78;
		public byte Description_79;
		public byte Description_80;
		public byte Description_81;
		public byte Description_82;
		public byte Description_83;
		public byte Description_84;
		public byte Description_85;
		public byte Description_86;
		public byte Description_87;
		public byte Description_88;
		public byte Description_89;
		public byte Description_90;
		public byte Description_91;
		public byte Description_92;
		public byte Description_93;
		public byte Description_94;
		public byte Description_95;
		public byte Description_96;
		public byte Description_97;
		public byte Description_98;
		public byte Description_99;
		public byte Description_100;
		public byte Description_101;
		public byte Description_102;
		public byte Description_103;
		public byte Description_104;
		public byte Description_105;
		public byte Description_106;
		public byte Description_107;
		public byte Description_108;
		public byte Description_109;
		public byte Description_110;
		public byte Description_111;
		public byte Description_112;
		public byte Description_113;
		public byte Description_114;
		public byte Description_115;
		public byte Description_116;
		public byte Description_117;
		public byte Description_118;
		public byte Description_119;
		public byte Description_120;
		public byte Description_121;
		public byte Description_122;
		public byte Description_123;
		public byte Description_124;
		public byte Description_125;
		public byte Description_126;
		public byte Description_127;
		public byte Description_128;
		public byte Description_129;
		public byte Description_130;
		public byte Description_131;
		public byte Description_132;
		public byte Description_133;
		public byte Description_134;
		public byte Description_135;
		public byte Description_136;
		public byte Description_137;
		public byte Description_138;
		public byte Description_139;
		public byte Description_140;
		public byte Description_141;
		public byte Description_142;
		public byte Description_143;
		public byte Description_144;
		public byte Description_145;
		public byte Description_146;
		public byte Description_147;
		public byte Description_148;
		public byte Description_149;
		public byte Description_150;
		public byte Description_151;
		public byte Description_152;
		public byte Description_153;
		public byte Description_154;
		public byte Description_155;
		public byte Description_156;
		public byte Description_157;
		public byte Description_158;
		public byte Description_159;
		public byte Description_160;
		public byte Description_161;
		public byte Description_162;
		public byte Description_163;
		public byte Description_164;
		public byte Description_165;
		public byte Description_166;
		public byte Description_167;
		public byte Description_168;
		public byte Description_169;
		public byte Description_170;
		public byte Description_171;
		public byte Description_172;
		public byte Description_173;
		public byte Description_174;
		public byte Description_175;
		public byte Description_176;
		public byte Description_177;
		public byte Description_178;
		public byte Description_179;
		public byte Description_180;
		public byte Description_181;
		public byte Description_182;
		public byte Description_183;
		public byte Description_184;
		public byte Description_185;
		public byte Description_186;
		public byte Description_187;
		public byte Description_188;
		public byte Description_189;
		public byte Description_190;
		public byte Description_191;
		public byte Description_192;
		public byte Description_193;
		public byte Description_194;
		public byte Description_195;
		public byte Description_196;
		public byte Description_197;
		public byte Description_198;
		public byte Description_199;
		public byte Description_200;
		public byte Description_201;
		public byte Description_202;
		public byte Description_203;
		public byte Description_204;
		public byte Description_205;
		public byte Description_206;
		public byte Description_207;
		public byte Description_208;
		public byte Description_209;
		public byte Description_210;
		public byte Description_211;
		public byte Description_212;
		public byte Description_213;
		public byte Description_214;
		public byte Description_215;
		public byte Description_216;
		public byte Description_217;
		public byte Description_218;
		public byte Description_219;
		public byte Description_220;
		public byte Description_221;
		public byte Description_222;
		public byte Description_223;
		public byte Description_224;
		public byte Description_225;
		public byte Description_226;
		public byte Description_227;
		public byte Description_228;
		public byte Description_229;
		public byte Description_230;
		public byte Description_231;
		public byte Description_232;
		public byte Description_233;
		public byte Description_234;
		public byte Description_235;
		public byte Description_236;
		public byte Description_237;
		public byte Description_238;
		public byte Description_239;
		public byte Description_240;
		public byte Description_241;
		public byte Description_242;
		public byte Description_243;
		public byte Description_244;
		public byte Description_245;
		public byte Description_246;
		public byte Description_247;
		public byte Description_248;
		public byte Description_249;
		public byte Description_250;
		public byte Description_251;
		public byte Description_252;
		public byte Description_253;
		public byte Description_254;
		public byte Description_255;
		[NativeName(NativeNameType.Field, "pAddressInfos")]
		[NativeName(NativeNameType.Type, "VkDeviceFaultAddressInfoEXT*")]
		public unsafe VkDeviceFaultAddressInfoEXT* PAddressInfos;
		[NativeName(NativeNameType.Field, "pVendorInfos")]
		[NativeName(NativeNameType.Type, "VkDeviceFaultVendorInfoEXT*")]
		public unsafe VkDeviceFaultVendorInfoEXT* PVendorInfos;
		[NativeName(NativeNameType.Field, "pVendorBinaryData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PVendorBinaryData;

		public unsafe VkDeviceFaultInfoEXT(VkStructureType sType = default, void* pNext = default, byte* description = default, VkDeviceFaultAddressInfoEXT* pAddressInfos = default, VkDeviceFaultVendorInfoEXT* pVendorInfos = default, void* pVendorBinaryData = default)
		{
			SType = sType;
			PNext = pNext;
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
				Description_128 = description[128];
				Description_129 = description[129];
				Description_130 = description[130];
				Description_131 = description[131];
				Description_132 = description[132];
				Description_133 = description[133];
				Description_134 = description[134];
				Description_135 = description[135];
				Description_136 = description[136];
				Description_137 = description[137];
				Description_138 = description[138];
				Description_139 = description[139];
				Description_140 = description[140];
				Description_141 = description[141];
				Description_142 = description[142];
				Description_143 = description[143];
				Description_144 = description[144];
				Description_145 = description[145];
				Description_146 = description[146];
				Description_147 = description[147];
				Description_148 = description[148];
				Description_149 = description[149];
				Description_150 = description[150];
				Description_151 = description[151];
				Description_152 = description[152];
				Description_153 = description[153];
				Description_154 = description[154];
				Description_155 = description[155];
				Description_156 = description[156];
				Description_157 = description[157];
				Description_158 = description[158];
				Description_159 = description[159];
				Description_160 = description[160];
				Description_161 = description[161];
				Description_162 = description[162];
				Description_163 = description[163];
				Description_164 = description[164];
				Description_165 = description[165];
				Description_166 = description[166];
				Description_167 = description[167];
				Description_168 = description[168];
				Description_169 = description[169];
				Description_170 = description[170];
				Description_171 = description[171];
				Description_172 = description[172];
				Description_173 = description[173];
				Description_174 = description[174];
				Description_175 = description[175];
				Description_176 = description[176];
				Description_177 = description[177];
				Description_178 = description[178];
				Description_179 = description[179];
				Description_180 = description[180];
				Description_181 = description[181];
				Description_182 = description[182];
				Description_183 = description[183];
				Description_184 = description[184];
				Description_185 = description[185];
				Description_186 = description[186];
				Description_187 = description[187];
				Description_188 = description[188];
				Description_189 = description[189];
				Description_190 = description[190];
				Description_191 = description[191];
				Description_192 = description[192];
				Description_193 = description[193];
				Description_194 = description[194];
				Description_195 = description[195];
				Description_196 = description[196];
				Description_197 = description[197];
				Description_198 = description[198];
				Description_199 = description[199];
				Description_200 = description[200];
				Description_201 = description[201];
				Description_202 = description[202];
				Description_203 = description[203];
				Description_204 = description[204];
				Description_205 = description[205];
				Description_206 = description[206];
				Description_207 = description[207];
				Description_208 = description[208];
				Description_209 = description[209];
				Description_210 = description[210];
				Description_211 = description[211];
				Description_212 = description[212];
				Description_213 = description[213];
				Description_214 = description[214];
				Description_215 = description[215];
				Description_216 = description[216];
				Description_217 = description[217];
				Description_218 = description[218];
				Description_219 = description[219];
				Description_220 = description[220];
				Description_221 = description[221];
				Description_222 = description[222];
				Description_223 = description[223];
				Description_224 = description[224];
				Description_225 = description[225];
				Description_226 = description[226];
				Description_227 = description[227];
				Description_228 = description[228];
				Description_229 = description[229];
				Description_230 = description[230];
				Description_231 = description[231];
				Description_232 = description[232];
				Description_233 = description[233];
				Description_234 = description[234];
				Description_235 = description[235];
				Description_236 = description[236];
				Description_237 = description[237];
				Description_238 = description[238];
				Description_239 = description[239];
				Description_240 = description[240];
				Description_241 = description[241];
				Description_242 = description[242];
				Description_243 = description[243];
				Description_244 = description[244];
				Description_245 = description[245];
				Description_246 = description[246];
				Description_247 = description[247];
				Description_248 = description[248];
				Description_249 = description[249];
				Description_250 = description[250];
				Description_251 = description[251];
				Description_252 = description[252];
				Description_253 = description[253];
				Description_254 = description[254];
				Description_255 = description[255];
			}
			PAddressInfos = pAddressInfos;
			PVendorInfos = pVendorInfos;
			PVendorBinaryData = pVendorBinaryData;
		}

		public unsafe VkDeviceFaultInfoEXT(VkStructureType sType = default, void* pNext = default, Span<byte> description = default, VkDeviceFaultAddressInfoEXT* pAddressInfos = default, VkDeviceFaultVendorInfoEXT* pVendorInfos = default, void* pVendorBinaryData = default)
		{
			SType = sType;
			PNext = pNext;
			if (description != default)
			{
				Description_0 = description[0];
				Description_1 = description[1];
				Description_2 = description[2];
				Description_3 = description[3];
				Description_4 = description[4];
				Description_5 = description[5];
				Description_6 = description[6];
				Description_7 = description[7];
				Description_8 = description[8];
				Description_9 = description[9];
				Description_10 = description[10];
				Description_11 = description[11];
				Description_12 = description[12];
				Description_13 = description[13];
				Description_14 = description[14];
				Description_15 = description[15];
				Description_16 = description[16];
				Description_17 = description[17];
				Description_18 = description[18];
				Description_19 = description[19];
				Description_20 = description[20];
				Description_21 = description[21];
				Description_22 = description[22];
				Description_23 = description[23];
				Description_24 = description[24];
				Description_25 = description[25];
				Description_26 = description[26];
				Description_27 = description[27];
				Description_28 = description[28];
				Description_29 = description[29];
				Description_30 = description[30];
				Description_31 = description[31];
				Description_32 = description[32];
				Description_33 = description[33];
				Description_34 = description[34];
				Description_35 = description[35];
				Description_36 = description[36];
				Description_37 = description[37];
				Description_38 = description[38];
				Description_39 = description[39];
				Description_40 = description[40];
				Description_41 = description[41];
				Description_42 = description[42];
				Description_43 = description[43];
				Description_44 = description[44];
				Description_45 = description[45];
				Description_46 = description[46];
				Description_47 = description[47];
				Description_48 = description[48];
				Description_49 = description[49];
				Description_50 = description[50];
				Description_51 = description[51];
				Description_52 = description[52];
				Description_53 = description[53];
				Description_54 = description[54];
				Description_55 = description[55];
				Description_56 = description[56];
				Description_57 = description[57];
				Description_58 = description[58];
				Description_59 = description[59];
				Description_60 = description[60];
				Description_61 = description[61];
				Description_62 = description[62];
				Description_63 = description[63];
				Description_64 = description[64];
				Description_65 = description[65];
				Description_66 = description[66];
				Description_67 = description[67];
				Description_68 = description[68];
				Description_69 = description[69];
				Description_70 = description[70];
				Description_71 = description[71];
				Description_72 = description[72];
				Description_73 = description[73];
				Description_74 = description[74];
				Description_75 = description[75];
				Description_76 = description[76];
				Description_77 = description[77];
				Description_78 = description[78];
				Description_79 = description[79];
				Description_80 = description[80];
				Description_81 = description[81];
				Description_82 = description[82];
				Description_83 = description[83];
				Description_84 = description[84];
				Description_85 = description[85];
				Description_86 = description[86];
				Description_87 = description[87];
				Description_88 = description[88];
				Description_89 = description[89];
				Description_90 = description[90];
				Description_91 = description[91];
				Description_92 = description[92];
				Description_93 = description[93];
				Description_94 = description[94];
				Description_95 = description[95];
				Description_96 = description[96];
				Description_97 = description[97];
				Description_98 = description[98];
				Description_99 = description[99];
				Description_100 = description[100];
				Description_101 = description[101];
				Description_102 = description[102];
				Description_103 = description[103];
				Description_104 = description[104];
				Description_105 = description[105];
				Description_106 = description[106];
				Description_107 = description[107];
				Description_108 = description[108];
				Description_109 = description[109];
				Description_110 = description[110];
				Description_111 = description[111];
				Description_112 = description[112];
				Description_113 = description[113];
				Description_114 = description[114];
				Description_115 = description[115];
				Description_116 = description[116];
				Description_117 = description[117];
				Description_118 = description[118];
				Description_119 = description[119];
				Description_120 = description[120];
				Description_121 = description[121];
				Description_122 = description[122];
				Description_123 = description[123];
				Description_124 = description[124];
				Description_125 = description[125];
				Description_126 = description[126];
				Description_127 = description[127];
				Description_128 = description[128];
				Description_129 = description[129];
				Description_130 = description[130];
				Description_131 = description[131];
				Description_132 = description[132];
				Description_133 = description[133];
				Description_134 = description[134];
				Description_135 = description[135];
				Description_136 = description[136];
				Description_137 = description[137];
				Description_138 = description[138];
				Description_139 = description[139];
				Description_140 = description[140];
				Description_141 = description[141];
				Description_142 = description[142];
				Description_143 = description[143];
				Description_144 = description[144];
				Description_145 = description[145];
				Description_146 = description[146];
				Description_147 = description[147];
				Description_148 = description[148];
				Description_149 = description[149];
				Description_150 = description[150];
				Description_151 = description[151];
				Description_152 = description[152];
				Description_153 = description[153];
				Description_154 = description[154];
				Description_155 = description[155];
				Description_156 = description[156];
				Description_157 = description[157];
				Description_158 = description[158];
				Description_159 = description[159];
				Description_160 = description[160];
				Description_161 = description[161];
				Description_162 = description[162];
				Description_163 = description[163];
				Description_164 = description[164];
				Description_165 = description[165];
				Description_166 = description[166];
				Description_167 = description[167];
				Description_168 = description[168];
				Description_169 = description[169];
				Description_170 = description[170];
				Description_171 = description[171];
				Description_172 = description[172];
				Description_173 = description[173];
				Description_174 = description[174];
				Description_175 = description[175];
				Description_176 = description[176];
				Description_177 = description[177];
				Description_178 = description[178];
				Description_179 = description[179];
				Description_180 = description[180];
				Description_181 = description[181];
				Description_182 = description[182];
				Description_183 = description[183];
				Description_184 = description[184];
				Description_185 = description[185];
				Description_186 = description[186];
				Description_187 = description[187];
				Description_188 = description[188];
				Description_189 = description[189];
				Description_190 = description[190];
				Description_191 = description[191];
				Description_192 = description[192];
				Description_193 = description[193];
				Description_194 = description[194];
				Description_195 = description[195];
				Description_196 = description[196];
				Description_197 = description[197];
				Description_198 = description[198];
				Description_199 = description[199];
				Description_200 = description[200];
				Description_201 = description[201];
				Description_202 = description[202];
				Description_203 = description[203];
				Description_204 = description[204];
				Description_205 = description[205];
				Description_206 = description[206];
				Description_207 = description[207];
				Description_208 = description[208];
				Description_209 = description[209];
				Description_210 = description[210];
				Description_211 = description[211];
				Description_212 = description[212];
				Description_213 = description[213];
				Description_214 = description[214];
				Description_215 = description[215];
				Description_216 = description[216];
				Description_217 = description[217];
				Description_218 = description[218];
				Description_219 = description[219];
				Description_220 = description[220];
				Description_221 = description[221];
				Description_222 = description[222];
				Description_223 = description[223];
				Description_224 = description[224];
				Description_225 = description[225];
				Description_226 = description[226];
				Description_227 = description[227];
				Description_228 = description[228];
				Description_229 = description[229];
				Description_230 = description[230];
				Description_231 = description[231];
				Description_232 = description[232];
				Description_233 = description[233];
				Description_234 = description[234];
				Description_235 = description[235];
				Description_236 = description[236];
				Description_237 = description[237];
				Description_238 = description[238];
				Description_239 = description[239];
				Description_240 = description[240];
				Description_241 = description[241];
				Description_242 = description[242];
				Description_243 = description[243];
				Description_244 = description[244];
				Description_245 = description[245];
				Description_246 = description[246];
				Description_247 = description[247];
				Description_248 = description[248];
				Description_249 = description[249];
				Description_250 = description[250];
				Description_251 = description[251];
				Description_252 = description[252];
				Description_253 = description[253];
				Description_254 = description[254];
				Description_255 = description[255];
			}
			PAddressInfos = pAddressInfos;
			PVendorInfos = pVendorInfos;
			PVendorBinaryData = pVendorBinaryData;
		}


	}
}
