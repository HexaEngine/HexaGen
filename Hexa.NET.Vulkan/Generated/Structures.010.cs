// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.Vulkan
{

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureCreateInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureCreateInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "createFlags")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureCreateFlagsKHR")]
		public uint CreateFlags;
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Size;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureTypeKHR")]
		public VkAccelerationStructureTypeKHR Type;
		[NativeName(NativeNameType.Field, "deviceAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong DeviceAddress;

		public unsafe VkAccelerationStructureCreateInfoKHR(VkStructureType sType = default, void* pNext = default, uint createFlags = default, VkBuffer buffer = default, ulong offset = default, ulong size = default, VkAccelerationStructureTypeKHR type = default, ulong deviceAddress = default)
		{
			SType = sType;
			PNext = pNext;
			CreateFlags = createFlags;
			Buffer = buffer;
			Offset = offset;
			Size = size;
			Type = type;
			DeviceAddress = deviceAddress;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkWriteDescriptorSetAccelerationStructureKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkWriteDescriptorSetAccelerationStructureKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructureCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AccelerationStructureCount;
		[NativeName(NativeNameType.Field, "pAccelerationStructures")]
		[NativeName(NativeNameType.Type, "const VkAccelerationStructureKHR*")]
		public unsafe VkAccelerationStructureKHR* PAccelerationStructures;

		public unsafe VkWriteDescriptorSetAccelerationStructureKHR(VkStructureType sType = default, void* pNext = default, uint accelerationStructureCount = default, VkAccelerationStructureKHR* pAccelerationStructures = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructureCount = accelerationStructureCount;
			PAccelerationStructures = pAccelerationStructures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceAccelerationStructureFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceAccelerationStructureFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AccelerationStructure;
		[NativeName(NativeNameType.Field, "accelerationStructureCaptureReplay")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AccelerationStructureCaptureReplay;
		[NativeName(NativeNameType.Field, "accelerationStructureIndirectBuild")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AccelerationStructureIndirectBuild;
		[NativeName(NativeNameType.Field, "accelerationStructureHostCommands")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AccelerationStructureHostCommands;
		[NativeName(NativeNameType.Field, "descriptorBindingAccelerationStructureUpdateAfterBind")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DescriptorBindingAccelerationStructureUpdateAfterBind;

		public unsafe VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint accelerationStructure = default, uint accelerationStructureCaptureReplay = default, uint accelerationStructureIndirectBuild = default, uint accelerationStructureHostCommands = default, uint descriptorBindingAccelerationStructureUpdateAfterBind = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructure = accelerationStructure;
			AccelerationStructureCaptureReplay = accelerationStructureCaptureReplay;
			AccelerationStructureIndirectBuild = accelerationStructureIndirectBuild;
			AccelerationStructureHostCommands = accelerationStructureHostCommands;
			DescriptorBindingAccelerationStructureUpdateAfterBind = descriptorBindingAccelerationStructureUpdateAfterBind;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceAccelerationStructurePropertiesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceAccelerationStructurePropertiesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxGeometryCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxGeometryCount;
		[NativeName(NativeNameType.Field, "maxInstanceCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxInstanceCount;
		[NativeName(NativeNameType.Field, "maxPrimitiveCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxPrimitiveCount;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorAccelerationStructures")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorAccelerationStructures;
		[NativeName(NativeNameType.Field, "maxPerStageDescriptorUpdateAfterBindAccelerationStructures")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPerStageDescriptorUpdateAfterBindAccelerationStructures;
		[NativeName(NativeNameType.Field, "maxDescriptorSetAccelerationStructures")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetAccelerationStructures;
		[NativeName(NativeNameType.Field, "maxDescriptorSetUpdateAfterBindAccelerationStructures")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetUpdateAfterBindAccelerationStructures;
		[NativeName(NativeNameType.Field, "minAccelerationStructureScratchOffsetAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinAccelerationStructureScratchOffsetAlignment;

		public unsafe VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkStructureType sType = default, void* pNext = default, ulong maxGeometryCount = default, ulong maxInstanceCount = default, ulong maxPrimitiveCount = default, uint maxPerStageDescriptorAccelerationStructures = default, uint maxPerStageDescriptorUpdateAfterBindAccelerationStructures = default, uint maxDescriptorSetAccelerationStructures = default, uint maxDescriptorSetUpdateAfterBindAccelerationStructures = default, uint minAccelerationStructureScratchOffsetAlignment = default)
		{
			SType = sType;
			PNext = pNext;
			MaxGeometryCount = maxGeometryCount;
			MaxInstanceCount = maxInstanceCount;
			MaxPrimitiveCount = maxPrimitiveCount;
			MaxPerStageDescriptorAccelerationStructures = maxPerStageDescriptorAccelerationStructures;
			MaxPerStageDescriptorUpdateAfterBindAccelerationStructures = maxPerStageDescriptorUpdateAfterBindAccelerationStructures;
			MaxDescriptorSetAccelerationStructures = maxDescriptorSetAccelerationStructures;
			MaxDescriptorSetUpdateAfterBindAccelerationStructures = maxDescriptorSetUpdateAfterBindAccelerationStructures;
			MinAccelerationStructureScratchOffsetAlignment = minAccelerationStructureScratchOffsetAlignment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureDeviceAddressInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureDeviceAddressInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureKHR")]
		public VkAccelerationStructureKHR AccelerationStructure;

		public unsafe VkAccelerationStructureDeviceAddressInfoKHR(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureKHR accelerationStructure = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructure = accelerationStructure;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureVersionInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureVersionInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pVersionData")]
		[NativeName(NativeNameType.Type, "const uint8_t*")]
		public unsafe byte* PVersionData;

		public unsafe VkAccelerationStructureVersionInfoKHR(VkStructureType sType = default, void* pNext = default, byte* pVersionData = default)
		{
			SType = sType;
			PNext = pNext;
			PVersionData = pVersionData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyAccelerationStructureToMemoryInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyAccelerationStructureToMemoryInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "src")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureKHR")]
		public VkAccelerationStructureKHR Src;
		[NativeName(NativeNameType.Field, "dst")]
		[NativeName(NativeNameType.Type, "VkDeviceOrHostAddressKHR")]
		public VkDeviceOrHostAddressKHR Dst;
		[NativeName(NativeNameType.Field, "mode")]
		[NativeName(NativeNameType.Type, "VkCopyAccelerationStructureModeKHR")]
		public VkCopyAccelerationStructureModeKHR Mode;

		public unsafe VkCopyAccelerationStructureToMemoryInfoKHR(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureKHR src = default, VkDeviceOrHostAddressKHR dst = default, VkCopyAccelerationStructureModeKHR mode = default)
		{
			SType = sType;
			PNext = pNext;
			Src = src;
			Dst = dst;
			Mode = mode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyMemoryToAccelerationStructureInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyMemoryToAccelerationStructureInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "src")]
		[NativeName(NativeNameType.Type, "VkDeviceOrHostAddressConstKHR")]
		public VkDeviceOrHostAddressConstKHR Src;
		[NativeName(NativeNameType.Field, "dst")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureKHR")]
		public VkAccelerationStructureKHR Dst;
		[NativeName(NativeNameType.Field, "mode")]
		[NativeName(NativeNameType.Type, "VkCopyAccelerationStructureModeKHR")]
		public VkCopyAccelerationStructureModeKHR Mode;

		public unsafe VkCopyMemoryToAccelerationStructureInfoKHR(VkStructureType sType = default, void* pNext = default, VkDeviceOrHostAddressConstKHR src = default, VkAccelerationStructureKHR dst = default, VkCopyAccelerationStructureModeKHR mode = default)
		{
			SType = sType;
			PNext = pNext;
			Src = src;
			Dst = dst;
			Mode = mode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCopyAccelerationStructureInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCopyAccelerationStructureInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "src")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureKHR")]
		public VkAccelerationStructureKHR Src;
		[NativeName(NativeNameType.Field, "dst")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureKHR")]
		public VkAccelerationStructureKHR Dst;
		[NativeName(NativeNameType.Field, "mode")]
		[NativeName(NativeNameType.Type, "VkCopyAccelerationStructureModeKHR")]
		public VkCopyAccelerationStructureModeKHR Mode;

		public unsafe VkCopyAccelerationStructureInfoKHR(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureKHR src = default, VkAccelerationStructureKHR dst = default, VkCopyAccelerationStructureModeKHR mode = default)
		{
			SType = sType;
			PNext = pNext;
			Src = src;
			Dst = dst;
			Mode = mode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureBuildSizesInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureBuildSizesInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructureSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong AccelerationStructureSize;
		[NativeName(NativeNameType.Field, "updateScratchSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong UpdateScratchSize;
		[NativeName(NativeNameType.Field, "buildScratchSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong BuildScratchSize;

		public unsafe VkAccelerationStructureBuildSizesInfoKHR(VkStructureType sType = default, void* pNext = default, ulong accelerationStructureSize = default, ulong updateScratchSize = default, ulong buildScratchSize = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructureSize = accelerationStructureSize;
			UpdateScratchSize = updateScratchSize;
			BuildScratchSize = buildScratchSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRayTracingShaderGroupCreateInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRayTracingShaderGroupCreateInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkRayTracingShaderGroupTypeKHR")]
		public VkRayTracingShaderGroupTypeKHR Type;
		[NativeName(NativeNameType.Field, "generalShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GeneralShader;
		[NativeName(NativeNameType.Field, "closestHitShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ClosestHitShader;
		[NativeName(NativeNameType.Field, "anyHitShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AnyHitShader;
		[NativeName(NativeNameType.Field, "intersectionShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint IntersectionShader;
		[NativeName(NativeNameType.Field, "pShaderGroupCaptureReplayHandle")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PShaderGroupCaptureReplayHandle;

		public unsafe VkRayTracingShaderGroupCreateInfoKHR(VkStructureType sType = default, void* pNext = default, VkRayTracingShaderGroupTypeKHR type = default, uint generalShader = default, uint closestHitShader = default, uint anyHitShader = default, uint intersectionShader = default, void* pShaderGroupCaptureReplayHandle = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			GeneralShader = generalShader;
			ClosestHitShader = closestHitShader;
			AnyHitShader = anyHitShader;
			IntersectionShader = intersectionShader;
			PShaderGroupCaptureReplayHandle = pShaderGroupCaptureReplayHandle;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRayTracingPipelineInterfaceCreateInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRayTracingPipelineInterfaceCreateInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxPipelineRayPayloadSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPipelineRayPayloadSize;
		[NativeName(NativeNameType.Field, "maxPipelineRayHitAttributeSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPipelineRayHitAttributeSize;

		public unsafe VkRayTracingPipelineInterfaceCreateInfoKHR(VkStructureType sType = default, void* pNext = default, uint maxPipelineRayPayloadSize = default, uint maxPipelineRayHitAttributeSize = default)
		{
			SType = sType;
			PNext = pNext;
			MaxPipelineRayPayloadSize = maxPipelineRayPayloadSize;
			MaxPipelineRayHitAttributeSize = maxPipelineRayHitAttributeSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRayTracingPipelineCreateInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRayTracingPipelineCreateInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCreateFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "stageCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StageCount;
		[NativeName(NativeNameType.Field, "pStages")]
		[NativeName(NativeNameType.Type, "const VkPipelineShaderStageCreateInfo*")]
		public unsafe VkPipelineShaderStageCreateInfo* PStages;
		[NativeName(NativeNameType.Field, "groupCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCount;
		[NativeName(NativeNameType.Field, "pGroups")]
		[NativeName(NativeNameType.Type, "const VkRayTracingShaderGroupCreateInfoKHR*")]
		public unsafe VkRayTracingShaderGroupCreateInfoKHR* PGroups;
		[NativeName(NativeNameType.Field, "maxPipelineRayRecursionDepth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPipelineRayRecursionDepth;
		[NativeName(NativeNameType.Field, "pLibraryInfo")]
		[NativeName(NativeNameType.Type, "const VkPipelineLibraryCreateInfoKHR*")]
		public unsafe VkPipelineLibraryCreateInfoKHR* PLibraryInfo;
		[NativeName(NativeNameType.Field, "pLibraryInterface")]
		[NativeName(NativeNameType.Type, "const VkRayTracingPipelineInterfaceCreateInfoKHR*")]
		public unsafe VkRayTracingPipelineInterfaceCreateInfoKHR* PLibraryInterface;
		[NativeName(NativeNameType.Field, "pDynamicState")]
		[NativeName(NativeNameType.Type, "const VkPipelineDynamicStateCreateInfo*")]
		public unsafe VkPipelineDynamicStateCreateInfo* PDynamicState;
		[NativeName(NativeNameType.Field, "layout")]
		[NativeName(NativeNameType.Type, "VkPipelineLayout")]
		public VkPipelineLayout Layout;
		[NativeName(NativeNameType.Field, "basePipelineHandle")]
		[NativeName(NativeNameType.Type, "VkPipeline")]
		public VkPipeline BasePipelineHandle;
		[NativeName(NativeNameType.Field, "basePipelineIndex")]
		[NativeName(NativeNameType.Type, "int32_t")]
		public int BasePipelineIndex;

		public unsafe VkRayTracingPipelineCreateInfoKHR(VkStructureType sType = default, void* pNext = default, uint flags = default, uint stageCount = default, VkPipelineShaderStageCreateInfo* pStages = default, uint groupCount = default, VkRayTracingShaderGroupCreateInfoKHR* pGroups = default, uint maxPipelineRayRecursionDepth = default, VkPipelineLibraryCreateInfoKHR* pLibraryInfo = default, VkRayTracingPipelineInterfaceCreateInfoKHR* pLibraryInterface = default, VkPipelineDynamicStateCreateInfo* pDynamicState = default, VkPipelineLayout layout = default, VkPipeline basePipelineHandle = default, int basePipelineIndex = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			StageCount = stageCount;
			PStages = pStages;
			GroupCount = groupCount;
			PGroups = pGroups;
			MaxPipelineRayRecursionDepth = maxPipelineRayRecursionDepth;
			PLibraryInfo = pLibraryInfo;
			PLibraryInterface = pLibraryInterface;
			PDynamicState = pDynamicState;
			Layout = layout;
			BasePipelineHandle = basePipelineHandle;
			BasePipelineIndex = basePipelineIndex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayTracingPipelineFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayTracingPipelineFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rayTracingPipeline")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingPipeline;
		[NativeName(NativeNameType.Field, "rayTracingPipelineShaderGroupHandleCaptureReplay")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingPipelineShaderGroupHandleCaptureReplay;
		[NativeName(NativeNameType.Field, "rayTracingPipelineShaderGroupHandleCaptureReplayMixed")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingPipelineShaderGroupHandleCaptureReplayMixed;
		[NativeName(NativeNameType.Field, "rayTracingPipelineTraceRaysIndirect")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingPipelineTraceRaysIndirect;
		[NativeName(NativeNameType.Field, "rayTraversalPrimitiveCulling")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTraversalPrimitiveCulling;

		public unsafe VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint rayTracingPipeline = default, uint rayTracingPipelineShaderGroupHandleCaptureReplay = default, uint rayTracingPipelineShaderGroupHandleCaptureReplayMixed = default, uint rayTracingPipelineTraceRaysIndirect = default, uint rayTraversalPrimitiveCulling = default)
		{
			SType = sType;
			PNext = pNext;
			RayTracingPipeline = rayTracingPipeline;
			RayTracingPipelineShaderGroupHandleCaptureReplay = rayTracingPipelineShaderGroupHandleCaptureReplay;
			RayTracingPipelineShaderGroupHandleCaptureReplayMixed = rayTracingPipelineShaderGroupHandleCaptureReplayMixed;
			RayTracingPipelineTraceRaysIndirect = rayTracingPipelineTraceRaysIndirect;
			RayTraversalPrimitiveCulling = rayTraversalPrimitiveCulling;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayTracingPipelinePropertiesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayTracingPipelinePropertiesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderGroupHandleSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupHandleSize;
		[NativeName(NativeNameType.Field, "maxRayRecursionDepth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxRayRecursionDepth;
		[NativeName(NativeNameType.Field, "maxShaderGroupStride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxShaderGroupStride;
		[NativeName(NativeNameType.Field, "shaderGroupBaseAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupBaseAlignment;
		[NativeName(NativeNameType.Field, "shaderGroupHandleCaptureReplaySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupHandleCaptureReplaySize;
		[NativeName(NativeNameType.Field, "maxRayDispatchInvocationCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxRayDispatchInvocationCount;
		[NativeName(NativeNameType.Field, "shaderGroupHandleAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupHandleAlignment;
		[NativeName(NativeNameType.Field, "maxRayHitAttributeSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxRayHitAttributeSize;

		public unsafe VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkStructureType sType = default, void* pNext = default, uint shaderGroupHandleSize = default, uint maxRayRecursionDepth = default, uint maxShaderGroupStride = default, uint shaderGroupBaseAlignment = default, uint shaderGroupHandleCaptureReplaySize = default, uint maxRayDispatchInvocationCount = default, uint shaderGroupHandleAlignment = default, uint maxRayHitAttributeSize = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderGroupHandleSize = shaderGroupHandleSize;
			MaxRayRecursionDepth = maxRayRecursionDepth;
			MaxShaderGroupStride = maxShaderGroupStride;
			ShaderGroupBaseAlignment = shaderGroupBaseAlignment;
			ShaderGroupHandleCaptureReplaySize = shaderGroupHandleCaptureReplaySize;
			MaxRayDispatchInvocationCount = maxRayDispatchInvocationCount;
			ShaderGroupHandleAlignment = shaderGroupHandleAlignment;
			MaxRayHitAttributeSize = maxRayHitAttributeSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkStridedDeviceAddressRegionKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkStridedDeviceAddressRegionKHR
	{
		[NativeName(NativeNameType.Field, "deviceAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong DeviceAddress;
		[NativeName(NativeNameType.Field, "stride")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Stride;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Size;

		public unsafe VkStridedDeviceAddressRegionKHR(ulong deviceAddress = default, ulong stride = default, ulong size = default)
		{
			DeviceAddress = deviceAddress;
			Stride = stride;
			Size = size;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkTraceRaysIndirectCommandKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkTraceRaysIndirectCommandKHR
	{
		[NativeName(NativeNameType.Field, "width")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Width;
		[NativeName(NativeNameType.Field, "height")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Height;
		[NativeName(NativeNameType.Field, "depth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Depth;

		public unsafe VkTraceRaysIndirectCommandKHR(uint width = default, uint height = default, uint depth = default)
		{
			Width = width;
			Height = height;
			Depth = depth;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayQueryFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayQueryFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rayQuery")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayQuery;

		public unsafe VkPhysicalDeviceRayQueryFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint rayQuery = default)
		{
			SType = sType;
			PNext = pNext;
			RayQuery = rayQuery;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMeshShaderFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMeshShaderFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "taskShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TaskShader;
		[NativeName(NativeNameType.Field, "meshShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MeshShader;
		[NativeName(NativeNameType.Field, "multiviewMeshShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MultiviewMeshShader;
		[NativeName(NativeNameType.Field, "primitiveFragmentShadingRateMeshShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrimitiveFragmentShadingRateMeshShader;
		[NativeName(NativeNameType.Field, "meshShaderQueries")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MeshShaderQueries;

		public unsafe VkPhysicalDeviceMeshShaderFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint taskShader = default, uint meshShader = default, uint multiviewMeshShader = default, uint primitiveFragmentShadingRateMeshShader = default, uint meshShaderQueries = default)
		{
			SType = sType;
			PNext = pNext;
			TaskShader = taskShader;
			MeshShader = meshShader;
			MultiviewMeshShader = multiviewMeshShader;
			PrimitiveFragmentShadingRateMeshShader = primitiveFragmentShadingRateMeshShader;
			MeshShaderQueries = meshShaderQueries;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMeshShaderPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMeshShaderPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupTotalCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskWorkGroupTotalCount;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupCount")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxTaskWorkGroupCount_0;
		public uint MaxTaskWorkGroupCount_1;
		public uint MaxTaskWorkGroupCount_2;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxTaskWorkGroupSize_0;
		public uint MaxTaskWorkGroupSize_1;
		public uint MaxTaskWorkGroupSize_2;
		[NativeName(NativeNameType.Field, "maxTaskPayloadSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskPayloadSize;
		[NativeName(NativeNameType.Field, "maxTaskSharedMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskSharedMemorySize;
		[NativeName(NativeNameType.Field, "maxTaskPayloadAndSharedMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskPayloadAndSharedMemorySize;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupTotalCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshWorkGroupTotalCount;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupCount")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxMeshWorkGroupCount_0;
		public uint MaxMeshWorkGroupCount_1;
		public uint MaxMeshWorkGroupCount_2;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxMeshWorkGroupSize_0;
		public uint MaxMeshWorkGroupSize_1;
		public uint MaxMeshWorkGroupSize_2;
		[NativeName(NativeNameType.Field, "maxMeshSharedMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshSharedMemorySize;
		[NativeName(NativeNameType.Field, "maxMeshPayloadAndSharedMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshPayloadAndSharedMemorySize;
		[NativeName(NativeNameType.Field, "maxMeshOutputMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputMemorySize;
		[NativeName(NativeNameType.Field, "maxMeshPayloadAndOutputMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshPayloadAndOutputMemorySize;
		[NativeName(NativeNameType.Field, "maxMeshOutputComponents")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputComponents;
		[NativeName(NativeNameType.Field, "maxMeshOutputVertices")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputVertices;
		[NativeName(NativeNameType.Field, "maxMeshOutputPrimitives")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputPrimitives;
		[NativeName(NativeNameType.Field, "maxMeshOutputLayers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputLayers;
		[NativeName(NativeNameType.Field, "maxMeshMultiviewViewCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshMultiviewViewCount;
		[NativeName(NativeNameType.Field, "meshOutputPerVertexGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MeshOutputPerVertexGranularity;
		[NativeName(NativeNameType.Field, "meshOutputPerPrimitiveGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MeshOutputPerPrimitiveGranularity;
		[NativeName(NativeNameType.Field, "maxPreferredTaskWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPreferredTaskWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "maxPreferredMeshWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxPreferredMeshWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "prefersLocalInvocationVertexOutput")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrefersLocalInvocationVertexOutput;
		[NativeName(NativeNameType.Field, "prefersLocalInvocationPrimitiveOutput")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrefersLocalInvocationPrimitiveOutput;
		[NativeName(NativeNameType.Field, "prefersCompactVertexOutput")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrefersCompactVertexOutput;
		[NativeName(NativeNameType.Field, "prefersCompactPrimitiveOutput")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrefersCompactPrimitiveOutput;

		public unsafe VkPhysicalDeviceMeshShaderPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxTaskWorkGroupTotalCount = default, uint* maxTaskWorkGroupCount = default, uint maxTaskWorkGroupInvocations = default, uint* maxTaskWorkGroupSize = default, uint maxTaskPayloadSize = default, uint maxTaskSharedMemorySize = default, uint maxTaskPayloadAndSharedMemorySize = default, uint maxMeshWorkGroupTotalCount = default, uint* maxMeshWorkGroupCount = default, uint maxMeshWorkGroupInvocations = default, uint* maxMeshWorkGroupSize = default, uint maxMeshSharedMemorySize = default, uint maxMeshPayloadAndSharedMemorySize = default, uint maxMeshOutputMemorySize = default, uint maxMeshPayloadAndOutputMemorySize = default, uint maxMeshOutputComponents = default, uint maxMeshOutputVertices = default, uint maxMeshOutputPrimitives = default, uint maxMeshOutputLayers = default, uint maxMeshMultiviewViewCount = default, uint meshOutputPerVertexGranularity = default, uint meshOutputPerPrimitiveGranularity = default, uint maxPreferredTaskWorkGroupInvocations = default, uint maxPreferredMeshWorkGroupInvocations = default, uint prefersLocalInvocationVertexOutput = default, uint prefersLocalInvocationPrimitiveOutput = default, uint prefersCompactVertexOutput = default, uint prefersCompactPrimitiveOutput = default)
		{
			SType = sType;
			PNext = pNext;
			MaxTaskWorkGroupTotalCount = maxTaskWorkGroupTotalCount;
			if (maxTaskWorkGroupCount != default)
			{
				MaxTaskWorkGroupCount_0 = maxTaskWorkGroupCount[0];
				MaxTaskWorkGroupCount_1 = maxTaskWorkGroupCount[1];
				MaxTaskWorkGroupCount_2 = maxTaskWorkGroupCount[2];
			}
			MaxTaskWorkGroupInvocations = maxTaskWorkGroupInvocations;
			if (maxTaskWorkGroupSize != default)
			{
				MaxTaskWorkGroupSize_0 = maxTaskWorkGroupSize[0];
				MaxTaskWorkGroupSize_1 = maxTaskWorkGroupSize[1];
				MaxTaskWorkGroupSize_2 = maxTaskWorkGroupSize[2];
			}
			MaxTaskPayloadSize = maxTaskPayloadSize;
			MaxTaskSharedMemorySize = maxTaskSharedMemorySize;
			MaxTaskPayloadAndSharedMemorySize = maxTaskPayloadAndSharedMemorySize;
			MaxMeshWorkGroupTotalCount = maxMeshWorkGroupTotalCount;
			if (maxMeshWorkGroupCount != default)
			{
				MaxMeshWorkGroupCount_0 = maxMeshWorkGroupCount[0];
				MaxMeshWorkGroupCount_1 = maxMeshWorkGroupCount[1];
				MaxMeshWorkGroupCount_2 = maxMeshWorkGroupCount[2];
			}
			MaxMeshWorkGroupInvocations = maxMeshWorkGroupInvocations;
			if (maxMeshWorkGroupSize != default)
			{
				MaxMeshWorkGroupSize_0 = maxMeshWorkGroupSize[0];
				MaxMeshWorkGroupSize_1 = maxMeshWorkGroupSize[1];
				MaxMeshWorkGroupSize_2 = maxMeshWorkGroupSize[2];
			}
			MaxMeshSharedMemorySize = maxMeshSharedMemorySize;
			MaxMeshPayloadAndSharedMemorySize = maxMeshPayloadAndSharedMemorySize;
			MaxMeshOutputMemorySize = maxMeshOutputMemorySize;
			MaxMeshPayloadAndOutputMemorySize = maxMeshPayloadAndOutputMemorySize;
			MaxMeshOutputComponents = maxMeshOutputComponents;
			MaxMeshOutputVertices = maxMeshOutputVertices;
			MaxMeshOutputPrimitives = maxMeshOutputPrimitives;
			MaxMeshOutputLayers = maxMeshOutputLayers;
			MaxMeshMultiviewViewCount = maxMeshMultiviewViewCount;
			MeshOutputPerVertexGranularity = meshOutputPerVertexGranularity;
			MeshOutputPerPrimitiveGranularity = meshOutputPerPrimitiveGranularity;
			MaxPreferredTaskWorkGroupInvocations = maxPreferredTaskWorkGroupInvocations;
			MaxPreferredMeshWorkGroupInvocations = maxPreferredMeshWorkGroupInvocations;
			PrefersLocalInvocationVertexOutput = prefersLocalInvocationVertexOutput;
			PrefersLocalInvocationPrimitiveOutput = prefersLocalInvocationPrimitiveOutput;
			PrefersCompactVertexOutput = prefersCompactVertexOutput;
			PrefersCompactPrimitiveOutput = prefersCompactPrimitiveOutput;
		}

		public unsafe VkPhysicalDeviceMeshShaderPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxTaskWorkGroupTotalCount = default, Span<uint> maxTaskWorkGroupCount = default, uint maxTaskWorkGroupInvocations = default, Span<uint> maxTaskWorkGroupSize = default, uint maxTaskPayloadSize = default, uint maxTaskSharedMemorySize = default, uint maxTaskPayloadAndSharedMemorySize = default, uint maxMeshWorkGroupTotalCount = default, Span<uint> maxMeshWorkGroupCount = default, uint maxMeshWorkGroupInvocations = default, Span<uint> maxMeshWorkGroupSize = default, uint maxMeshSharedMemorySize = default, uint maxMeshPayloadAndSharedMemorySize = default, uint maxMeshOutputMemorySize = default, uint maxMeshPayloadAndOutputMemorySize = default, uint maxMeshOutputComponents = default, uint maxMeshOutputVertices = default, uint maxMeshOutputPrimitives = default, uint maxMeshOutputLayers = default, uint maxMeshMultiviewViewCount = default, uint meshOutputPerVertexGranularity = default, uint meshOutputPerPrimitiveGranularity = default, uint maxPreferredTaskWorkGroupInvocations = default, uint maxPreferredMeshWorkGroupInvocations = default, uint prefersLocalInvocationVertexOutput = default, uint prefersLocalInvocationPrimitiveOutput = default, uint prefersCompactVertexOutput = default, uint prefersCompactPrimitiveOutput = default)
		{
			SType = sType;
			PNext = pNext;
			MaxTaskWorkGroupTotalCount = maxTaskWorkGroupTotalCount;
			if (maxTaskWorkGroupCount != default)
			{
				MaxTaskWorkGroupCount_0 = maxTaskWorkGroupCount[0];
				MaxTaskWorkGroupCount_1 = maxTaskWorkGroupCount[1];
				MaxTaskWorkGroupCount_2 = maxTaskWorkGroupCount[2];
			}
			MaxTaskWorkGroupInvocations = maxTaskWorkGroupInvocations;
			if (maxTaskWorkGroupSize != default)
			{
				MaxTaskWorkGroupSize_0 = maxTaskWorkGroupSize[0];
				MaxTaskWorkGroupSize_1 = maxTaskWorkGroupSize[1];
				MaxTaskWorkGroupSize_2 = maxTaskWorkGroupSize[2];
			}
			MaxTaskPayloadSize = maxTaskPayloadSize;
			MaxTaskSharedMemorySize = maxTaskSharedMemorySize;
			MaxTaskPayloadAndSharedMemorySize = maxTaskPayloadAndSharedMemorySize;
			MaxMeshWorkGroupTotalCount = maxMeshWorkGroupTotalCount;
			if (maxMeshWorkGroupCount != default)
			{
				MaxMeshWorkGroupCount_0 = maxMeshWorkGroupCount[0];
				MaxMeshWorkGroupCount_1 = maxMeshWorkGroupCount[1];
				MaxMeshWorkGroupCount_2 = maxMeshWorkGroupCount[2];
			}
			MaxMeshWorkGroupInvocations = maxMeshWorkGroupInvocations;
			if (maxMeshWorkGroupSize != default)
			{
				MaxMeshWorkGroupSize_0 = maxMeshWorkGroupSize[0];
				MaxMeshWorkGroupSize_1 = maxMeshWorkGroupSize[1];
				MaxMeshWorkGroupSize_2 = maxMeshWorkGroupSize[2];
			}
			MaxMeshSharedMemorySize = maxMeshSharedMemorySize;
			MaxMeshPayloadAndSharedMemorySize = maxMeshPayloadAndSharedMemorySize;
			MaxMeshOutputMemorySize = maxMeshOutputMemorySize;
			MaxMeshPayloadAndOutputMemorySize = maxMeshPayloadAndOutputMemorySize;
			MaxMeshOutputComponents = maxMeshOutputComponents;
			MaxMeshOutputVertices = maxMeshOutputVertices;
			MaxMeshOutputPrimitives = maxMeshOutputPrimitives;
			MaxMeshOutputLayers = maxMeshOutputLayers;
			MaxMeshMultiviewViewCount = maxMeshMultiviewViewCount;
			MeshOutputPerVertexGranularity = meshOutputPerVertexGranularity;
			MeshOutputPerPrimitiveGranularity = meshOutputPerPrimitiveGranularity;
			MaxPreferredTaskWorkGroupInvocations = maxPreferredTaskWorkGroupInvocations;
			MaxPreferredMeshWorkGroupInvocations = maxPreferredMeshWorkGroupInvocations;
			PrefersLocalInvocationVertexOutput = prefersLocalInvocationVertexOutput;
			PrefersLocalInvocationPrimitiveOutput = prefersLocalInvocationPrimitiveOutput;
			PrefersCompactVertexOutput = prefersCompactVertexOutput;
			PrefersCompactPrimitiveOutput = prefersCompactPrimitiveOutput;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrawMeshTasksIndirectCommandEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrawMeshTasksIndirectCommandEXT
	{
		[NativeName(NativeNameType.Field, "groupCountX")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCountX;
		[NativeName(NativeNameType.Field, "groupCountY")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCountY;
		[NativeName(NativeNameType.Field, "groupCountZ")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCountZ;

		public unsafe VkDrawMeshTasksIndirectCommandEXT(uint groupCountX = default, uint groupCountY = default, uint groupCountZ = default)
		{
			GroupCountX = groupCountX;
			GroupCountY = groupCountY;
			GroupCountZ = groupCountZ;
		}


	}

}
