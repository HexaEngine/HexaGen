// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.Vulkan
{

	[NativeName(NativeNameType.StructOrClass, "VkMemoryMapInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryMapInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkMemoryMapFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "memory")]
		[NativeName(NativeNameType.Type, "VkDeviceMemory")]
		public VkDeviceMemory Memory;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Size;

		public unsafe VkMemoryMapInfoKHR(VkStructureType sType = default, void* pNext = default, uint flags = default, VkDeviceMemory memory = default, ulong offset = default, ulong size = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			Memory = memory;
			Offset = offset;
			Size = size;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMemoryUnmapInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryUnmapInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkMemoryUnmapFlagsKHR")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "memory")]
		[NativeName(NativeNameType.Type, "VkDeviceMemory")]
		public VkDeviceMemory Memory;

		public unsafe VkMemoryUnmapInfoKHR(VkStructureType sType = default, void* pNext = default, uint flags = default, VkDeviceMemory memory = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			Memory = memory;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineLibraryCreateInfoKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineLibraryCreateInfoKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "libraryCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint LibraryCount;
		[NativeName(NativeNameType.Field, "pLibraries")]
		[NativeName(NativeNameType.Type, "const VkPipeline*")]
		public unsafe VkPipeline* PLibraries;

		public unsafe VkPipelineLibraryCreateInfoKHR(VkStructureType sType = default, void* pNext = default, uint libraryCount = default, VkPipeline* pLibraries = default)
		{
			SType = sType;
			PNext = pNext;
			LibraryCount = libraryCount;
			PLibraries = pLibraries;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPresentIdKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPresentIdKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SwapchainCount;
		[NativeName(NativeNameType.Field, "pPresentIds")]
		[NativeName(NativeNameType.Type, "const uint64_t*")]
		public unsafe ulong* PPresentIds;

		public unsafe VkPresentIdKHR(VkStructureType sType = default, void* pNext = default, uint swapchainCount = default, ulong* pPresentIds = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainCount = swapchainCount;
			PPresentIds = pPresentIds;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePresentIdFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePresentIdFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "presentId")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PresentId;

		public unsafe VkPhysicalDevicePresentIdFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint presentId = default)
		{
			SType = sType;
			PNext = pNext;
			PresentId = presentId;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkQueueFamilyCheckpointProperties2NV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkQueueFamilyCheckpointProperties2NV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "checkpointExecutionStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint CheckpointExecutionStageMask;

		public unsafe VkQueueFamilyCheckpointProperties2NV(VkStructureType sType = default, void* pNext = default, uint checkpointExecutionStageMask = default)
		{
			SType = sType;
			PNext = pNext;
			CheckpointExecutionStageMask = checkpointExecutionStageMask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCheckpointData2NV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCheckpointData2NV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stage")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags2")]
		public uint Stage;
		[NativeName(NativeNameType.Field, "pCheckpointMarker")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PCheckpointMarker;

		public unsafe VkCheckpointData2NV(VkStructureType sType = default, void* pNext = default, uint stage = default, void* pCheckpointMarker = default)
		{
			SType = sType;
			PNext = pNext;
			Stage = stage;
			PCheckpointMarker = pCheckpointMarker;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentShaderBarycentric")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentShaderBarycentric;

		public unsafe VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint fragmentShaderBarycentric = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentShaderBarycentric = fragmentShaderBarycentric;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "triStripVertexOrderIndependentOfProvokingVertex")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TriStripVertexOrderIndependentOfProvokingVertex;

		public unsafe VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkStructureType sType = default, void* pNext = default, uint triStripVertexOrderIndependentOfProvokingVertex = default)
		{
			SType = sType;
			PNext = pNext;
			TriStripVertexOrderIndependentOfProvokingVertex = triStripVertexOrderIndependentOfProvokingVertex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderSubgroupUniformControlFlow")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSubgroupUniformControlFlow;

		public unsafe VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint shaderSubgroupUniformControlFlow = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderSubgroupUniformControlFlow = shaderSubgroupUniformControlFlow;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "workgroupMemoryExplicitLayout")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint WorkgroupMemoryExplicitLayout;
		[NativeName(NativeNameType.Field, "workgroupMemoryExplicitLayoutScalarBlockLayout")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint WorkgroupMemoryExplicitLayoutScalarBlockLayout;
		[NativeName(NativeNameType.Field, "workgroupMemoryExplicitLayout8BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint WorkgroupMemoryExplicitLayout8BitAccess;
		[NativeName(NativeNameType.Field, "workgroupMemoryExplicitLayout16BitAccess")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint WorkgroupMemoryExplicitLayout16BitAccess;

		public unsafe VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint workgroupMemoryExplicitLayout = default, uint workgroupMemoryExplicitLayoutScalarBlockLayout = default, uint workgroupMemoryExplicitLayout8BitAccess = default, uint workgroupMemoryExplicitLayout16BitAccess = default)
		{
			SType = sType;
			PNext = pNext;
			WorkgroupMemoryExplicitLayout = workgroupMemoryExplicitLayout;
			WorkgroupMemoryExplicitLayoutScalarBlockLayout = workgroupMemoryExplicitLayoutScalarBlockLayout;
			WorkgroupMemoryExplicitLayout8BitAccess = workgroupMemoryExplicitLayout8BitAccess;
			WorkgroupMemoryExplicitLayout16BitAccess = workgroupMemoryExplicitLayout16BitAccess;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rayTracingMaintenance1")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingMaintenance1;
		[NativeName(NativeNameType.Field, "rayTracingPipelineTraceRaysIndirect2")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingPipelineTraceRaysIndirect2;

		public unsafe VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkStructureType sType = default, void* pNext = default, uint rayTracingMaintenance1 = default, uint rayTracingPipelineTraceRaysIndirect2 = default)
		{
			SType = sType;
			PNext = pNext;
			RayTracingMaintenance1 = rayTracingMaintenance1;
			RayTracingPipelineTraceRaysIndirect2 = rayTracingPipelineTraceRaysIndirect2;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkTraceRaysIndirectCommand2KHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkTraceRaysIndirectCommand2KHR
	{
		[NativeName(NativeNameType.Field, "raygenShaderRecordAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong RaygenShaderRecordAddress;
		[NativeName(NativeNameType.Field, "raygenShaderRecordSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong RaygenShaderRecordSize;
		[NativeName(NativeNameType.Field, "missShaderBindingTableAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong MissShaderBindingTableAddress;
		[NativeName(NativeNameType.Field, "missShaderBindingTableSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MissShaderBindingTableSize;
		[NativeName(NativeNameType.Field, "missShaderBindingTableStride")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MissShaderBindingTableStride;
		[NativeName(NativeNameType.Field, "hitShaderBindingTableAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong HitShaderBindingTableAddress;
		[NativeName(NativeNameType.Field, "hitShaderBindingTableSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong HitShaderBindingTableSize;
		[NativeName(NativeNameType.Field, "hitShaderBindingTableStride")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong HitShaderBindingTableStride;
		[NativeName(NativeNameType.Field, "callableShaderBindingTableAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong CallableShaderBindingTableAddress;
		[NativeName(NativeNameType.Field, "callableShaderBindingTableSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong CallableShaderBindingTableSize;
		[NativeName(NativeNameType.Field, "callableShaderBindingTableStride")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong CallableShaderBindingTableStride;
		[NativeName(NativeNameType.Field, "width")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Width;
		[NativeName(NativeNameType.Field, "height")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Height;
		[NativeName(NativeNameType.Field, "depth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Depth;

		public unsafe VkTraceRaysIndirectCommand2KHR(ulong raygenShaderRecordAddress = default, ulong raygenShaderRecordSize = default, ulong missShaderBindingTableAddress = default, ulong missShaderBindingTableSize = default, ulong missShaderBindingTableStride = default, ulong hitShaderBindingTableAddress = default, ulong hitShaderBindingTableSize = default, ulong hitShaderBindingTableStride = default, ulong callableShaderBindingTableAddress = default, ulong callableShaderBindingTableSize = default, ulong callableShaderBindingTableStride = default, uint width = default, uint height = default, uint depth = default)
		{
			RaygenShaderRecordAddress = raygenShaderRecordAddress;
			RaygenShaderRecordSize = raygenShaderRecordSize;
			MissShaderBindingTableAddress = missShaderBindingTableAddress;
			MissShaderBindingTableSize = missShaderBindingTableSize;
			MissShaderBindingTableStride = missShaderBindingTableStride;
			HitShaderBindingTableAddress = hitShaderBindingTableAddress;
			HitShaderBindingTableSize = hitShaderBindingTableSize;
			HitShaderBindingTableStride = hitShaderBindingTableStride;
			CallableShaderBindingTableAddress = callableShaderBindingTableAddress;
			CallableShaderBindingTableSize = callableShaderBindingTableSize;
			CallableShaderBindingTableStride = callableShaderBindingTableStride;
			Width = width;
			Height = height;
			Depth = depth;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rayTracingPositionFetch")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RayTracingPositionFetch;

		public unsafe VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkStructureType sType = default, void* pNext = default, uint rayTracingPositionFetch = default)
		{
			SType = sType;
			PNext = pNext;
			RayTracingPositionFetch = rayTracingPositionFetch;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugReportCallbackCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugReportCallbackCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDebugReportFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "pfnCallback")]
		[NativeName(NativeNameType.Type, "PFN_vkDebugReportCallbackEXT")]
		public unsafe void* PfnCallback;
		[NativeName(NativeNameType.Field, "pUserData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PUserData;

		public unsafe VkDebugReportCallbackCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, delegate*<uint, VkDebugReportObjectTypeEXT, ulong, ulong, int, byte*, byte*, void*, uint> pfnCallback = default, void* pUserData = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			PfnCallback = (void*)pfnCallback;
			PUserData = pUserData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationStateRasterizationOrderAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationStateRasterizationOrderAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "rasterizationOrder")]
		[NativeName(NativeNameType.Type, "VkRasterizationOrderAMD")]
		public VkRasterizationOrderAMD RasterizationOrder;

		public unsafe VkPipelineRasterizationStateRasterizationOrderAMD(VkStructureType sType = default, void* pNext = default, VkRasterizationOrderAMD rasterizationOrder = default)
		{
			SType = sType;
			PNext = pNext;
			RasterizationOrder = rasterizationOrder;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugMarkerObjectNameInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugMarkerObjectNameInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "objectType")]
		[NativeName(NativeNameType.Type, "VkDebugReportObjectTypeEXT")]
		public VkDebugReportObjectTypeEXT ObjectType;
		[NativeName(NativeNameType.Field, "object")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Object;
		[NativeName(NativeNameType.Field, "pObjectName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PObjectName;

		public unsafe VkDebugMarkerObjectNameInfoEXT(VkStructureType sType = default, void* pNext = default, VkDebugReportObjectTypeEXT objectType = default, ulong @object = default, byte* pObjectName = default)
		{
			SType = sType;
			PNext = pNext;
			ObjectType = objectType;
			Object = @object;
			PObjectName = pObjectName;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugMarkerObjectTagInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugMarkerObjectTagInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "objectType")]
		[NativeName(NativeNameType.Type, "VkDebugReportObjectTypeEXT")]
		public VkDebugReportObjectTypeEXT ObjectType;
		[NativeName(NativeNameType.Field, "object")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Object;
		[NativeName(NativeNameType.Field, "tagName")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong TagName;
		[NativeName(NativeNameType.Field, "tagSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong TagSize;
		[NativeName(NativeNameType.Field, "pTag")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PTag;

		public unsafe VkDebugMarkerObjectTagInfoEXT(VkStructureType sType = default, void* pNext = default, VkDebugReportObjectTypeEXT objectType = default, ulong @object = default, ulong tagName = default, ulong tagSize = default, void* pTag = default)
		{
			SType = sType;
			PNext = pNext;
			ObjectType = objectType;
			Object = @object;
			TagName = tagName;
			TagSize = tagSize;
			PTag = pTag;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugMarkerMarkerInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugMarkerMarkerInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pMarkerName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PMarkerName;
		[NativeName(NativeNameType.Field, "color")]
		[NativeName(NativeNameType.Type, "float[4]")]
		public float Color_0;
		public float Color_1;
		public float Color_2;
		public float Color_3;

		public unsafe VkDebugMarkerMarkerInfoEXT(VkStructureType sType = default, void* pNext = default, byte* pMarkerName = default, float* color = default)
		{
			SType = sType;
			PNext = pNext;
			PMarkerName = pMarkerName;
			if (color != default)
			{
				Color_0 = color[0];
				Color_1 = color[1];
				Color_2 = color[2];
				Color_3 = color[3];
			}
		}

		public unsafe VkDebugMarkerMarkerInfoEXT(VkStructureType sType = default, void* pNext = default, byte* pMarkerName = default, Span<float> color = default)
		{
			SType = sType;
			PNext = pNext;
			PMarkerName = pMarkerName;
			if (color != default)
			{
				Color_0 = color[0];
				Color_1 = color[1];
				Color_2 = color[2];
				Color_3 = color[3];
			}
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDedicatedAllocationImageCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDedicatedAllocationImageCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "dedicatedAllocation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DedicatedAllocation;

		public unsafe VkDedicatedAllocationImageCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint dedicatedAllocation = default)
		{
			SType = sType;
			PNext = pNext;
			DedicatedAllocation = dedicatedAllocation;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDedicatedAllocationBufferCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDedicatedAllocationBufferCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "dedicatedAllocation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DedicatedAllocation;

		public unsafe VkDedicatedAllocationBufferCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint dedicatedAllocation = default)
		{
			SType = sType;
			PNext = pNext;
			DedicatedAllocation = dedicatedAllocation;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDedicatedAllocationMemoryAllocateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDedicatedAllocationMemoryAllocateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "image")]
		[NativeName(NativeNameType.Type, "VkImage")]
		public VkImage Image;
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;

		public unsafe VkDedicatedAllocationMemoryAllocateInfoNV(VkStructureType sType = default, void* pNext = default, VkImage image = default, VkBuffer buffer = default)
		{
			SType = sType;
			PNext = pNext;
			Image = image;
			Buffer = buffer;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceTransformFeedbackFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceTransformFeedbackFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "transformFeedback")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedback;
		[NativeName(NativeNameType.Field, "geometryStreams")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint GeometryStreams;

		public unsafe VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint transformFeedback = default, uint geometryStreams = default)
		{
			SType = sType;
			PNext = pNext;
			TransformFeedback = transformFeedback;
			GeometryStreams = geometryStreams;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceTransformFeedbackPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceTransformFeedbackPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxTransformFeedbackStreams")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTransformFeedbackStreams;
		[NativeName(NativeNameType.Field, "maxTransformFeedbackBuffers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTransformFeedbackBuffers;
		[NativeName(NativeNameType.Field, "maxTransformFeedbackBufferSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MaxTransformFeedbackBufferSize;
		[NativeName(NativeNameType.Field, "maxTransformFeedbackStreamDataSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTransformFeedbackStreamDataSize;
		[NativeName(NativeNameType.Field, "maxTransformFeedbackBufferDataSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTransformFeedbackBufferDataSize;
		[NativeName(NativeNameType.Field, "maxTransformFeedbackBufferDataStride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTransformFeedbackBufferDataStride;
		[NativeName(NativeNameType.Field, "transformFeedbackQueries")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackQueries;
		[NativeName(NativeNameType.Field, "transformFeedbackStreamsLinesTriangles")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackStreamsLinesTriangles;
		[NativeName(NativeNameType.Field, "transformFeedbackRasterizationStreamSelect")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackRasterizationStreamSelect;
		[NativeName(NativeNameType.Field, "transformFeedbackDraw")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TransformFeedbackDraw;

		public unsafe VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxTransformFeedbackStreams = default, uint maxTransformFeedbackBuffers = default, ulong maxTransformFeedbackBufferSize = default, uint maxTransformFeedbackStreamDataSize = default, uint maxTransformFeedbackBufferDataSize = default, uint maxTransformFeedbackBufferDataStride = default, uint transformFeedbackQueries = default, uint transformFeedbackStreamsLinesTriangles = default, uint transformFeedbackRasterizationStreamSelect = default, uint transformFeedbackDraw = default)
		{
			SType = sType;
			PNext = pNext;
			MaxTransformFeedbackStreams = maxTransformFeedbackStreams;
			MaxTransformFeedbackBuffers = maxTransformFeedbackBuffers;
			MaxTransformFeedbackBufferSize = maxTransformFeedbackBufferSize;
			MaxTransformFeedbackStreamDataSize = maxTransformFeedbackStreamDataSize;
			MaxTransformFeedbackBufferDataSize = maxTransformFeedbackBufferDataSize;
			MaxTransformFeedbackBufferDataStride = maxTransformFeedbackBufferDataStride;
			TransformFeedbackQueries = transformFeedbackQueries;
			TransformFeedbackStreamsLinesTriangles = transformFeedbackStreamsLinesTriangles;
			TransformFeedbackRasterizationStreamSelect = transformFeedbackRasterizationStreamSelect;
			TransformFeedbackDraw = transformFeedbackDraw;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationStateStreamCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationStateStreamCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineRasterizationStateStreamCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "rasterizationStream")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint RasterizationStream;

		public unsafe VkPipelineRasterizationStateStreamCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, uint rasterizationStream = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			RasterizationStream = rasterizationStream;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCuModuleCreateInfoNVX")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCuModuleCreateInfoNVX
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "dataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong DataSize;
		[NativeName(NativeNameType.Field, "pData")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PData;

		public unsafe VkCuModuleCreateInfoNVX(VkStructureType sType = default, void* pNext = default, ulong dataSize = default, void* pData = default)
		{
			SType = sType;
			PNext = pNext;
			DataSize = dataSize;
			PData = pData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCuFunctionCreateInfoNVX")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCuFunctionCreateInfoNVX
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "module")]
		[NativeName(NativeNameType.Type, "VkCuModuleNVX")]
		public VkCuModuleNVX Module;
		[NativeName(NativeNameType.Field, "pName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PName;

		public unsafe VkCuFunctionCreateInfoNVX(VkStructureType sType = default, void* pNext = default, VkCuModuleNVX module = default, byte* pName = default)
		{
			SType = sType;
			PNext = pNext;
			Module = module;
			PName = pName;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCuLaunchInfoNVX")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCuLaunchInfoNVX
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "function")]
		[NativeName(NativeNameType.Type, "VkCuFunctionNVX")]
		public VkCuFunctionNVX Function;
		[NativeName(NativeNameType.Field, "gridDimX")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GridDimX;
		[NativeName(NativeNameType.Field, "gridDimY")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GridDimY;
		[NativeName(NativeNameType.Field, "gridDimZ")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GridDimZ;
		[NativeName(NativeNameType.Field, "blockDimX")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint BlockDimX;
		[NativeName(NativeNameType.Field, "blockDimY")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint BlockDimY;
		[NativeName(NativeNameType.Field, "blockDimZ")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint BlockDimZ;
		[NativeName(NativeNameType.Field, "sharedMemBytes")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SharedMemBytes;
		[NativeName(NativeNameType.Field, "paramCount")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong ParamCount;
		[NativeName(NativeNameType.Field, "pParams")]
		[NativeName(NativeNameType.Type, "const const void**")]
		public unsafe void** PParams;
		[NativeName(NativeNameType.Field, "extraCount")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong ExtraCount;
		[NativeName(NativeNameType.Field, "pExtras")]
		[NativeName(NativeNameType.Type, "const const void**")]
		public unsafe void** PExtras;

		public unsafe VkCuLaunchInfoNVX(VkStructureType sType = default, void* pNext = default, VkCuFunctionNVX function = default, uint gridDimX = default, uint gridDimY = default, uint gridDimZ = default, uint blockDimX = default, uint blockDimY = default, uint blockDimZ = default, uint sharedMemBytes = default, ulong paramCount = default, void** pParams = default, ulong extraCount = default, void** pExtras = default)
		{
			SType = sType;
			PNext = pNext;
			Function = function;
			GridDimX = gridDimX;
			GridDimY = gridDimY;
			GridDimZ = gridDimZ;
			BlockDimX = blockDimX;
			BlockDimY = blockDimY;
			BlockDimZ = blockDimZ;
			SharedMemBytes = sharedMemBytes;
			ParamCount = paramCount;
			PParams = pParams;
			ExtraCount = extraCount;
			PExtras = pExtras;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageViewHandleInfoNVX")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageViewHandleInfoNVX
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageView")]
		[NativeName(NativeNameType.Type, "VkImageView")]
		public VkImageView ImageView;
		[NativeName(NativeNameType.Field, "descriptorType")]
		[NativeName(NativeNameType.Type, "VkDescriptorType")]
		public VkDescriptorType DescriptorType;
		[NativeName(NativeNameType.Field, "sampler")]
		[NativeName(NativeNameType.Type, "VkSampler")]
		public VkSampler Sampler;

		public unsafe VkImageViewHandleInfoNVX(VkStructureType sType = default, void* pNext = default, VkImageView imageView = default, VkDescriptorType descriptorType = default, VkSampler sampler = default)
		{
			SType = sType;
			PNext = pNext;
			ImageView = imageView;
			DescriptorType = descriptorType;
			Sampler = sampler;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageViewAddressPropertiesNVX")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageViewAddressPropertiesNVX
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceAddress")]
		[NativeName(NativeNameType.Type, "VkDeviceAddress")]
		public ulong DeviceAddress;
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Size;

		public unsafe VkImageViewAddressPropertiesNVX(VkStructureType sType = default, void* pNext = default, ulong deviceAddress = default, ulong size = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceAddress = deviceAddress;
			Size = size;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkTextureLODGatherFormatPropertiesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkTextureLODGatherFormatPropertiesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "supportsTextureGatherLODBiasAMD")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SupportsTextureGatherLODBiasAMD;

		public unsafe VkTextureLODGatherFormatPropertiesAMD(VkStructureType sType = default, void* pNext = default, uint supportsTextureGatherLODBiasAMD = default)
		{
			SType = sType;
			PNext = pNext;
			SupportsTextureGatherLODBiasAMD = supportsTextureGatherLODBiasAMD;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkShaderResourceUsageAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkShaderResourceUsageAMD
	{
		[NativeName(NativeNameType.Field, "numUsedVgprs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumUsedVgprs;
		[NativeName(NativeNameType.Field, "numUsedSgprs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumUsedSgprs;
		[NativeName(NativeNameType.Field, "ldsSizePerLocalWorkGroup")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint LdsSizePerLocalWorkGroup;
		[NativeName(NativeNameType.Field, "ldsUsageSizeInBytes")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong LdsUsageSizeInBytes;
		[NativeName(NativeNameType.Field, "scratchMemUsageInBytes")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong ScratchMemUsageInBytes;

		public unsafe VkShaderResourceUsageAMD(uint numUsedVgprs = default, uint numUsedSgprs = default, uint ldsSizePerLocalWorkGroup = default, ulong ldsUsageSizeInBytes = default, ulong scratchMemUsageInBytes = default)
		{
			NumUsedVgprs = numUsedVgprs;
			NumUsedSgprs = numUsedSgprs;
			LdsSizePerLocalWorkGroup = ldsSizePerLocalWorkGroup;
			LdsUsageSizeInBytes = ldsUsageSizeInBytes;
			ScratchMemUsageInBytes = scratchMemUsageInBytes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkShaderStatisticsInfoAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkShaderStatisticsInfoAMD
	{
		[NativeName(NativeNameType.Field, "shaderStageMask")]
		[NativeName(NativeNameType.Type, "VkShaderStageFlags")]
		public uint ShaderStageMask;
		[NativeName(NativeNameType.Field, "resourceUsage")]
		[NativeName(NativeNameType.Type, "VkShaderResourceUsageAMD")]
		public VkShaderResourceUsageAMD ResourceUsage;
		[NativeName(NativeNameType.Field, "numPhysicalVgprs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumPhysicalVgprs;
		[NativeName(NativeNameType.Field, "numPhysicalSgprs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumPhysicalSgprs;
		[NativeName(NativeNameType.Field, "numAvailableVgprs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumAvailableVgprs;
		[NativeName(NativeNameType.Field, "numAvailableSgprs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumAvailableSgprs;
		[NativeName(NativeNameType.Field, "computeWorkGroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint ComputeWorkGroupSize_0;
		public uint ComputeWorkGroupSize_1;
		public uint ComputeWorkGroupSize_2;

		public unsafe VkShaderStatisticsInfoAMD(uint shaderStageMask = default, VkShaderResourceUsageAMD resourceUsage = default, uint numPhysicalVgprs = default, uint numPhysicalSgprs = default, uint numAvailableVgprs = default, uint numAvailableSgprs = default, uint* computeWorkGroupSize = default)
		{
			ShaderStageMask = shaderStageMask;
			ResourceUsage = resourceUsage;
			NumPhysicalVgprs = numPhysicalVgprs;
			NumPhysicalSgprs = numPhysicalSgprs;
			NumAvailableVgprs = numAvailableVgprs;
			NumAvailableSgprs = numAvailableSgprs;
			if (computeWorkGroupSize != default)
			{
				ComputeWorkGroupSize_0 = computeWorkGroupSize[0];
				ComputeWorkGroupSize_1 = computeWorkGroupSize[1];
				ComputeWorkGroupSize_2 = computeWorkGroupSize[2];
			}
		}

		public unsafe VkShaderStatisticsInfoAMD(uint shaderStageMask = default, VkShaderResourceUsageAMD resourceUsage = default, uint numPhysicalVgprs = default, uint numPhysicalSgprs = default, uint numAvailableVgprs = default, uint numAvailableSgprs = default, Span<uint> computeWorkGroupSize = default)
		{
			ShaderStageMask = shaderStageMask;
			ResourceUsage = resourceUsage;
			NumPhysicalVgprs = numPhysicalVgprs;
			NumPhysicalSgprs = numPhysicalSgprs;
			NumAvailableVgprs = numAvailableVgprs;
			NumAvailableSgprs = numAvailableSgprs;
			if (computeWorkGroupSize != default)
			{
				ComputeWorkGroupSize_0 = computeWorkGroupSize[0];
				ComputeWorkGroupSize_1 = computeWorkGroupSize[1];
				ComputeWorkGroupSize_2 = computeWorkGroupSize[2];
			}
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceCornerSampledImageFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceCornerSampledImageFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "cornerSampledImage")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CornerSampledImage;

		public unsafe VkPhysicalDeviceCornerSampledImageFeaturesNV(VkStructureType sType = default, void* pNext = default, uint cornerSampledImage = default)
		{
			SType = sType;
			PNext = pNext;
			CornerSampledImage = cornerSampledImage;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkExternalImageFormatPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkExternalImageFormatPropertiesNV
	{
		[NativeName(NativeNameType.Field, "imageFormatProperties")]
		[NativeName(NativeNameType.Type, "VkImageFormatProperties")]
		public VkImageFormatProperties ImageFormatProperties;
		[NativeName(NativeNameType.Field, "externalMemoryFeatures")]
		[NativeName(NativeNameType.Type, "VkExternalMemoryFeatureFlagsNV")]
		public uint ExternalMemoryFeatures;
		[NativeName(NativeNameType.Field, "exportFromImportedHandleTypes")]
		[NativeName(NativeNameType.Type, "VkExternalMemoryHandleTypeFlagsNV")]
		public uint ExportFromImportedHandleTypes;
		[NativeName(NativeNameType.Field, "compatibleHandleTypes")]
		[NativeName(NativeNameType.Type, "VkExternalMemoryHandleTypeFlagsNV")]
		public uint CompatibleHandleTypes;

		public unsafe VkExternalImageFormatPropertiesNV(VkImageFormatProperties imageFormatProperties = default, uint externalMemoryFeatures = default, uint exportFromImportedHandleTypes = default, uint compatibleHandleTypes = default)
		{
			ImageFormatProperties = imageFormatProperties;
			ExternalMemoryFeatures = externalMemoryFeatures;
			ExportFromImportedHandleTypes = exportFromImportedHandleTypes;
			CompatibleHandleTypes = compatibleHandleTypes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkExternalMemoryImageCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkExternalMemoryImageCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "handleTypes")]
		[NativeName(NativeNameType.Type, "VkExternalMemoryHandleTypeFlagsNV")]
		public uint HandleTypes;

		public unsafe VkExternalMemoryImageCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint handleTypes = default)
		{
			SType = sType;
			PNext = pNext;
			HandleTypes = handleTypes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkExportMemoryAllocateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkExportMemoryAllocateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "handleTypes")]
		[NativeName(NativeNameType.Type, "VkExternalMemoryHandleTypeFlagsNV")]
		public uint HandleTypes;

		public unsafe VkExportMemoryAllocateInfoNV(VkStructureType sType = default, void* pNext = default, uint handleTypes = default)
		{
			SType = sType;
			PNext = pNext;
			HandleTypes = handleTypes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkValidationFlagsEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkValidationFlagsEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "disabledValidationCheckCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DisabledValidationCheckCount;
		[NativeName(NativeNameType.Field, "pDisabledValidationChecks")]
		[NativeName(NativeNameType.Type, "const VkValidationCheckEXT*")]
		public unsafe VkValidationCheckEXT* PDisabledValidationChecks;

		public unsafe VkValidationFlagsEXT(VkStructureType sType = default, void* pNext = default, uint disabledValidationCheckCount = default, VkValidationCheckEXT* pDisabledValidationChecks = default)
		{
			SType = sType;
			PNext = pNext;
			DisabledValidationCheckCount = disabledValidationCheckCount;
			PDisabledValidationChecks = pDisabledValidationChecks;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageViewASTCDecodeModeEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageViewASTCDecodeModeEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "decodeMode")]
		[NativeName(NativeNameType.Type, "VkFormat")]
		public VkFormat DecodeMode;

		public unsafe VkImageViewASTCDecodeModeEXT(VkStructureType sType = default, void* pNext = default, VkFormat decodeMode = default)
		{
			SType = sType;
			PNext = pNext;
			DecodeMode = decodeMode;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceASTCDecodeFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceASTCDecodeFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "decodeModeSharedExponent")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DecodeModeSharedExponent;

		public unsafe VkPhysicalDeviceASTCDecodeFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint decodeModeSharedExponent = default)
		{
			SType = sType;
			PNext = pNext;
			DecodeModeSharedExponent = decodeModeSharedExponent;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePipelineRobustnessFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePipelineRobustnessFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pipelineRobustness")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PipelineRobustness;

		public unsafe VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint pipelineRobustness = default)
		{
			SType = sType;
			PNext = pNext;
			PipelineRobustness = pipelineRobustness;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePipelineRobustnessPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePipelineRobustnessPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "defaultRobustnessStorageBuffers")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessBufferBehaviorEXT")]
		public VkPipelineRobustnessBufferBehaviorEXT DefaultRobustnessStorageBuffers;
		[NativeName(NativeNameType.Field, "defaultRobustnessUniformBuffers")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessBufferBehaviorEXT")]
		public VkPipelineRobustnessBufferBehaviorEXT DefaultRobustnessUniformBuffers;
		[NativeName(NativeNameType.Field, "defaultRobustnessVertexInputs")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessBufferBehaviorEXT")]
		public VkPipelineRobustnessBufferBehaviorEXT DefaultRobustnessVertexInputs;
		[NativeName(NativeNameType.Field, "defaultRobustnessImages")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessImageBehaviorEXT")]
		public VkPipelineRobustnessImageBehaviorEXT DefaultRobustnessImages;

		public unsafe VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkStructureType sType = default, void* pNext = default, VkPipelineRobustnessBufferBehaviorEXT defaultRobustnessStorageBuffers = default, VkPipelineRobustnessBufferBehaviorEXT defaultRobustnessUniformBuffers = default, VkPipelineRobustnessBufferBehaviorEXT defaultRobustnessVertexInputs = default, VkPipelineRobustnessImageBehaviorEXT defaultRobustnessImages = default)
		{
			SType = sType;
			PNext = pNext;
			DefaultRobustnessStorageBuffers = defaultRobustnessStorageBuffers;
			DefaultRobustnessUniformBuffers = defaultRobustnessUniformBuffers;
			DefaultRobustnessVertexInputs = defaultRobustnessVertexInputs;
			DefaultRobustnessImages = defaultRobustnessImages;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRobustnessCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRobustnessCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "storageBuffers")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessBufferBehaviorEXT")]
		public VkPipelineRobustnessBufferBehaviorEXT StorageBuffers;
		[NativeName(NativeNameType.Field, "uniformBuffers")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessBufferBehaviorEXT")]
		public VkPipelineRobustnessBufferBehaviorEXT UniformBuffers;
		[NativeName(NativeNameType.Field, "vertexInputs")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessBufferBehaviorEXT")]
		public VkPipelineRobustnessBufferBehaviorEXT VertexInputs;
		[NativeName(NativeNameType.Field, "images")]
		[NativeName(NativeNameType.Type, "VkPipelineRobustnessImageBehaviorEXT")]
		public VkPipelineRobustnessImageBehaviorEXT Images;

		public unsafe VkPipelineRobustnessCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkPipelineRobustnessBufferBehaviorEXT storageBuffers = default, VkPipelineRobustnessBufferBehaviorEXT uniformBuffers = default, VkPipelineRobustnessBufferBehaviorEXT vertexInputs = default, VkPipelineRobustnessImageBehaviorEXT images = default)
		{
			SType = sType;
			PNext = pNext;
			StorageBuffers = storageBuffers;
			UniformBuffers = uniformBuffers;
			VertexInputs = vertexInputs;
			Images = images;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkConditionalRenderingBeginInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkConditionalRenderingBeginInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "buffer")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer Buffer;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkConditionalRenderingFlagsEXT")]
		public uint Flags;

		public unsafe VkConditionalRenderingBeginInfoEXT(VkStructureType sType = default, void* pNext = default, VkBuffer buffer = default, ulong offset = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			Buffer = buffer;
			Offset = offset;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceConditionalRenderingFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceConditionalRenderingFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "conditionalRendering")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ConditionalRendering;
		[NativeName(NativeNameType.Field, "inheritedConditionalRendering")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint InheritedConditionalRendering;

		public unsafe VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint conditionalRendering = default, uint inheritedConditionalRendering = default)
		{
			SType = sType;
			PNext = pNext;
			ConditionalRendering = conditionalRendering;
			InheritedConditionalRendering = inheritedConditionalRendering;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCommandBufferInheritanceConditionalRenderingInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCommandBufferInheritanceConditionalRenderingInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "conditionalRenderingEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ConditionalRenderingEnable;

		public unsafe VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkStructureType sType = default, void* pNext = default, uint conditionalRenderingEnable = default)
		{
			SType = sType;
			PNext = pNext;
			ConditionalRenderingEnable = conditionalRenderingEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkViewportWScalingNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkViewportWScalingNV
	{
		[NativeName(NativeNameType.Field, "xcoeff")]
		[NativeName(NativeNameType.Type, "float")]
		public float Xcoeff;
		[NativeName(NativeNameType.Field, "ycoeff")]
		[NativeName(NativeNameType.Type, "float")]
		public float Ycoeff;

		public unsafe VkViewportWScalingNV(float xcoeff = default, float ycoeff = default)
		{
			Xcoeff = xcoeff;
			Ycoeff = ycoeff;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportWScalingStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportWScalingStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "viewportWScalingEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ViewportWScalingEnable;
		[NativeName(NativeNameType.Field, "viewportCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewportCount;
		[NativeName(NativeNameType.Field, "pViewportWScalings")]
		[NativeName(NativeNameType.Type, "const VkViewportWScalingNV*")]
		public unsafe VkViewportWScalingNV* PViewportWScalings;

		public unsafe VkPipelineViewportWScalingStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint viewportWScalingEnable = default, uint viewportCount = default, VkViewportWScalingNV* pViewportWScalings = default)
		{
			SType = sType;
			PNext = pNext;
			ViewportWScalingEnable = viewportWScalingEnable;
			ViewportCount = viewportCount;
			PViewportWScalings = pViewportWScalings;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSurfaceCapabilities2EXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSurfaceCapabilities2EXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "minImageCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinImageCount;
		[NativeName(NativeNameType.Field, "maxImageCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxImageCount;
		[NativeName(NativeNameType.Field, "currentExtent")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D CurrentExtent;
		[NativeName(NativeNameType.Field, "minImageExtent")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MinImageExtent;
		[NativeName(NativeNameType.Field, "maxImageExtent")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxImageExtent;
		[NativeName(NativeNameType.Field, "maxImageArrayLayers")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxImageArrayLayers;
		[NativeName(NativeNameType.Field, "supportedTransforms")]
		[NativeName(NativeNameType.Type, "VkSurfaceTransformFlagsKHR")]
		public uint SupportedTransforms;
		[NativeName(NativeNameType.Field, "currentTransform")]
		[NativeName(NativeNameType.Type, "VkSurfaceTransformFlagBitsKHR")]
		public VkSurfaceTransformFlagBitsKHR CurrentTransform;
		[NativeName(NativeNameType.Field, "supportedCompositeAlpha")]
		[NativeName(NativeNameType.Type, "VkCompositeAlphaFlagsKHR")]
		public uint SupportedCompositeAlpha;
		[NativeName(NativeNameType.Field, "supportedUsageFlags")]
		[NativeName(NativeNameType.Type, "VkImageUsageFlags")]
		public uint SupportedUsageFlags;
		[NativeName(NativeNameType.Field, "supportedSurfaceCounters")]
		[NativeName(NativeNameType.Type, "VkSurfaceCounterFlagsEXT")]
		public uint SupportedSurfaceCounters;

		public unsafe VkSurfaceCapabilities2EXT(VkStructureType sType = default, void* pNext = default, uint minImageCount = default, uint maxImageCount = default, VkExtent2D currentExtent = default, VkExtent2D minImageExtent = default, VkExtent2D maxImageExtent = default, uint maxImageArrayLayers = default, uint supportedTransforms = default, VkSurfaceTransformFlagBitsKHR currentTransform = default, uint supportedCompositeAlpha = default, uint supportedUsageFlags = default, uint supportedSurfaceCounters = default)
		{
			SType = sType;
			PNext = pNext;
			MinImageCount = minImageCount;
			MaxImageCount = maxImageCount;
			CurrentExtent = currentExtent;
			MinImageExtent = minImageExtent;
			MaxImageExtent = maxImageExtent;
			MaxImageArrayLayers = maxImageArrayLayers;
			SupportedTransforms = supportedTransforms;
			CurrentTransform = currentTransform;
			SupportedCompositeAlpha = supportedCompositeAlpha;
			SupportedUsageFlags = supportedUsageFlags;
			SupportedSurfaceCounters = supportedSurfaceCounters;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDisplayPowerInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDisplayPowerInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "powerState")]
		[NativeName(NativeNameType.Type, "VkDisplayPowerStateEXT")]
		public VkDisplayPowerStateEXT PowerState;

		public unsafe VkDisplayPowerInfoEXT(VkStructureType sType = default, void* pNext = default, VkDisplayPowerStateEXT powerState = default)
		{
			SType = sType;
			PNext = pNext;
			PowerState = powerState;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceEventInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceEventInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "deviceEvent")]
		[NativeName(NativeNameType.Type, "VkDeviceEventTypeEXT")]
		public VkDeviceEventTypeEXT DeviceEvent;

		public unsafe VkDeviceEventInfoEXT(VkStructureType sType = default, void* pNext = default, VkDeviceEventTypeEXT deviceEvent = default)
		{
			SType = sType;
			PNext = pNext;
			DeviceEvent = deviceEvent;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDisplayEventInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDisplayEventInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "displayEvent")]
		[NativeName(NativeNameType.Type, "VkDisplayEventTypeEXT")]
		public VkDisplayEventTypeEXT DisplayEvent;

		public unsafe VkDisplayEventInfoEXT(VkStructureType sType = default, void* pNext = default, VkDisplayEventTypeEXT displayEvent = default)
		{
			SType = sType;
			PNext = pNext;
			DisplayEvent = displayEvent;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainCounterCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainCounterCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "surfaceCounters")]
		[NativeName(NativeNameType.Type, "VkSurfaceCounterFlagsEXT")]
		public uint SurfaceCounters;

		public unsafe VkSwapchainCounterCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint surfaceCounters = default)
		{
			SType = sType;
			PNext = pNext;
			SurfaceCounters = surfaceCounters;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRefreshCycleDurationGOOGLE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRefreshCycleDurationGOOGLE
	{
		[NativeName(NativeNameType.Field, "refreshDuration")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong RefreshDuration;

		public unsafe VkRefreshCycleDurationGOOGLE(ulong refreshDuration = default)
		{
			RefreshDuration = refreshDuration;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPastPresentationTimingGOOGLE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPastPresentationTimingGOOGLE
	{
		[NativeName(NativeNameType.Field, "presentID")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PresentID;
		[NativeName(NativeNameType.Field, "desiredPresentTime")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DesiredPresentTime;
		[NativeName(NativeNameType.Field, "actualPresentTime")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong ActualPresentTime;
		[NativeName(NativeNameType.Field, "earliestPresentTime")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong EarliestPresentTime;
		[NativeName(NativeNameType.Field, "presentMargin")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong PresentMargin;

		public unsafe VkPastPresentationTimingGOOGLE(uint presentID = default, ulong desiredPresentTime = default, ulong actualPresentTime = default, ulong earliestPresentTime = default, ulong presentMargin = default)
		{
			PresentID = presentID;
			DesiredPresentTime = desiredPresentTime;
			ActualPresentTime = actualPresentTime;
			EarliestPresentTime = earliestPresentTime;
			PresentMargin = presentMargin;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPresentTimeGOOGLE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPresentTimeGOOGLE
	{
		[NativeName(NativeNameType.Field, "presentID")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PresentID;
		[NativeName(NativeNameType.Field, "desiredPresentTime")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DesiredPresentTime;

		public unsafe VkPresentTimeGOOGLE(uint presentID = default, ulong desiredPresentTime = default)
		{
			PresentID = presentID;
			DesiredPresentTime = desiredPresentTime;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPresentTimesInfoGOOGLE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPresentTimesInfoGOOGLE
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "swapchainCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SwapchainCount;
		[NativeName(NativeNameType.Field, "pTimes")]
		[NativeName(NativeNameType.Type, "const VkPresentTimeGOOGLE*")]
		public unsafe VkPresentTimeGOOGLE* PTimes;

		public unsafe VkPresentTimesInfoGOOGLE(VkStructureType sType = default, void* pNext = default, uint swapchainCount = default, VkPresentTimeGOOGLE* pTimes = default)
		{
			SType = sType;
			PNext = pNext;
			SwapchainCount = swapchainCount;
			PTimes = pTimes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "perViewPositionAllComponents")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PerViewPositionAllComponents;

		public unsafe VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkStructureType sType = default, void* pNext = default, uint perViewPositionAllComponents = default)
		{
			SType = sType;
			PNext = pNext;
			PerViewPositionAllComponents = perViewPositionAllComponents;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkViewportSwizzleNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkViewportSwizzleNV
	{
		[NativeName(NativeNameType.Field, "x")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV X;
		[NativeName(NativeNameType.Field, "y")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV Y;
		[NativeName(NativeNameType.Field, "z")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV Z;
		[NativeName(NativeNameType.Field, "w")]
		[NativeName(NativeNameType.Type, "VkViewportCoordinateSwizzleNV")]
		public VkViewportCoordinateSwizzleNV W;

		public unsafe VkViewportSwizzleNV(VkViewportCoordinateSwizzleNV x = default, VkViewportCoordinateSwizzleNV y = default, VkViewportCoordinateSwizzleNV z = default, VkViewportCoordinateSwizzleNV w = default)
		{
			X = x;
			Y = y;
			Z = z;
			W = w;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportSwizzleStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportSwizzleStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineViewportSwizzleStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "viewportCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewportCount;
		[NativeName(NativeNameType.Field, "pViewportSwizzles")]
		[NativeName(NativeNameType.Type, "const VkViewportSwizzleNV*")]
		public unsafe VkViewportSwizzleNV* PViewportSwizzles;

		public unsafe VkPipelineViewportSwizzleStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, uint viewportCount = default, VkViewportSwizzleNV* pViewportSwizzles = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			ViewportCount = viewportCount;
			PViewportSwizzles = pViewportSwizzles;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDiscardRectanglePropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDiscardRectanglePropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxDiscardRectangles")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDiscardRectangles;

		public unsafe VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxDiscardRectangles = default)
		{
			SType = sType;
			PNext = pNext;
			MaxDiscardRectangles = maxDiscardRectangles;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineDiscardRectangleStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineDiscardRectangleStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineDiscardRectangleStateCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "discardRectangleMode")]
		[NativeName(NativeNameType.Type, "VkDiscardRectangleModeEXT")]
		public VkDiscardRectangleModeEXT DiscardRectangleMode;
		[NativeName(NativeNameType.Field, "discardRectangleCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DiscardRectangleCount;
		[NativeName(NativeNameType.Field, "pDiscardRectangles")]
		[NativeName(NativeNameType.Type, "const VkRect2D*")]
		public unsafe VkRect2D* PDiscardRectangles;

		public unsafe VkPipelineDiscardRectangleStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, VkDiscardRectangleModeEXT discardRectangleMode = default, uint discardRectangleCount = default, VkRect2D* pDiscardRectangles = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			DiscardRectangleMode = discardRectangleMode;
			DiscardRectangleCount = discardRectangleCount;
			PDiscardRectangles = pDiscardRectangles;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceConservativeRasterizationPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceConservativeRasterizationPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "primitiveOverestimationSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float PrimitiveOverestimationSize;
		[NativeName(NativeNameType.Field, "maxExtraPrimitiveOverestimationSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxExtraPrimitiveOverestimationSize;
		[NativeName(NativeNameType.Field, "extraPrimitiveOverestimationSizeGranularity")]
		[NativeName(NativeNameType.Type, "float")]
		public float ExtraPrimitiveOverestimationSizeGranularity;
		[NativeName(NativeNameType.Field, "primitiveUnderestimation")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint PrimitiveUnderestimation;
		[NativeName(NativeNameType.Field, "conservativePointAndLineRasterization")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ConservativePointAndLineRasterization;
		[NativeName(NativeNameType.Field, "degenerateTrianglesRasterized")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DegenerateTrianglesRasterized;
		[NativeName(NativeNameType.Field, "degenerateLinesRasterized")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DegenerateLinesRasterized;
		[NativeName(NativeNameType.Field, "fullyCoveredFragmentShaderInputVariable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FullyCoveredFragmentShaderInputVariable;
		[NativeName(NativeNameType.Field, "conservativeRasterizationPostDepthCoverage")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ConservativeRasterizationPostDepthCoverage;

		public unsafe VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkStructureType sType = default, void* pNext = default, float primitiveOverestimationSize = default, float maxExtraPrimitiveOverestimationSize = default, float extraPrimitiveOverestimationSizeGranularity = default, uint primitiveUnderestimation = default, uint conservativePointAndLineRasterization = default, uint degenerateTrianglesRasterized = default, uint degenerateLinesRasterized = default, uint fullyCoveredFragmentShaderInputVariable = default, uint conservativeRasterizationPostDepthCoverage = default)
		{
			SType = sType;
			PNext = pNext;
			PrimitiveOverestimationSize = primitiveOverestimationSize;
			MaxExtraPrimitiveOverestimationSize = maxExtraPrimitiveOverestimationSize;
			ExtraPrimitiveOverestimationSizeGranularity = extraPrimitiveOverestimationSizeGranularity;
			PrimitiveUnderestimation = primitiveUnderestimation;
			ConservativePointAndLineRasterization = conservativePointAndLineRasterization;
			DegenerateTrianglesRasterized = degenerateTrianglesRasterized;
			DegenerateLinesRasterized = degenerateLinesRasterized;
			FullyCoveredFragmentShaderInputVariable = fullyCoveredFragmentShaderInputVariable;
			ConservativeRasterizationPostDepthCoverage = conservativeRasterizationPostDepthCoverage;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationConservativeStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationConservativeStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineRasterizationConservativeStateCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "conservativeRasterizationMode")]
		[NativeName(NativeNameType.Type, "VkConservativeRasterizationModeEXT")]
		public VkConservativeRasterizationModeEXT ConservativeRasterizationMode;
		[NativeName(NativeNameType.Field, "extraPrimitiveOverestimationSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float ExtraPrimitiveOverestimationSize;

		public unsafe VkPipelineRasterizationConservativeStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, VkConservativeRasterizationModeEXT conservativeRasterizationMode = default, float extraPrimitiveOverestimationSize = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			ConservativeRasterizationMode = conservativeRasterizationMode;
			ExtraPrimitiveOverestimationSize = extraPrimitiveOverestimationSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceDepthClipEnableFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceDepthClipEnableFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "depthClipEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DepthClipEnable;

		public unsafe VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint depthClipEnable = default)
		{
			SType = sType;
			PNext = pNext;
			DepthClipEnable = depthClipEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRasterizationDepthClipStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRasterizationDepthClipStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineRasterizationDepthClipStateCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "depthClipEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DepthClipEnable;

		public unsafe VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, uint depthClipEnable = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			DepthClipEnable = depthClipEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkXYColorEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkXYColorEXT
	{
		[NativeName(NativeNameType.Field, "x")]
		[NativeName(NativeNameType.Type, "float")]
		public float X;
		[NativeName(NativeNameType.Field, "y")]
		[NativeName(NativeNameType.Type, "float")]
		public float Y;

		public unsafe VkXYColorEXT(float x = default, float y = default)
		{
			X = x;
			Y = y;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkHdrMetadataEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkHdrMetadataEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "displayPrimaryRed")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT DisplayPrimaryRed;
		[NativeName(NativeNameType.Field, "displayPrimaryGreen")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT DisplayPrimaryGreen;
		[NativeName(NativeNameType.Field, "displayPrimaryBlue")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT DisplayPrimaryBlue;
		[NativeName(NativeNameType.Field, "whitePoint")]
		[NativeName(NativeNameType.Type, "VkXYColorEXT")]
		public VkXYColorEXT WhitePoint;
		[NativeName(NativeNameType.Field, "maxLuminance")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxLuminance;
		[NativeName(NativeNameType.Field, "minLuminance")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinLuminance;
		[NativeName(NativeNameType.Field, "maxContentLightLevel")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxContentLightLevel;
		[NativeName(NativeNameType.Field, "maxFrameAverageLightLevel")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxFrameAverageLightLevel;

		public unsafe VkHdrMetadataEXT(VkStructureType sType = default, void* pNext = default, VkXYColorEXT displayPrimaryRed = default, VkXYColorEXT displayPrimaryGreen = default, VkXYColorEXT displayPrimaryBlue = default, VkXYColorEXT whitePoint = default, float maxLuminance = default, float minLuminance = default, float maxContentLightLevel = default, float maxFrameAverageLightLevel = default)
		{
			SType = sType;
			PNext = pNext;
			DisplayPrimaryRed = displayPrimaryRed;
			DisplayPrimaryGreen = displayPrimaryGreen;
			DisplayPrimaryBlue = displayPrimaryBlue;
			WhitePoint = whitePoint;
			MaxLuminance = maxLuminance;
			MinLuminance = minLuminance;
			MaxContentLightLevel = maxContentLightLevel;
			MaxFrameAverageLightLevel = maxFrameAverageLightLevel;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsLabelEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsLabelEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pLabelName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PLabelName;
		[NativeName(NativeNameType.Field, "color")]
		[NativeName(NativeNameType.Type, "float[4]")]
		public float Color_0;
		public float Color_1;
		public float Color_2;
		public float Color_3;

		public unsafe VkDebugUtilsLabelEXT(VkStructureType sType = default, void* pNext = default, byte* pLabelName = default, float* color = default)
		{
			SType = sType;
			PNext = pNext;
			PLabelName = pLabelName;
			if (color != default)
			{
				Color_0 = color[0];
				Color_1 = color[1];
				Color_2 = color[2];
				Color_3 = color[3];
			}
		}

		public unsafe VkDebugUtilsLabelEXT(VkStructureType sType = default, void* pNext = default, byte* pLabelName = default, Span<float> color = default)
		{
			SType = sType;
			PNext = pNext;
			PLabelName = pLabelName;
			if (color != default)
			{
				Color_0 = color[0];
				Color_1 = color[1];
				Color_2 = color[2];
				Color_3 = color[3];
			}
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsObjectNameInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsObjectNameInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "objectType")]
		[NativeName(NativeNameType.Type, "VkObjectType")]
		public VkObjectType ObjectType;
		[NativeName(NativeNameType.Field, "objectHandle")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong ObjectHandle;
		[NativeName(NativeNameType.Field, "pObjectName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PObjectName;

		public unsafe VkDebugUtilsObjectNameInfoEXT(VkStructureType sType = default, void* pNext = default, VkObjectType objectType = default, ulong objectHandle = default, byte* pObjectName = default)
		{
			SType = sType;
			PNext = pNext;
			ObjectType = objectType;
			ObjectHandle = objectHandle;
			PObjectName = pObjectName;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsMessengerCallbackDataEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsMessengerCallbackDataEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessengerCallbackDataFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "pMessageIdName")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PMessageIdName;
		[NativeName(NativeNameType.Field, "messageIdNumber")]
		[NativeName(NativeNameType.Type, "int32_t")]
		public int MessageIdNumber;
		[NativeName(NativeNameType.Field, "pMessage")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* PMessage;
		[NativeName(NativeNameType.Field, "queueLabelCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint QueueLabelCount;
		[NativeName(NativeNameType.Field, "pQueueLabels")]
		[NativeName(NativeNameType.Type, "const VkDebugUtilsLabelEXT*")]
		public unsafe VkDebugUtilsLabelEXT* PQueueLabels;
		[NativeName(NativeNameType.Field, "cmdBufLabelCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CmdBufLabelCount;
		[NativeName(NativeNameType.Field, "pCmdBufLabels")]
		[NativeName(NativeNameType.Type, "const VkDebugUtilsLabelEXT*")]
		public unsafe VkDebugUtilsLabelEXT* PCmdBufLabels;
		[NativeName(NativeNameType.Field, "objectCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ObjectCount;
		[NativeName(NativeNameType.Field, "pObjects")]
		[NativeName(NativeNameType.Type, "const VkDebugUtilsObjectNameInfoEXT*")]
		public unsafe VkDebugUtilsObjectNameInfoEXT* PObjects;

		public unsafe VkDebugUtilsMessengerCallbackDataEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, byte* pMessageIdName = default, int messageIdNumber = default, byte* pMessage = default, uint queueLabelCount = default, VkDebugUtilsLabelEXT* pQueueLabels = default, uint cmdBufLabelCount = default, VkDebugUtilsLabelEXT* pCmdBufLabels = default, uint objectCount = default, VkDebugUtilsObjectNameInfoEXT* pObjects = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			PMessageIdName = pMessageIdName;
			MessageIdNumber = messageIdNumber;
			PMessage = pMessage;
			QueueLabelCount = queueLabelCount;
			PQueueLabels = pQueueLabels;
			CmdBufLabelCount = cmdBufLabelCount;
			PCmdBufLabels = pCmdBufLabels;
			ObjectCount = objectCount;
			PObjects = pObjects;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsMessengerCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsMessengerCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessengerCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "messageSeverity")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessageSeverityFlagsEXT")]
		public uint MessageSeverity;
		[NativeName(NativeNameType.Field, "messageType")]
		[NativeName(NativeNameType.Type, "VkDebugUtilsMessageTypeFlagsEXT")]
		public uint MessageType;
		[NativeName(NativeNameType.Field, "pfnUserCallback")]
		[NativeName(NativeNameType.Type, "PFN_vkDebugUtilsMessengerCallbackEXT")]
		public unsafe void* PfnUserCallback;
		[NativeName(NativeNameType.Field, "pUserData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PUserData;

		public unsafe VkDebugUtilsMessengerCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, uint messageSeverity = default, uint messageType = default, delegate*<VkDebugUtilsMessageSeverityFlagBitsEXT, uint, VkDebugUtilsMessengerCallbackDataEXT*, void*, uint> pfnUserCallback = default, void* pUserData = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			MessageSeverity = messageSeverity;
			MessageType = messageType;
			PfnUserCallback = (void*)pfnUserCallback;
			PUserData = pUserData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDebugUtilsObjectTagInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDebugUtilsObjectTagInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "objectType")]
		[NativeName(NativeNameType.Type, "VkObjectType")]
		public VkObjectType ObjectType;
		[NativeName(NativeNameType.Field, "objectHandle")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong ObjectHandle;
		[NativeName(NativeNameType.Field, "tagName")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong TagName;
		[NativeName(NativeNameType.Field, "tagSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong TagSize;
		[NativeName(NativeNameType.Field, "pTag")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PTag;

		public unsafe VkDebugUtilsObjectTagInfoEXT(VkStructureType sType = default, void* pNext = default, VkObjectType objectType = default, ulong objectHandle = default, ulong tagName = default, ulong tagSize = default, void* pTag = default)
		{
			SType = sType;
			PNext = pNext;
			ObjectType = objectType;
			ObjectHandle = objectHandle;
			TagName = tagName;
			TagSize = tagSize;
			PTag = pTag;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSampleLocationEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSampleLocationEXT
	{
		[NativeName(NativeNameType.Field, "x")]
		[NativeName(NativeNameType.Type, "float")]
		public float X;
		[NativeName(NativeNameType.Field, "y")]
		[NativeName(NativeNameType.Type, "float")]
		public float Y;

		public unsafe VkSampleLocationEXT(float x = default, float y = default)
		{
			X = x;
			Y = y;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSampleLocationsInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSampleLocationsInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleLocationsPerPixel")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlagBits")]
		public VkSampleCountFlagBits SampleLocationsPerPixel;
		[NativeName(NativeNameType.Field, "sampleLocationGridSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D SampleLocationGridSize;
		[NativeName(NativeNameType.Field, "sampleLocationsCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleLocationsCount;
		[NativeName(NativeNameType.Field, "pSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkSampleLocationEXT*")]
		public unsafe VkSampleLocationEXT* PSampleLocations;

		public unsafe VkSampleLocationsInfoEXT(VkStructureType sType = default, void* pNext = default, VkSampleCountFlagBits sampleLocationsPerPixel = default, VkExtent2D sampleLocationGridSize = default, uint sampleLocationsCount = default, VkSampleLocationEXT* pSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationsPerPixel = sampleLocationsPerPixel;
			SampleLocationGridSize = sampleLocationGridSize;
			SampleLocationsCount = sampleLocationsCount;
			PSampleLocations = pSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAttachmentSampleLocationsEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAttachmentSampleLocationsEXT
	{
		[NativeName(NativeNameType.Field, "attachmentIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AttachmentIndex;
		[NativeName(NativeNameType.Field, "sampleLocationsInfo")]
		[NativeName(NativeNameType.Type, "VkSampleLocationsInfoEXT")]
		public VkSampleLocationsInfoEXT SampleLocationsInfo;

		public unsafe VkAttachmentSampleLocationsEXT(uint attachmentIndex = default, VkSampleLocationsInfoEXT sampleLocationsInfo = default)
		{
			AttachmentIndex = attachmentIndex;
			SampleLocationsInfo = sampleLocationsInfo;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSubpassSampleLocationsEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSubpassSampleLocationsEXT
	{
		[NativeName(NativeNameType.Field, "subpassIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SubpassIndex;
		[NativeName(NativeNameType.Field, "sampleLocationsInfo")]
		[NativeName(NativeNameType.Type, "VkSampleLocationsInfoEXT")]
		public VkSampleLocationsInfoEXT SampleLocationsInfo;

		public unsafe VkSubpassSampleLocationsEXT(uint subpassIndex = default, VkSampleLocationsInfoEXT sampleLocationsInfo = default)
		{
			SubpassIndex = subpassIndex;
			SampleLocationsInfo = sampleLocationsInfo;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRenderPassSampleLocationsBeginInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRenderPassSampleLocationsBeginInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "attachmentInitialSampleLocationsCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AttachmentInitialSampleLocationsCount;
		[NativeName(NativeNameType.Field, "pAttachmentInitialSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkAttachmentSampleLocationsEXT*")]
		public unsafe VkAttachmentSampleLocationsEXT* PAttachmentInitialSampleLocations;
		[NativeName(NativeNameType.Field, "postSubpassSampleLocationsCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PostSubpassSampleLocationsCount;
		[NativeName(NativeNameType.Field, "pPostSubpassSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkSubpassSampleLocationsEXT*")]
		public unsafe VkSubpassSampleLocationsEXT* PPostSubpassSampleLocations;

		public unsafe VkRenderPassSampleLocationsBeginInfoEXT(VkStructureType sType = default, void* pNext = default, uint attachmentInitialSampleLocationsCount = default, VkAttachmentSampleLocationsEXT* pAttachmentInitialSampleLocations = default, uint postSubpassSampleLocationsCount = default, VkSubpassSampleLocationsEXT* pPostSubpassSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			AttachmentInitialSampleLocationsCount = attachmentInitialSampleLocationsCount;
			PAttachmentInitialSampleLocations = pAttachmentInitialSampleLocations;
			PostSubpassSampleLocationsCount = postSubpassSampleLocationsCount;
			PPostSubpassSampleLocations = pPostSubpassSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineSampleLocationsStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineSampleLocationsStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleLocationsEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SampleLocationsEnable;
		[NativeName(NativeNameType.Field, "sampleLocationsInfo")]
		[NativeName(NativeNameType.Type, "VkSampleLocationsInfoEXT")]
		public VkSampleLocationsInfoEXT SampleLocationsInfo;

		public unsafe VkPipelineSampleLocationsStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint sampleLocationsEnable = default, VkSampleLocationsInfoEXT sampleLocationsInfo = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationsEnable = sampleLocationsEnable;
			SampleLocationsInfo = sampleLocationsInfo;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceSampleLocationsPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceSampleLocationsPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleLocationSampleCounts")]
		[NativeName(NativeNameType.Type, "VkSampleCountFlags")]
		public uint SampleLocationSampleCounts;
		[NativeName(NativeNameType.Field, "maxSampleLocationGridSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxSampleLocationGridSize;
		[NativeName(NativeNameType.Field, "sampleLocationCoordinateRange")]
		[NativeName(NativeNameType.Type, "float[2]")]
		public float SampleLocationCoordinateRange_0;
		public float SampleLocationCoordinateRange_1;
		[NativeName(NativeNameType.Field, "sampleLocationSubPixelBits")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleLocationSubPixelBits;
		[NativeName(NativeNameType.Field, "variableSampleLocations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VariableSampleLocations;

		public unsafe VkPhysicalDeviceSampleLocationsPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint sampleLocationSampleCounts = default, VkExtent2D maxSampleLocationGridSize = default, float* sampleLocationCoordinateRange = default, uint sampleLocationSubPixelBits = default, uint variableSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationSampleCounts = sampleLocationSampleCounts;
			MaxSampleLocationGridSize = maxSampleLocationGridSize;
			if (sampleLocationCoordinateRange != default)
			{
				SampleLocationCoordinateRange_0 = sampleLocationCoordinateRange[0];
				SampleLocationCoordinateRange_1 = sampleLocationCoordinateRange[1];
			}
			SampleLocationSubPixelBits = sampleLocationSubPixelBits;
			VariableSampleLocations = variableSampleLocations;
		}

		public unsafe VkPhysicalDeviceSampleLocationsPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint sampleLocationSampleCounts = default, VkExtent2D maxSampleLocationGridSize = default, Span<float> sampleLocationCoordinateRange = default, uint sampleLocationSubPixelBits = default, uint variableSampleLocations = default)
		{
			SType = sType;
			PNext = pNext;
			SampleLocationSampleCounts = sampleLocationSampleCounts;
			MaxSampleLocationGridSize = maxSampleLocationGridSize;
			if (sampleLocationCoordinateRange != default)
			{
				SampleLocationCoordinateRange_0 = sampleLocationCoordinateRange[0];
				SampleLocationCoordinateRange_1 = sampleLocationCoordinateRange[1];
			}
			SampleLocationSubPixelBits = sampleLocationSubPixelBits;
			VariableSampleLocations = variableSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMultisamplePropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMultisamplePropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxSampleLocationGridSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxSampleLocationGridSize;

		public unsafe VkMultisamplePropertiesEXT(VkStructureType sType = default, void* pNext = default, VkExtent2D maxSampleLocationGridSize = default)
		{
			SType = sType;
			PNext = pNext;
			MaxSampleLocationGridSize = maxSampleLocationGridSize;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "advancedBlendCoherentOperations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendCoherentOperations;

		public unsafe VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint advancedBlendCoherentOperations = default)
		{
			SType = sType;
			PNext = pNext;
			AdvancedBlendCoherentOperations = advancedBlendCoherentOperations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "advancedBlendMaxColorAttachments")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AdvancedBlendMaxColorAttachments;
		[NativeName(NativeNameType.Field, "advancedBlendIndependentBlend")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendIndependentBlend;
		[NativeName(NativeNameType.Field, "advancedBlendNonPremultipliedSrcColor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendNonPremultipliedSrcColor;
		[NativeName(NativeNameType.Field, "advancedBlendNonPremultipliedDstColor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendNonPremultipliedDstColor;
		[NativeName(NativeNameType.Field, "advancedBlendCorrelatedOverlap")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendCorrelatedOverlap;
		[NativeName(NativeNameType.Field, "advancedBlendAllOperations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint AdvancedBlendAllOperations;

		public unsafe VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint advancedBlendMaxColorAttachments = default, uint advancedBlendIndependentBlend = default, uint advancedBlendNonPremultipliedSrcColor = default, uint advancedBlendNonPremultipliedDstColor = default, uint advancedBlendCorrelatedOverlap = default, uint advancedBlendAllOperations = default)
		{
			SType = sType;
			PNext = pNext;
			AdvancedBlendMaxColorAttachments = advancedBlendMaxColorAttachments;
			AdvancedBlendIndependentBlend = advancedBlendIndependentBlend;
			AdvancedBlendNonPremultipliedSrcColor = advancedBlendNonPremultipliedSrcColor;
			AdvancedBlendNonPremultipliedDstColor = advancedBlendNonPremultipliedDstColor;
			AdvancedBlendCorrelatedOverlap = advancedBlendCorrelatedOverlap;
			AdvancedBlendAllOperations = advancedBlendAllOperations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineColorBlendAdvancedStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineColorBlendAdvancedStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "srcPremultiplied")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint SrcPremultiplied;
		[NativeName(NativeNameType.Field, "dstPremultiplied")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint DstPremultiplied;
		[NativeName(NativeNameType.Field, "blendOverlap")]
		[NativeName(NativeNameType.Type, "VkBlendOverlapEXT")]
		public VkBlendOverlapEXT BlendOverlap;

		public unsafe VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint srcPremultiplied = default, uint dstPremultiplied = default, VkBlendOverlapEXT blendOverlap = default)
		{
			SType = sType;
			PNext = pNext;
			SrcPremultiplied = srcPremultiplied;
			DstPremultiplied = dstPremultiplied;
			BlendOverlap = blendOverlap;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCoverageToColorStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCoverageToColorStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCoverageToColorStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "coverageToColorEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CoverageToColorEnable;
		[NativeName(NativeNameType.Field, "coverageToColorLocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CoverageToColorLocation;

		public unsafe VkPipelineCoverageToColorStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, uint coverageToColorEnable = default, uint coverageToColorLocation = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			CoverageToColorEnable = coverageToColorEnable;
			CoverageToColorLocation = coverageToColorLocation;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCoverageModulationStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCoverageModulationStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCoverageModulationStateCreateFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "coverageModulationMode")]
		[NativeName(NativeNameType.Type, "VkCoverageModulationModeNV")]
		public VkCoverageModulationModeNV CoverageModulationMode;
		[NativeName(NativeNameType.Field, "coverageModulationTableEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint CoverageModulationTableEnable;
		[NativeName(NativeNameType.Field, "coverageModulationTableCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CoverageModulationTableCount;
		[NativeName(NativeNameType.Field, "pCoverageModulationTable")]
		[NativeName(NativeNameType.Type, "const float*")]
		public unsafe float* PCoverageModulationTable;

		public unsafe VkPipelineCoverageModulationStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, VkCoverageModulationModeNV coverageModulationMode = default, uint coverageModulationTableEnable = default, uint coverageModulationTableCount = default, float* pCoverageModulationTable = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			CoverageModulationMode = coverageModulationMode;
			CoverageModulationTableEnable = coverageModulationTableEnable;
			CoverageModulationTableCount = coverageModulationTableCount;
			PCoverageModulationTable = pCoverageModulationTable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderSMBuiltinsPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderSMCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderSMCount;
		[NativeName(NativeNameType.Field, "shaderWarpsPerSM")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderWarpsPerSM;

		public unsafe VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkStructureType sType = default, void* pNext = default, uint shaderSMCount = default, uint shaderWarpsPerSM = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderSMCount = shaderSMCount;
			ShaderWarpsPerSM = shaderWarpsPerSM;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderSMBuiltinsFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderSMBuiltins")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderSMBuiltins;

		public unsafe VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkStructureType sType = default, void* pNext = default, uint shaderSMBuiltins = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderSMBuiltins = shaderSMBuiltins;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "drmFormatModifierPlaneCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierPlaneCount;
		[NativeName(NativeNameType.Field, "drmFormatModifierTilingFeatures")]
		[NativeName(NativeNameType.Type, "VkFormatFeatureFlags")]
		public uint DrmFormatModifierTilingFeatures;

		public unsafe VkDrmFormatModifierPropertiesEXT(ulong drmFormatModifier = default, uint drmFormatModifierPlaneCount = default, uint drmFormatModifierTilingFeatures = default)
		{
			DrmFormatModifier = drmFormatModifier;
			DrmFormatModifierPlaneCount = drmFormatModifierPlaneCount;
			DrmFormatModifierTilingFeatures = drmFormatModifierTilingFeatures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierPropertiesListEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierPropertiesListEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierCount;
		[NativeName(NativeNameType.Field, "pDrmFormatModifierProperties")]
		[NativeName(NativeNameType.Type, "VkDrmFormatModifierPropertiesEXT*")]
		public unsafe VkDrmFormatModifierPropertiesEXT* PDrmFormatModifierProperties;

		public unsafe VkDrmFormatModifierPropertiesListEXT(VkStructureType sType = default, void* pNext = default, uint drmFormatModifierCount = default, VkDrmFormatModifierPropertiesEXT* pDrmFormatModifierProperties = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifierCount = drmFormatModifierCount;
			PDrmFormatModifierProperties = pDrmFormatModifierProperties;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceImageDrmFormatModifierInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceImageDrmFormatModifierInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "sharingMode")]
		[NativeName(NativeNameType.Type, "VkSharingMode")]
		public VkSharingMode SharingMode;
		[NativeName(NativeNameType.Field, "queueFamilyIndexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint QueueFamilyIndexCount;
		[NativeName(NativeNameType.Field, "pQueueFamilyIndices")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PQueueFamilyIndices;

		public unsafe VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkStructureType sType = default, void* pNext = default, ulong drmFormatModifier = default, VkSharingMode sharingMode = default, uint queueFamilyIndexCount = default, uint* pQueueFamilyIndices = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifier = drmFormatModifier;
			SharingMode = sharingMode;
			QueueFamilyIndexCount = queueFamilyIndexCount;
			PQueueFamilyIndices = pQueueFamilyIndices;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageDrmFormatModifierListCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageDrmFormatModifierListCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierCount;
		[NativeName(NativeNameType.Field, "pDrmFormatModifiers")]
		[NativeName(NativeNameType.Type, "const uint64_t*")]
		public unsafe ulong* PDrmFormatModifiers;

		public unsafe VkImageDrmFormatModifierListCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint drmFormatModifierCount = default, ulong* pDrmFormatModifiers = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifierCount = drmFormatModifierCount;
			PDrmFormatModifiers = pDrmFormatModifiers;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageDrmFormatModifierExplicitCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageDrmFormatModifierExplicitCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "drmFormatModifierPlaneCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierPlaneCount;
		[NativeName(NativeNameType.Field, "pPlaneLayouts")]
		[NativeName(NativeNameType.Type, "const VkSubresourceLayout*")]
		public unsafe VkSubresourceLayout* PPlaneLayouts;

		public unsafe VkImageDrmFormatModifierExplicitCreateInfoEXT(VkStructureType sType = default, void* pNext = default, ulong drmFormatModifier = default, uint drmFormatModifierPlaneCount = default, VkSubresourceLayout* pPlaneLayouts = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifier = drmFormatModifier;
			DrmFormatModifierPlaneCount = drmFormatModifierPlaneCount;
			PPlaneLayouts = pPlaneLayouts;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImageDrmFormatModifierPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImageDrmFormatModifierPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;

		public unsafe VkImageDrmFormatModifierPropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong drmFormatModifier = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifier = drmFormatModifier;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierProperties2EXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierProperties2EXT
	{
		[NativeName(NativeNameType.Field, "drmFormatModifier")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong DrmFormatModifier;
		[NativeName(NativeNameType.Field, "drmFormatModifierPlaneCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierPlaneCount;
		[NativeName(NativeNameType.Field, "drmFormatModifierTilingFeatures")]
		[NativeName(NativeNameType.Type, "VkFormatFeatureFlags2")]
		public uint DrmFormatModifierTilingFeatures;

		public unsafe VkDrmFormatModifierProperties2EXT(ulong drmFormatModifier = default, uint drmFormatModifierPlaneCount = default, uint drmFormatModifierTilingFeatures = default)
		{
			DrmFormatModifier = drmFormatModifier;
			DrmFormatModifierPlaneCount = drmFormatModifierPlaneCount;
			DrmFormatModifierTilingFeatures = drmFormatModifierTilingFeatures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrmFormatModifierPropertiesList2EXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrmFormatModifierPropertiesList2EXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "drmFormatModifierCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DrmFormatModifierCount;
		[NativeName(NativeNameType.Field, "pDrmFormatModifierProperties")]
		[NativeName(NativeNameType.Type, "VkDrmFormatModifierProperties2EXT*")]
		public unsafe VkDrmFormatModifierProperties2EXT* PDrmFormatModifierProperties;

		public unsafe VkDrmFormatModifierPropertiesList2EXT(VkStructureType sType = default, void* pNext = default, uint drmFormatModifierCount = default, VkDrmFormatModifierProperties2EXT* pDrmFormatModifierProperties = default)
		{
			SType = sType;
			PNext = pNext;
			DrmFormatModifierCount = drmFormatModifierCount;
			PDrmFormatModifierProperties = pDrmFormatModifierProperties;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkValidationCacheCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkValidationCacheCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkValidationCacheCreateFlagsEXT")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "initialDataSize")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong InitialDataSize;
		[NativeName(NativeNameType.Field, "pInitialData")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PInitialData;

		public unsafe VkValidationCacheCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint flags = default, ulong initialDataSize = default, void* pInitialData = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			InitialDataSize = initialDataSize;
			PInitialData = pInitialData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkShaderModuleValidationCacheCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkShaderModuleValidationCacheCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "validationCache")]
		[NativeName(NativeNameType.Type, "VkValidationCacheEXT")]
		public VkValidationCacheEXT ValidationCache;

		public unsafe VkShaderModuleValidationCacheCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkValidationCacheEXT validationCache = default)
		{
			SType = sType;
			PNext = pNext;
			ValidationCache = validationCache;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkShadingRatePaletteNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkShadingRatePaletteNV
	{
		[NativeName(NativeNameType.Field, "shadingRatePaletteEntryCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShadingRatePaletteEntryCount;
		[NativeName(NativeNameType.Field, "pShadingRatePaletteEntries")]
		[NativeName(NativeNameType.Type, "const VkShadingRatePaletteEntryNV*")]
		public unsafe VkShadingRatePaletteEntryNV* PShadingRatePaletteEntries;

		public unsafe VkShadingRatePaletteNV(uint shadingRatePaletteEntryCount = default, VkShadingRatePaletteEntryNV* pShadingRatePaletteEntries = default)
		{
			ShadingRatePaletteEntryCount = shadingRatePaletteEntryCount;
			PShadingRatePaletteEntries = pShadingRatePaletteEntries;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportShadingRateImageStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportShadingRateImageStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shadingRateImageEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShadingRateImageEnable;
		[NativeName(NativeNameType.Field, "viewportCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ViewportCount;
		[NativeName(NativeNameType.Field, "pShadingRatePalettes")]
		[NativeName(NativeNameType.Type, "const VkShadingRatePaletteNV*")]
		public unsafe VkShadingRatePaletteNV* PShadingRatePalettes;

		public unsafe VkPipelineViewportShadingRateImageStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint shadingRateImageEnable = default, uint viewportCount = default, VkShadingRatePaletteNV* pShadingRatePalettes = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateImageEnable = shadingRateImageEnable;
			ViewportCount = viewportCount;
			PShadingRatePalettes = pShadingRatePalettes;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShadingRateImageFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShadingRateImageFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shadingRateImage")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShadingRateImage;
		[NativeName(NativeNameType.Field, "shadingRateCoarseSampleOrder")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShadingRateCoarseSampleOrder;

		public unsafe VkPhysicalDeviceShadingRateImageFeaturesNV(VkStructureType sType = default, void* pNext = default, uint shadingRateImage = default, uint shadingRateCoarseSampleOrder = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateImage = shadingRateImage;
			ShadingRateCoarseSampleOrder = shadingRateCoarseSampleOrder;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShadingRateImagePropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShadingRateImagePropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shadingRateTexelSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D ShadingRateTexelSize;
		[NativeName(NativeNameType.Field, "shadingRatePaletteSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShadingRatePaletteSize;
		[NativeName(NativeNameType.Field, "shadingRateMaxCoarseSamples")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShadingRateMaxCoarseSamples;

		public unsafe VkPhysicalDeviceShadingRateImagePropertiesNV(VkStructureType sType = default, void* pNext = default, VkExtent2D shadingRateTexelSize = default, uint shadingRatePaletteSize = default, uint shadingRateMaxCoarseSamples = default)
		{
			SType = sType;
			PNext = pNext;
			ShadingRateTexelSize = shadingRateTexelSize;
			ShadingRatePaletteSize = shadingRatePaletteSize;
			ShadingRateMaxCoarseSamples = shadingRateMaxCoarseSamples;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCoarseSampleLocationNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCoarseSampleLocationNV
	{
		[NativeName(NativeNameType.Field, "pixelX")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PixelX;
		[NativeName(NativeNameType.Field, "pixelY")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PixelY;
		[NativeName(NativeNameType.Field, "sample")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Sample;

		public unsafe VkCoarseSampleLocationNV(uint pixelX = default, uint pixelY = default, uint sample = default)
		{
			PixelX = pixelX;
			PixelY = pixelY;
			Sample = sample;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCoarseSampleOrderCustomNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCoarseSampleOrderCustomNV
	{
		[NativeName(NativeNameType.Field, "shadingRate")]
		[NativeName(NativeNameType.Type, "VkShadingRatePaletteEntryNV")]
		public VkShadingRatePaletteEntryNV ShadingRate;
		[NativeName(NativeNameType.Field, "sampleCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleCount;
		[NativeName(NativeNameType.Field, "sampleLocationCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SampleLocationCount;
		[NativeName(NativeNameType.Field, "pSampleLocations")]
		[NativeName(NativeNameType.Type, "const VkCoarseSampleLocationNV*")]
		public unsafe VkCoarseSampleLocationNV* PSampleLocations;

		public unsafe VkCoarseSampleOrderCustomNV(VkShadingRatePaletteEntryNV shadingRate = default, uint sampleCount = default, uint sampleLocationCount = default, VkCoarseSampleLocationNV* pSampleLocations = default)
		{
			ShadingRate = shadingRate;
			SampleCount = sampleCount;
			SampleLocationCount = sampleLocationCount;
			PSampleLocations = pSampleLocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportCoarseSampleOrderStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "sampleOrderType")]
		[NativeName(NativeNameType.Type, "VkCoarseSampleOrderTypeNV")]
		public VkCoarseSampleOrderTypeNV SampleOrderType;
		[NativeName(NativeNameType.Field, "customSampleOrderCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint CustomSampleOrderCount;
		[NativeName(NativeNameType.Field, "pCustomSampleOrders")]
		[NativeName(NativeNameType.Type, "const VkCoarseSampleOrderCustomNV*")]
		public unsafe VkCoarseSampleOrderCustomNV* PCustomSampleOrders;

		public unsafe VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, VkCoarseSampleOrderTypeNV sampleOrderType = default, uint customSampleOrderCount = default, VkCoarseSampleOrderCustomNV* pCustomSampleOrders = default)
		{
			SType = sType;
			PNext = pNext;
			SampleOrderType = sampleOrderType;
			CustomSampleOrderCount = customSampleOrderCount;
			PCustomSampleOrders = pCustomSampleOrders;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRayTracingShaderGroupCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRayTracingShaderGroupCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkRayTracingShaderGroupTypeKHR")]
		public VkRayTracingShaderGroupTypeKHR Type;
		[NativeName(NativeNameType.Field, "generalShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GeneralShader;
		[NativeName(NativeNameType.Field, "closestHitShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ClosestHitShader;
		[NativeName(NativeNameType.Field, "anyHitShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AnyHitShader;
		[NativeName(NativeNameType.Field, "intersectionShader")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint IntersectionShader;

		public unsafe VkRayTracingShaderGroupCreateInfoNV(VkStructureType sType = default, void* pNext = default, VkRayTracingShaderGroupTypeKHR type = default, uint generalShader = default, uint closestHitShader = default, uint anyHitShader = default, uint intersectionShader = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			GeneralShader = generalShader;
			ClosestHitShader = closestHitShader;
			AnyHitShader = anyHitShader;
			IntersectionShader = intersectionShader;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRayTracingPipelineCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRayTracingPipelineCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkPipelineCreateFlags")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "stageCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StageCount;
		[NativeName(NativeNameType.Field, "pStages")]
		[NativeName(NativeNameType.Type, "const VkPipelineShaderStageCreateInfo*")]
		public unsafe VkPipelineShaderStageCreateInfo* PStages;
		[NativeName(NativeNameType.Field, "groupCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GroupCount;
		[NativeName(NativeNameType.Field, "pGroups")]
		[NativeName(NativeNameType.Type, "const VkRayTracingShaderGroupCreateInfoNV*")]
		public unsafe VkRayTracingShaderGroupCreateInfoNV* PGroups;
		[NativeName(NativeNameType.Field, "maxRecursionDepth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxRecursionDepth;
		[NativeName(NativeNameType.Field, "layout")]
		[NativeName(NativeNameType.Type, "VkPipelineLayout")]
		public VkPipelineLayout Layout;
		[NativeName(NativeNameType.Field, "basePipelineHandle")]
		[NativeName(NativeNameType.Type, "VkPipeline")]
		public VkPipeline BasePipelineHandle;
		[NativeName(NativeNameType.Field, "basePipelineIndex")]
		[NativeName(NativeNameType.Type, "int32_t")]
		public int BasePipelineIndex;

		public unsafe VkRayTracingPipelineCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint flags = default, uint stageCount = default, VkPipelineShaderStageCreateInfo* pStages = default, uint groupCount = default, VkRayTracingShaderGroupCreateInfoNV* pGroups = default, uint maxRecursionDepth = default, VkPipelineLayout layout = default, VkPipeline basePipelineHandle = default, int basePipelineIndex = default)
		{
			SType = sType;
			PNext = pNext;
			Flags = flags;
			StageCount = stageCount;
			PStages = pStages;
			GroupCount = groupCount;
			PGroups = pGroups;
			MaxRecursionDepth = maxRecursionDepth;
			Layout = layout;
			BasePipelineHandle = basePipelineHandle;
			BasePipelineIndex = basePipelineIndex;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryTrianglesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryTrianglesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vertexData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer VertexData;
		[NativeName(NativeNameType.Field, "vertexOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong VertexOffset;
		[NativeName(NativeNameType.Field, "vertexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VertexCount;
		[NativeName(NativeNameType.Field, "vertexStride")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong VertexStride;
		[NativeName(NativeNameType.Field, "vertexFormat")]
		[NativeName(NativeNameType.Type, "VkFormat")]
		public VkFormat VertexFormat;
		[NativeName(NativeNameType.Field, "indexData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer IndexData;
		[NativeName(NativeNameType.Field, "indexOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong IndexOffset;
		[NativeName(NativeNameType.Field, "indexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint IndexCount;
		[NativeName(NativeNameType.Field, "indexType")]
		[NativeName(NativeNameType.Type, "VkIndexType")]
		public VkIndexType IndexType;
		[NativeName(NativeNameType.Field, "transformData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer TransformData;
		[NativeName(NativeNameType.Field, "transformOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong TransformOffset;

		public unsafe VkGeometryTrianglesNV(VkStructureType sType = default, void* pNext = default, VkBuffer vertexData = default, ulong vertexOffset = default, uint vertexCount = default, ulong vertexStride = default, VkFormat vertexFormat = default, VkBuffer indexData = default, ulong indexOffset = default, uint indexCount = default, VkIndexType indexType = default, VkBuffer transformData = default, ulong transformOffset = default)
		{
			SType = sType;
			PNext = pNext;
			VertexData = vertexData;
			VertexOffset = vertexOffset;
			VertexCount = vertexCount;
			VertexStride = vertexStride;
			VertexFormat = vertexFormat;
			IndexData = indexData;
			IndexOffset = indexOffset;
			IndexCount = indexCount;
			IndexType = indexType;
			TransformData = transformData;
			TransformOffset = transformOffset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryAABBNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryAABBNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "aabbData")]
		[NativeName(NativeNameType.Type, "VkBuffer")]
		public VkBuffer AabbData;
		[NativeName(NativeNameType.Field, "numAABBs")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint NumAABBs;
		[NativeName(NativeNameType.Field, "stride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Stride;
		[NativeName(NativeNameType.Field, "offset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong Offset;

		public unsafe VkGeometryAABBNV(VkStructureType sType = default, void* pNext = default, VkBuffer aabbData = default, uint numAABBs = default, uint stride = default, ulong offset = default)
		{
			SType = sType;
			PNext = pNext;
			AabbData = aabbData;
			NumAABBs = numAABBs;
			Stride = stride;
			Offset = offset;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryDataNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryDataNV
	{
		[NativeName(NativeNameType.Field, "triangles")]
		[NativeName(NativeNameType.Type, "VkGeometryTrianglesNV")]
		public VkGeometryTrianglesNV Triangles;
		[NativeName(NativeNameType.Field, "aabbs")]
		[NativeName(NativeNameType.Type, "VkGeometryAABBNV")]
		public VkGeometryAABBNV Aabbs;

		public unsafe VkGeometryDataNV(VkGeometryTrianglesNV triangles = default, VkGeometryAABBNV aabbs = default)
		{
			Triangles = triangles;
			Aabbs = aabbs;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkGeometryNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkGeometryNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "geometryType")]
		[NativeName(NativeNameType.Type, "VkGeometryTypeKHR")]
		public VkGeometryTypeKHR GeometryType;
		[NativeName(NativeNameType.Field, "geometry")]
		[NativeName(NativeNameType.Type, "VkGeometryDataNV")]
		public VkGeometryDataNV Geometry;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkGeometryFlagsKHR")]
		public uint Flags;

		public unsafe VkGeometryNV(VkStructureType sType = default, void* pNext = default, VkGeometryTypeKHR geometryType = default, VkGeometryDataNV geometry = default, uint flags = default)
		{
			SType = sType;
			PNext = pNext;
			GeometryType = geometryType;
			Geometry = geometry;
			Flags = flags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureTypeNV")]
		public uint Type;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkBuildAccelerationStructureFlagsNV")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "instanceCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceCount;
		[NativeName(NativeNameType.Field, "geometryCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint GeometryCount;
		[NativeName(NativeNameType.Field, "pGeometries")]
		[NativeName(NativeNameType.Type, "const VkGeometryNV*")]
		public unsafe VkGeometryNV* PGeometries;

		public unsafe VkAccelerationStructureInfoNV(VkStructureType sType = default, void* pNext = default, uint type = default, uint flags = default, uint instanceCount = default, uint geometryCount = default, VkGeometryNV* pGeometries = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			Flags = flags;
			InstanceCount = instanceCount;
			GeometryCount = geometryCount;
			PGeometries = pGeometries;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "compactedSize")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong CompactedSize;
		[NativeName(NativeNameType.Field, "info")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureInfoNV")]
		public VkAccelerationStructureInfoNV Info;

		public unsafe VkAccelerationStructureCreateInfoNV(VkStructureType sType = default, void* pNext = default, ulong compactedSize = default, VkAccelerationStructureInfoNV info = default)
		{
			SType = sType;
			PNext = pNext;
			CompactedSize = compactedSize;
			Info = info;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkBindAccelerationStructureMemoryInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkBindAccelerationStructureMemoryInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureNV")]
		public VkAccelerationStructureNV AccelerationStructure;
		[NativeName(NativeNameType.Field, "memory")]
		[NativeName(NativeNameType.Type, "VkDeviceMemory")]
		public VkDeviceMemory Memory;
		[NativeName(NativeNameType.Field, "memoryOffset")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MemoryOffset;
		[NativeName(NativeNameType.Field, "deviceIndexCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint DeviceIndexCount;
		[NativeName(NativeNameType.Field, "pDeviceIndices")]
		[NativeName(NativeNameType.Type, "const uint32_t*")]
		public unsafe uint* PDeviceIndices;

		public unsafe VkBindAccelerationStructureMemoryInfoNV(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureNV accelerationStructure = default, VkDeviceMemory memory = default, ulong memoryOffset = default, uint deviceIndexCount = default, uint* pDeviceIndices = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructure = accelerationStructure;
			Memory = memory;
			MemoryOffset = memoryOffset;
			DeviceIndexCount = deviceIndexCount;
			PDeviceIndices = pDeviceIndices;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkWriteDescriptorSetAccelerationStructureNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkWriteDescriptorSetAccelerationStructureNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "accelerationStructureCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint AccelerationStructureCount;
		[NativeName(NativeNameType.Field, "pAccelerationStructures")]
		[NativeName(NativeNameType.Type, "const VkAccelerationStructureNV*")]
		public unsafe VkAccelerationStructureNV* PAccelerationStructures;

		public unsafe VkWriteDescriptorSetAccelerationStructureNV(VkStructureType sType = default, void* pNext = default, uint accelerationStructureCount = default, VkAccelerationStructureNV* pAccelerationStructures = default)
		{
			SType = sType;
			PNext = pNext;
			AccelerationStructureCount = accelerationStructureCount;
			PAccelerationStructures = pAccelerationStructures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureMemoryRequirementsInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureMemoryRequirementsInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureMemoryRequirementsTypeNV")]
		public VkAccelerationStructureMemoryRequirementsTypeNV Type;
		[NativeName(NativeNameType.Field, "accelerationStructure")]
		[NativeName(NativeNameType.Type, "VkAccelerationStructureNV")]
		public VkAccelerationStructureNV AccelerationStructure;

		public unsafe VkAccelerationStructureMemoryRequirementsInfoNV(VkStructureType sType = default, void* pNext = default, VkAccelerationStructureMemoryRequirementsTypeNV type = default, VkAccelerationStructureNV accelerationStructure = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			AccelerationStructure = accelerationStructure;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRayTracingPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRayTracingPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderGroupHandleSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupHandleSize;
		[NativeName(NativeNameType.Field, "maxRecursionDepth")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxRecursionDepth;
		[NativeName(NativeNameType.Field, "maxShaderGroupStride")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxShaderGroupStride;
		[NativeName(NativeNameType.Field, "shaderGroupBaseAlignment")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderGroupBaseAlignment;
		[NativeName(NativeNameType.Field, "maxGeometryCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxGeometryCount;
		[NativeName(NativeNameType.Field, "maxInstanceCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxInstanceCount;
		[NativeName(NativeNameType.Field, "maxTriangleCount")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong MaxTriangleCount;
		[NativeName(NativeNameType.Field, "maxDescriptorSetAccelerationStructures")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDescriptorSetAccelerationStructures;

		public unsafe VkPhysicalDeviceRayTracingPropertiesNV(VkStructureType sType = default, void* pNext = default, uint shaderGroupHandleSize = default, uint maxRecursionDepth = default, uint maxShaderGroupStride = default, uint shaderGroupBaseAlignment = default, ulong maxGeometryCount = default, ulong maxInstanceCount = default, ulong maxTriangleCount = default, uint maxDescriptorSetAccelerationStructures = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderGroupHandleSize = shaderGroupHandleSize;
			MaxRecursionDepth = maxRecursionDepth;
			MaxShaderGroupStride = maxShaderGroupStride;
			ShaderGroupBaseAlignment = shaderGroupBaseAlignment;
			MaxGeometryCount = maxGeometryCount;
			MaxInstanceCount = maxInstanceCount;
			MaxTriangleCount = maxTriangleCount;
			MaxDescriptorSetAccelerationStructures = maxDescriptorSetAccelerationStructures;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkTransformMatrixKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkTransformMatrixKHR
	{
		[NativeName(NativeNameType.Field, "matrix")]
		[NativeName(NativeNameType.Type, "float[4][3]")]
		public unsafe float* Matrix_0;
		public unsafe float* Matrix_1;
		public unsafe float* Matrix_2;

		public unsafe VkTransformMatrixKHR(float** matrix = default)
		{
			if (matrix != default)
			{
				Matrix_0 = matrix[0];
				Matrix_1 = matrix[1];
				Matrix_2 = matrix[2];
			}
		}

		public unsafe VkTransformMatrixKHR(Span<Pointer<float>> matrix = default)
		{
			if (matrix != default)
			{
				Matrix_0 = matrix[0];
				Matrix_1 = matrix[1];
				Matrix_2 = matrix[2];
			}
		}


		public unsafe Span<Pointer<float>> Matrix
		
		{
			get
			{
				fixed (float** p = &this.Matrix_0)
				{
					return new Span<Pointer<float>>(p, 3);
				}
			}
		}
	}

	[NativeName(NativeNameType.StructOrClass, "VkAabbPositionsKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAabbPositionsKHR
	{
		[NativeName(NativeNameType.Field, "minX")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinX;
		[NativeName(NativeNameType.Field, "minY")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinY;
		[NativeName(NativeNameType.Field, "minZ")]
		[NativeName(NativeNameType.Type, "float")]
		public float MinZ;
		[NativeName(NativeNameType.Field, "maxX")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxX;
		[NativeName(NativeNameType.Field, "maxY")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxY;
		[NativeName(NativeNameType.Field, "maxZ")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxZ;

		public unsafe VkAabbPositionsKHR(float minX = default, float minY = default, float minZ = default, float maxX = default, float maxY = default, float maxZ = default)
		{
			MinX = minX;
			MinY = minY;
			MinZ = minZ;
			MaxX = maxX;
			MaxY = maxY;
			MaxZ = maxZ;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkAccelerationStructureInstanceKHR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkAccelerationStructureInstanceKHR
	{
		[NativeName(NativeNameType.Field, "transform")]
		[NativeName(NativeNameType.Type, "VkTransformMatrixKHR")]
		public VkTransformMatrixKHR Transform;
		[NativeName(NativeNameType.Field, "instanceCustomIndex")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceCustomIndex;
		[NativeName(NativeNameType.Field, "mask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Mask;
		[NativeName(NativeNameType.Field, "instanceShaderBindingTableRecordOffset")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint InstanceShaderBindingTableRecordOffset;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "VkGeometryInstanceFlagsKHR")]
		public uint Flags;
		[NativeName(NativeNameType.Field, "accelerationStructureReference")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong AccelerationStructureReference;

		public unsafe VkAccelerationStructureInstanceKHR(VkTransformMatrixKHR transform = default, uint instanceCustomIndex = default, uint mask = default, uint instanceShaderBindingTableRecordOffset = default, uint flags = default, ulong accelerationStructureReference = default)
		{
			Transform = transform;
			InstanceCustomIndex = instanceCustomIndex;
			Mask = mask;
			InstanceShaderBindingTableRecordOffset = instanceShaderBindingTableRecordOffset;
			Flags = flags;
			AccelerationStructureReference = accelerationStructureReference;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "representativeFragmentTest")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RepresentativeFragmentTest;

		public unsafe VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkStructureType sType = default, void* pNext = default, uint representativeFragmentTest = default)
		{
			SType = sType;
			PNext = pNext;
			RepresentativeFragmentTest = representativeFragmentTest;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineRepresentativeFragmentTestStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineRepresentativeFragmentTestStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "representativeFragmentTestEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint RepresentativeFragmentTestEnable;

		public unsafe VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint representativeFragmentTestEnable = default)
		{
			SType = sType;
			PNext = pNext;
			RepresentativeFragmentTestEnable = representativeFragmentTestEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceImageViewImageFormatInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceImageViewImageFormatInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageViewType")]
		[NativeName(NativeNameType.Type, "VkImageViewType")]
		public VkImageViewType ImageViewType;

		public unsafe VkPhysicalDeviceImageViewImageFormatInfoEXT(VkStructureType sType = default, void* pNext = default, VkImageViewType imageViewType = default)
		{
			SType = sType;
			PNext = pNext;
			ImageViewType = imageViewType;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkFilterCubicImageViewImageFormatPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkFilterCubicImageViewImageFormatPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "filterCubic")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterCubic;
		[NativeName(NativeNameType.Field, "filterCubicMinmax")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FilterCubicMinmax;

		public unsafe VkFilterCubicImageViewImageFormatPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint filterCubic = default, uint filterCubicMinmax = default)
		{
			SType = sType;
			PNext = pNext;
			FilterCubic = filterCubic;
			FilterCubicMinmax = filterCubicMinmax;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkImportMemoryHostPointerInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkImportMemoryHostPointerInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "handleType")]
		[NativeName(NativeNameType.Type, "VkExternalMemoryHandleTypeFlagBits")]
		public VkExternalMemoryHandleTypeFlagBits HandleType;
		[NativeName(NativeNameType.Field, "pHostPointer")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PHostPointer;

		public unsafe VkImportMemoryHostPointerInfoEXT(VkStructureType sType = default, void* pNext = default, VkExternalMemoryHandleTypeFlagBits handleType = default, void* pHostPointer = default)
		{
			SType = sType;
			PNext = pNext;
			HandleType = handleType;
			PHostPointer = pHostPointer;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkMemoryHostPointerPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkMemoryHostPointerPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "memoryTypeBits")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MemoryTypeBits;

		public unsafe VkMemoryHostPointerPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint memoryTypeBits = default)
		{
			SType = sType;
			PNext = pNext;
			MemoryTypeBits = memoryTypeBits;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceExternalMemoryHostPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceExternalMemoryHostPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "minImportedHostPointerAlignment")]
		[NativeName(NativeNameType.Type, "VkDeviceSize")]
		public ulong MinImportedHostPointerAlignment;

		public unsafe VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkStructureType sType = default, void* pNext = default, ulong minImportedHostPointerAlignment = default)
		{
			SType = sType;
			PNext = pNext;
			MinImportedHostPointerAlignment = minImportedHostPointerAlignment;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineCompilerControlCreateInfoAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineCompilerControlCreateInfoAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "compilerControlFlags")]
		[NativeName(NativeNameType.Type, "VkPipelineCompilerControlFlagsAMD")]
		public uint CompilerControlFlags;

		public unsafe VkPipelineCompilerControlCreateInfoAMD(VkStructureType sType = default, void* pNext = default, uint compilerControlFlags = default)
		{
			SType = sType;
			PNext = pNext;
			CompilerControlFlags = compilerControlFlags;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCalibratedTimestampInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCalibratedTimestampInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "timeDomain")]
		[NativeName(NativeNameType.Type, "VkTimeDomainEXT")]
		public VkTimeDomainEXT TimeDomain;

		public unsafe VkCalibratedTimestampInfoEXT(VkStructureType sType = default, void* pNext = default, VkTimeDomainEXT timeDomain = default)
		{
			SType = sType;
			PNext = pNext;
			TimeDomain = timeDomain;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderCorePropertiesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderCorePropertiesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderEngineCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderEngineCount;
		[NativeName(NativeNameType.Field, "shaderArraysPerEngineCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ShaderArraysPerEngineCount;
		[NativeName(NativeNameType.Field, "computeUnitsPerShaderArray")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ComputeUnitsPerShaderArray;
		[NativeName(NativeNameType.Field, "simdPerComputeUnit")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SimdPerComputeUnit;
		[NativeName(NativeNameType.Field, "wavefrontsPerSimd")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint WavefrontsPerSimd;
		[NativeName(NativeNameType.Field, "wavefrontSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint WavefrontSize;
		[NativeName(NativeNameType.Field, "sgprsPerSimd")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SgprsPerSimd;
		[NativeName(NativeNameType.Field, "minSgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinSgprAllocation;
		[NativeName(NativeNameType.Field, "maxSgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxSgprAllocation;
		[NativeName(NativeNameType.Field, "sgprAllocationGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint SgprAllocationGranularity;
		[NativeName(NativeNameType.Field, "vgprsPerSimd")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VgprsPerSimd;
		[NativeName(NativeNameType.Field, "minVgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinVgprAllocation;
		[NativeName(NativeNameType.Field, "maxVgprAllocation")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxVgprAllocation;
		[NativeName(NativeNameType.Field, "vgprAllocationGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VgprAllocationGranularity;

		public unsafe VkPhysicalDeviceShaderCorePropertiesAMD(VkStructureType sType = default, void* pNext = default, uint shaderEngineCount = default, uint shaderArraysPerEngineCount = default, uint computeUnitsPerShaderArray = default, uint simdPerComputeUnit = default, uint wavefrontsPerSimd = default, uint wavefrontSize = default, uint sgprsPerSimd = default, uint minSgprAllocation = default, uint maxSgprAllocation = default, uint sgprAllocationGranularity = default, uint vgprsPerSimd = default, uint minVgprAllocation = default, uint maxVgprAllocation = default, uint vgprAllocationGranularity = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderEngineCount = shaderEngineCount;
			ShaderArraysPerEngineCount = shaderArraysPerEngineCount;
			ComputeUnitsPerShaderArray = computeUnitsPerShaderArray;
			SimdPerComputeUnit = simdPerComputeUnit;
			WavefrontsPerSimd = wavefrontsPerSimd;
			WavefrontSize = wavefrontSize;
			SgprsPerSimd = sgprsPerSimd;
			MinSgprAllocation = minSgprAllocation;
			MaxSgprAllocation = maxSgprAllocation;
			SgprAllocationGranularity = sgprAllocationGranularity;
			VgprsPerSimd = vgprsPerSimd;
			MinVgprAllocation = minVgprAllocation;
			MaxVgprAllocation = maxVgprAllocation;
			VgprAllocationGranularity = vgprAllocationGranularity;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDeviceMemoryOverallocationCreateInfoAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDeviceMemoryOverallocationCreateInfoAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "overallocationBehavior")]
		[NativeName(NativeNameType.Type, "VkMemoryOverallocationBehaviorAMD")]
		public VkMemoryOverallocationBehaviorAMD OverallocationBehavior;

		public unsafe VkDeviceMemoryOverallocationCreateInfoAMD(VkStructureType sType = default, void* pNext = default, VkMemoryOverallocationBehaviorAMD overallocationBehavior = default)
		{
			SType = sType;
			PNext = pNext;
			OverallocationBehavior = overallocationBehavior;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxVertexAttribDivisor")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxVertexAttribDivisor;

		public unsafe VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint maxVertexAttribDivisor = default)
		{
			SType = sType;
			PNext = pNext;
			MaxVertexAttribDivisor = maxVertexAttribDivisor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkVertexInputBindingDivisorDescriptionEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkVertexInputBindingDivisorDescriptionEXT
	{
		[NativeName(NativeNameType.Field, "binding")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Binding;
		[NativeName(NativeNameType.Field, "divisor")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Divisor;

		public unsafe VkVertexInputBindingDivisorDescriptionEXT(uint binding = default, uint divisor = default)
		{
			Binding = binding;
			Divisor = divisor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineVertexInputDivisorStateCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineVertexInputDivisorStateCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vertexBindingDivisorCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint VertexBindingDivisorCount;
		[NativeName(NativeNameType.Field, "pVertexBindingDivisors")]
		[NativeName(NativeNameType.Type, "const VkVertexInputBindingDivisorDescriptionEXT*")]
		public unsafe VkVertexInputBindingDivisorDescriptionEXT* PVertexBindingDivisors;

		public unsafe VkPipelineVertexInputDivisorStateCreateInfoEXT(VkStructureType sType = default, void* pNext = default, uint vertexBindingDivisorCount = default, VkVertexInputBindingDivisorDescriptionEXT* pVertexBindingDivisors = default)
		{
			SType = sType;
			PNext = pNext;
			VertexBindingDivisorCount = vertexBindingDivisorCount;
			PVertexBindingDivisors = pVertexBindingDivisors;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "vertexAttributeInstanceRateDivisor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VertexAttributeInstanceRateDivisor;
		[NativeName(NativeNameType.Field, "vertexAttributeInstanceRateZeroDivisor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint VertexAttributeInstanceRateZeroDivisor;

		public unsafe VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint vertexAttributeInstanceRateDivisor = default, uint vertexAttributeInstanceRateZeroDivisor = default)
		{
			SType = sType;
			PNext = pNext;
			VertexAttributeInstanceRateDivisor = vertexAttributeInstanceRateDivisor;
			VertexAttributeInstanceRateZeroDivisor = vertexAttributeInstanceRateZeroDivisor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceComputeShaderDerivativesFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "computeDerivativeGroupQuads")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ComputeDerivativeGroupQuads;
		[NativeName(NativeNameType.Field, "computeDerivativeGroupLinear")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ComputeDerivativeGroupLinear;

		public unsafe VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkStructureType sType = default, void* pNext = default, uint computeDerivativeGroupQuads = default, uint computeDerivativeGroupLinear = default)
		{
			SType = sType;
			PNext = pNext;
			ComputeDerivativeGroupQuads = computeDerivativeGroupQuads;
			ComputeDerivativeGroupLinear = computeDerivativeGroupLinear;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMeshShaderFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMeshShaderFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "taskShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint TaskShader;
		[NativeName(NativeNameType.Field, "meshShader")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint MeshShader;

		public unsafe VkPhysicalDeviceMeshShaderFeaturesNV(VkStructureType sType = default, void* pNext = default, uint taskShader = default, uint meshShader = default)
		{
			SType = sType;
			PNext = pNext;
			TaskShader = taskShader;
			MeshShader = meshShader;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceMeshShaderPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceMeshShaderPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "maxDrawMeshTasksCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxDrawMeshTasksCount;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "maxTaskWorkGroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxTaskWorkGroupSize_0;
		public uint MaxTaskWorkGroupSize_1;
		public uint MaxTaskWorkGroupSize_2;
		[NativeName(NativeNameType.Field, "maxTaskTotalMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskTotalMemorySize;
		[NativeName(NativeNameType.Field, "maxTaskOutputCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxTaskOutputCount;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupInvocations")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshWorkGroupInvocations;
		[NativeName(NativeNameType.Field, "maxMeshWorkGroupSize")]
		[NativeName(NativeNameType.Type, "uint32_t[3]")]
		public uint MaxMeshWorkGroupSize_0;
		public uint MaxMeshWorkGroupSize_1;
		public uint MaxMeshWorkGroupSize_2;
		[NativeName(NativeNameType.Field, "maxMeshTotalMemorySize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshTotalMemorySize;
		[NativeName(NativeNameType.Field, "maxMeshOutputVertices")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputVertices;
		[NativeName(NativeNameType.Field, "maxMeshOutputPrimitives")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshOutputPrimitives;
		[NativeName(NativeNameType.Field, "maxMeshMultiviewViewCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MaxMeshMultiviewViewCount;
		[NativeName(NativeNameType.Field, "meshOutputPerVertexGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MeshOutputPerVertexGranularity;
		[NativeName(NativeNameType.Field, "meshOutputPerPrimitiveGranularity")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MeshOutputPerPrimitiveGranularity;

		public unsafe VkPhysicalDeviceMeshShaderPropertiesNV(VkStructureType sType = default, void* pNext = default, uint maxDrawMeshTasksCount = default, uint maxTaskWorkGroupInvocations = default, uint* maxTaskWorkGroupSize = default, uint maxTaskTotalMemorySize = default, uint maxTaskOutputCount = default, uint maxMeshWorkGroupInvocations = default, uint* maxMeshWorkGroupSize = default, uint maxMeshTotalMemorySize = default, uint maxMeshOutputVertices = default, uint maxMeshOutputPrimitives = default, uint maxMeshMultiviewViewCount = default, uint meshOutputPerVertexGranularity = default, uint meshOutputPerPrimitiveGranularity = default)
		{
			SType = sType;
			PNext = pNext;
			MaxDrawMeshTasksCount = maxDrawMeshTasksCount;
			MaxTaskWorkGroupInvocations = maxTaskWorkGroupInvocations;
			if (maxTaskWorkGroupSize != default)
			{
				MaxTaskWorkGroupSize_0 = maxTaskWorkGroupSize[0];
				MaxTaskWorkGroupSize_1 = maxTaskWorkGroupSize[1];
				MaxTaskWorkGroupSize_2 = maxTaskWorkGroupSize[2];
			}
			MaxTaskTotalMemorySize = maxTaskTotalMemorySize;
			MaxTaskOutputCount = maxTaskOutputCount;
			MaxMeshWorkGroupInvocations = maxMeshWorkGroupInvocations;
			if (maxMeshWorkGroupSize != default)
			{
				MaxMeshWorkGroupSize_0 = maxMeshWorkGroupSize[0];
				MaxMeshWorkGroupSize_1 = maxMeshWorkGroupSize[1];
				MaxMeshWorkGroupSize_2 = maxMeshWorkGroupSize[2];
			}
			MaxMeshTotalMemorySize = maxMeshTotalMemorySize;
			MaxMeshOutputVertices = maxMeshOutputVertices;
			MaxMeshOutputPrimitives = maxMeshOutputPrimitives;
			MaxMeshMultiviewViewCount = maxMeshMultiviewViewCount;
			MeshOutputPerVertexGranularity = meshOutputPerVertexGranularity;
			MeshOutputPerPrimitiveGranularity = meshOutputPerPrimitiveGranularity;
		}

		public unsafe VkPhysicalDeviceMeshShaderPropertiesNV(VkStructureType sType = default, void* pNext = default, uint maxDrawMeshTasksCount = default, uint maxTaskWorkGroupInvocations = default, Span<uint> maxTaskWorkGroupSize = default, uint maxTaskTotalMemorySize = default, uint maxTaskOutputCount = default, uint maxMeshWorkGroupInvocations = default, Span<uint> maxMeshWorkGroupSize = default, uint maxMeshTotalMemorySize = default, uint maxMeshOutputVertices = default, uint maxMeshOutputPrimitives = default, uint maxMeshMultiviewViewCount = default, uint meshOutputPerVertexGranularity = default, uint meshOutputPerPrimitiveGranularity = default)
		{
			SType = sType;
			PNext = pNext;
			MaxDrawMeshTasksCount = maxDrawMeshTasksCount;
			MaxTaskWorkGroupInvocations = maxTaskWorkGroupInvocations;
			if (maxTaskWorkGroupSize != default)
			{
				MaxTaskWorkGroupSize_0 = maxTaskWorkGroupSize[0];
				MaxTaskWorkGroupSize_1 = maxTaskWorkGroupSize[1];
				MaxTaskWorkGroupSize_2 = maxTaskWorkGroupSize[2];
			}
			MaxTaskTotalMemorySize = maxTaskTotalMemorySize;
			MaxTaskOutputCount = maxTaskOutputCount;
			MaxMeshWorkGroupInvocations = maxMeshWorkGroupInvocations;
			if (maxMeshWorkGroupSize != default)
			{
				MaxMeshWorkGroupSize_0 = maxMeshWorkGroupSize[0];
				MaxMeshWorkGroupSize_1 = maxMeshWorkGroupSize[1];
				MaxMeshWorkGroupSize_2 = maxMeshWorkGroupSize[2];
			}
			MaxMeshTotalMemorySize = maxMeshTotalMemorySize;
			MaxMeshOutputVertices = maxMeshOutputVertices;
			MaxMeshOutputPrimitives = maxMeshOutputPrimitives;
			MaxMeshMultiviewViewCount = maxMeshMultiviewViewCount;
			MeshOutputPerVertexGranularity = meshOutputPerVertexGranularity;
			MeshOutputPerPrimitiveGranularity = meshOutputPerPrimitiveGranularity;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDrawMeshTasksIndirectCommandNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDrawMeshTasksIndirectCommandNV
	{
		[NativeName(NativeNameType.Field, "taskCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint TaskCount;
		[NativeName(NativeNameType.Field, "firstTask")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint FirstTask;

		public unsafe VkDrawMeshTasksIndirectCommandNV(uint taskCount = default, uint firstTask = default)
		{
			TaskCount = taskCount;
			FirstTask = firstTask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderImageFootprintFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderImageFootprintFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "imageFootprint")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ImageFootprint;

		public unsafe VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkStructureType sType = default, void* pNext = default, uint imageFootprint = default)
		{
			SType = sType;
			PNext = pNext;
			ImageFootprint = imageFootprint;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPipelineViewportExclusiveScissorStateCreateInfoNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPipelineViewportExclusiveScissorStateCreateInfoNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "exclusiveScissorCount")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint ExclusiveScissorCount;
		[NativeName(NativeNameType.Field, "pExclusiveScissors")]
		[NativeName(NativeNameType.Type, "const VkRect2D*")]
		public unsafe VkRect2D* PExclusiveScissors;

		public unsafe VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkStructureType sType = default, void* pNext = default, uint exclusiveScissorCount = default, VkRect2D* pExclusiveScissors = default)
		{
			SType = sType;
			PNext = pNext;
			ExclusiveScissorCount = exclusiveScissorCount;
			PExclusiveScissors = pExclusiveScissors;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceExclusiveScissorFeaturesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceExclusiveScissorFeaturesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "exclusiveScissor")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ExclusiveScissor;

		public unsafe VkPhysicalDeviceExclusiveScissorFeaturesNV(VkStructureType sType = default, void* pNext = default, uint exclusiveScissor = default)
		{
			SType = sType;
			PNext = pNext;
			ExclusiveScissor = exclusiveScissor;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkQueueFamilyCheckpointPropertiesNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkQueueFamilyCheckpointPropertiesNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "checkpointExecutionStageMask")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlags")]
		public uint CheckpointExecutionStageMask;

		public unsafe VkQueueFamilyCheckpointPropertiesNV(VkStructureType sType = default, void* pNext = default, uint checkpointExecutionStageMask = default)
		{
			SType = sType;
			PNext = pNext;
			CheckpointExecutionStageMask = checkpointExecutionStageMask;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkCheckpointDataNV")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkCheckpointDataNV
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "stage")]
		[NativeName(NativeNameType.Type, "VkPipelineStageFlagBits")]
		public VkPipelineStageFlagBits Stage;
		[NativeName(NativeNameType.Field, "pCheckpointMarker")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PCheckpointMarker;

		public unsafe VkCheckpointDataNV(VkStructureType sType = default, void* pNext = default, VkPipelineStageFlagBits stage = default, void* pCheckpointMarker = default)
		{
			SType = sType;
			PNext = pNext;
			Stage = stage;
			PCheckpointMarker = pCheckpointMarker;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "shaderIntegerFunctions2")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint ShaderIntegerFunctions2;

		public unsafe VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkStructureType sType = default, void* pNext = default, uint shaderIntegerFunctions2 = default)
		{
			SType = sType;
			PNext = pNext;
			ShaderIntegerFunctions2 = shaderIntegerFunctions2;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceValueDataINTEL")]
	[StructLayout(LayoutKind.Explicit)]
	public partial struct VkPerformanceValueDataINTEL
	{
		[NativeName(NativeNameType.Field, "value32")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		[FieldOffset(0)]
		public uint Value32;
		[NativeName(NativeNameType.Field, "value64")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		[FieldOffset(0)]
		public ulong Value64;
		[NativeName(NativeNameType.Field, "valueFloat")]
		[NativeName(NativeNameType.Type, "float")]
		[FieldOffset(0)]
		public float ValueFloat;
		[NativeName(NativeNameType.Field, "valueBool")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		[FieldOffset(0)]
		public uint ValueBool;
		[NativeName(NativeNameType.Field, "valueString")]
		[NativeName(NativeNameType.Type, "const char*")]
		[FieldOffset(0)]
		public unsafe byte* ValueString;

		public unsafe VkPerformanceValueDataINTEL(uint value32 = default, ulong value64 = default, float valueFloat = default, uint valueBool = default, byte* valueString = default)
		{
			Value32 = value32;
			Value64 = value64;
			ValueFloat = valueFloat;
			ValueBool = valueBool;
			ValueString = valueString;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceValueINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceValueINTEL
	{
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkPerformanceValueTypeINTEL")]
		public VkPerformanceValueTypeINTEL Type;
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "VkPerformanceValueDataINTEL")]
		public VkPerformanceValueDataINTEL Data;

		public unsafe VkPerformanceValueINTEL(VkPerformanceValueTypeINTEL type = default, VkPerformanceValueDataINTEL data = default)
		{
			Type = type;
			Data = data;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkInitializePerformanceApiInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkInitializePerformanceApiInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pUserData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PUserData;

		public unsafe VkInitializePerformanceApiInfoINTEL(VkStructureType sType = default, void* pNext = default, void* pUserData = default)
		{
			SType = sType;
			PNext = pNext;
			PUserData = pUserData;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkQueryPoolPerformanceQueryCreateInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkQueryPoolPerformanceQueryCreateInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "performanceCountersSampling")]
		[NativeName(NativeNameType.Type, "VkQueryPoolSamplingModeINTEL")]
		public VkQueryPoolSamplingModeINTEL PerformanceCountersSampling;

		public unsafe VkQueryPoolPerformanceQueryCreateInfoINTEL(VkStructureType sType = default, void* pNext = default, VkQueryPoolSamplingModeINTEL performanceCountersSampling = default)
		{
			SType = sType;
			PNext = pNext;
			PerformanceCountersSampling = performanceCountersSampling;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceMarkerInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceMarkerInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "marker")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Marker;

		public unsafe VkPerformanceMarkerInfoINTEL(VkStructureType sType = default, void* pNext = default, ulong marker = default)
		{
			SType = sType;
			PNext = pNext;
			Marker = marker;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceStreamMarkerInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceStreamMarkerInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "marker")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Marker;

		public unsafe VkPerformanceStreamMarkerInfoINTEL(VkStructureType sType = default, void* pNext = default, uint marker = default)
		{
			SType = sType;
			PNext = pNext;
			Marker = marker;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceOverrideInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceOverrideInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkPerformanceOverrideTypeINTEL")]
		public VkPerformanceOverrideTypeINTEL Type;
		[NativeName(NativeNameType.Field, "enable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint Enable;
		[NativeName(NativeNameType.Field, "parameter")]
		[NativeName(NativeNameType.Type, "uint64_t")]
		public ulong Parameter;

		public unsafe VkPerformanceOverrideInfoINTEL(VkStructureType sType = default, void* pNext = default, VkPerformanceOverrideTypeINTEL type = default, uint enable = default, ulong parameter = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
			Enable = enable;
			Parameter = parameter;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPerformanceConfigurationAcquireInfoINTEL")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPerformanceConfigurationAcquireInfoINTEL
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "VkPerformanceConfigurationTypeINTEL")]
		public VkPerformanceConfigurationTypeINTEL Type;

		public unsafe VkPerformanceConfigurationAcquireInfoINTEL(VkStructureType sType = default, void* pNext = default, VkPerformanceConfigurationTypeINTEL type = default)
		{
			SType = sType;
			PNext = pNext;
			Type = type;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDevicePCIBusInfoPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDevicePCIBusInfoPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "pciDomain")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciDomain;
		[NativeName(NativeNameType.Field, "pciBus")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciBus;
		[NativeName(NativeNameType.Field, "pciDevice")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciDevice;
		[NativeName(NativeNameType.Field, "pciFunction")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint PciFunction;

		public unsafe VkPhysicalDevicePCIBusInfoPropertiesEXT(VkStructureType sType = default, void* pNext = default, uint pciDomain = default, uint pciBus = default, uint pciDevice = default, uint pciFunction = default)
		{
			SType = sType;
			PNext = pNext;
			PciDomain = pciDomain;
			PciBus = pciBus;
			PciDevice = pciDevice;
			PciFunction = pciFunction;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkDisplayNativeHdrSurfaceCapabilitiesAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkDisplayNativeHdrSurfaceCapabilitiesAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "localDimmingSupport")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint LocalDimmingSupport;

		public unsafe VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkStructureType sType = default, void* pNext = default, uint localDimmingSupport = default)
		{
			SType = sType;
			PNext = pNext;
			LocalDimmingSupport = localDimmingSupport;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkSwapchainDisplayNativeHdrCreateInfoAMD")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkSwapchainDisplayNativeHdrCreateInfoAMD
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "localDimmingEnable")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint LocalDimmingEnable;

		public unsafe VkSwapchainDisplayNativeHdrCreateInfoAMD(VkStructureType sType = default, void* pNext = default, uint localDimmingEnable = default)
		{
			SType = sType;
			PNext = pNext;
			LocalDimmingEnable = localDimmingEnable;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentDensityMapFeaturesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentDensityMapFeaturesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentDensityMap")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityMap;
		[NativeName(NativeNameType.Field, "fragmentDensityMapDynamic")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityMapDynamic;
		[NativeName(NativeNameType.Field, "fragmentDensityMapNonSubsampledImages")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityMapNonSubsampledImages;

		public unsafe VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkStructureType sType = default, void* pNext = default, uint fragmentDensityMap = default, uint fragmentDensityMapDynamic = default, uint fragmentDensityMapNonSubsampledImages = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentDensityMap = fragmentDensityMap;
			FragmentDensityMapDynamic = fragmentDensityMapDynamic;
			FragmentDensityMapNonSubsampledImages = fragmentDensityMapNonSubsampledImages;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkPhysicalDeviceFragmentDensityMapPropertiesEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkPhysicalDeviceFragmentDensityMapPropertiesEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "minFragmentDensityTexelSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MinFragmentDensityTexelSize;
		[NativeName(NativeNameType.Field, "maxFragmentDensityTexelSize")]
		[NativeName(NativeNameType.Type, "VkExtent2D")]
		public VkExtent2D MaxFragmentDensityTexelSize;
		[NativeName(NativeNameType.Field, "fragmentDensityInvocations")]
		[NativeName(NativeNameType.Type, "VkBool32")]
		public uint FragmentDensityInvocations;

		public unsafe VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkStructureType sType = default, void* pNext = default, VkExtent2D minFragmentDensityTexelSize = default, VkExtent2D maxFragmentDensityTexelSize = default, uint fragmentDensityInvocations = default)
		{
			SType = sType;
			PNext = pNext;
			MinFragmentDensityTexelSize = minFragmentDensityTexelSize;
			MaxFragmentDensityTexelSize = maxFragmentDensityTexelSize;
			FragmentDensityInvocations = fragmentDensityInvocations;
		}


	}

	[NativeName(NativeNameType.StructOrClass, "VkRenderPassFragmentDensityMapCreateInfoEXT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VkRenderPassFragmentDensityMapCreateInfoEXT
	{
		[NativeName(NativeNameType.Field, "sType")]
		[NativeName(NativeNameType.Type, "VkStructureType")]
		public VkStructureType SType;
		[NativeName(NativeNameType.Field, "pNext")]
		[NativeName(NativeNameType.Type, "const void*")]
		public unsafe void* PNext;
		[NativeName(NativeNameType.Field, "fragmentDensityMapAttachment")]
		[NativeName(NativeNameType.Type, "VkAttachmentReference")]
		public VkAttachmentReference FragmentDensityMapAttachment;

		public unsafe VkRenderPassFragmentDensityMapCreateInfoEXT(VkStructureType sType = default, void* pNext = default, VkAttachmentReference fragmentDensityMapAttachment = default)
		{
			SType = sType;
			PNext = pNext;
			FragmentDensityMapAttachment = fragmentDensityMapAttachment;
		}


	}
}
